{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/LevelPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LevelPage = () => {\n  _s();\n  const [headerExpand, setHeaderExpand] = useState(false);\n  const [level, setLevel] = useState(1);\n  const [progress, setProgress] = useState(0); // Прогресс в процентах\n\n  useEffect(() => {\n    setTimeout(() => {\n      setHeaderExpand(true);\n    }, 100);\n  }, []);\n\n  // Обработчик нажатия на кнопку для увеличения прогресса\n  const handleIncreaseProgress = () => {\n    if (progress >= 100) {\n      alert('Level Up!');\n      setLevel(prev => prev + 1);\n      setProgress(0);\n    } else {\n      setProgress(prev => prev + 20);\n    }\n  };\n\n  // Функция для смены цвета прогресса в зависимости от уровня\n  const getProgressColor = () => {\n    const colors = ['#4caf50', '#2196f3', '#ff9800', '#9c27b0', '#e91e63']; // Зеленый, Синий, Оранжевый, Фиолетовый, Розовый\n    return colors[(level - 1) % colors.length];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      height: '100vh',\n      textAlign: 'center',\n      color: 'inherit',\n      paddingBottom: '80px',\n      fontFamily: \"'Chakra Petch', sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: headerExpand ? 'calc(65vh + 120px)' : '120px',\n        boxShadow: '0 1px 50px rgba(93, 95, 98, 0.6)',\n        backgroundColor: 'rgba(168, 8%, 91%, 0.76)',\n        borderBottomLeftRadius: '50% 20%',\n        borderBottomRightRadius: '50% 20%',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        overflow: 'hidden',\n        transition: 'height 0.75s ease-in-out'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          width: '200%',\n          height: '200%',\n          background: \"url('https://www.transparenttextures.com/patterns/stardust.png') repeat\",\n          animation: 'level-moveBackground 20s linear infinite'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontFamily: \"'Audiowide', sans-serif\",\n          color: '#fff',\n          fontSize: '24px'\n        },\n        children: [level, \" LEVEL\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '40px',\n        // Сместили выше, чтобы ближе к прогрессу\n        fontSize: '20px',\n        color: '#333'\n      },\n      children: [\"Level \", level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: '56%',\n        // Уменьшили ширину на 30%\n        height: '15px',\n        // Уменьшили высоту в 2 раза\n        margin: '0 auto',\n        backgroundColor: 'rgba(221, 221, 221, 0.2)',\n        // Сделали фон на 80% прозрачным\n        borderRadius: '10px',\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '100%',\n          width: `${progress}%`,\n          backgroundColor: getProgressColor(),\n          // Меняем цвет прогресса в зависимости от уровня\n          transition: 'width 0.5s ease'\n        },\n        children: [...Array(5)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            height: '100%',\n            width: '2px',\n            backgroundColor: '#fff',\n            left: `${(i + 1) * 20}%`,\n            top: 0\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleIncreaseProgress,\n      style: {\n        marginTop: '10px',\n        padding: '8px 16px',\n        // Сделали кнопку меньше\n        backgroundColor: getProgressColor(),\n        color: '#fff',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer',\n        fontSize: '14px',\n        // Уменьшили текст на кнопке\n        zIndex: '1001'\n      },\n      children: \"Increase Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        @keyframes level-moveBackground {\n          0% { background-position: 0 0; }\n          100% { background-position: -1000px -1000px; }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(LevelPage, \"e8YIx2D8LzaYWXBQVVihUrA6eJM=\");\n_c = LevelPage;\nexport default LevelPage;\nvar _c;\n$RefreshReg$(_c, \"LevelPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","LevelPage","_s","headerExpand","setHeaderExpand","level","setLevel","progress","setProgress","setTimeout","handleIncreaseProgress","alert","prev","getProgressColor","colors","length","style","display","flexDirection","justifyContent","height","textAlign","color","paddingBottom","fontFamily","children","width","boxShadow","backgroundColor","borderBottomLeftRadius","borderBottomRightRadius","position","top","left","alignItems","overflow","transition","background","animation","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","marginTop","margin","borderRadius","Array","map","_","i","onClick","padding","border","cursor","zIndex","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/LevelPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst LevelPage = () => {\n  const [headerExpand, setHeaderExpand] = useState(false);\n  const [level, setLevel] = useState(1);\n  const [progress, setProgress] = useState(0); // Прогресс в процентах\n\n  useEffect(() => {\n    setTimeout(() => {\n      setHeaderExpand(true);\n    }, 100);\n  }, []);\n\n  // Обработчик нажатия на кнопку для увеличения прогресса\n  const handleIncreaseProgress = () => {\n    if (progress >= 100) {\n      alert('Level Up!');\n      setLevel(prev => prev + 1);\n      setProgress(0);\n    } else {\n      setProgress(prev => prev + 20);\n    }\n  };\n\n  // Функция для смены цвета прогресса в зависимости от уровня\n  const getProgressColor = () => {\n    const colors = ['#4caf50', '#2196f3', '#ff9800', '#9c27b0', '#e91e63']; // Зеленый, Синий, Оранжевый, Фиолетовый, Розовый\n    return colors[(level - 1) % colors.length];\n  };\n\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      height: '100vh',\n      textAlign: 'center',\n      color: 'inherit',\n      paddingBottom: '80px',\n      fontFamily: \"'Chakra Petch', sans-serif\"\n    }}>\n      {/* Верхняя часть */}\n      <div style={{\n        width: '100%',\n        height: headerExpand ? 'calc(65vh + 120px)' : '120px',\n        boxShadow: '0 1px 50px rgba(93, 95, 98, 0.6)',\n        backgroundColor: 'rgba(168, 8%, 91%, 0.76)',\n        borderBottomLeftRadius: '50% 20%',\n        borderBottomRightRadius: '50% 20%',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        overflow: 'hidden',\n        transition: 'height 0.75s ease-in-out'\n      }}>\n        <div style={{\n          position: 'absolute',\n          width: '200%',\n          height: '200%',\n          background: \"url('https://www.transparenttextures.com/patterns/stardust.png') repeat\",\n          animation: 'level-moveBackground 20s linear infinite'\n        }}></div>\n        <h1 style={{\n          fontFamily: \"'Audiowide', sans-serif\",\n          color: '#fff',\n          fontSize: '24px'\n        }}>{level} LEVEL</h1>\n      </div>\n\n      {/* Текущий уровень */}\n      <p style={{\n        marginTop: '40px',  // Сместили выше, чтобы ближе к прогрессу\n        fontSize: '20px',\n        color: '#333',\n      }}>Level {level}</p>\n\n      {/* Полоска прогресса */}\n      <div style={{\n        position: 'relative',\n        width: '56%', // Уменьшили ширину на 30%\n        height: '15px', // Уменьшили высоту в 2 раза\n        margin: '0 auto',\n        backgroundColor: 'rgba(221, 221, 221, 0.2)', // Сделали фон на 80% прозрачным\n        borderRadius: '10px',\n        overflow: 'hidden',\n      }}>\n        <div style={{\n          height: '100%',\n          width: `${progress}%`,\n          backgroundColor: getProgressColor(), // Меняем цвет прогресса в зависимости от уровня\n          transition: 'width 0.5s ease',\n        }}>\n          {/* Вертикальные полоски, делящие полоску прогресса на 5 частей */}\n          {[...Array(5)].map((_, i) => (\n            <div key={i} style={{\n              position: 'absolute',\n              height: '100%',\n              width: '2px',\n              backgroundColor: '#fff',\n              left: `${(i + 1) * 20}%`,\n              top: 0\n            }} />\n          ))}\n        </div>\n      </div>\n\n      {/* Кнопка для увеличения прогресса */}\n      <button onClick={handleIncreaseProgress} style={{\n        marginTop: '10px',\n        padding: '8px 16px', // Сделали кнопку меньше\n        backgroundColor: getProgressColor(),\n        color: '#fff',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer',\n        fontSize: '14px', // Уменьшили текст на кнопке\n        zIndex: '1001'\n      }}>\n        Increase Progress\n      </button>\n\n      {/* Добавление анимации через тег style */}\n      <style>{`\n        @keyframes level-moveBackground {\n          0% { background-position: 0 0; }\n          100% { background-position: -1000px -1000px; }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default LevelPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE7CD,SAAS,CAAC,MAAM;IACdY,UAAU,CAAC,MAAM;MACfL,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,sBAAsB,GAAGA,CAAA,KAAM;IACnC,IAAIH,QAAQ,IAAI,GAAG,EAAE;MACnBI,KAAK,CAAC,WAAW,CAAC;MAClBL,QAAQ,CAACM,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MAC1BJ,WAAW,CAAC,CAAC,CAAC;IAChB,CAAC,MAAM;MACLA,WAAW,CAACI,IAAI,IAAIA,IAAI,GAAG,EAAE,CAAC;IAChC;EACF,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;IACxE,OAAOA,MAAM,CAAC,CAACT,KAAK,GAAG,CAAC,IAAIS,MAAM,CAACC,MAAM,CAAC;EAC5C,CAAC;EAED,oBACEf,OAAA;IAAKgB,KAAK,EAAE;MACVC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,cAAc,EAAE,YAAY;MAC5BC,MAAM,EAAE,OAAO;MACfC,SAAS,EAAE,QAAQ;MACnBC,KAAK,EAAE,SAAS;MAChBC,aAAa,EAAE,MAAM;MACrBC,UAAU,EAAE;IACd,CAAE;IAAAC,QAAA,gBAEAzB,OAAA;MAAKgB,KAAK,EAAE;QACVU,KAAK,EAAE,MAAM;QACbN,MAAM,EAAEjB,YAAY,GAAG,oBAAoB,GAAG,OAAO;QACrDwB,SAAS,EAAE,kCAAkC;QAC7CC,eAAe,EAAE,0BAA0B;QAC3CC,sBAAsB,EAAE,SAAS;QACjCC,uBAAuB,EAAE,SAAS;QAClCC,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPhB,OAAO,EAAE,MAAM;QACfE,cAAc,EAAE,QAAQ;QACxBe,UAAU,EAAE,QAAQ;QACpBC,QAAQ,EAAE,QAAQ;QAClBC,UAAU,EAAE;MACd,CAAE;MAAAX,QAAA,gBACAzB,OAAA;QAAKgB,KAAK,EAAE;UACVe,QAAQ,EAAE,UAAU;UACpBL,KAAK,EAAE,MAAM;UACbN,MAAM,EAAE,MAAM;UACdiB,UAAU,EAAE,yEAAyE;UACrFC,SAAS,EAAE;QACb;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACT1C,OAAA;QAAIgB,KAAK,EAAE;UACTQ,UAAU,EAAE,yBAAyB;UACrCF,KAAK,EAAE,MAAM;UACbqB,QAAQ,EAAE;QACZ,CAAE;QAAAlB,QAAA,GAAEpB,KAAK,EAAC,QAAM;MAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eAGN1C,OAAA;MAAGgB,KAAK,EAAE;QACR4B,SAAS,EAAE,MAAM;QAAG;QACpBD,QAAQ,EAAE,MAAM;QAChBrB,KAAK,EAAE;MACT,CAAE;MAAAG,QAAA,GAAC,QAAM,EAACpB,KAAK;IAAA;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGpB1C,OAAA;MAAKgB,KAAK,EAAE;QACVe,QAAQ,EAAE,UAAU;QACpBL,KAAK,EAAE,KAAK;QAAE;QACdN,MAAM,EAAE,MAAM;QAAE;QAChByB,MAAM,EAAE,QAAQ;QAChBjB,eAAe,EAAE,0BAA0B;QAAE;QAC7CkB,YAAY,EAAE,MAAM;QACpBX,QAAQ,EAAE;MACZ,CAAE;MAAAV,QAAA,eACAzB,OAAA;QAAKgB,KAAK,EAAE;UACVI,MAAM,EAAE,MAAM;UACdM,KAAK,EAAE,GAAGnB,QAAQ,GAAG;UACrBqB,eAAe,EAAEf,gBAAgB,CAAC,CAAC;UAAE;UACrCuB,UAAU,EAAE;QACd,CAAE;QAAAX,QAAA,EAEC,CAAC,GAAGsB,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACtBlD,OAAA;UAAagB,KAAK,EAAE;YAClBe,QAAQ,EAAE,UAAU;YACpBX,MAAM,EAAE,MAAM;YACdM,KAAK,EAAE,KAAK;YACZE,eAAe,EAAE,MAAM;YACvBK,IAAI,EAAE,GAAG,CAACiB,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG;YACxBlB,GAAG,EAAE;UACP;QAAE,GAPQkB,CAAC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOP,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN1C,OAAA;MAAQmD,OAAO,EAAEzC,sBAAuB;MAACM,KAAK,EAAE;QAC9C4B,SAAS,EAAE,MAAM;QACjBQ,OAAO,EAAE,UAAU;QAAE;QACrBxB,eAAe,EAAEf,gBAAgB,CAAC,CAAC;QACnCS,KAAK,EAAE,MAAM;QACb+B,MAAM,EAAE,MAAM;QACdP,YAAY,EAAE,KAAK;QACnBQ,MAAM,EAAE,SAAS;QACjBX,QAAQ,EAAE,MAAM;QAAE;QAClBY,MAAM,EAAE;MACV,CAAE;MAAA9B,QAAA,EAAC;IAEH;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGT1C,OAAA;MAAAyB,QAAA,EAAQ;AACd;AACA;AACA;AACA;AACA;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACxC,EAAA,CAnIID,SAAS;AAAAuD,EAAA,GAATvD,SAAS;AAqIf,eAAeA,SAAS;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}