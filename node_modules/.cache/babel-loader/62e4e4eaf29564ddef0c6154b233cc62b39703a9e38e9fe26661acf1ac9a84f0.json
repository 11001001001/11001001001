{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const [btcPrice, setBtcPrice] = useState(0);\n  const [candles, setCandles] = useState([]);\n  const [prediction, setPrediction] = useState(null);\n  const [timer, setTimer] = useState(0);\n  const [isPredictionActive, setIsPredictionActive] = useState(false);\n  useEffect(() => {\n    // Функция для получения цены BTC\n    const fetchBtcPrice = async () => {\n      const response = await fetch('API_URL'); // Подставь URL API\n      const data = await response.json();\n      setBtcPrice(data.price);\n    };\n\n    // Получение цены BTC каждые 5 секунд\n    const interval = setInterval(() => {\n      fetchBtcPrice();\n      updateCandles(btcPrice); // Обновление графика\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const updateCandles = newPrice => {\n    setCandles(prevCandles => [...prevCandles, {\n      price: newPrice,\n      time: new Date()\n    }]);\n  };\n  const handlePrediction = type => {\n    setPrediction({\n      type,\n      price: btcPrice\n    });\n    setIsPredictionActive(true);\n    setTimer(30);\n  };\n  useEffect(() => {\n    if (timer > 0) {\n      const countdown = setTimeout(() => setTimer(timer - 1), 1000);\n      return () => clearTimeout(countdown);\n    } else if (isPredictionActive) {\n      // Проверка результата после завершения таймера\n      checkResult();\n    }\n  }, [timer]);\n  const checkResult = () => {\n    const finalPrice = btcPrice; // Последняя цена после таймера\n    let result = false;\n    if (prediction.type === 'buy' && finalPrice > prediction.price) {\n      result = true;\n    } else if (prediction.type === 'sell' && finalPrice < prediction.price) {\n      result = true;\n    }\n    alert(result ? 'Угадал!' : 'Не угадал!');\n    setIsPredictionActive(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0418\\u0433\\u0440\\u0430 \\u043D\\u0430 \\u0431\\u0438\\u043D\\u0430\\u0440\\u043D\\u044B\\u0445 \\u043E\\u043F\\u0446\\u0438\\u043E\\u043D\\u0430\\u0445\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePrediction('buy'),\n        disabled: isPredictionActive,\n        children: \"\\u041A\\u0443\\u043F\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePrediction('sell'),\n        disabled: isPredictionActive,\n        children: \"\\u041F\\u0440\\u043E\\u0434\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [candles.map((candle, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isPredictionActive && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u0441\\u0442\\u0430\\u043B\\u043E\\u0441\\u044C \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u0438: \", timer, \" \\u0441\\u0435\\u043A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(Page4, \"vZVlpSkOUR8HZKknGLMPX29m9rE=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Page4","_s","btcPrice","setBtcPrice","candles","setCandles","prediction","setPrediction","timer","setTimer","isPredictionActive","setIsPredictionActive","fetchBtcPrice","response","fetch","data","json","price","interval","setInterval","updateCandles","clearInterval","newPrice","prevCandles","time","Date","handlePrediction","type","countdown","setTimeout","clearTimeout","checkResult","finalPrice","result","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","candle","index","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Page4 = () => {\n    const [btcPrice, setBtcPrice] = useState(0);\n    const [candles, setCandles] = useState([]);\n    const [prediction, setPrediction] = useState(null);\n    const [timer, setTimer] = useState(0);\n    const [isPredictionActive, setIsPredictionActive] = useState(false);\n\n    useEffect(() => {\n        // Функция для получения цены BTC\n        const fetchBtcPrice = async () => {\n            const response = await fetch('API_URL'); // Подставь URL API\n            const data = await response.json();\n            setBtcPrice(data.price);\n        };\n\n        // Получение цены BTC каждые 5 секунд\n        const interval = setInterval(() => {\n            fetchBtcPrice();\n            updateCandles(btcPrice); // Обновление графика\n        }, 5000);\n\n        return () => clearInterval(interval);\n    }, []);\n\n    const updateCandles = (newPrice) => {\n        setCandles(prevCandles => [...prevCandles, { price: newPrice, time: new Date() }]);\n    };\n\n    const handlePrediction = (type) => {\n        setPrediction({ type, price: btcPrice });\n        setIsPredictionActive(true);\n        setTimer(30);\n    };\n\n    useEffect(() => {\n        if (timer > 0) {\n            const countdown = setTimeout(() => setTimer(timer - 1), 1000);\n            return () => clearTimeout(countdown);\n        } else if (isPredictionActive) {\n            // Проверка результата после завершения таймера\n            checkResult();\n        }\n    }, [timer]);\n\n    const checkResult = () => {\n        const finalPrice = btcPrice; // Последняя цена после таймера\n        let result = false;\n\n        if (prediction.type === 'buy' && finalPrice > prediction.price) {\n            result = true;\n        } else if (prediction.type === 'sell' && finalPrice < prediction.price) {\n            result = true;\n        }\n\n        alert(result ? 'Угадал!' : 'Не угадал!');\n        setIsPredictionActive(false);\n    };\n\n    return (\n        <div>\n            <h1>Игра на бинарных опционах</h1>\n            <div>\n                <button onClick={() => handlePrediction('buy')} disabled={isPredictionActive}>Купить</button>\n                <button onClick={() => handlePrediction('sell')} disabled={isPredictionActive}>Продать</button>\n            </div>\n            <div>\n                {candles.map((candle, index) => (\n                    <div key={index}> {/* Твой график свечей здесь */} </div>\n                ))}\n                <div> {/* Горизонтальная линия с текущей ценой здесь */} </div>\n            </div>\n            <div>\n                {isPredictionActive && <p>Осталось времени: {timer} сек</p>}\n            </div>\n        </div>\n    );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}