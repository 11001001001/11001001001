{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register the necessary components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Page4 = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const [intervalId, setIntervalId] = useState(null);\n\n  // Function to generate random numbers between 43 and 78\n  const generateRandomNumber = () => Math.floor(Math.random() * 36) + 43;\n\n  // Function to generate an array of 30 random numbers\n  const generateDataArray = () => Array.from({\n    length: 30\n  }, generateRandomNumber);\n  const startChart = () => {\n    if (intervalId) return; // Prevent multiple intervals\n\n    // Update chart data every second\n    const id = setInterval(() => {\n      setData(prevData => {\n        const newData = [...prevData.slice(1), generateRandomNumber()];\n        updateChartData(newData);\n        return newData;\n      });\n    }, 1000);\n    setIntervalId(id);\n  };\n  const updateChartData = dataArray => {\n    const labels = Array.from({\n      length: dataArray.length\n    }, (_, i) => i + 1);\n    setChartData({\n      labels,\n      datasets: [{\n        label: 'Random Data',\n        data: dataArray,\n        borderColor: 'rgba(75,192,192,1)',\n        fill: false,\n        tension: 0.1\n      }]\n    });\n  };\n  const handleClick = () => {\n    const initialData = generateDataArray();\n    setData(initialData);\n    updateChartData(initialData);\n    startChart();\n  };\n  useEffect(() => {\n    return () => {\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [intervalId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Start Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), chartData && /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Time'\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Value'\n            },\n            min: 40,\n            max: 80\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Page4, \"oCsZyHe06YnNHJXpBZb9+1Y1xEU=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Page4","_s","data","setData","chartData","setChartData","intervalId","setIntervalId","generateRandomNumber","Math","floor","random","generateDataArray","Array","from","length","startChart","id","setInterval","prevData","newData","slice","updateChartData","dataArray","labels","_","i","datasets","label","borderColor","fill","tension","handleClick","initialData","clearInterval","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","options","scales","x","title","display","text","y","min","max","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\n// Register the necessary components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst Page4 = () => {\n  const [data, setData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const [intervalId, setIntervalId] = useState(null);\n\n  // Function to generate random numbers between 43 and 78\n  const generateRandomNumber = () => Math.floor(Math.random() * 36) + 43;\n\n  // Function to generate an array of 30 random numbers\n  const generateDataArray = () => Array.from({ length: 30 }, generateRandomNumber);\n\n  const startChart = () => {\n    if (intervalId) return; // Prevent multiple intervals\n\n    // Update chart data every second\n    const id = setInterval(() => {\n      setData((prevData) => {\n        const newData = [...prevData.slice(1), generateRandomNumber()];\n        updateChartData(newData);\n        return newData;\n      });\n    }, 1000);\n    setIntervalId(id);\n  };\n\n  const updateChartData = (dataArray) => {\n    const labels = Array.from({ length: dataArray.length }, (_, i) => i + 1);\n    setChartData({\n      labels,\n      datasets: [\n        {\n          label: 'Random Data',\n          data: dataArray,\n          borderColor: 'rgba(75,192,192,1)',\n          fill: false,\n          tension: 0.1,\n        },\n      ],\n    });\n  };\n\n  const handleClick = () => {\n    const initialData = generateDataArray();\n    setData(initialData);\n    updateChartData(initialData);\n    startChart();\n  };\n\n  useEffect(() => {\n    return () => {\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [intervalId]);\n\n  return (\n    <div>\n      <button onClick={handleClick}>Start Chart</button>\n      {chartData && (\n        <Line\n          data={chartData}\n          options={{\n            scales: {\n              x: {\n                title: {\n                  display: true,\n                  text: 'Time',\n                },\n              },\n              y: {\n                title: {\n                  display: true,\n                  text: 'Value',\n                },\n                min: 40,\n                max: 80,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}