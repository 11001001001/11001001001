{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [rectangles, setRectangles] = useState([]);\n  const [currentRect, setCurrentRect] = useState(null);\n  const canvasWidth = 600; // Set the width of the canvas\n  const canvasHeight = 400; // Set the height of the canvas\n  const rectWidth = 30; // Width of each rectangle\n  const centerY = canvasHeight / 2; // The center of the canvas\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight); // Clear the canvas\n\n    // Draw existing rectangles\n    rectangles.forEach(rect => {\n      ctx.beginPath();\n      ctx.rect(rect.xOffset, centerY - rect.yOffset, rectWidth, rect.height);\n      ctx.strokeStyle = rect.direction > 0 ? 'green' : 'red';\n      ctx.stroke();\n      ctx.closePath();\n    });\n\n    // Draw the current rectangle in real-time\n    if (currentRect) {\n      ctx.beginPath();\n      ctx.rect(currentRect.xOffset, centerY - currentRect.yOffset, rectWidth, currentRect.height);\n      ctx.strokeStyle = currentRect.direction > 0 ? 'green' : 'red';\n      ctx.stroke();\n      ctx.closePath();\n    }\n  }, [rectangles, currentRect]);\n  const animateRectangle = () => {\n    const newTarget = Math.floor(Math.random() * 41) * (Math.random() > 0.5 ? 1 : -1);\n    const stepHeight = newTarget / 100; // 10 seconds, 100 steps (100ms each)\n    const direction = newTarget > 0 ? 1 : -1;\n    let currentHeight = 0;\n    let currentYOffset = 0;\n    setCurrentRect({\n      height: 0,\n      direction,\n      xOffset: 0,\n      yOffset: 0\n    });\n    const interval = setInterval(() => {\n      currentHeight += stepHeight;\n      currentYOffset += stepHeight * direction;\n      setCurrentRect({\n        height: Math.abs(currentHeight),\n        direction,\n        xOffset: -rectangles.length * rectWidth,\n        yOffset: currentYOffset\n      });\n      if (Math.abs(currentHeight) >= Math.abs(newTarget)) {\n        clearInterval(interval);\n        setRectangles(prevRectangles => [...prevRectangles, {\n          height: Math.abs(currentHeight),\n          direction,\n          xOffset: -(prevRectangles.length + 1) * rectWidth,\n          yOffset: currentYOffset\n        }]);\n        setCurrentRect(null);\n      }\n    }, 100);\n  };\n  useEffect(() => {\n    if (!isRunning) return;\n    const interval = setInterval(animateRectangle, 10000);\n    animateRectangle(); // Start immediately on first run\n\n    return () => clearInterval(interval);\n  }, [isRunning]);\n  const handleStartStop = () => {\n    setIsRunning(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasWidth,\n      height: canvasHeight,\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartStop,\n      children: isRunning ? 'Stop' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(Page4, \"iqILHVl0vId7QELVSt8GClCx6sc=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Page4","_s","canvasRef","isRunning","setIsRunning","rectangles","setRectangles","currentRect","setCurrentRect","canvasWidth","canvasHeight","rectWidth","centerY","canvas","current","ctx","getContext","clearRect","forEach","rect","beginPath","xOffset","yOffset","height","strokeStyle","direction","stroke","closePath","animateRectangle","newTarget","Math","floor","random","stepHeight","currentHeight","currentYOffset","interval","setInterval","abs","length","clearInterval","prevRectangles","handleStartStop","prevState","children","ref","width","style","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Page4 = () => {\n    const canvasRef = useRef(null);\n    const [isRunning, setIsRunning] = useState(false);\n    const [rectangles, setRectangles] = useState([]);\n    const [currentRect, setCurrentRect] = useState(null);\n\n    const canvasWidth = 600;  // Set the width of the canvas\n    const canvasHeight = 400; // Set the height of the canvas\n    const rectWidth = 30;     // Width of each rectangle\n    const centerY = canvasHeight / 2;  // The center of the canvas\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvasWidth, canvasHeight);  // Clear the canvas\n\n        // Draw existing rectangles\n        rectangles.forEach(rect => {\n            ctx.beginPath();\n            ctx.rect(rect.xOffset, centerY - rect.yOffset, rectWidth, rect.height);\n            ctx.strokeStyle = rect.direction > 0 ? 'green' : 'red';\n            ctx.stroke();\n            ctx.closePath();\n        });\n\n        // Draw the current rectangle in real-time\n        if (currentRect) {\n            ctx.beginPath();\n            ctx.rect(currentRect.xOffset, centerY - currentRect.yOffset, rectWidth, currentRect.height);\n            ctx.strokeStyle = currentRect.direction > 0 ? 'green' : 'red';\n            ctx.stroke();\n            ctx.closePath();\n        }\n    }, [rectangles, currentRect]);\n\n    const animateRectangle = () => {\n        const newTarget = Math.floor(Math.random() * 41) * (Math.random() > 0.5 ? 1 : -1);\n        const stepHeight = newTarget / 100; // 10 seconds, 100 steps (100ms each)\n        const direction = newTarget > 0 ? 1 : -1;\n        let currentHeight = 0;\n        let currentYOffset = 0;\n\n        setCurrentRect({ height: 0, direction, xOffset: 0, yOffset: 0 });\n\n        const interval = setInterval(() => {\n            currentHeight += stepHeight;\n            currentYOffset += stepHeight * direction;\n\n            setCurrentRect({\n                height: Math.abs(currentHeight),\n                direction,\n                xOffset: -rectangles.length * rectWidth,\n                yOffset: currentYOffset\n            });\n\n            if (Math.abs(currentHeight) >= Math.abs(newTarget)) {\n                clearInterval(interval);\n                setRectangles(prevRectangles => [\n                    ...prevRectangles,\n                    {\n                        height: Math.abs(currentHeight),\n                        direction,\n                        xOffset: -(prevRectangles.length + 1) * rectWidth,\n                        yOffset: currentYOffset\n                    }\n                ]);\n                setCurrentRect(null);\n            }\n        }, 100);\n    };\n\n    useEffect(() => {\n        if (!isRunning) return;\n\n        const interval = setInterval(animateRectangle, 10000);\n        animateRectangle(); // Start immediately on first run\n\n        return () => clearInterval(interval);\n    }, [isRunning]);\n\n    const handleStartStop = () => {\n        setIsRunning(prevState => !prevState);\n    };\n\n    return (\n        <div>\n            <canvas ref={canvasRef} width={canvasWidth} height={canvasHeight} style={{ border: '1px solid black' }} />\n            <button onClick={handleStartStop}>\n                {isRunning ? 'Stop' : 'Start'}\n            </button>\n        </div>\n    );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}