{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const [currentValue, setCurrentValue] = useState(null);\n  const [rectangles, setRectangles] = useState([]);\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const fetchBitcoinPrice = async () => {\n    try {\n      const response = await fetch('https://api.coindesk.com/v1/bpi/currentprice/BTC.json');\n      const data = await response.json();\n      const bitcoinPrice = Math.floor(data.bpi.USD.rate_float);\n      return bitcoinPrice;\n    } catch (error) {\n      console.error('Ошибка при получении цены биткоина:', error);\n      return 60600; // fallback значение на случай ошибки\n    }\n  };\n  const generateNewValue = async centerValue => {\n    const randomDiff = Math.floor(Math.random() * 691) - 345; // случайное число от -345 до 345\n    const newValue = centerValue + randomDiff;\n    setCurrentValue(newValue);\n  };\n  const drawRectangle = (ctx, rect) => {\n    ctx.fillStyle = rect.color;\n    ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n  };\n  const animateRectangle = (previousValue, newValue) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const scale = window.devicePixelRatio || 1;\n    const startY = 150 - (previousValue - 60600) / 345 * 120;\n    const targetY = 150 - (newValue - 60600) / 345 * 120;\n    const rectWidth = 15;\n    const difference = newValue - previousValue;\n    const duration = 1000; // Продолжительность анимации в миллисекундах\n    const startTime = performance.now();\n    const rectColor = difference > 0 ? 'green' : 'red';\n    const rect = {\n      x: canvas.width / scale - rectWidth,\n      y: startY,\n      width: rectWidth,\n      height: 0,\n      color: rectColor\n    };\n    const step = timestamp => {\n      const elapsedTime = timestamp - startTime;\n      const progress = Math.min(elapsedTime / duration, 1);\n      const height = Math.abs((targetY - startY) * progress);\n      ctx.clearRect(0, 0, canvas.width / scale, canvas.height / scale);\n\n      // Сдвиг всех прямоугольников влево\n      const updatedRectangles = rectangles.map(r => ({\n        ...r,\n        x: r.x - rectWidth * progress\n      }));\n\n      // Отрисовка всех прямоугольников\n      updatedRectangles.forEach(r => drawRectangle(ctx, r));\n\n      // Отрисовка текущего прямоугольника\n      rect.height = height;\n      rect.y = difference > 0 ? startY - height : startY;\n      drawRectangle(ctx, rect);\n      if (progress < 1) {\n        animationRef.current = requestAnimationFrame(step);\n      } else {\n        // Добавляем новый прямоугольник в массив\n        setRectangles(prevRectangles => [...updatedRectangles, rect]);\n        setCurrentValue(newValue);\n        generateNewValue(newValue); // Генерация следующего значения\n      }\n    };\n    animationRef.current = requestAnimationFrame(step);\n  };\n  useEffect(() => {\n    const initializeGraph = async () => {\n      const bitcoinPrice = await fetchBitcoinPrice();\n      setCurrentValue(bitcoinPrice);\n      generateNewValue(bitcoinPrice); // Запускаем процесс для первого значения\n    };\n    const canvas = canvasRef.current;\n    const scale = window.devicePixelRatio || 1;\n    canvas.width = 500 * scale;\n    canvas.height = 300 * scale;\n    canvas.getContext('2d').scale(scale, scale);\n    initializeGraph();\n  }, []);\n  useEffect(() => {\n    if (rectangles.length > 0) {\n      const previousValue = currentValue;\n      const newValue = rectangles[rectangles.length - 1].x;\n      if (previousValue !== null && currentValue !== null) {\n        animateRectangle(previousValue, newValue);\n      }\n    }\n  }, [rectangles]);\n  useEffect(() => {\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        width: 500,\n        height: 300,\n        border: '1px solid black',\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), currentValue]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(Page4, \"rpSw7ErO7ftT5baFFcXWVh0vcW0=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Page4","_s","currentValue","setCurrentValue","rectangles","setRectangles","canvasRef","animationRef","fetchBitcoinPrice","response","fetch","data","json","bitcoinPrice","Math","floor","bpi","USD","rate_float","error","console","generateNewValue","centerValue","randomDiff","random","newValue","drawRectangle","ctx","rect","fillStyle","color","fillRect","x","y","width","height","animateRectangle","previousValue","canvas","current","getContext","scale","window","devicePixelRatio","startY","targetY","rectWidth","difference","duration","startTime","performance","now","rectColor","step","timestamp","elapsedTime","progress","min","abs","clearRect","updatedRectangles","map","r","forEach","requestAnimationFrame","prevRectangles","initializeGraph","length","cancelAnimationFrame","style","display","flexDirection","alignItems","children","ref","border","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Page4 = () => {\n  const [currentValue, setCurrentValue] = useState(null);\n  const [rectangles, setRectangles] = useState([]);\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n\n  const fetchBitcoinPrice = async () => {\n    try {\n      const response = await fetch('https://api.coindesk.com/v1/bpi/currentprice/BTC.json');\n      const data = await response.json();\n      const bitcoinPrice = Math.floor(data.bpi.USD.rate_float);\n      return bitcoinPrice;\n    } catch (error) {\n      console.error('Ошибка при получении цены биткоина:', error);\n      return 60600; // fallback значение на случай ошибки\n    }\n  };\n\n  const generateNewValue = async (centerValue) => {\n    const randomDiff = Math.floor(Math.random() * 691) - 345; // случайное число от -345 до 345\n    const newValue = centerValue + randomDiff;\n    setCurrentValue(newValue);\n  };\n\n  const drawRectangle = (ctx, rect) => {\n    ctx.fillStyle = rect.color;\n    ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n  };\n\n  const animateRectangle = (previousValue, newValue) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const scale = window.devicePixelRatio || 1;\n\n    const startY = 150 - ((previousValue - 60600) / 345) * 120;\n    const targetY = 150 - ((newValue - 60600) / 345) * 120;\n    const rectWidth = 15;\n    const difference = newValue - previousValue;\n    const duration = 1000; // Продолжительность анимации в миллисекундах\n    const startTime = performance.now();\n\n    const rectColor = difference > 0 ? 'green' : 'red';\n    const rect = {\n      x: canvas.width / scale - rectWidth,\n      y: startY,\n      width: rectWidth,\n      height: 0,\n      color: rectColor,\n    };\n\n    const step = (timestamp) => {\n      const elapsedTime = timestamp - startTime;\n      const progress = Math.min(elapsedTime / duration, 1);\n      const height = Math.abs((targetY - startY) * progress);\n\n      ctx.clearRect(0, 0, canvas.width / scale, canvas.height / scale);\n\n      // Сдвиг всех прямоугольников влево\n      const updatedRectangles = rectangles.map((r) => ({\n        ...r,\n        x: r.x - rectWidth * progress,\n      }));\n\n      // Отрисовка всех прямоугольников\n      updatedRectangles.forEach((r) => drawRectangle(ctx, r));\n\n      // Отрисовка текущего прямоугольника\n      rect.height = height;\n      rect.y = difference > 0 ? startY - height : startY;\n      drawRectangle(ctx, rect);\n\n      if (progress < 1) {\n        animationRef.current = requestAnimationFrame(step);\n      } else {\n        // Добавляем новый прямоугольник в массив\n        setRectangles((prevRectangles) => [...updatedRectangles, rect]);\n        setCurrentValue(newValue);\n        generateNewValue(newValue); // Генерация следующего значения\n      }\n    };\n\n    animationRef.current = requestAnimationFrame(step);\n  };\n\n  useEffect(() => {\n    const initializeGraph = async () => {\n      const bitcoinPrice = await fetchBitcoinPrice();\n      setCurrentValue(bitcoinPrice);\n      generateNewValue(bitcoinPrice); // Запускаем процесс для первого значения\n    };\n\n    const canvas = canvasRef.current;\n    const scale = window.devicePixelRatio || 1;\n    canvas.width = 500 * scale;\n    canvas.height = 300 * scale;\n    canvas.getContext('2d').scale(scale, scale);\n\n    initializeGraph();\n  }, []);\n\n  useEffect(() => {\n    if (rectangles.length > 0) {\n      const previousValue = currentValue;\n      const newValue = rectangles[rectangles.length - 1].x;\n\n      if (previousValue !== null && currentValue !== null) {\n        animateRectangle(previousValue, newValue);\n      }\n    }\n  }, [rectangles]);\n\n  useEffect(() => {\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <canvas\n        ref={canvasRef}\n        style={{ width: 500, height: 300, border: '1px solid black', marginBottom: '20px' }}\n      ></canvas>\n      {currentValue}\n    </div>\n  );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}