{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const values = [78, 45, 92, 110, 67, 84, 56, 90, 102, 48, 88, 61, 70, 109, 81, 52, 94, 66, 75, 118\n  // другие значения...\n  ];\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [currentValue, setCurrentValue] = useState(values[0]);\n  const [dataPoints, setDataPoints] = useState([]);\n  const [fixedValue, setFixedValue] = useState(null);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (currentIndex < values.length) {\n      const interval = setInterval(() => {\n        setCurrentValue(prevValue => {\n          if (prevValue < values[currentIndex]) {\n            return prevValue + 1;\n          } else if (prevValue > values[currentIndex]) {\n            return prevValue - 1;\n          } else {\n            setDataPoints(prev => [...prev, prevValue]);\n            setCurrentIndex(currentIndex + 1);\n            return prevValue;\n          }\n        });\n      }, 50); // Интервал для плавного изменения значения\n\n      return () => clearInterval(interval);\n    }\n  }, [currentIndex, values]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const animateLine = (x1, y1, x2, y2, duration) => {\n      const startTime = performance.now();\n      const animate = time => {\n        const elapsedTime = time - startTime;\n        const progress = Math.min(elapsedTime / duration, 1);\n        const currentX = x1 + (x2 - x1) * progress;\n        const currentY = y1 + (y2 - y1) * progress;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        // Рисуем линию\n        ctx.strokeStyle = fixedValue !== null ? 'lightblue' : '#FFD700';\n        ctx.lineWidth = 3;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(currentX, currentY);\n        ctx.stroke();\n\n        // Рисуем значения на предыдущих точках\n        dataPoints.forEach((value, index) => {\n          const x = canvas.width / 2 + index * 10 - dataPoints.length * 10;\n          const y = canvas.height - value / 150 * canvas.height;\n          ctx.fillStyle = 'black';\n          ctx.font = '14px Arial';\n          ctx.fillText(value, x + 5, y - 5);\n        });\n\n        // Рисуем фиксированную горизонтальную линию, если она есть\n        if (fixedValue !== null) {\n          const fixedY = canvas.height - fixedValue / 150 * canvas.height;\n          ctx.strokeStyle = 'lightblue';\n          ctx.lineWidth = 2;\n          ctx.beginPath();\n          ctx.moveTo(0, fixedY);\n          ctx.lineTo(canvas.width, fixedY);\n          ctx.stroke();\n        }\n        if (progress < 1) {\n          requestAnimationFrame(animate);\n        } else {\n          // Рисуем значение на конечной точке\n          ctx.fillStyle = 'black';\n          ctx.font = '14px Arial';\n          ctx.fillText(values[currentIndex - 1], x2 + 5, y2 - 5);\n        }\n      };\n      requestAnimationFrame(animate);\n    };\n    if (dataPoints.length > 1) {\n      const x1 = canvas.width / 2 + (dataPoints.length - 2) * 10 - dataPoints.length * 10;\n      const y1 = canvas.height - dataPoints[dataPoints.length - 2] / 150 * canvas.height;\n      const x2 = canvas.width / 2 + (dataPoints.length - 1) * 10 - dataPoints.length * 10;\n      const y2 = canvas.height - dataPoints[dataPoints.length - 1] / 150 * canvas.height;\n      animateLine(x1, y1, x2, y2, 1000);\n    }\n  }, [dataPoints, fixedValue]);\n  const handleFixValue = () => {\n    setFixedValue(currentValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 500,\n      height: 300,\n      style: {\n        border: '1px solid black',\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFixValue,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px',\n        cursor: 'pointer',\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px'\n      },\n      children: \"\\u0417\\u0430\\u0444\\u0438\\u043A\\u0441\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0442\\u0435\\u043A\\u0443\\u0449\\u0435\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(Page4, \"+Uj8CzJsT8MAdnGL9dkY+7mhDc8=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Page4","_s","values","currentIndex","setCurrentIndex","currentValue","setCurrentValue","dataPoints","setDataPoints","fixedValue","setFixedValue","canvasRef","length","interval","setInterval","prevValue","prev","clearInterval","canvas","current","ctx","getContext","animateLine","x1","y1","x2","y2","duration","startTime","performance","now","animate","time","elapsedTime","progress","Math","min","currentX","currentY","clearRect","width","height","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","forEach","value","index","x","y","fillStyle","font","fillText","fixedY","requestAnimationFrame","handleFixValue","style","display","flexDirection","alignItems","children","ref","border","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","fontSize","cursor","backgroundColor","color","borderRadius","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Page4 = () => {\n  const values = [\n    78, 45, 92, 110, 67, 84, 56, 90, 102, 48, 88, 61, 70, 109, 81, 52, 94, 66, 75, 118,\n    // другие значения...\n  ];\n\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [currentValue, setCurrentValue] = useState(values[0]);\n  const [dataPoints, setDataPoints] = useState([]);\n  const [fixedValue, setFixedValue] = useState(null);\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    if (currentIndex < values.length) {\n      const interval = setInterval(() => {\n        setCurrentValue(prevValue => {\n          if (prevValue < values[currentIndex]) {\n            return prevValue + 1;\n          } else if (prevValue > values[currentIndex]) {\n            return prevValue - 1;\n          } else {\n            setDataPoints(prev => [...prev, prevValue]);\n            setCurrentIndex(currentIndex + 1);\n            return prevValue;\n          }\n        });\n      }, 50); // Интервал для плавного изменения значения\n\n      return () => clearInterval(interval);\n    }\n  }, [currentIndex, values]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    const animateLine = (x1, y1, x2, y2, duration) => {\n      const startTime = performance.now();\n\n      const animate = (time) => {\n        const elapsedTime = time - startTime;\n        const progress = Math.min(elapsedTime / duration, 1);\n\n        const currentX = x1 + (x2 - x1) * progress;\n        const currentY = y1 + (y2 - y1) * progress;\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        // Рисуем линию\n        ctx.strokeStyle = fixedValue !== null ? 'lightblue' : '#FFD700';\n        ctx.lineWidth = 3;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(currentX, currentY);\n        ctx.stroke();\n\n        // Рисуем значения на предыдущих точках\n        dataPoints.forEach((value, index) => {\n          const x = (canvas.width / 2) + index * 10 - dataPoints.length * 10;\n          const y = canvas.height - (value / 150) * canvas.height;\n          ctx.fillStyle = 'black';\n          ctx.font = '14px Arial';\n          ctx.fillText(value, x + 5, y - 5);\n        });\n\n        // Рисуем фиксированную горизонтальную линию, если она есть\n        if (fixedValue !== null) {\n          const fixedY = canvas.height - (fixedValue / 150) * canvas.height;\n          ctx.strokeStyle = 'lightblue';\n          ctx.lineWidth = 2;\n          ctx.beginPath();\n          ctx.moveTo(0, fixedY);\n          ctx.lineTo(canvas.width, fixedY);\n          ctx.stroke();\n        }\n\n        if (progress < 1) {\n          requestAnimationFrame(animate);\n        } else {\n          // Рисуем значение на конечной точке\n          ctx.fillStyle = 'black';\n          ctx.font = '14px Arial';\n          ctx.fillText(values[currentIndex - 1], x2 + 5, y2 - 5);\n        }\n      };\n\n      requestAnimationFrame(animate);\n    };\n\n    if (dataPoints.length > 1) {\n      const x1 = (canvas.width / 2) + (dataPoints.length - 2) * 10 - dataPoints.length * 10;\n      const y1 = canvas.height - (dataPoints[dataPoints.length - 2] / 150) * canvas.height;\n      const x2 = (canvas.width / 2) + (dataPoints.length - 1) * 10 - dataPoints.length * 10;\n      const y2 = canvas.height - (dataPoints[dataPoints.length - 1] / 150) * canvas.height;\n\n      animateLine(x1, y1, x2, y2, 1000);\n    }\n  }, [dataPoints, fixedValue]);\n\n  const handleFixValue = () => {\n    setFixedValue(currentValue);\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <canvas\n        ref={canvasRef}\n        width={500}\n        height={300}\n        style={{ border: '1px solid black', marginBottom: '20px' }}\n      ></canvas>\n      <button \n        onClick={handleFixValue} \n        style={{\n          padding: '10px 20px',\n          fontSize: '16px',\n          cursor: 'pointer',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px'\n        }}>\n        Зафиксировать текущее значение\n      </button>\n    </div>\n  );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}