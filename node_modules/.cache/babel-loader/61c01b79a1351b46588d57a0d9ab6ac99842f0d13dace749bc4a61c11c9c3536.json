{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const values = [78, 45, 92, 110, 67, 84, 56, 90, 102, 48, 88, 61, 70, 109, 81, 52, 94, 66, 75, 118\n  // Дополнительные значения ...\n  ];\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [dataPoints, setDataPoints] = useState([]);\n  const [fixedValue, setFixedValue] = useState(null);\n  const canvasRef = useRef(null);\n  const previousImageData = useRef(null);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (currentIndex < values.length) {\n        setDataPoints(prev => [...prev, values[currentIndex]]);\n        setCurrentIndex(currentIndex + 1);\n      }\n    }, 1000); // Интервал в 1 секунду\n\n    return () => clearInterval(interval);\n  }, [currentIndex]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Восстанавливаем предыдущие линии перед добавлением новой\n    if (previousImageData.current) {\n      ctx.putImageData(previousImageData.current, 0, 0);\n    } else {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // Очищаем холст при первом запуске\n    }\n    if (dataPoints.length > 1) {\n      const animateLine = (x1, y1, x2, y2, duration) => {\n        const startTime = performance.now();\n        const drawFrame = currentTime => {\n          const elapsed = currentTime - startTime;\n          const progress = Math.min(elapsed / duration, 1);\n          const currentX = x1 + (x2 - x1) * progress;\n          const currentY = y1 + (y2 - y1) * progress;\n          ctx.putImageData(previousImageData.current, 0, 0); // Восстанавливаем прежние линии\n\n          ctx.beginPath();\n          ctx.moveTo(x1, y1);\n          ctx.lineTo(currentX, currentY);\n          ctx.stroke();\n\n          // Отображаем значение на точке\n          ctx.fillStyle = ctx.strokeStyle;\n          ctx.font = '14px Arial';\n          ctx.fillText(dataPoints[dataPoints.length - 2], x1 + 5, y1 - 5);\n\n          // Рисуем фиксированную горизонтальную линию\n          if (fixedValue !== null) {\n            const fixedY = canvas.height - fixedValue / 150 * canvas.height;\n            ctx.strokeStyle = 'lightblue';\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.moveTo(0, fixedY);\n            ctx.lineTo(canvas.width, fixedY);\n            ctx.stroke();\n          }\n          if (progress < 1) {\n            requestAnimationFrame(drawFrame);\n          } else {\n            previousImageData.current = ctx.getImageData(0, 0, canvas.width, canvas.height); // Сохраняем текущее изображение\n          }\n        };\n        requestAnimationFrame(drawFrame);\n      };\n      const x1 = canvas.width / 2 - (dataPoints.length - 1) * 10;\n      const y1 = canvas.height - dataPoints[dataPoints.length - 2] / 150 * canvas.height;\n      const x2 = canvas.width / 2 - (dataPoints.length - 2) * 10;\n      const y2 = canvas.height - dataPoints[dataPoints.length - 1] / 150 * canvas.height;\n      const color = fixedValue !== null ? dataPoints[dataPoints.length - 1] > fixedValue ? 'green' : 'red' : '#FFD700';\n      ctx.strokeStyle = color;\n      ctx.lineWidth = 3;\n      animateLine(x1, y1, x2, y2, 1000); // Анимация в течение 1 секунды\n    }\n  }, [dataPoints, fixedValue]);\n  const handleFixValue = () => {\n    setFixedValue(values[currentIndex - 1]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 500,\n      height: 300,\n      style: {\n        border: '1px solid black',\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFixValue,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px',\n        cursor: 'pointer',\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px'\n      },\n      children: \"\\u0417\\u0430\\u0444\\u0438\\u043A\\u0441\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0442\\u0435\\u043A\\u0443\\u0449\\u0435\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Page4, \"EVIPDENS7T9EgSuQIoVQc5obKhY=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Page4","_s","values","currentIndex","setCurrentIndex","dataPoints","setDataPoints","fixedValue","setFixedValue","canvasRef","previousImageData","interval","setInterval","length","prev","clearInterval","canvas","current","ctx","getContext","putImageData","clearRect","width","height","animateLine","x1","y1","x2","y2","duration","startTime","performance","now","drawFrame","currentTime","elapsed","progress","Math","min","currentX","currentY","beginPath","moveTo","lineTo","stroke","fillStyle","strokeStyle","font","fillText","fixedY","lineWidth","requestAnimationFrame","getImageData","color","handleFixValue","style","display","flexDirection","alignItems","children","ref","border","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","fontSize","cursor","backgroundColor","borderRadius","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Page4 = () => {\n  const values = [\n    78, 45, 92, 110, 67, 84, 56, 90, 102, 48, 88, 61, 70, 109, 81, 52, 94, 66, 75, 118,\n    // Дополнительные значения ...\n  ];\n\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [dataPoints, setDataPoints] = useState([]);\n  const [fixedValue, setFixedValue] = useState(null);\n  const canvasRef = useRef(null);\n  const previousImageData = useRef(null);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (currentIndex < values.length) {\n        setDataPoints(prev => [...prev, values[currentIndex]]);\n        setCurrentIndex(currentIndex + 1);\n      }\n    }, 1000); // Интервал в 1 секунду\n\n    return () => clearInterval(interval);\n  }, [currentIndex]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Восстанавливаем предыдущие линии перед добавлением новой\n    if (previousImageData.current) {\n      ctx.putImageData(previousImageData.current, 0, 0);\n    } else {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // Очищаем холст при первом запуске\n    }\n\n    if (dataPoints.length > 1) {\n      const animateLine = (x1, y1, x2, y2, duration) => {\n        const startTime = performance.now();\n\n        const drawFrame = (currentTime) => {\n          const elapsed = currentTime - startTime;\n          const progress = Math.min(elapsed / duration, 1);\n\n          const currentX = x1 + (x2 - x1) * progress;\n          const currentY = y1 + (y2 - y1) * progress;\n\n          ctx.putImageData(previousImageData.current, 0, 0); // Восстанавливаем прежние линии\n\n          ctx.beginPath();\n          ctx.moveTo(x1, y1);\n          ctx.lineTo(currentX, currentY);\n          ctx.stroke();\n          \n          // Отображаем значение на точке\n          ctx.fillStyle = ctx.strokeStyle;\n          ctx.font = '14px Arial';\n          ctx.fillText(dataPoints[dataPoints.length - 2], x1 + 5, y1 - 5);\n\n          // Рисуем фиксированную горизонтальную линию\n          if (fixedValue !== null) {\n            const fixedY = canvas.height - (fixedValue / 150) * canvas.height;\n            ctx.strokeStyle = 'lightblue';\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.moveTo(0, fixedY);\n            ctx.lineTo(canvas.width, fixedY);\n            ctx.stroke();\n          }\n\n          if (progress < 1) {\n            requestAnimationFrame(drawFrame);\n          } else {\n            previousImageData.current = ctx.getImageData(0, 0, canvas.width, canvas.height); // Сохраняем текущее изображение\n          }\n        };\n\n        requestAnimationFrame(drawFrame);\n      };\n\n      const x1 = (canvas.width / 2) - (dataPoints.length - 1) * 10;\n      const y1 = canvas.height - (dataPoints[dataPoints.length - 2] / 150) * canvas.height;\n      const x2 = (canvas.width / 2) - (dataPoints.length - 2) * 10;\n      const y2 = canvas.height - (dataPoints[dataPoints.length - 1] / 150) * canvas.height;\n\n      const color = fixedValue !== null ? (dataPoints[dataPoints.length - 1] > fixedValue ? 'green' : 'red') : '#FFD700';\n      ctx.strokeStyle = color;\n      ctx.lineWidth = 3;\n\n      animateLine(x1, y1, x2, y2, 1000); // Анимация в течение 1 секунды\n    }\n  }, [dataPoints, fixedValue]);\n\n  const handleFixValue = () => {\n    setFixedValue(values[currentIndex - 1]);\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <canvas\n        ref={canvasRef}\n        width={500}\n        height={300}\n        style={{ border: '1px solid black', marginBottom: '20px' }}\n      ></canvas>\n      <button \n        onClick={handleFixValue} \n        style={{\n          padding: '10px 20px',\n          fontSize: '16px',\n          cursor: 'pointer',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px'\n        }}>\n        Зафиксировать текущее значение\n      </button>\n    </div>\n  );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}