{"ast":null,"code":"useEffect(() => {\n  if (window.Telegram.WebApp.ready()) {\n    window.Telegram.WebApp.expand();\n  }\n  const platform = navigator.platform.toLowerCase();\n  const fetchInternetTime = async () => {\n    try {\n      const response = await fetch('https://worldtimeapi.org/api/timezone/Etc/UTC');\n      const data = await response.json();\n      const internetUnixTime = data.unixtime;\n      const localUnixTime = Math.floor(Date.now() / 1000);\n\n      // Setting the allowed time offset (e.g., 100 seconds)\n      const allowedOffset = 100; // 100 seconds\n      const timeDifference = Math.abs(localUnixTime - internetUnixTime);\n      if (platform.includes(\"win\") || platform.includes(\"mac\")) {\n        console.log(\"Open on your mobile device or check your device date\");\n        setPageLoaded(true);\n      } else if (timeDifference > allowedOffset) {\n        setNotTime(true);\n      } else {\n        setPageLoaded(true);\n      }\n    } catch (error) {\n      console.error('Error fetching time from the internet:', error);\n      setNotTime(true);\n    }\n  };\n  fetchInternetTime();\n}, []);","map":{"version":3,"names":["useEffect","window","Telegram","WebApp","ready","expand","platform","navigator","toLowerCase","fetchInternetTime","response","fetch","data","json","internetUnixTime","unixtime","localUnixTime","Math","floor","Date","now","allowedOffset","timeDifference","abs","includes","console","log","setPageLoaded","setNotTime","error"],"sources":["/Users/home/Desktop/33/duck/src/App.js"],"sourcesContent":["useEffect(() => {\n  if (window.Telegram.WebApp.ready()) {\n    window.Telegram.WebApp.expand();\n  }\n  \n  const platform = navigator.platform.toLowerCase();\n\n  const fetchInternetTime = async () => {\n    try {\n      const response = await fetch('https://worldtimeapi.org/api/timezone/Etc/UTC');\n      const data = await response.json();\n      const internetUnixTime = data.unixtime;\n      const localUnixTime = Math.floor(Date.now() / 1000); \n\n      // Setting the allowed time offset (e.g., 100 seconds)\n      const allowedOffset = 100; // 100 seconds\n      const timeDifference = Math.abs(localUnixTime - internetUnixTime);\n\n      if (platform.includes(\"win\") || platform.includes(\"mac\")) {\n        console.log(\"Open on your mobile device or check your device date\");\n        setPageLoaded(true);\n      } else if (timeDifference > allowedOffset) {\n        setNotTime(true);\n      } else {\n        setPageLoaded(true);\n      }\n    } catch (error) {\n      console.error('Error fetching time from the internet:', error);\n      setNotTime(true);\n    }\n  };\n\n  fetchInternetTime();\n}, []);"],"mappings":"AAAAA,SAAS,CAAC,MAAM;EACd,IAAIC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,EAAE;IAClCH,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACE,MAAM,CAAC,CAAC;EACjC;EAEA,MAAMC,QAAQ,GAAGC,SAAS,CAACD,QAAQ,CAACE,WAAW,CAAC,CAAC;EAEjD,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,CAAC;MAC7E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,MAAMC,gBAAgB,GAAGF,IAAI,CAACG,QAAQ;MACtC,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;;MAEnD;MACA,MAAMC,aAAa,GAAG,GAAG,CAAC,CAAC;MAC3B,MAAMC,cAAc,GAAGL,IAAI,CAACM,GAAG,CAACP,aAAa,GAAGF,gBAAgB,CAAC;MAEjE,IAAIR,QAAQ,CAACkB,QAAQ,CAAC,KAAK,CAAC,IAAIlB,QAAQ,CAACkB,QAAQ,CAAC,KAAK,CAAC,EAAE;QACxDC,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;QACnEC,aAAa,CAAC,IAAI,CAAC;MACrB,CAAC,MAAM,IAAIL,cAAc,GAAGD,aAAa,EAAE;QACzCO,UAAU,CAAC,IAAI,CAAC;MAClB,CAAC,MAAM;QACLD,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC9DD,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC;EAEDnB,iBAAiB,CAAC,CAAC;AACrB,CAAC,EAAE,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}