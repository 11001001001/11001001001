{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const values = [54211, 54400, 54350, 54000, 55000, 54800, 54050, 55300, 54500, 56000\n  // другие значения...\n  ];\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [currentValue, setCurrentValue] = useState(values[0]);\n  const [dataPoints, setDataPoints] = useState([]);\n  const [centerValue, setCenterValue] = useState(values[0]); // Центр шкалы\n  const [range, setRange] = useState(2000); // Полный диапазон шкалы (±200)\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (currentIndex < values.length) {\n      const targetValue = values[currentIndex];\n      const difference = Math.abs(targetValue - currentValue);\n      const intervalDuration = 1500 / difference;\n      const interval = setInterval(() => {\n        setCurrentValue(prevValue => {\n          if (prevValue < targetValue) {\n            return prevValue + 1;\n          } else if (prevValue > targetValue) {\n            return prevValue - 1;\n          } else {\n            setDataPoints(prev => [...prev, prevValue]);\n            setCurrentIndex(currentIndex + 1);\n            return prevValue;\n          }\n        });\n      }, intervalDuration);\n      return () => clearInterval(interval);\n    }\n  }, [currentIndex, currentValue, values]);\n  useEffect(() => {\n    if (currentValue < centerValue - range / 2 || currentValue > centerValue + range / 2) {\n      // Обновляем центр шкалы, если текущее значение выходит за границы диапазона\n      setCenterValue(currentValue);\n    }\n  }, [currentValue, centerValue, range]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const scale = window.devicePixelRatio || 1;\n    canvas.width = 500 * scale;\n    canvas.height = 300 * scale;\n    ctx.scale(scale, scale);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    if (dataPoints.length > 1) {\n      ctx.strokeStyle = '#FFD700';\n      ctx.lineWidth = 1.5;\n      ctx.beginPath();\n      dataPoints.forEach((value, index) => {\n        const x = canvas.width / scale / 2 + index * 10 - dataPoints.length * 10;\n        const y = canvas.height / scale - (value - (centerValue - range / 2)) / range * canvas.height / scale;\n        if (index === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      });\n      ctx.stroke();\n      const fixedY = canvas.height / scale - (currentValue - (centerValue - range / 2)) / range * canvas.height / scale;\n      ctx.strokeStyle = 'lightblue';\n      ctx.lineWidth = 1;\n      ctx.beginPath();\n      ctx.moveTo(0, fixedY);\n      ctx.lineTo(canvas.width / scale, fixedY);\n      ctx.stroke();\n      ctx.font = '12px Arial';\n      ctx.fillStyle = 'lightblue';\n      ctx.fillText(`${currentValue}`, canvas.width / scale - 150, fixedY - 10);\n    }\n  }, [dataPoints, centerValue, range, currentValue]);\n  const handleFixValue = () => {\n    setCenterValue(currentValue); // Перемещаем центр шкалы на текущее значение\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        width: 500,\n        height: 300,\n        border: '1px solid black',\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFixValue,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px',\n        cursor: 'pointer',\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px'\n      },\n      children: \"\\u0417\\u0430\\u0444\\u0438\\u043A\\u0441\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0442\\u0435\\u043A\\u0443\\u0449\\u0435\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Page4, \"vvoEhwwIZWew0Lk4YOMr9IBkgsc=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Page4","_s","values","currentIndex","setCurrentIndex","currentValue","setCurrentValue","dataPoints","setDataPoints","centerValue","setCenterValue","range","setRange","canvasRef","length","targetValue","difference","Math","abs","intervalDuration","interval","setInterval","prevValue","prev","clearInterval","canvas","current","ctx","getContext","scale","window","devicePixelRatio","width","height","clearRect","strokeStyle","lineWidth","beginPath","forEach","value","index","x","y","moveTo","lineTo","stroke","fixedY","font","fillStyle","fillText","handleFixValue","style","display","flexDirection","alignItems","children","ref","border","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","fontSize","cursor","backgroundColor","color","borderRadius","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Page4 = () => {\n  const values = [\n    54211, 54400, 54350, 54000, 55000, 54800, 54050, 55300, 54500, 56000,\n    // другие значения...\n  ];\n\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [currentValue, setCurrentValue] = useState(values[0]);\n  const [dataPoints, setDataPoints] = useState([]);\n  const [centerValue, setCenterValue] = useState(values[0]); // Центр шкалы\n  const [range, setRange] = useState(2000); // Полный диапазон шкалы (±200)\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    if (currentIndex < values.length) {\n      const targetValue = values[currentIndex];\n      const difference = Math.abs(targetValue - currentValue);\n\n      const intervalDuration = 1500 / difference;\n\n      const interval = setInterval(() => {\n        setCurrentValue(prevValue => {\n          if (prevValue < targetValue) {\n            return prevValue + 1;\n          } else if (prevValue > targetValue) {\n            return prevValue - 1;\n          } else {\n            setDataPoints(prev => [...prev, prevValue]);\n            setCurrentIndex(currentIndex + 1);\n            return prevValue;\n          }\n        });\n      }, intervalDuration);\n\n      return () => clearInterval(interval);\n    }\n  }, [currentIndex, currentValue, values]);\n\n  useEffect(() => {\n    if (currentValue < centerValue - range / 2 || currentValue > centerValue + range / 2) {\n      // Обновляем центр шкалы, если текущее значение выходит за границы диапазона\n      setCenterValue(currentValue);\n    }\n  }, [currentValue, centerValue, range]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    const scale = window.devicePixelRatio || 1;\n    canvas.width = 500 * scale;\n    canvas.height = 300 * scale;\n    ctx.scale(scale, scale);\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    if (dataPoints.length > 1) {\n      ctx.strokeStyle = '#FFD700';\n      ctx.lineWidth = 1.5;\n      ctx.beginPath();\n\n      dataPoints.forEach((value, index) => {\n        const x = (canvas.width / scale / 2) + index * 10 - dataPoints.length * 10;\n        const y = canvas.height / scale - ((value - (centerValue - range / 2)) / range) * canvas.height / scale;\n        if (index === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      });\n\n      ctx.stroke();\n\n      const fixedY = canvas.height / scale - ((currentValue - (centerValue - range / 2)) / range) * canvas.height / scale;\n      ctx.strokeStyle = 'lightblue';\n      ctx.lineWidth = 1;\n      ctx.beginPath();\n      ctx.moveTo(0, fixedY);\n      ctx.lineTo(canvas.width / scale, fixedY);\n      ctx.stroke();\n\n      ctx.font = '12px Arial';\n      ctx.fillStyle = 'lightblue';\n      ctx.fillText(`${currentValue}`, canvas.width / scale - 150, fixedY - 10);\n    }\n  }, [dataPoints, centerValue, range, currentValue]);\n\n  const handleFixValue = () => {\n    setCenterValue(currentValue); // Перемещаем центр шкалы на текущее значение\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <canvas\n        ref={canvasRef}\n        style={{ width: 500, height: 300, border: '1px solid black', marginBottom: '20px' }}\n      ></canvas>\n      <button\n        onClick={handleFixValue}\n        style={{\n          padding: '10px 20px',\n          fontSize: '16px',\n          cursor: 'pointer',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px'\n        }}>\n        Зафиксировать текущее значение\n      </button>\n    </div>\n  );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}