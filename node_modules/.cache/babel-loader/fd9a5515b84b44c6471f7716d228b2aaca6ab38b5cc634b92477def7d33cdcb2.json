{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/LevelPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './LevelPage.css'; // В CSS нужно добавить стили для анимаций\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LevelPage = () => {\n  _s();\n  const [bubbles, setBubbles] = useState(generateBubbles());\n\n  // Генерация случайных позиций для шариков внутри окружности\n  function generateBubbles() {\n    const bubbles = [];\n    for (let i = 0; i < 9; i++) {\n      let size = Math.floor(Math.random() * 30) + 20; // Размеры шариков (20-50 пикселей)\n      let position = generateRandomPosition(size);\n      bubbles.push({\n        id: i,\n        size,\n        x: position.x,\n        y: position.y,\n        popped: false\n      });\n    }\n    return bubbles;\n  }\n\n  // Генерация случайной позиции внутри окружности с проверкой на наложение\n  function generateRandomPosition(size) {\n    let valid = false;\n    let x, y;\n    while (!valid) {\n      x = Math.random() * 200 - 100; // координаты x от -100 до 100\n      y = Math.random() * 200 - 100; // координаты y от -100 до 100\n      // Проверяем, что точка внутри окружности радиусом 100\n      if (x * x + y * y <= (100 - size / 2) * (100 - size / 2)) {\n        valid = true;\n      }\n    }\n    return {\n      x,\n      y\n    };\n  }\n\n  // Обработка клика по шарику\n  const handleBubbleClick = id => {\n    setBubbles(prevBubbles => prevBubbles.map(bubble => bubble.id === id ? {\n      ...bubble,\n      popped: true\n    } : bubble));\n  };\n\n  // Анимация перемещения шариков к центру\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setBubbles(prevBubbles => {\n        const updatedBubbles = prevBubbles.map(bubble => {\n          if (!bubble.popped) {\n            let dx = -bubble.x * 0.05; // Движение в сторону центра по x\n            let dy = -bubble.y * 0.05; // Движение в сторону центра по y\n            return {\n              ...bubble,\n              x: bubble.x + dx,\n              y: bubble.y + dy\n            };\n          }\n          return bubble;\n        });\n        return updatedBubbles;\n      });\n    }, 100); // Обновление каждые 100 мс\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"level-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle\",\n      children: bubbles.map(bubble => !bubble.popped ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bubble\",\n        style: {\n          width: bubble.size,\n          height: bubble.size,\n          left: `calc(50% + ${bubble.x}px)`,\n          top: `calc(50% + ${bubble.y}px)`,\n          animation: 'move 0.5s ease-out'\n        },\n        onClick: () => handleBubbleClick(bubble.id)\n      }, bubble.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this) : null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(LevelPage, \"TSqPKtDIsYmqJdc4aa2WW7/lKBw=\");\n_c = LevelPage;\nexport default LevelPage;\nvar _c;\n$RefreshReg$(_c, \"LevelPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LevelPage","_s","bubbles","setBubbles","generateBubbles","i","size","Math","floor","random","position","generateRandomPosition","push","id","x","y","popped","valid","handleBubbleClick","prevBubbles","map","bubble","interval","setInterval","updatedBubbles","dx","dy","clearInterval","className","children","style","width","height","left","top","animation","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/LevelPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './LevelPage.css'; // В CSS нужно добавить стили для анимаций\n\nconst LevelPage = () => {\n  const [bubbles, setBubbles] = useState(generateBubbles());\n\n  // Генерация случайных позиций для шариков внутри окружности\n  function generateBubbles() {\n    const bubbles = [];\n    for (let i = 0; i < 9; i++) {\n      let size = Math.floor(Math.random() * 30) + 20; // Размеры шариков (20-50 пикселей)\n      let position = generateRandomPosition(size);\n      bubbles.push({\n        id: i,\n        size,\n        x: position.x,\n        y: position.y,\n        popped: false,\n      });\n    }\n    return bubbles;\n  }\n\n  // Генерация случайной позиции внутри окружности с проверкой на наложение\n  function generateRandomPosition(size) {\n    let valid = false;\n    let x, y;\n    while (!valid) {\n      x = Math.random() * 200 - 100; // координаты x от -100 до 100\n      y = Math.random() * 200 - 100; // координаты y от -100 до 100\n      // Проверяем, что точка внутри окружности радиусом 100\n      if (x * x + y * y <= (100 - size / 2) * (100 - size / 2)) {\n        valid = true;\n      }\n    }\n    return { x, y };\n  }\n\n  // Обработка клика по шарику\n  const handleBubbleClick = (id) => {\n    setBubbles((prevBubbles) =>\n      prevBubbles.map((bubble) =>\n        bubble.id === id ? { ...bubble, popped: true } : bubble\n      )\n    );\n  };\n\n  // Анимация перемещения шариков к центру\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setBubbles((prevBubbles) => {\n        const updatedBubbles = prevBubbles.map((bubble) => {\n          if (!bubble.popped) {\n            let dx = -bubble.x * 0.05; // Движение в сторону центра по x\n            let dy = -bubble.y * 0.05; // Движение в сторону центра по y\n            return {\n              ...bubble,\n              x: bubble.x + dx,\n              y: bubble.y + dy,\n            };\n          }\n          return bubble;\n        });\n        return updatedBubbles;\n      });\n    }, 100); // Обновление каждые 100 мс\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"level-page\">\n      <div className=\"circle\">\n        {bubbles.map((bubble) =>\n          !bubble.popped ? (\n            <div\n              key={bubble.id}\n              className=\"bubble\"\n              style={{\n                width: bubble.size,\n                height: bubble.size,\n                left: `calc(50% + ${bubble.x}px)`,\n                top: `calc(50% + ${bubble.y}px)`,\n                animation: 'move 0.5s ease-out',\n              }}\n              onClick={() => handleBubbleClick(bubble.id)}\n            />\n          ) : null\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default LevelPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAACQ,eAAe,CAAC,CAAC,CAAC;;EAEzD;EACA,SAASA,eAAeA,CAAA,EAAG;IACzB,MAAMF,OAAO,GAAG,EAAE;IAClB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;MAChD,IAAIC,QAAQ,GAAGC,sBAAsB,CAACL,IAAI,CAAC;MAC3CJ,OAAO,CAACU,IAAI,CAAC;QACXC,EAAE,EAAER,CAAC;QACLC,IAAI;QACJQ,CAAC,EAAEJ,QAAQ,CAACI,CAAC;QACbC,CAAC,EAAEL,QAAQ,CAACK,CAAC;QACbC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;IACA,OAAOd,OAAO;EAChB;;EAEA;EACA,SAASS,sBAAsBA,CAACL,IAAI,EAAE;IACpC,IAAIW,KAAK,GAAG,KAAK;IACjB,IAAIH,CAAC,EAAEC,CAAC;IACR,OAAO,CAACE,KAAK,EAAE;MACbH,CAAC,GAAGP,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;MAC/BM,CAAC,GAAGR,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;MAC/B;MACA,IAAIK,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC,IAAI,CAAC,GAAG,GAAGT,IAAI,GAAG,CAAC,KAAK,GAAG,GAAGA,IAAI,GAAG,CAAC,CAAC,EAAE;QACxDW,KAAK,GAAG,IAAI;MACd;IACF;IACA,OAAO;MAAEH,CAAC;MAAEC;IAAE,CAAC;EACjB;;EAEA;EACA,MAAMG,iBAAiB,GAAIL,EAAE,IAAK;IAChCV,UAAU,CAAEgB,WAAW,IACrBA,WAAW,CAACC,GAAG,CAAEC,MAAM,IACrBA,MAAM,CAACR,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGQ,MAAM;MAAEL,MAAM,EAAE;IAAK,CAAC,GAAGK,MACnD,CACF,CAAC;EACH,CAAC;;EAED;EACAxB,SAAS,CAAC,MAAM;IACd,MAAMyB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCpB,UAAU,CAAEgB,WAAW,IAAK;QAC1B,MAAMK,cAAc,GAAGL,WAAW,CAACC,GAAG,CAAEC,MAAM,IAAK;UACjD,IAAI,CAACA,MAAM,CAACL,MAAM,EAAE;YAClB,IAAIS,EAAE,GAAG,CAACJ,MAAM,CAACP,CAAC,GAAG,IAAI,CAAC,CAAC;YAC3B,IAAIY,EAAE,GAAG,CAACL,MAAM,CAACN,CAAC,GAAG,IAAI,CAAC,CAAC;YAC3B,OAAO;cACL,GAAGM,MAAM;cACTP,CAAC,EAAEO,MAAM,CAACP,CAAC,GAAGW,EAAE;cAChBV,CAAC,EAAEM,MAAM,CAACN,CAAC,GAAGW;YAChB,CAAC;UACH;UACA,OAAOL,MAAM;QACf,CAAC,CAAC;QACF,OAAOG,cAAc;MACvB,CAAC,CAAC;IACJ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACT,OAAO,MAAMG,aAAa,CAACL,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAK6B,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzB9B,OAAA;MAAK6B,SAAS,EAAC,QAAQ;MAAAC,QAAA,EACpB3B,OAAO,CAACkB,GAAG,CAAEC,MAAM,IAClB,CAACA,MAAM,CAACL,MAAM,gBACZjB,OAAA;QAEE6B,SAAS,EAAC,QAAQ;QAClBE,KAAK,EAAE;UACLC,KAAK,EAAEV,MAAM,CAACf,IAAI;UAClB0B,MAAM,EAAEX,MAAM,CAACf,IAAI;UACnB2B,IAAI,EAAE,cAAcZ,MAAM,CAACP,CAAC,KAAK;UACjCoB,GAAG,EAAE,cAAcb,MAAM,CAACN,CAAC,KAAK;UAChCoB,SAAS,EAAE;QACb,CAAE;QACFC,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAACG,MAAM,CAACR,EAAE;MAAE,GATvCQ,MAAM,CAACR,EAAE;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUf,CAAC,GACA,IACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvC,EAAA,CAxFID,SAAS;AAAAyC,EAAA,GAATzC,SAAS;AA0Ff,eAAeA,SAAS;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}