{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { createChart, CrosshairMode } from 'lightweight-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const chartContainerRef = useRef();\n  const chartRef = useRef();\n  const candlestickSeriesRef = useRef();\n  useEffect(() => {\n    // Создаем график\n    chartRef.current = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth,\n      height: 500,\n      layout: {\n        backgroundColor: '#ffffff',\n        textColor: '#000'\n      },\n      grid: {\n        vertLines: {\n          color: '#eeeeee'\n        },\n        horzLines: {\n          color: '#eeeeee'\n        }\n      },\n      crosshair: {\n        mode: CrosshairMode.Normal\n      },\n      priceScale: {\n        borderColor: '#cccccc'\n      },\n      timeScale: {\n        borderColor: '#cccccc',\n        timeVisible: true,\n        secondsVisible: true\n      }\n    });\n\n    // Создаем серию свечей\n    candlestickSeriesRef.current = chartRef.current.addCandlestickSeries({\n      upColor: '#4caf50',\n      downColor: '#f44336',\n      borderDownColor: '#f44336',\n      borderUpColor: '#4caf50',\n      wickDownColor: '#f44336',\n      wickUpColor: '#4caf50'\n    });\n\n    // Функция генерации случайных данных свечей\n    const generateRandomCandle = lastClose => {\n      const open = lastClose;\n      const close = open + (Math.random() - 0.5) * 2;\n      const high = Math.max(open, close) + Math.random() * 1;\n      const low = Math.min(open, close) - Math.random() * 1;\n      return {\n        open,\n        high,\n        low,\n        close\n      };\n    };\n\n    // Начальные данные\n    let currentTime = Math.floor(Date.now() / 1000);\n    let lastClose = 50000; // Начальная цена\n    const initialCandles = [];\n    for (let i = 0; i < 50; i++) {\n      const candle = generateRandomCandle(lastClose);\n      lastClose = candle.close;\n      initialCandles.push({\n        time: currentTime,\n        ...candle\n      });\n      currentTime += 5;\n    }\n    candlestickSeriesRef.current.setData(initialCandles);\n\n    // Обновляем данные каждые 5 секунд\n    const interval = setInterval(() => {\n      const candle = generateRandomCandle(lastClose);\n      lastClose = candle.close;\n      currentTime += 5;\n      candlestickSeriesRef.current.update({\n        time: currentTime,\n        ...candle\n      });\n    }, 5000);\n\n    // Удаляем интервал при размонтировании компонента\n    return () => clearInterval(interval);\n  }, []);\n\n  // Отслеживание размера окна\n  useEffect(() => {\n    const handleResize = () => {\n      chartRef.current.applyOptions({\n        width: chartContainerRef.current.clientWidth\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: chartContainerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 12\n  }, this);\n};\n_s(Page4, \"YiQzYiv5gWqztaDGKXLCTHNblvc=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useEffect","useRef","createChart","CrosshairMode","jsxDEV","_jsxDEV","Page4","_s","chartContainerRef","chartRef","candlestickSeriesRef","current","width","clientWidth","height","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","crosshair","mode","Normal","priceScale","borderColor","timeScale","timeVisible","secondsVisible","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","generateRandomCandle","lastClose","open","close","Math","random","high","max","low","min","currentTime","floor","Date","now","initialCandles","i","candle","push","time","setData","interval","setInterval","update","clearInterval","handleResize","applyOptions","window","addEventListener","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { createChart, CrosshairMode } from 'lightweight-charts';\n\nconst Page4 = () => {\n    const chartContainerRef = useRef();\n    const chartRef = useRef();\n    const candlestickSeriesRef = useRef();\n\n    \n    useEffect(() => {\n        // Создаем график\n        chartRef.current = createChart(chartContainerRef.current, {\n            width: chartContainerRef.current.clientWidth,\n            height: 500,\n            layout: {\n                backgroundColor: '#ffffff',\n                textColor: '#000',\n            },\n            grid: {\n                vertLines: {\n                    color: '#eeeeee',\n                },\n                horzLines: {\n                    color: '#eeeeee',\n                },\n            },\n            crosshair: {\n                mode: CrosshairMode.Normal,\n            },\n            priceScale: {\n                borderColor: '#cccccc',\n            },\n            timeScale: {\n                borderColor: '#cccccc',\n                timeVisible: true,\n                secondsVisible: true,\n            },\n        });\n\n        // Создаем серию свечей\n        candlestickSeriesRef.current = chartRef.current.addCandlestickSeries({\n            upColor: '#4caf50',\n            downColor: '#f44336',\n            borderDownColor: '#f44336',\n            borderUpColor: '#4caf50',\n            wickDownColor: '#f44336',\n            wickUpColor: '#4caf50',\n        });\n\n        // Функция генерации случайных данных свечей\n        const generateRandomCandle = (lastClose) => {\n            const open = lastClose;\n            const close = open + (Math.random() - 0.5) * 2;\n            const high = Math.max(open, close) + Math.random() * 1;\n            const low = Math.min(open, close) - Math.random() * 1;\n            return { open, high, low, close };\n        };\n\n        // Начальные данные\n        let currentTime = Math.floor(Date.now() / 1000);\n        let lastClose = 50000; // Начальная цена\n        const initialCandles = [];\n        for (let i = 0; i < 50; i++) {\n            const candle = generateRandomCandle(lastClose);\n            lastClose = candle.close;\n            initialCandles.push({\n                time: currentTime,\n                ...candle,\n            });\n            currentTime += 5;\n        }\n\n        candlestickSeriesRef.current.setData(initialCandles);\n\n        // Обновляем данные каждые 5 секунд\n        const interval = setInterval(() => {\n            const candle = generateRandomCandle(lastClose);\n            lastClose = candle.close;\n            currentTime += 5;\n            candlestickSeriesRef.current.update({\n                time: currentTime,\n                ...candle,\n            });\n        }, 5000);\n\n        // Удаляем интервал при размонтировании компонента\n        return () => clearInterval(interval);\n    }, []);\n\n    // Отслеживание размера окна\n    useEffect(() => {\n        const handleResize = () => {\n            chartRef.current.applyOptions({ width: chartContainerRef.current.clientWidth });\n        };\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return <div ref={chartContainerRef} />;\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}