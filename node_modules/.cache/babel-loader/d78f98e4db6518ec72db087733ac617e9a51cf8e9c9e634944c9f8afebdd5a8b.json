{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const [previousValue, setPreviousValue] = useState(null);\n  const [currentValue, setCurrentValue] = useState(null);\n  const [rectangles, setRectangles] = useState([]);\n  const [centerValue, setCenterValue] = useState(60600); // Изначально центр на 60600\n  const [range, setRange] = useState(500); // Диапазон, по умолчанию 500\n  const canvasRef = useRef(null);\n  const fetchBitcoinPrice = async () => {\n    try {\n      const response = await fetch('https://api.coindesk.com/v1/bpi/currentprice/BTC.json');\n      const data = await response.json();\n      const bitcoinPrice = Math.floor(data.bpi.USD.rate_float);\n      return bitcoinPrice;\n    } catch (error) {\n      console.error('Ошибка при получении цены биткоина:', error);\n      return 60600;\n    }\n  };\n  const generateNewValue = async centerValue => {\n    const randomDiff = Math.floor(Math.random() * 691) - 345; // случайное число от -345 до 345\n    const newValue = centerValue + randomDiff;\n    setCurrentValue(newValue);\n  };\n  useEffect(() => {\n    const drawRectangle = () => {\n      if (currentValue !== previousValue) {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const scale = window.devicePixelRatio || 1;\n        canvas.width = 500 * scale;\n        canvas.height = 300 * scale;\n        ctx.scale(scale, scale);\n        const difference = currentValue - previousValue;\n        const step = difference > 0 ? 1 : -1;\n        let progress = 0;\n        const startY = 150 - (previousValue - centerValue) / range * 120;\n        const targetY = 150 - (currentValue - centerValue) / range * 120;\n        const rectWidth = 30;\n        const interval = setInterval(() => {\n          progress += step;\n          ctx.clearRect(0, 0, canvas.width / scale, canvas.height / scale);\n\n          // Смещение всех прямоугольников влево\n          const updatedRectangles = rectangles.map(rect => ({\n            ...rect,\n            x: rect.x - rectWidth\n          }));\n\n          // Рисование всех прямоугольников\n          updatedRectangles.forEach(rect => {\n            ctx.fillStyle = rect.color;\n            ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n          });\n\n          // Рисование текущего прямоугольника\n          const height = Math.abs(progress);\n          const rectY = difference > 0 ? startY - height : startY;\n          ctx.fillStyle = difference > 0 ? 'green' : 'red';\n          ctx.fillRect(canvas.width / scale / 2 - 15, rectY, rectWidth, height);\n          if (Math.abs(progress) >= Math.abs(targetY - startY)) {\n            clearInterval(interval);\n\n            // Добавляем новый прямоугольник в массив\n            updatedRectangles.push({\n              x: canvas.width / scale / 2 - 15,\n              y: rectY,\n              width: rectWidth,\n              height: height,\n              color: difference > 0 ? 'green' : 'red'\n            });\n            setRectangles(updatedRectangles);\n\n            // Проверяем, нужно ли обновить центр и диапазон\n            if (currentValue > centerValue + range || currentValue < centerValue - range) {\n              const newCenterValue = currentValue;\n              setCenterValue(newCenterValue);\n            }\n            setPreviousValue(currentValue);\n            generateNewValue(currentValue); // Запускаем процесс для нового значения\n          }\n        }, 20);\n        return () => clearInterval(interval);\n      }\n    };\n    if (currentValue !== null && previousValue !== null) {\n      drawRectangle();\n    }\n  }, [currentValue, previousValue, rectangles, centerValue, range]);\n  useEffect(() => {\n    const initializeGraph = async () => {\n      const bitcoinPrice = await fetchBitcoinPrice();\n      setPreviousValue(bitcoinPrice);\n      setCurrentValue(bitcoinPrice);\n      generateNewValue(bitcoinPrice);\n    };\n    initializeGraph();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        width: 500,\n        height: 300,\n        border: '1px solid black',\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), currentValue]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(Page4, \"VN5KMWns39mmOxz/KYBnyq2eP/4=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Page4","_s","previousValue","setPreviousValue","currentValue","setCurrentValue","rectangles","setRectangles","centerValue","setCenterValue","range","setRange","canvasRef","fetchBitcoinPrice","response","fetch","data","json","bitcoinPrice","Math","floor","bpi","USD","rate_float","error","console","generateNewValue","randomDiff","random","newValue","drawRectangle","canvas","current","ctx","getContext","scale","window","devicePixelRatio","width","height","difference","step","progress","startY","targetY","rectWidth","interval","setInterval","clearRect","updatedRectangles","map","rect","x","forEach","fillStyle","color","fillRect","y","abs","rectY","clearInterval","push","newCenterValue","initializeGraph","style","display","flexDirection","alignItems","children","ref","border","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Page4 = () => {\n  const [previousValue, setPreviousValue] = useState(null);\n  const [currentValue, setCurrentValue] = useState(null);\n  const [rectangles, setRectangles] = useState([]);\n  const [centerValue, setCenterValue] = useState(60600); // Изначально центр на 60600\n  const [range, setRange] = useState(500); // Диапазон, по умолчанию 500\n  const canvasRef = useRef(null);\n\n  const fetchBitcoinPrice = async () => {\n    try {\n      const response = await fetch('https://api.coindesk.com/v1/bpi/currentprice/BTC.json');\n      const data = await response.json();\n      const bitcoinPrice = Math.floor(data.bpi.USD.rate_float);\n      return bitcoinPrice;\n    } catch (error) {\n      console.error('Ошибка при получении цены биткоина:', error);\n      return 60600;\n    }\n  };\n\n  const generateNewValue = async (centerValue) => {\n    const randomDiff = Math.floor(Math.random() * 691) - 345; // случайное число от -345 до 345\n    const newValue = centerValue + randomDiff;\n    setCurrentValue(newValue);\n  };\n\n  useEffect(() => {\n    const drawRectangle = () => {\n      if (currentValue !== previousValue) {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n\n        const scale = window.devicePixelRatio || 1;\n        canvas.width = 500 * scale;\n        canvas.height = 300 * scale;\n        ctx.scale(scale, scale);\n\n        const difference = currentValue - previousValue;\n        const step = difference > 0 ? 1 : -1;\n        let progress = 0;\n\n        const startY = 150 - ((previousValue - centerValue) / range) * 120;\n        const targetY = 150 - ((currentValue - centerValue) / range) * 120;\n        const rectWidth = 30;\n        const interval = setInterval(() => {\n          progress += step;\n\n          ctx.clearRect(0, 0, canvas.width / scale, canvas.height / scale);\n\n          // Смещение всех прямоугольников влево\n          const updatedRectangles = rectangles.map((rect) => ({\n            ...rect,\n            x: rect.x - rectWidth,\n          }));\n\n          // Рисование всех прямоугольников\n          updatedRectangles.forEach((rect) => {\n            ctx.fillStyle = rect.color;\n            ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n          });\n\n          // Рисование текущего прямоугольника\n          const height = Math.abs(progress);\n          const rectY = difference > 0 ? startY - height : startY;\n          ctx.fillStyle = difference > 0 ? 'green' : 'red';\n          ctx.fillRect(canvas.width / scale / 2 - 15, rectY, rectWidth, height);\n\n          if (Math.abs(progress) >= Math.abs(targetY - startY)) {\n            clearInterval(interval);\n\n            // Добавляем новый прямоугольник в массив\n            updatedRectangles.push({\n              x: canvas.width / scale / 2 - 15,\n              y: rectY,\n              width: rectWidth,\n              height: height,\n              color: difference > 0 ? 'green' : 'red',\n            });\n\n            setRectangles(updatedRectangles);\n\n            // Проверяем, нужно ли обновить центр и диапазон\n            if (currentValue > centerValue + range || currentValue < centerValue - range) {\n              const newCenterValue = currentValue;\n              setCenterValue(newCenterValue);\n            }\n\n            setPreviousValue(currentValue);\n            generateNewValue(currentValue); // Запускаем процесс для нового значения\n          }\n        }, 20);\n\n        return () => clearInterval(interval);\n      }\n    };\n\n    if (currentValue !== null && previousValue !== null) {\n      drawRectangle();\n    }\n  }, [currentValue, previousValue, rectangles, centerValue, range]);\n\n  useEffect(() => {\n    const initializeGraph = async () => {\n      const bitcoinPrice = await fetchBitcoinPrice();\n      setPreviousValue(bitcoinPrice);\n      setCurrentValue(bitcoinPrice);\n      generateNewValue(bitcoinPrice);\n    };\n\n    initializeGraph();\n  }, []);\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <canvas\n        ref={canvasRef}\n        style={{ width: 500, height: 300, border: '1px solid black', marginBottom: '20px' }}\n      ></canvas>\n      {currentValue}\n    </div>\n  );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}