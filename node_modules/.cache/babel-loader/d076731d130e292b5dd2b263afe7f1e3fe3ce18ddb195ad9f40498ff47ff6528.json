{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [height, setHeight] = useState(0);\n  const [targetHeight, setTargetHeight] = useState(0);\n  const [rectangles, setRectangles] = useState([]);\n  const canvasWidth = 600; // Set the width of the canvas\n  const canvasHeight = 400; // Set the height of the canvas\n  const rectWidth = 30; // Width of each rectangle\n  const centerY = canvasHeight / 2; // The center of the canvas\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight); // Clear the canvas\n\n    // Draw all rectangles\n    rectangles.forEach((rect, index) => {\n      ctx.beginPath();\n      ctx.rect(centerY - rect.yOffset, rect.xOffset, rectWidth, rect.height);\n      ctx.strokeStyle = rect.direction === 1 ? 'green' : 'red';\n      ctx.stroke();\n      ctx.closePath();\n    });\n  }, [rectangles]);\n  useEffect(() => {\n    if (!isRunning) return;\n    const animateRectangle = () => {\n      const newTarget = Math.floor(Math.random() * 11) * (Math.random() > 0.5 ? 1 : -1);\n      const stepHeight = newTarget / 100; // 10 seconds, so 100 steps\n      let currentHeight = 0;\n      const interval = setInterval(() => {\n        currentHeight += stepHeight;\n        setHeight(currentHeight);\n        if (stepHeight > 0 && currentHeight >= newTarget || stepHeight < 0 && currentHeight <= newTarget) {\n          clearInterval(interval);\n          setRectangles(prevRectangles => [...prevRectangles, {\n            height: currentHeight,\n            direction: newTarget > 0 ? 1 : -1,\n            xOffset: prevRectangles.length * -rectWidth,\n            yOffset: currentHeight\n          }]);\n        }\n      }, 100);\n      setTargetHeight(newTarget);\n    };\n    const interval = setInterval(animateRectangle, 10000);\n    animateRectangle(); // Start the first animation immediately\n\n    return () => clearInterval(interval);\n  }, [isRunning]);\n  const handleStartStop = () => {\n    setIsRunning(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasWidth,\n      height: canvasHeight,\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartStop,\n      children: isRunning ? 'Stop' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(Page4, \"F3/XXdobSJ2/4zSlRNu9mG9tDHE=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Page4","_s","canvasRef","isRunning","setIsRunning","height","setHeight","targetHeight","setTargetHeight","rectangles","setRectangles","canvasWidth","canvasHeight","rectWidth","centerY","canvas","current","ctx","getContext","clearRect","forEach","rect","index","beginPath","yOffset","xOffset","strokeStyle","direction","stroke","closePath","animateRectangle","newTarget","Math","floor","random","stepHeight","currentHeight","interval","setInterval","clearInterval","prevRectangles","length","handleStartStop","prevState","children","ref","width","style","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Page4 = () => {\n    const canvasRef = useRef(null);\n    const [isRunning, setIsRunning] = useState(false);\n    const [height, setHeight] = useState(0);\n    const [targetHeight, setTargetHeight] = useState(0);\n    const [rectangles, setRectangles] = useState([]);\n\n    const canvasWidth = 600;  // Set the width of the canvas\n    const canvasHeight = 400; // Set the height of the canvas\n    const rectWidth = 30;     // Width of each rectangle\n    const centerY = canvasHeight / 2;  // The center of the canvas\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvasWidth, canvasHeight);  // Clear the canvas\n\n        // Draw all rectangles\n        rectangles.forEach((rect, index) => {\n            ctx.beginPath();\n            ctx.rect(centerY - rect.yOffset, rect.xOffset, rectWidth, rect.height);\n            ctx.strokeStyle = rect.direction === 1 ? 'green' : 'red';\n            ctx.stroke();\n            ctx.closePath();\n        });\n    }, [rectangles]);\n\n    useEffect(() => {\n        if (!isRunning) return;\n\n        const animateRectangle = () => {\n            const newTarget = Math.floor(Math.random() * 11) * (Math.random() > 0.5 ? 1 : -1);\n            const stepHeight = newTarget / 100; // 10 seconds, so 100 steps\n            let currentHeight = 0;\n\n            const interval = setInterval(() => {\n                currentHeight += stepHeight;\n\n                setHeight(currentHeight);\n\n                if ((stepHeight > 0 && currentHeight >= newTarget) || (stepHeight < 0 && currentHeight <= newTarget)) {\n                    clearInterval(interval);\n                    setRectangles(prevRectangles => [\n                        ...prevRectangles,\n                        {\n                            height: currentHeight,\n                            direction: newTarget > 0 ? 1 : -1,\n                            xOffset: prevRectangles.length * -rectWidth,\n                            yOffset: currentHeight\n                        }\n                    ]);\n                }\n            }, 100);\n\n            setTargetHeight(newTarget);\n        };\n\n        const interval = setInterval(animateRectangle, 10000);\n        animateRectangle(); // Start the first animation immediately\n\n        return () => clearInterval(interval);\n    }, [isRunning]);\n\n    const handleStartStop = () => {\n        setIsRunning(prevState => !prevState);\n    };\n\n    return (\n        <div>\n            <canvas ref={canvasRef} width={canvasWidth} height={canvasHeight} style={{ border: '1px solid black' }} />\n            <button onClick={handleStartStop}>\n                {isRunning ? 'Stop' : 'Start'}\n            </button>\n        </div>\n    );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}