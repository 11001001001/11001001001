{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const [centerValue, setCenterValue] = useState(null);\n  const [previousValue, setPreviousValue] = useState(null);\n  const [currentValue, setCurrentValue] = useState(null);\n  const [rectangles, setRectangles] = useState([]);\n  const [updatedValue, setUpdatedValue] = useState();\n  const [lastY, setLastY] = useState(null); // Хранение последней позиции Y\n  const canvasRef = useRef(null);\n  const animationTimeoutRef = useRef(null);\n  const fetchBitcoinPrice = async () => {\n    try {\n      const response = await fetch('https://api.coindesk.com/v1/bpi/currentprice/BTC.json');\n      const data = await response.json();\n      const price = parseFloat(data.bpi.USD.rate.replace(',', ''));\n      return price;\n    } catch (error) {\n      console.error('Ошибка при получении цены биткоина:', error);\n      return 56000; // Если запрос не удался, использовать значение по умолчанию\n    }\n  };\n  const generateValue = () => {\n    if (centerValue !== null) {\n      const randomRangeSelector = Math.random();\n      let newValue;\n      if (randomRangeSelector <= 0.6) {\n        const min = centerValue - 40;\n        const max = centerValue + 40;\n        newValue = Math.floor(Math.random() * (max - min + 1)) + min;\n      } else if (randomRangeSelector <= 0.8) {\n        const min = centerValue - 100;\n        const max = centerValue + 100;\n        newValue = Math.floor(Math.random() * (max - min + 1)) + min;\n      } else {\n        const min = centerValue - 500;\n        const max = centerValue + 500;\n        newValue = Math.floor(Math.random() * (max - min + 1)) + min;\n      }\n      setCurrentValue(newValue);\n    }\n  };\n  const generateRandomMultiplier = () => {\n    const rangeSelector = Math.random();\n    if (rangeSelector <= 0.6) {\n      return Math.random() * (0.1 - 0.01) + 0.01;\n    } else if (rangeSelector <= 0.8) {\n      return Math.random() * (0.5 - 0.11) + 0.11;\n    } else if (rangeSelector <= 0.9) {\n      return Math.random() * (0.9 - 0.51) + 0.51;\n    } else {\n      return Math.random() * (1 - 0.91) + 0.91;\n    }\n  };\n  useEffect(() => {\n    const initialize = async () => {\n      const price = await fetchBitcoinPrice();\n      setCenterValue(price);\n      setPreviousValue(price);\n      setCurrentValue(price);\n    };\n    initialize();\n  }, []);\n  useEffect(() => {\n    if (currentValue !== previousValue && previousValue !== null) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const scale = window.devicePixelRatio || 1;\n      canvas.width = 500 * scale;\n      canvas.height = 300 * scale;\n      ctx.scale(scale, scale);\n      const difference = currentValue - previousValue;\n      let progress = 0;\n      const startY = lastY !== null ? lastY : 150 - (previousValue - centerValue) / 1990 * 120;\n      const targetY = 150 - (currentValue - centerValue) / 1990 * 120;\n      const rectWidth = 25;\n      const step = (targetY - startY) / (5000 / 25); // шаг для 5 секунд\n\n      const interval = setInterval(() => {\n        progress += step;\n        const currentProgressValue = previousValue + (currentValue - previousValue) * (progress / (targetY - startY));\n        setUpdatedValue(currentProgressValue);\n        ctx.clearRect(0, 0, canvas.width / scale, canvas.height / scale);\n        const updatedRectangles = rectangles.map(rect => ({\n          ...rect,\n          x: rect.x - rectWidth\n        }));\n        updatedRectangles.forEach(rect => {\n          ctx.fillStyle = rect.color;\n          ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n        });\n        const height = Math.abs(progress);\n        const rectY = startY + progress;\n        ctx.fillStyle = difference > 0 ? 'green' : 'red';\n        ctx.fillRect(canvas.width / scale / 2 - 15, rectY, rectWidth, height);\n        if (Math.abs(progress) >= Math.abs(targetY - startY)) {\n          clearInterval(interval);\n          updatedRectangles.push({\n            x: canvas.width / scale / 2 - 15,\n            y: rectY,\n            width: rectWidth,\n            height: height,\n            color: difference > 0 ? 'green' : 'red'\n          });\n          setRectangles(updatedRectangles);\n          setLastY(difference > 0 ? rectY : rectY + height);\n          setPreviousValue(currentValue);\n        }\n      }, 25);\n      animationTimeoutRef.current = interval;\n      return () => clearInterval(interval);\n    }\n  }, [currentValue, previousValue, centerValue, rectangles, lastY]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        width: 500,\n        height: 300,\n        border: '1px solid black',\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateValue,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px',\n        cursor: 'pointer',\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px'\n      },\n      children: \"Generate Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Current Value: \", currentValue, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 47\n      }, this), \"Updated Value: \", updatedValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n};\n_s(Page4, \"Gtn6hnDPgrR34b9+cYtNt9CJqiI=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Page4","_s","centerValue","setCenterValue","previousValue","setPreviousValue","currentValue","setCurrentValue","rectangles","setRectangles","updatedValue","setUpdatedValue","lastY","setLastY","canvasRef","animationTimeoutRef","fetchBitcoinPrice","response","fetch","data","json","price","parseFloat","bpi","USD","rate","replace","error","console","generateValue","randomRangeSelector","Math","random","newValue","min","max","floor","generateRandomMultiplier","rangeSelector","initialize","canvas","current","ctx","getContext","scale","window","devicePixelRatio","width","height","difference","progress","startY","targetY","rectWidth","step","interval","setInterval","currentProgressValue","clearRect","updatedRectangles","map","rect","x","forEach","fillStyle","color","fillRect","y","abs","rectY","clearInterval","push","style","display","flexDirection","alignItems","children","ref","border","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","fontSize","cursor","backgroundColor","borderRadius","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Page4 = () => {\n    const [centerValue, setCenterValue] = useState(null);\n    const [previousValue, setPreviousValue] = useState(null);\n    const [currentValue, setCurrentValue] = useState(null);\n    const [rectangles, setRectangles] = useState([]);\n    const [updatedValue, setUpdatedValue] = useState();\n    const [lastY, setLastY] = useState(null);  // Хранение последней позиции Y\n    const canvasRef = useRef(null);\n    const animationTimeoutRef = useRef(null);\n\n    const fetchBitcoinPrice = async () => {\n        try {\n            const response = await fetch('https://api.coindesk.com/v1/bpi/currentprice/BTC.json');\n            const data = await response.json();\n            const price = parseFloat(data.bpi.USD.rate.replace(',', ''));\n            return price;\n        } catch (error) {\n            console.error('Ошибка при получении цены биткоина:', error);\n            return 56000;  // Если запрос не удался, использовать значение по умолчанию\n        }\n    };\n\n    const generateValue = () => {\n        if (centerValue !== null) {\n            const randomRangeSelector = Math.random();\n            let newValue;\n    \n            if (randomRangeSelector <= 0.6) {\n                const min = centerValue - 40;\n                const max = centerValue + 40;\n                newValue = Math.floor(Math.random() * (max - min + 1)) + min;\n            } else if (randomRangeSelector <= 0.8) {\n                const min = centerValue - 100;\n                const max = centerValue + 100;\n                newValue = Math.floor(Math.random() * (max - min + 1)) + min;\n            } else {\n                const min = centerValue - 500;\n                const max = centerValue + 500;\n                newValue = Math.floor(Math.random() * (max - min + 1)) + min;\n            }\n    \n            setCurrentValue(newValue);\n        }\n    };\n    \n    const generateRandomMultiplier = () => {\n        const rangeSelector = Math.random();\n    \n        if (rangeSelector <= 0.6) {\n            return Math.random() * (0.1 - 0.01) + 0.01;\n        } else if (rangeSelector <= 0.8) {\n            return Math.random() * (0.5 - 0.11) + 0.11;\n        } else if (rangeSelector <= 0.9) {\n            return Math.random() * (0.9 - 0.51) + 0.51;\n        } else {\n            return Math.random() * (1 - 0.91) + 0.91;\n        }\n    };\n\n    useEffect(() => {\n        const initialize = async () => {\n            const price = await fetchBitcoinPrice();\n            setCenterValue(price);\n            setPreviousValue(price);\n            setCurrentValue(price);\n        };\n        initialize();\n    }, []);\n\n    useEffect(() => {\n        if (currentValue !== previousValue && previousValue !== null) {\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext('2d');\n\n            const scale = window.devicePixelRatio || 1;\n            canvas.width = 500 * scale;\n            canvas.height = 300 * scale;\n            ctx.scale(scale, scale);\n\n            const difference = currentValue - previousValue;\n            let progress = 0;\n\n            const startY = lastY !== null ? lastY : 150 - ((previousValue - centerValue) / 1990) * 120;\n            const targetY = 150 - ((currentValue - centerValue) / 1990) * 120;\n            const rectWidth = 25;\n\n            const step = (targetY - startY) / (5000 / 25); // шаг для 5 секунд\n\n            const interval = setInterval(() => {\n                progress += step;\n                const currentProgressValue = previousValue + ((currentValue - previousValue) * (progress / (targetY - startY)));\n\n                setUpdatedValue(currentProgressValue);\n\n                ctx.clearRect(0, 0, canvas.width / scale, canvas.height / scale);\n\n                const updatedRectangles = rectangles.map((rect) => ({\n                    ...rect,\n                    x: rect.x - rectWidth,\n                }));\n\n                updatedRectangles.forEach((rect) => {\n                    ctx.fillStyle = rect.color;\n                    ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n                });\n\n                const height = Math.abs(progress);\n                const rectY = startY + progress;\n\n                ctx.fillStyle = difference > 0 ? 'green' : 'red';\n                ctx.fillRect(canvas.width / scale / 2 - 15, rectY, rectWidth, height);\n\n                if (Math.abs(progress) >= Math.abs(targetY - startY)) {\n                    clearInterval(interval);\n\n                    updatedRectangles.push({\n                        x: canvas.width / scale / 2 - 15,\n                        y: rectY,\n                        width: rectWidth,\n                        height: height,\n                        color: difference > 0 ? 'green' : 'red',\n                    });\n\n                    setRectangles(updatedRectangles);\n                    setLastY(difference > 0 ? rectY : rectY + height); \n                    setPreviousValue(currentValue);\n                }\n            }, 25);\n\n            animationTimeoutRef.current = interval;\n\n            return () => clearInterval(interval);\n        }\n    }, [currentValue, previousValue, centerValue, rectangles, lastY]);\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            <canvas\n                ref={canvasRef}\n                style={{ width: 500, height: 300, border: '1px solid black', marginBottom: '20px' }}\n            ></canvas>\n            <button\n                onClick={generateValue}\n                style={{\n                    padding: '10px 20px',\n                    fontSize: '16px',\n                    cursor: 'pointer',\n                    backgroundColor: '#4CAF50',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '5px'\n                }}>\n                Generate Value\n            </button>\n            <div>\n                Current Value: {currentValue} <br />\n                Updated Value: {updatedValue}\n            </div>\n        </div>\n    );\n};\n\nexport default Page4;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,CAAC;EAClD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EAC3C,MAAMmB,SAAS,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMkB,mBAAmB,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAExC,MAAMmB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuD,CAAC;MACrF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,MAAMC,KAAK,GAAGC,UAAU,CAACH,IAAI,CAACI,GAAG,CAACC,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;MAC5D,OAAOL,KAAK;IAChB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3D,OAAO,KAAK,CAAC,CAAE;IACnB;EACJ,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAI3B,WAAW,KAAK,IAAI,EAAE;MACtB,MAAM4B,mBAAmB,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC;MACzC,IAAIC,QAAQ;MAEZ,IAAIH,mBAAmB,IAAI,GAAG,EAAE;QAC5B,MAAMI,GAAG,GAAGhC,WAAW,GAAG,EAAE;QAC5B,MAAMiC,GAAG,GAAGjC,WAAW,GAAG,EAAE;QAC5B+B,QAAQ,GAAGF,IAAI,CAACK,KAAK,CAACL,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIG,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;MAChE,CAAC,MAAM,IAAIJ,mBAAmB,IAAI,GAAG,EAAE;QACnC,MAAMI,GAAG,GAAGhC,WAAW,GAAG,GAAG;QAC7B,MAAMiC,GAAG,GAAGjC,WAAW,GAAG,GAAG;QAC7B+B,QAAQ,GAAGF,IAAI,CAACK,KAAK,CAACL,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIG,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;MAChE,CAAC,MAAM;QACH,MAAMA,GAAG,GAAGhC,WAAW,GAAG,GAAG;QAC7B,MAAMiC,GAAG,GAAGjC,WAAW,GAAG,GAAG;QAC7B+B,QAAQ,GAAGF,IAAI,CAACK,KAAK,CAACL,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIG,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;MAChE;MAEA3B,eAAe,CAAC0B,QAAQ,CAAC;IAC7B;EACJ,CAAC;EAED,MAAMI,wBAAwB,GAAGA,CAAA,KAAM;IACnC,MAAMC,aAAa,GAAGP,IAAI,CAACC,MAAM,CAAC,CAAC;IAEnC,IAAIM,aAAa,IAAI,GAAG,EAAE;MACtB,OAAOP,IAAI,CAACC,MAAM,CAAC,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI;IAC9C,CAAC,MAAM,IAAIM,aAAa,IAAI,GAAG,EAAE;MAC7B,OAAOP,IAAI,CAACC,MAAM,CAAC,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI;IAC9C,CAAC,MAAM,IAAIM,aAAa,IAAI,GAAG,EAAE;MAC7B,OAAOP,IAAI,CAACC,MAAM,CAAC,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI;IAC9C,CAAC,MAAM;MACH,OAAOD,IAAI,CAACC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI;IAC5C;EACJ,CAAC;EAEDpC,SAAS,CAAC,MAAM;IACZ,MAAM2C,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMlB,KAAK,GAAG,MAAML,iBAAiB,CAAC,CAAC;MACvCb,cAAc,CAACkB,KAAK,CAAC;MACrBhB,gBAAgB,CAACgB,KAAK,CAAC;MACvBd,eAAe,CAACc,KAAK,CAAC;IAC1B,CAAC;IACDkB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN3C,SAAS,CAAC,MAAM;IACZ,IAAIU,YAAY,KAAKF,aAAa,IAAIA,aAAa,KAAK,IAAI,EAAE;MAC1D,MAAMoC,MAAM,GAAG1B,SAAS,CAAC2B,OAAO;MAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;MAEnC,MAAMC,KAAK,GAAGC,MAAM,CAACC,gBAAgB,IAAI,CAAC;MAC1CN,MAAM,CAACO,KAAK,GAAG,GAAG,GAAGH,KAAK;MAC1BJ,MAAM,CAACQ,MAAM,GAAG,GAAG,GAAGJ,KAAK;MAC3BF,GAAG,CAACE,KAAK,CAACA,KAAK,EAAEA,KAAK,CAAC;MAEvB,MAAMK,UAAU,GAAG3C,YAAY,GAAGF,aAAa;MAC/C,IAAI8C,QAAQ,GAAG,CAAC;MAEhB,MAAMC,MAAM,GAAGvC,KAAK,KAAK,IAAI,GAAGA,KAAK,GAAG,GAAG,GAAI,CAACR,aAAa,GAAGF,WAAW,IAAI,IAAI,GAAI,GAAG;MAC1F,MAAMkD,OAAO,GAAG,GAAG,GAAI,CAAC9C,YAAY,GAAGJ,WAAW,IAAI,IAAI,GAAI,GAAG;MACjE,MAAMmD,SAAS,GAAG,EAAE;MAEpB,MAAMC,IAAI,GAAG,CAACF,OAAO,GAAGD,MAAM,KAAK,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;;MAE/C,MAAMI,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC/BN,QAAQ,IAAII,IAAI;QAChB,MAAMG,oBAAoB,GAAGrD,aAAa,GAAI,CAACE,YAAY,GAAGF,aAAa,KAAK8C,QAAQ,IAAIE,OAAO,GAAGD,MAAM,CAAC,CAAE;QAE/GxC,eAAe,CAAC8C,oBAAoB,CAAC;QAErCf,GAAG,CAACgB,SAAS,CAAC,CAAC,EAAE,CAAC,EAAElB,MAAM,CAACO,KAAK,GAAGH,KAAK,EAAEJ,MAAM,CAACQ,MAAM,GAAGJ,KAAK,CAAC;QAEhE,MAAMe,iBAAiB,GAAGnD,UAAU,CAACoD,GAAG,CAAEC,IAAI,KAAM;UAChD,GAAGA,IAAI;UACPC,CAAC,EAAED,IAAI,CAACC,CAAC,GAAGT;QAChB,CAAC,CAAC,CAAC;QAEHM,iBAAiB,CAACI,OAAO,CAAEF,IAAI,IAAK;UAChCnB,GAAG,CAACsB,SAAS,GAAGH,IAAI,CAACI,KAAK;UAC1BvB,GAAG,CAACwB,QAAQ,CAACL,IAAI,CAACC,CAAC,EAAED,IAAI,CAACM,CAAC,EAAEN,IAAI,CAACd,KAAK,EAAEc,IAAI,CAACb,MAAM,CAAC;QACzD,CAAC,CAAC;QAEF,MAAMA,MAAM,GAAGjB,IAAI,CAACqC,GAAG,CAAClB,QAAQ,CAAC;QACjC,MAAMmB,KAAK,GAAGlB,MAAM,GAAGD,QAAQ;QAE/BR,GAAG,CAACsB,SAAS,GAAGf,UAAU,GAAG,CAAC,GAAG,OAAO,GAAG,KAAK;QAChDP,GAAG,CAACwB,QAAQ,CAAC1B,MAAM,CAACO,KAAK,GAAGH,KAAK,GAAG,CAAC,GAAG,EAAE,EAAEyB,KAAK,EAAEhB,SAAS,EAAEL,MAAM,CAAC;QAErE,IAAIjB,IAAI,CAACqC,GAAG,CAAClB,QAAQ,CAAC,IAAInB,IAAI,CAACqC,GAAG,CAAChB,OAAO,GAAGD,MAAM,CAAC,EAAE;UAClDmB,aAAa,CAACf,QAAQ,CAAC;UAEvBI,iBAAiB,CAACY,IAAI,CAAC;YACnBT,CAAC,EAAEtB,MAAM,CAACO,KAAK,GAAGH,KAAK,GAAG,CAAC,GAAG,EAAE;YAChCuB,CAAC,EAAEE,KAAK;YACRtB,KAAK,EAAEM,SAAS;YAChBL,MAAM,EAAEA,MAAM;YACdiB,KAAK,EAAEhB,UAAU,GAAG,CAAC,GAAG,OAAO,GAAG;UACtC,CAAC,CAAC;UAEFxC,aAAa,CAACkD,iBAAiB,CAAC;UAChC9C,QAAQ,CAACoC,UAAU,GAAG,CAAC,GAAGoB,KAAK,GAAGA,KAAK,GAAGrB,MAAM,CAAC;UACjD3C,gBAAgB,CAACC,YAAY,CAAC;QAClC;MACJ,CAAC,EAAE,EAAE,CAAC;MAENS,mBAAmB,CAAC0B,OAAO,GAAGc,QAAQ;MAEtC,OAAO,MAAMe,aAAa,CAACf,QAAQ,CAAC;IACxC;EACJ,CAAC,EAAE,CAACjD,YAAY,EAAEF,aAAa,EAAEF,WAAW,EAAEM,UAAU,EAAEI,KAAK,CAAC,CAAC;EAEjE,oBACIb,OAAA;IAAKyE,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAC3E7E,OAAA;MACI8E,GAAG,EAAE/D,SAAU;MACf0D,KAAK,EAAE;QAAEzB,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,GAAG;QAAE8B,MAAM,EAAE,iBAAiB;QAAEC,YAAY,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/E,CAAC,eACVpF,OAAA;MACIqF,OAAO,EAAEvD,aAAc;MACvB2C,KAAK,EAAE;QACHa,OAAO,EAAE,WAAW;QACpBC,QAAQ,EAAE,MAAM;QAChBC,MAAM,EAAE,SAAS;QACjBC,eAAe,EAAE,SAAS;QAC1BvB,KAAK,EAAE,OAAO;QACda,MAAM,EAAE,MAAM;QACdW,YAAY,EAAE;MAClB,CAAE;MAAAb,QAAA,EAAC;IAEP;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTpF,OAAA;MAAA6E,QAAA,GAAK,iBACc,EAACtE,YAAY,EAAC,GAAC,eAAAP,OAAA;QAAAiF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,mBACrB,EAACzE,YAAY;IAAA;MAAAsE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAClF,EAAA,CAhKID,KAAK;AAAA0F,EAAA,GAAL1F,KAAK;AAkKX,eAAeA,KAAK;AAAC,IAAA0F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}