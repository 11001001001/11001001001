{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const [previousValue, setPreviousValue] = useState(56000);\n  const [currentValue, setCurrentValue] = useState(56000);\n  const [rectangles, setRectangles] = useState([]); // массив для хранения прямоугольников\n  const [direction, setDirection] = useState(1); // направление движения\n  const [elapsedTime, setElapsedTime] = useState(0); // прошедшее время\n  const canvasRef = useRef(null);\n  const generateValue = () => {\n    const newValue = Math.floor(Math.random() * (56745 - 55255 + 1)) + 55255;\n    setCurrentValue(newValue);\n    setElapsedTime(0); // сброс времени при новом значении\n  };\n  useEffect(() => {\n    if (currentValue !== previousValue) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const scale = window.devicePixelRatio || 1;\n      canvas.width = 500 * scale;\n      canvas.height = 300 * scale;\n      ctx.scale(scale, scale);\n      const difference = currentValue - previousValue;\n      let progress = 0;\n      const step = (difference > 0 ? 1 : -1) * (Math.abs(difference) / 500);\n      const startY = 150 - (previousValue - 56000) / 1490 * 120;\n      const targetY = 150 - (currentValue - 56000) / 1490 * 120;\n      const rectWidth = 30;\n      const interval = setInterval(() => {\n        setElapsedTime(prev => prev + 20); // обновляем время на каждом шаге\n        progress += step * direction;\n        ctx.clearRect(0, 0, canvas.width / scale, canvas.height / scale);\n\n        // смещение всех прямоугольников влево\n        const updatedRectangles = rectangles.map(rect => ({\n          ...rect,\n          x: rect.x - rectWidth\n        }));\n\n        // рисование всех прямоугольников\n        updatedRectangles.forEach(rect => {\n          ctx.fillStyle = rect.color;\n          ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n        });\n\n        // рисование текущего прямоугольника\n        const height = Math.abs(progress);\n        const rectY = startY + progress;\n        ctx.fillStyle = difference > 0 ? 'green' : 'red';\n        ctx.fillRect(canvas.width / scale / 2 - 15, rectY, rectWidth, height);\n\n        // проверка, достигнут ли предел\n        if (direction === 1 && progress >= targetY - startY || direction === -1 && progress <= 0) {\n          setDirection(direction * -1); // смена направления движения\n        }\n\n        // остановка анимации через 10 секунд\n        if (elapsedTime >= 10000) {\n          clearInterval(interval);\n          setPreviousValue(currentValue);\n\n          // добавляем новый прямоугольник в массив\n          updatedRectangles.push({\n            x: canvas.width / scale / 2 - 15,\n            y: rectY,\n            width: rectWidth,\n            height: height,\n            color: difference > 0 ? 'green' : 'red'\n          });\n          setRectangles(updatedRectangles);\n        }\n      }, 20);\n      return () => clearInterval(interval);\n    }\n  }, [currentValue, previousValue, rectangles, direction, elapsedTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        width: 500,\n        height: 300,\n        border: '1px solid black',\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateValue,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px',\n        cursor: 'pointer',\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px'\n      },\n      children: \"Generate Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Page4, \"1bWq7YH5oRH+zAshh7rBYWldjIU=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Page4","_s","previousValue","setPreviousValue","currentValue","setCurrentValue","rectangles","setRectangles","direction","setDirection","elapsedTime","setElapsedTime","canvasRef","generateValue","newValue","Math","floor","random","canvas","current","ctx","getContext","scale","window","devicePixelRatio","width","height","difference","progress","step","abs","startY","targetY","rectWidth","interval","setInterval","prev","clearRect","updatedRectangles","map","rect","x","forEach","fillStyle","color","fillRect","y","rectY","clearInterval","push","style","display","flexDirection","alignItems","children","ref","border","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","fontSize","cursor","backgroundColor","borderRadius","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Page4 = () => {\n  const [previousValue, setPreviousValue] = useState(56000);\n  const [currentValue, setCurrentValue] = useState(56000);\n  const [rectangles, setRectangles] = useState([]); // массив для хранения прямоугольников\n  const [direction, setDirection] = useState(1); // направление движения\n  const [elapsedTime, setElapsedTime] = useState(0); // прошедшее время\n  const canvasRef = useRef(null);\n\n  const generateValue = () => {\n    const newValue = Math.floor(Math.random() * (56745 - 55255 + 1)) + 55255;\n    setCurrentValue(newValue);\n    setElapsedTime(0); // сброс времени при новом значении\n  };\n\n  useEffect(() => {\n    if (currentValue !== previousValue) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      const scale = window.devicePixelRatio || 1;\n      canvas.width = 500 * scale;\n      canvas.height = 300 * scale;\n      ctx.scale(scale, scale);\n\n      const difference = currentValue - previousValue;\n      let progress = 0;\n      const step = (difference > 0 ? 1 : -1) * (Math.abs(difference) / 500);\n      \n      const startY = 150 - ((previousValue - 56000) / 1490) * 120;\n      const targetY = 150 - ((currentValue - 56000) / 1490) * 120;\n      const rectWidth = 30;\n\n      const interval = setInterval(() => {\n        setElapsedTime((prev) => prev + 20); // обновляем время на каждом шаге\n        progress += step * direction;\n\n        ctx.clearRect(0, 0, canvas.width / scale, canvas.height / scale);\n\n        // смещение всех прямоугольников влево\n        const updatedRectangles = rectangles.map((rect) => ({\n          ...rect,\n          x: rect.x - rectWidth,\n        }));\n\n        // рисование всех прямоугольников\n        updatedRectangles.forEach((rect) => {\n          ctx.fillStyle = rect.color;\n          ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n        });\n\n        // рисование текущего прямоугольника\n        const height = Math.abs(progress);\n        const rectY = startY + progress;\n        ctx.fillStyle = difference > 0 ? 'green' : 'red';\n        ctx.fillRect(canvas.width / scale / 2 - 15, rectY, rectWidth, height);\n\n        // проверка, достигнут ли предел\n        if ((direction === 1 && progress >= targetY - startY) || (direction === -1 && progress <= 0)) {\n          setDirection(direction * -1); // смена направления движения\n        }\n\n        // остановка анимации через 10 секунд\n        if (elapsedTime >= 10000) {\n          clearInterval(interval);\n          setPreviousValue(currentValue);\n\n          // добавляем новый прямоугольник в массив\n          updatedRectangles.push({\n            x: canvas.width / scale / 2 - 15,\n            y: rectY,\n            width: rectWidth,\n            height: height,\n            color: difference > 0 ? 'green' : 'red',\n          });\n\n          setRectangles(updatedRectangles);\n        }\n      }, 20);\n\n      return () => clearInterval(interval);\n    }\n  }, [currentValue, previousValue, rectangles, direction, elapsedTime]);\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <canvas\n        ref={canvasRef}\n        style={{ width: 500, height: 300, border: '1px solid black', marginBottom: '20px' }}\n      ></canvas>\n      <button\n        onClick={generateValue}\n        style={{\n          padding: '10px 20px',\n          fontSize: '16px',\n          cursor: 'pointer',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px'\n        }}>\n        Generate Value\n      </button>\n    </div>\n  );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}