{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Page3.css';\nimport ConfettiCanvas from './ConfettiCanvas';\nimport LoadingScreen from './LoadingScreen';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Page3() {\n  _s();\n  const [value, setValue] = useState(0.00);\n  const [balance, setBalance] = useState(0.00);\n  const [bet, setBet] = useState('');\n  const [tickets, setTickets] = useState(9);\n  const [message, setMessage] = useState('Введите ставку');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [result, setResult] = useState(null);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [animateInput, setAnimateInput] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [timeLeft, setTimeLeft] = useState('');\n  const [resetTime, setResetTime] = useState(0);\n  const intervalRef = useRef(null);\n  const timeoutRef = useRef(null);\n  const navigate = useNavigate(); // Хук для навигации\n  const [circleSize, setCircleSize] = useState(0); // State для размера круга\n  const [isHolding, setIsHolding] = useState(false); // State для отслеживания удержания кнопки\n\n  const triggerHapticFeedback = () => {\n    if (window.Telegram.WebApp) {\n      window.Telegram.WebApp.HapticFeedback.selectionChanged();\n    } else if (navigator.vibrate) {\n      navigator.vibrate(50); // Для Android устройств\n    }\n  };\n  const triggerHapticFeedbackError = () => {\n    if (window.Telegram.WebApp) {\n      window.Telegram.WebApp.HapticFeedback.notificationOccurred(\"error\");\n    } else if (navigator.vibrate) {\n      navigator.vibrate(50); // Для Android устройств\n    }\n  };\n  const triggerHapticFeedbackSuccess = () => {\n    if (window.Telegram.WebApp) {\n      window.Telegram.WebApp.HapticFeedback.notificationOccurred(\"success\");\n    } else if (navigator.vibrate) {\n      navigator.vibrate(50); // Для Android устройств\n    }\n  };\n  useEffect(() => {\n    const {\n      Telegram\n    } = window;\n    if (Telegram.WebApp) {\n      Telegram.WebApp.BackButton.show();\n      Telegram.WebApp.BackButton.onClick(() => {\n        navigate('/page1'); // Переход на Page1 при нажатии на кнопку назад\n      });\n    }\n    return () => {\n      if (Telegram.WebApp) {\n        Telegram.WebApp.BackButton.offClick();\n        Telegram.WebApp.BackButton.hide();\n      }\n    };\n  }, [navigate]);\n  useEffect(() => {\n    const betAmount = parseFloat(bet);\n    if (bet === '') {\n      setMessage('Select your bet');\n    } else if (isNaN(betAmount) || betAmount <= 0 || betAmount > balance) {\n      setMessage('Not enough tokens');\n    } else if (!tickets) {\n      setMessage('Need more tickets');\n    } else {\n      setMessage('Hold on');\n    }\n  }, [bet, balance, tickets]);\n  useEffect(() => {\n    setAnimateInput(true);\n  }, []);\n  useEffect(() => {\n    const getTicketsFromCloud = () => {\n      window.Telegram.WebApp.CloudStorage.getItems(['tickets', 'resetTime'], (error, values) => {\n        if (error) {\n          console.error('Failed to get items from cloud storage:', error);\n        } else {\n          const savedTickets = values.tickets ? parseInt(values.tickets, 10) : 9;\n          setTickets(savedTickets);\n          const savedResetTime = values.resetTime;\n          setResetTime(savedResetTime);\n        }\n      });\n    };\n    getTicketsFromCloud();\n  }, []);\n  useEffect(() => {\n    const getInitialData = () => {\n      window.Telegram.WebApp.CloudStorage.getItems(['balance'], (error, result) => {\n        if (error) {\n          console.error('Failed to get initial data from cloud storage:', error);\n        } else {\n          const initialBalance = result.balance ? parseInt(result.balance, 10) : 0;\n          setBalance(initialBalance);\n        }\n      });\n    };\n    getInitialData();\n  }, []);\n  useEffect(() => {\n    const loadingTimeout = setTimeout(() => setLoading(false), 4000); // Hide loading screen after 4 seconds\n    return () => clearTimeout(loadingTimeout);\n  }, []);\n  useEffect(() => {\n    const calculateTimeLeft = () => {\n      const now = Date.now();\n      const difference = resetTime - now;\n      if (difference <= 0) {\n        setTickets(9);\n        const newResetTime = Date.now() + 8 * 60 * 60 * 1000;\n        setResetTime(newResetTime);\n        window.Telegram.WebApp.CloudStorage.setItem('tickets', '9', error => {\n          if (error) {\n            console.error('Failed to update tickets in cloud storage:', error);\n          }\n        });\n        window.Telegram.WebApp.CloudStorage.setItem('resetTime', newResetTime.toString(), error => {\n          if (error) {\n            console.error('Failed to update reset time in cloud storage:', error);\n          }\n        });\n      } else {\n        let hours = Math.floor(difference / (1000 * 60 * 60));\n        let minutes = Math.floor(difference % (1000 * 60 * 60) / (1000 * 60));\n        let seconds = Math.floor(difference % (1000 * 60) / 1000);\n        setTimeLeft(`${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`);\n      }\n    };\n    const timeInterval = setInterval(calculateTimeLeft, 1000);\n    return () => clearInterval(timeInterval);\n  }, [resetTime]);\n  const handle10 = cef => {\n    const betValue = Math.floor(balance * cef);\n    setBet(betValue);\n  };\n  const handleButtonPress = () => {\n    const betAmount = parseFloat(bet);\n    if (!isNaN(betAmount) && betAmount <= balance && betAmount > 0 && tickets > 0 && !isPlaying) {\n      setIsPlaying(true);\n      setValue(1.00);\n      setGameOver(false);\n      setResult(null);\n      setShowConfetti(false);\n      setTickets(prevTickets => {\n        const newTickets = prevTickets - 1;\n        window.Telegram.WebApp.CloudStorage.setItem('tickets', newTickets.toString(), (error, success) => {\n          if (error) {\n            console.error('Failed to update tickets in cloud storage:', error);\n          } else {\n            console.log('Tickets updated successfully in cloud storage:', success);\n          }\n        });\n        return newTickets;\n      });\n      setBalance(prevBalance => {\n        const newBalance = parseFloat((prevBalance - betAmount).toFixed(2));\n        return isNaN(newBalance) || newBalance < 0 ? 0 : newBalance;\n      });\n      intervalRef.current = setInterval(() => {\n        setValue(prevValue => parseFloat((prevValue + 0.01).toFixed(2)));\n        triggerHapticFeedback();\n      }, 100); // Увеличиваем коэффициент каждые 100 мс\n\n      const randomFactor = Math.random();\n      let randomTime;\n      if (randomFactor < 0.1) {\n        // 10% случаев - от 0 до 1000\n        randomTime = Math.floor(Math.random() * 1001);\n      } else if (randomFactor < 0.2) {\n        // Следующие 10% - от 1100 до 2000\n        randomTime = Math.floor(Math.random() * 901) + 1100;\n      } else if (randomFactor < 0.3) {\n        // Следующие 10% - от 2100 до 3000\n        randomTime = Math.floor(Math.random() * 901) + 2100;\n      } else if (randomFactor < 0.4) {\n        // Следующие 10% - от 3100 до 4000\n        randomTime = Math.floor(Math.random() * 901) + 30100;\n      } else if (randomFactor < 0.5) {\n        // Следующие 10% - от 4100 до 5000\n        randomTime = Math.floor(Math.random() * 901) + 4100;\n      } else if (randomFactor < 0.6) {\n        // Следующие 10% - от 5100 до 6000\n        randomTime = Math.floor(Math.random() * 901) + 55100;\n      } else if (randomFactor < 0.7) {\n        // Следующие 10% - от 6100 до 7000\n        randomTime = Math.floor(Math.random() * 901) + 6100;\n      } else if (randomFactor < 0.8) {\n        // Следующие 10% - от 7100 до 8000\n        randomTime = Math.floor(Math.random() * 901) + 7100;\n      } else if (randomFactor < 0.9) {\n        // Следующие 10% - от 8100 до 9000\n        randomTime = Math.floor(Math.random() * 901) + 8100;\n      } else {\n        // Последние 10% - от 9100 до 10000\n        randomTime = Math.floor(Math.random() * 901) + 9100;\n      }\n      timeoutRef.current = setTimeout(() => {\n        clearInterval(intervalRef.current);\n        setIsPlaying(false);\n        setGameOver(true);\n        setResult(value.toFixed(2));\n        const potentialWinnings = parseFloat((betAmount * value).toFixed(2));\n        const newBalance = parseFloat((balance + potentialWinnings).toFixed(2));\n        if (potentialWinnings > betAmount) {\n          triggerHapticFeedbackSuccess();\n          setShowConfetti(true);\n        } else {\n          triggerHapticFeedbackError();\n        }\n        setBalance(newBalance);\n        window.Telegram.WebApp.CloudStorage.setItem('balance', newBalance.toString(), (error, success) => {\n          if (error) {\n            console.error('Failed to update balance in cloud storage:', error);\n          } else {\n            console.log('Balance updated successfully in cloud storage:', success);\n          }\n        });\n      }, randomTime);\n    }\n  };\n  const handleButtonRelease = () => {\n    if (isPlaying && intervalRef.current) {\n      clearInterval(intervalRef.current);\n      setIsPlaying(false);\n      setGameOver(true);\n      setResult(value.toFixed(2));\n      const betAmount = parseFloat(bet);\n      const potentialWinnings = parseFloat((betAmount * value).toFixed(2));\n      const newBalance = parseFloat((balance + potentialWinnings).toFixed(2));\n      if (potentialWinnings > betAmount) {\n        triggerHapticFeedbackSuccess();\n        setShowConfetti(true);\n      } else {\n        triggerHapticFeedbackError();\n      }\n      setBalance(newBalance);\n      window.Telegram.WebApp.CloudStorage.setItem('balance', newBalance.toString(), (error, success) => {\n        if (error) {\n          console.error('Failed to update balance in cloud storage:', error);\n        } else {\n          console.log('Balance updated successfully in cloud storage:', success);\n        }\n      });\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    }\n  };\n  useEffect(() => {\n    if (isHolding) {\n      const increaseCircle = setInterval(() => {\n        setCircleSize(prevSize => prevSize + 10); // Увеличиваем размер круга каждые 100 мс\n      }, 100);\n      return () => clearInterval(increaseCircle);\n    } else {\n      setCircleSize(0); // Сбрасываем размер круга при отпускании\n    }\n  }, [isHolding]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `page3-container ${animateInput ? 'animate' : ''}`,\n    children: [loading && /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u0412\\u0430\\u0448 \\u0431\\u0430\\u043B\\u0430\\u043D\\u0441: \", balance.toFixed(2), \" $\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u041E\\u0441\\u0442\\u0430\\u043B\\u043E\\u0441\\u044C \\u043F\\u043E\\u043F\\u044B\\u0442\\u043E\\u043A: \", tickets, \" \", tickets === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u0412\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0447\\u0435\\u0440\\u0435\\u0437: \", timeLeft]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 57\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u0412\\u0430\\u0448 \\u043A\\u043E\\u044D\\u0444\\u0444\\u0438\\u0446\\u0438\\u0435\\u043D\\u0442: \", value.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: bet,\n        onChange: e => setBet(e.target.value),\n        className: `input-field ${animateInput ? 'animate' : ''}`,\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0442\\u0430\\u0432\\u043A\\u0443\",\n        disabled: isPlaying\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handle10(0.1),\n        children: \"10%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handle10(0.25),\n        children: \"25%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handle10(0.5),\n        children: \"50%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handle10(1),\n        children: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onMouseDown: () => {\n        setIsHolding(true);\n        handleButtonPress();\n      },\n      onMouseUp: () => {\n        setIsHolding(false);\n        handleButtonRelease();\n      },\n      className: \"play-button\",\n      disabled: tickets === 0 || message !== 'Hold on',\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle\",\n      style: {\n        width: circleSize,\n        height: circleSize\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), \" \", gameOver && result && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442: \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), showConfetti && /*#__PURE__*/_jsxDEV(ConfettiCanvas, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n}\n_s(Page3, \"/Fqa5R+WxoQFqW0oH9gPlfSXVv4=\", false, function () {\n  return [useNavigate];\n});\n_c = Page3;\nexport default Page3;\nvar _c;\n$RefreshReg$(_c, \"Page3\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ConfettiCanvas","LoadingScreen","useNavigate","jsxDEV","_jsxDEV","Page3","_s","value","setValue","balance","setBalance","bet","setBet","tickets","setTickets","message","setMessage","isPlaying","setIsPlaying","gameOver","setGameOver","result","setResult","showConfetti","setShowConfetti","animateInput","setAnimateInput","loading","setLoading","timeLeft","setTimeLeft","resetTime","setResetTime","intervalRef","timeoutRef","navigate","circleSize","setCircleSize","isHolding","setIsHolding","triggerHapticFeedback","window","Telegram","WebApp","HapticFeedback","selectionChanged","navigator","vibrate","triggerHapticFeedbackError","notificationOccurred","triggerHapticFeedbackSuccess","BackButton","show","onClick","offClick","hide","betAmount","parseFloat","isNaN","getTicketsFromCloud","CloudStorage","getItems","error","values","console","savedTickets","parseInt","savedResetTime","getInitialData","initialBalance","loadingTimeout","setTimeout","clearTimeout","calculateTimeLeft","now","Date","difference","newResetTime","setItem","toString","hours","Math","floor","minutes","seconds","padStart","timeInterval","setInterval","clearInterval","handle10","cef","betValue","handleButtonPress","prevTickets","newTickets","success","log","prevBalance","newBalance","toFixed","current","prevValue","randomFactor","random","randomTime","potentialWinnings","handleButtonRelease","increaseCircle","prevSize","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","disabled","onMouseDown","onMouseUp","style","width","height","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page3.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './Page3.css';\nimport ConfettiCanvas from './ConfettiCanvas';\nimport LoadingScreen from './LoadingScreen';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Page3() {\n  const [value, setValue] = useState(0.00);\n  const [balance, setBalance] = useState(0.00);\n  const [bet, setBet] = useState('');\n  const [tickets, setTickets] = useState(9);\n  const [message, setMessage] = useState('Введите ставку');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [result, setResult] = useState(null);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [animateInput, setAnimateInput] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [timeLeft, setTimeLeft] = useState('');\n  const [resetTime, setResetTime] = useState(0); \n\n  const intervalRef = useRef(null);\n  const timeoutRef = useRef(null);\n  const navigate = useNavigate(); // Хук для навигации\n  const [circleSize, setCircleSize] = useState(0); // State для размера круга\n  const [isHolding, setIsHolding] = useState(false); // State для отслеживания удержания кнопки\n\n  const triggerHapticFeedback = () => {\n    if (window.Telegram.WebApp) {\n      window.Telegram.WebApp.HapticFeedback.selectionChanged();\n    } else if (navigator.vibrate) {\n      navigator.vibrate(50); // Для Android устройств\n    }\n  };\n\n  const triggerHapticFeedbackError = () => {\n    if (window.Telegram.WebApp) {\n      window.Telegram.WebApp.HapticFeedback.notificationOccurred(\"error\");\n    } else if (navigator.vibrate) {\n      navigator.vibrate(50); // Для Android устройств\n    }\n  };\n\n  const triggerHapticFeedbackSuccess = () => {\n    if (window.Telegram.WebApp) {\n      window.Telegram.WebApp.HapticFeedback.notificationOccurred(\"success\");\n    } else if (navigator.vibrate) {\n      navigator.vibrate(50); // Для Android устройств\n    }\n  };\n\n  useEffect(() => {\n    const { Telegram } = window;\n    if (Telegram.WebApp) {\n      Telegram.WebApp.BackButton.show();\n      Telegram.WebApp.BackButton.onClick(() => {\n        navigate('/page1'); // Переход на Page1 при нажатии на кнопку назад\n      });\n    }\n\n    return () => {\n      if (Telegram.WebApp) {\n        Telegram.WebApp.BackButton.offClick();\n        Telegram.WebApp.BackButton.hide();\n      }\n    };\n  }, [navigate]);\n\n  useEffect(() => {\n    const betAmount = parseFloat(bet);\n    if (bet === '') {\n      setMessage('Select your bet');\n    } else if (isNaN(betAmount) || betAmount <= 0 || betAmount > balance) {\n      setMessage('Not enough tokens');\n    } else if (!tickets) {\n      setMessage('Need more tickets');\n    } else {\n      setMessage('Hold on');\n    }\n  }, [bet, balance, tickets]);\n\n  useEffect(() => {\n    setAnimateInput(true);\n  }, []);\n\n  useEffect(() => {\n    const getTicketsFromCloud = () => {\n      window.Telegram.WebApp.CloudStorage.getItems(['tickets', 'resetTime'], (error, values) => {\n        if (error) {\n          console.error('Failed to get items from cloud storage:', error);\n        } else {\n          const savedTickets = values.tickets ? parseInt(values.tickets, 10) : 9;\n          setTickets(savedTickets);\n\n          const savedResetTime = values.resetTime ;\n          setResetTime(savedResetTime);\n        }\n      });\n    };\n\n    getTicketsFromCloud();\n  }, []);\n\n  useEffect(() => {\n    const getInitialData = () => {\n      window.Telegram.WebApp.CloudStorage.getItems(['balance'], (error, result) => {\n        if (error) {\n          console.error('Failed to get initial data from cloud storage:', error);\n        } else {\n          const initialBalance = result.balance ? parseInt(result.balance, 10) : 0;\n\n          setBalance(initialBalance);\n\n        }\n      });\n    };\n\n    getInitialData();\n  }, []);\n\n  useEffect(() => {\n    const loadingTimeout = setTimeout(() => setLoading(false), 4000); // Hide loading screen after 4 seconds\n    return () => clearTimeout(loadingTimeout);\n  }, []);\n\n  useEffect(() => {\n    const calculateTimeLeft = () => {\n      const now = Date.now();\n      const difference = resetTime - now;\n\n      if (difference <= 0) {\n        setTickets(9);\n        const newResetTime = Date.now() + 8 * 60 * 60 * 1000;\n        setResetTime(newResetTime);\n\n        window.Telegram.WebApp.CloudStorage.setItem('tickets', '9', (error) => {\n          if (error) {\n            console.error('Failed to update tickets in cloud storage:', error);\n          }\n        });\n\n        window.Telegram.WebApp.CloudStorage.setItem('resetTime', newResetTime.toString(), (error) => {\n          if (error) {\n            console.error('Failed to update reset time in cloud storage:', error);\n          }\n        });\n      } else {\n        let hours = Math.floor(difference / (1000 * 60 * 60));\n        let minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n        let seconds = Math.floor((difference % (1000 * 60)) / 1000);\n\n        setTimeLeft(`${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`);\n      }\n    };\n\n    const timeInterval = setInterval(calculateTimeLeft, 1000);\n\n    return () => clearInterval(timeInterval);\n  }, [resetTime]);\n\n  const handle10 = (cef) => {\n    const betValue = Math.floor(balance * cef);\n    setBet(betValue);\n  };\n\n  const handleButtonPress = () => {\n    const betAmount = parseFloat(bet);\n    if (!isNaN(betAmount) && betAmount <= balance && betAmount > 0 && tickets > 0 && !isPlaying) {\n      setIsPlaying(true);\n      setValue(1.00);\n      setGameOver(false);\n      setResult(null);\n      setShowConfetti(false);\n      setTickets((prevTickets) => {\n        const newTickets = prevTickets - 1;\n        window.Telegram.WebApp.CloudStorage.setItem('tickets', newTickets.toString(), (error, success) => {\n          if (error) {\n            console.error('Failed to update tickets in cloud storage:', error);\n          } else {\n            console.log('Tickets updated successfully in cloud storage:', success);\n          }\n        });\n        return newTickets;\n      });\n      setBalance((prevBalance) => {\n        const newBalance = parseFloat((prevBalance - betAmount).toFixed(2));\n        return isNaN(newBalance) || newBalance < 0 ? 0 : newBalance;\n      });\n\n      intervalRef.current = setInterval(() => {\n        setValue((prevValue) => parseFloat((prevValue + 0.01).toFixed(2)));\n        triggerHapticFeedback();\n      }, 100); // Увеличиваем коэффициент каждые 100 мс\n\n      const randomFactor = Math.random();\n      let randomTime;\n\n      if (randomFactor < 0.1) {\n        // 10% случаев - от 0 до 1000\n        randomTime = Math.floor(Math.random() * 1001);\n      } else if (randomFactor < 0.2) {\n        // Следующие 10% - от 1100 до 2000\n        randomTime = Math.floor(Math.random() * 901) + 1100;\n      } else if (randomFactor < 0.3) {\n        // Следующие 10% - от 2100 до 3000\n        randomTime = Math.floor(Math.random() * 901) + 2100;\n      } else if (randomFactor < 0.4) {\n        // Следующие 10% - от 3100 до 4000\n        randomTime = Math.floor(Math.random() * 901) + 30100;\n      } else if (randomFactor < 0.5) {\n        // Следующие 10% - от 4100 до 5000\n        randomTime = Math.floor(Math.random() * 901) + 4100;\n      } else if (randomFactor < 0.6) {\n        // Следующие 10% - от 5100 до 6000\n        randomTime = Math.floor(Math.random() * 901) + 55100;\n      } else if (randomFactor < 0.7) {\n        // Следующие 10% - от 6100 до 7000\n        randomTime = Math.floor(Math.random() * 901) + 6100;\n      } else if (randomFactor < 0.8) {\n        // Следующие 10% - от 7100 до 8000\n        randomTime = Math.floor(Math.random() * 901) + 7100;\n      } else if (randomFactor < 0.9) {\n        // Следующие 10% - от 8100 до 9000\n        randomTime = Math.floor(Math.random() * 901) + 8100;\n      } else {\n        // Последние 10% - от 9100 до 10000\n        randomTime = Math.floor(Math.random() * 901) + 9100;\n      }\n\n      timeoutRef.current = setTimeout(() => {\n        clearInterval(intervalRef.current);\n        setIsPlaying(false);\n        setGameOver(true);\n        setResult(value.toFixed(2));\n\n        const potentialWinnings = parseFloat((betAmount * value).toFixed(2));\n        const newBalance = parseFloat((balance + potentialWinnings).toFixed(2));\n        if (potentialWinnings > betAmount) {\n          triggerHapticFeedbackSuccess();\n          setShowConfetti(true);\n        } else {\n          triggerHapticFeedbackError();\n        }\n        setBalance(newBalance);\n\n        window.Telegram.WebApp.CloudStorage.setItem('balance', newBalance.toString(), (error, success) => {\n          if (error) {\n            console.error('Failed to update balance in cloud storage:', error);\n          } else {\n            console.log('Balance updated successfully in cloud storage:', success);\n          }\n        });\n      }, randomTime);\n    }\n  };\n\n  const handleButtonRelease = () => {\n    if (isPlaying && intervalRef.current) {\n      clearInterval(intervalRef.current);\n      setIsPlaying(false);\n      setGameOver(true);\n      setResult(value.toFixed(2));\n\n      const betAmount = parseFloat(bet);\n      const potentialWinnings = parseFloat((betAmount * value).toFixed(2));\n      const newBalance = parseFloat((balance + potentialWinnings).toFixed(2));\n      if (potentialWinnings > betAmount) {\n        triggerHapticFeedbackSuccess();\n        setShowConfetti(true);\n      } else {\n        triggerHapticFeedbackError();\n      }\n      setBalance(newBalance);\n\n      window.Telegram.WebApp.CloudStorage.setItem('balance', newBalance.toString(), (error, success) => {\n        if (error) {\n          console.error('Failed to update balance in cloud storage:', error);\n        } else {\n          console.log('Balance updated successfully in cloud storage:', success);\n        }\n      });\n\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (isHolding) {\n      const increaseCircle = setInterval(() => {\n        setCircleSize((prevSize) => prevSize + 10); // Увеличиваем размер круга каждые 100 мс\n      }, 100);\n\n      return () => clearInterval(increaseCircle);\n    } else {\n      setCircleSize(0); // Сбрасываем размер круга при отпускании\n    }\n  }, [isHolding]);\n\n  return (\n    <div className={`page3-container ${animateInput ? 'animate' : ''}`}>\n      {loading && <LoadingScreen />}\n      <h1>Ваш баланс: {balance.toFixed(2)} $</h1>\n      <h2>Осталось попыток: {tickets} {tickets === 0 && <span>Восстановление через: {timeLeft}</span>}</h2>\n      <h2>Ваш коэффициент: {value.toFixed(2)}</h2>\n      <div className=\"input-group\">\n        <input\n          type=\"number\"\n          value={bet}\n          onChange={(e) => setBet(e.target.value)}\n          className={`input-field ${animateInput ? 'animate' : ''}`}\n          placeholder=\"Введите ставку\"\n          disabled={isPlaying}\n        />\n        <button onClick={() => handle10(0.1)}>10%</button>\n        <button onClick={() => handle10(0.25)}>25%</button>\n        <button onClick={() => handle10(0.5)}>50%</button>\n        <button onClick={() => handle10(1)}>100%</button>\n      </div>\n      <button\n        onMouseDown={() => {\n          setIsHolding(true);\n          handleButtonPress();\n        }}\n        onMouseUp={() => {\n          setIsHolding(false);\n          handleButtonRelease();\n        }}\n        className=\"play-button\"\n        disabled={tickets === 0 || message !== 'Hold on'}\n      >\n        {message}\n      </button>\n      <div className=\"circle\" style={{ width: circleSize, height: circleSize }}></div> {/* Круг */}\n      {gameOver && result && (\n        <div>\n          <h3>Результат: {result}</h3>\n          {showConfetti && <ConfettiCanvas />}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Page3;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,aAAa;AACpB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,GAAG,EAAEC,MAAM,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,gBAAgB,CAAC;EACxD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACwB,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC8B,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAMoC,WAAW,GAAGlC,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMmC,UAAU,GAAGnC,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMoC,QAAQ,GAAGjC,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACkC,UAAU,EAAEC,aAAa,CAAC,GAAGxC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACjD,MAAM,CAACyC,SAAS,EAAEC,YAAY,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD,MAAM2C,qBAAqB,GAAGA,CAAA,KAAM;IAClC,IAAIC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;MAC1BF,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACC,cAAc,CAACC,gBAAgB,CAAC,CAAC;IAC1D,CAAC,MAAM,IAAIC,SAAS,CAACC,OAAO,EAAE;MAC5BD,SAAS,CAACC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACzB;EACF,CAAC;EAED,MAAMC,0BAA0B,GAAGA,CAAA,KAAM;IACvC,IAAIP,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;MAC1BF,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACC,cAAc,CAACK,oBAAoB,CAAC,OAAO,CAAC;IACrE,CAAC,MAAM,IAAIH,SAAS,CAACC,OAAO,EAAE;MAC5BD,SAAS,CAACC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACzB;EACF,CAAC;EAED,MAAMG,4BAA4B,GAAGA,CAAA,KAAM;IACzC,IAAIT,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;MAC1BF,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACC,cAAc,CAACK,oBAAoB,CAAC,SAAS,CAAC;IACvE,CAAC,MAAM,IAAIH,SAAS,CAACC,OAAO,EAAE;MAC5BD,SAAS,CAACC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACzB;EACF,CAAC;EAEDjD,SAAS,CAAC,MAAM;IACd,MAAM;MAAE4C;IAAS,CAAC,GAAGD,MAAM;IAC3B,IAAIC,QAAQ,CAACC,MAAM,EAAE;MACnBD,QAAQ,CAACC,MAAM,CAACQ,UAAU,CAACC,IAAI,CAAC,CAAC;MACjCV,QAAQ,CAACC,MAAM,CAACQ,UAAU,CAACE,OAAO,CAAC,MAAM;QACvClB,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC;IACJ;IAEA,OAAO,MAAM;MACX,IAAIO,QAAQ,CAACC,MAAM,EAAE;QACnBD,QAAQ,CAACC,MAAM,CAACQ,UAAU,CAACG,QAAQ,CAAC,CAAC;QACrCZ,QAAQ,CAACC,MAAM,CAACQ,UAAU,CAACI,IAAI,CAAC,CAAC;MACnC;IACF,CAAC;EACH,CAAC,EAAE,CAACpB,QAAQ,CAAC,CAAC;EAEdrC,SAAS,CAAC,MAAM;IACd,MAAM0D,SAAS,GAAGC,UAAU,CAAC9C,GAAG,CAAC;IACjC,IAAIA,GAAG,KAAK,EAAE,EAAE;MACdK,UAAU,CAAC,iBAAiB,CAAC;IAC/B,CAAC,MAAM,IAAI0C,KAAK,CAACF,SAAS,CAAC,IAAIA,SAAS,IAAI,CAAC,IAAIA,SAAS,GAAG/C,OAAO,EAAE;MACpEO,UAAU,CAAC,mBAAmB,CAAC;IACjC,CAAC,MAAM,IAAI,CAACH,OAAO,EAAE;MACnBG,UAAU,CAAC,mBAAmB,CAAC;IACjC,CAAC,MAAM;MACLA,UAAU,CAAC,SAAS,CAAC;IACvB;EACF,CAAC,EAAE,CAACL,GAAG,EAAEF,OAAO,EAAEI,OAAO,CAAC,CAAC;EAE3Bf,SAAS,CAAC,MAAM;IACd4B,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN5B,SAAS,CAAC,MAAM;IACd,MAAM6D,mBAAmB,GAAGA,CAAA,KAAM;MAChClB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACiB,YAAY,CAACC,QAAQ,CAAC,CAAC,SAAS,EAAE,WAAW,CAAC,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;QACxF,IAAID,KAAK,EAAE;UACTE,OAAO,CAACF,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;QACjE,CAAC,MAAM;UACL,MAAMG,YAAY,GAAGF,MAAM,CAAClD,OAAO,GAAGqD,QAAQ,CAACH,MAAM,CAAClD,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC;UACtEC,UAAU,CAACmD,YAAY,CAAC;UAExB,MAAME,cAAc,GAAGJ,MAAM,CAAChC,SAAS;UACvCC,YAAY,CAACmC,cAAc,CAAC;QAC9B;MACF,CAAC,CAAC;IACJ,CAAC;IAEDR,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN7D,SAAS,CAAC,MAAM;IACd,MAAMsE,cAAc,GAAGA,CAAA,KAAM;MAC3B3B,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACiB,YAAY,CAACC,QAAQ,CAAC,CAAC,SAAS,CAAC,EAAE,CAACC,KAAK,EAAEzC,MAAM,KAAK;QAC3E,IAAIyC,KAAK,EAAE;UACTE,OAAO,CAACF,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;QACxE,CAAC,MAAM;UACL,MAAMO,cAAc,GAAGhD,MAAM,CAACZ,OAAO,GAAGyD,QAAQ,CAAC7C,MAAM,CAACZ,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC;UAExEC,UAAU,CAAC2D,cAAc,CAAC;QAE5B;MACF,CAAC,CAAC;IACJ,CAAC;IAEDD,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAENtE,SAAS,CAAC,MAAM;IACd,MAAMwE,cAAc,GAAGC,UAAU,CAAC,MAAM3C,UAAU,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IAClE,OAAO,MAAM4C,YAAY,CAACF,cAAc,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAENxE,SAAS,CAAC,MAAM;IACd,MAAM2E,iBAAiB,GAAGA,CAAA,KAAM;MAC9B,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;MACtB,MAAME,UAAU,GAAG7C,SAAS,GAAG2C,GAAG;MAElC,IAAIE,UAAU,IAAI,CAAC,EAAE;QACnB9D,UAAU,CAAC,CAAC,CAAC;QACb,MAAM+D,YAAY,GAAGF,IAAI,CAACD,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;QACpD1C,YAAY,CAAC6C,YAAY,CAAC;QAE1BpC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACiB,YAAY,CAACkB,OAAO,CAAC,SAAS,EAAE,GAAG,EAAGhB,KAAK,IAAK;UACrE,IAAIA,KAAK,EAAE;YACTE,OAAO,CAACF,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;UACpE;QACF,CAAC,CAAC;QAEFrB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACiB,YAAY,CAACkB,OAAO,CAAC,WAAW,EAAED,YAAY,CAACE,QAAQ,CAAC,CAAC,EAAGjB,KAAK,IAAK;UAC3F,IAAIA,KAAK,EAAE;YACTE,OAAO,CAACF,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;UACvE;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,IAAIkB,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACN,UAAU,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACrD,IAAIO,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEN,UAAU,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;QACvE,IAAIQ,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEN,UAAU,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,IAAI,CAAC;QAE3D9C,WAAW,CAAC,GAAGkD,KAAK,CAACD,QAAQ,CAAC,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,OAAO,CAACJ,QAAQ,CAAC,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,OAAO,CAACL,QAAQ,CAAC,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC;MACnI;IACF,CAAC;IAED,MAAMC,YAAY,GAAGC,WAAW,CAACd,iBAAiB,EAAE,IAAI,CAAC;IAEzD,OAAO,MAAMe,aAAa,CAACF,YAAY,CAAC;EAC1C,CAAC,EAAE,CAACvD,SAAS,CAAC,CAAC;EAEf,MAAM0D,QAAQ,GAAIC,GAAG,IAAK;IACxB,MAAMC,QAAQ,GAAGV,IAAI,CAACC,KAAK,CAACzE,OAAO,GAAGiF,GAAG,CAAC;IAC1C9E,MAAM,CAAC+E,QAAQ,CAAC;EAClB,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMpC,SAAS,GAAGC,UAAU,CAAC9C,GAAG,CAAC;IACjC,IAAI,CAAC+C,KAAK,CAACF,SAAS,CAAC,IAAIA,SAAS,IAAI/C,OAAO,IAAI+C,SAAS,GAAG,CAAC,IAAI3C,OAAO,GAAG,CAAC,IAAI,CAACI,SAAS,EAAE;MAC3FC,YAAY,CAAC,IAAI,CAAC;MAClBV,QAAQ,CAAC,IAAI,CAAC;MACdY,WAAW,CAAC,KAAK,CAAC;MAClBE,SAAS,CAAC,IAAI,CAAC;MACfE,eAAe,CAAC,KAAK,CAAC;MACtBV,UAAU,CAAE+E,WAAW,IAAK;QAC1B,MAAMC,UAAU,GAAGD,WAAW,GAAG,CAAC;QAClCpD,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACiB,YAAY,CAACkB,OAAO,CAAC,SAAS,EAAEgB,UAAU,CAACf,QAAQ,CAAC,CAAC,EAAE,CAACjB,KAAK,EAAEiC,OAAO,KAAK;UAChG,IAAIjC,KAAK,EAAE;YACTE,OAAO,CAACF,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;UACpE,CAAC,MAAM;YACLE,OAAO,CAACgC,GAAG,CAAC,gDAAgD,EAAED,OAAO,CAAC;UACxE;QACF,CAAC,CAAC;QACF,OAAOD,UAAU;MACnB,CAAC,CAAC;MACFpF,UAAU,CAAEuF,WAAW,IAAK;QAC1B,MAAMC,UAAU,GAAGzC,UAAU,CAAC,CAACwC,WAAW,GAAGzC,SAAS,EAAE2C,OAAO,CAAC,CAAC,CAAC,CAAC;QACnE,OAAOzC,KAAK,CAACwC,UAAU,CAAC,IAAIA,UAAU,GAAG,CAAC,GAAG,CAAC,GAAGA,UAAU;MAC7D,CAAC,CAAC;MAEFjE,WAAW,CAACmE,OAAO,GAAGb,WAAW,CAAC,MAAM;QACtC/E,QAAQ,CAAE6F,SAAS,IAAK5C,UAAU,CAAC,CAAC4C,SAAS,GAAG,IAAI,EAAEF,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE3D,qBAAqB,CAAC,CAAC;MACzB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;MAET,MAAM8D,YAAY,GAAGrB,IAAI,CAACsB,MAAM,CAAC,CAAC;MAClC,IAAIC,UAAU;MAEd,IAAIF,YAAY,GAAG,GAAG,EAAE;QACtB;QACAE,UAAU,GAAGvB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACsB,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;MAC/C,CAAC,MAAM,IAAID,YAAY,GAAG,GAAG,EAAE;QAC7B;QACAE,UAAU,GAAGvB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACsB,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI;MACrD,CAAC,MAAM,IAAID,YAAY,GAAG,GAAG,EAAE;QAC7B;QACAE,UAAU,GAAGvB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACsB,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI;MACrD,CAAC,MAAM,IAAID,YAAY,GAAG,GAAG,EAAE;QAC7B;QACAE,UAAU,GAAGvB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACsB,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK;MACtD,CAAC,MAAM,IAAID,YAAY,GAAG,GAAG,EAAE;QAC7B;QACAE,UAAU,GAAGvB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACsB,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI;MACrD,CAAC,MAAM,IAAID,YAAY,GAAG,GAAG,EAAE;QAC7B;QACAE,UAAU,GAAGvB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACsB,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK;MACtD,CAAC,MAAM,IAAID,YAAY,GAAG,GAAG,EAAE;QAC7B;QACAE,UAAU,GAAGvB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACsB,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI;MACrD,CAAC,MAAM,IAAID,YAAY,GAAG,GAAG,EAAE;QAC7B;QACAE,UAAU,GAAGvB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACsB,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI;MACrD,CAAC,MAAM,IAAID,YAAY,GAAG,GAAG,EAAE;QAC7B;QACAE,UAAU,GAAGvB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACsB,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI;MACrD,CAAC,MAAM;QACL;QACAC,UAAU,GAAGvB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACsB,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI;MACrD;MAEArE,UAAU,CAACkE,OAAO,GAAG7B,UAAU,CAAC,MAAM;QACpCiB,aAAa,CAACvD,WAAW,CAACmE,OAAO,CAAC;QAClClF,YAAY,CAAC,KAAK,CAAC;QACnBE,WAAW,CAAC,IAAI,CAAC;QACjBE,SAAS,CAACf,KAAK,CAAC4F,OAAO,CAAC,CAAC,CAAC,CAAC;QAE3B,MAAMM,iBAAiB,GAAGhD,UAAU,CAAC,CAACD,SAAS,GAAGjD,KAAK,EAAE4F,OAAO,CAAC,CAAC,CAAC,CAAC;QACpE,MAAMD,UAAU,GAAGzC,UAAU,CAAC,CAAChD,OAAO,GAAGgG,iBAAiB,EAAEN,OAAO,CAAC,CAAC,CAAC,CAAC;QACvE,IAAIM,iBAAiB,GAAGjD,SAAS,EAAE;UACjCN,4BAA4B,CAAC,CAAC;UAC9B1B,eAAe,CAAC,IAAI,CAAC;QACvB,CAAC,MAAM;UACLwB,0BAA0B,CAAC,CAAC;QAC9B;QACAtC,UAAU,CAACwF,UAAU,CAAC;QAEtBzD,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACiB,YAAY,CAACkB,OAAO,CAAC,SAAS,EAAEoB,UAAU,CAACnB,QAAQ,CAAC,CAAC,EAAE,CAACjB,KAAK,EAAEiC,OAAO,KAAK;UAChG,IAAIjC,KAAK,EAAE;YACTE,OAAO,CAACF,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;UACpE,CAAC,MAAM;YACLE,OAAO,CAACgC,GAAG,CAAC,gDAAgD,EAAED,OAAO,CAAC;UACxE;QACF,CAAC,CAAC;MACJ,CAAC,EAAES,UAAU,CAAC;IAChB;EACF,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIzF,SAAS,IAAIgB,WAAW,CAACmE,OAAO,EAAE;MACpCZ,aAAa,CAACvD,WAAW,CAACmE,OAAO,CAAC;MAClClF,YAAY,CAAC,KAAK,CAAC;MACnBE,WAAW,CAAC,IAAI,CAAC;MACjBE,SAAS,CAACf,KAAK,CAAC4F,OAAO,CAAC,CAAC,CAAC,CAAC;MAE3B,MAAM3C,SAAS,GAAGC,UAAU,CAAC9C,GAAG,CAAC;MACjC,MAAM8F,iBAAiB,GAAGhD,UAAU,CAAC,CAACD,SAAS,GAAGjD,KAAK,EAAE4F,OAAO,CAAC,CAAC,CAAC,CAAC;MACpE,MAAMD,UAAU,GAAGzC,UAAU,CAAC,CAAChD,OAAO,GAAGgG,iBAAiB,EAAEN,OAAO,CAAC,CAAC,CAAC,CAAC;MACvE,IAAIM,iBAAiB,GAAGjD,SAAS,EAAE;QACjCN,4BAA4B,CAAC,CAAC;QAC9B1B,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,MAAM;QACLwB,0BAA0B,CAAC,CAAC;MAC9B;MACAtC,UAAU,CAACwF,UAAU,CAAC;MAEtBzD,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACiB,YAAY,CAACkB,OAAO,CAAC,SAAS,EAAEoB,UAAU,CAACnB,QAAQ,CAAC,CAAC,EAAE,CAACjB,KAAK,EAAEiC,OAAO,KAAK;QAChG,IAAIjC,KAAK,EAAE;UACTE,OAAO,CAACF,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;QACpE,CAAC,MAAM;UACLE,OAAO,CAACgC,GAAG,CAAC,gDAAgD,EAAED,OAAO,CAAC;QACxE;MACF,CAAC,CAAC;MAEF,IAAI7D,UAAU,CAACkE,OAAO,EAAE;QACtB5B,YAAY,CAACtC,UAAU,CAACkE,OAAO,CAAC;MAClC;IACF;EACF,CAAC;EAEDtG,SAAS,CAAC,MAAM;IACd,IAAIwC,SAAS,EAAE;MACb,MAAMqE,cAAc,GAAGpB,WAAW,CAAC,MAAM;QACvClD,aAAa,CAAEuE,QAAQ,IAAKA,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC;MAC9C,CAAC,EAAE,GAAG,CAAC;MAEP,OAAO,MAAMpB,aAAa,CAACmB,cAAc,CAAC;IAC5C,CAAC,MAAM;MACLtE,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACC,SAAS,CAAC,CAAC;EAEf,oBACElC,OAAA;IAAKyG,SAAS,EAAE,mBAAmBpF,YAAY,GAAG,SAAS,GAAG,EAAE,EAAG;IAAAqF,QAAA,GAChEnF,OAAO,iBAAIvB,OAAA,CAACH,aAAa;MAAA8G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7B9G,OAAA;MAAA0G,QAAA,GAAI,2DAAY,EAACrG,OAAO,CAAC0F,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3C9G,OAAA;MAAA0G,QAAA,GAAI,+FAAkB,EAACjG,OAAO,EAAC,GAAC,EAACA,OAAO,KAAK,CAAC,iBAAIT,OAAA;QAAA0G,QAAA,GAAM,uHAAsB,EAACjF,QAAQ;MAAA;QAAAkF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrG9G,OAAA;MAAA0G,QAAA,GAAI,yFAAiB,EAACvG,KAAK,CAAC4F,OAAO,CAAC,CAAC,CAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5C9G,OAAA;MAAKyG,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B1G,OAAA;QACE+G,IAAI,EAAC,QAAQ;QACb5G,KAAK,EAAEI,GAAI;QACXyG,QAAQ,EAAGC,CAAC,IAAKzG,MAAM,CAACyG,CAAC,CAACC,MAAM,CAAC/G,KAAK,CAAE;QACxCsG,SAAS,EAAE,eAAepF,YAAY,GAAG,SAAS,GAAG,EAAE,EAAG;QAC1D8F,WAAW,EAAC,iFAAgB;QAC5BC,QAAQ,EAAEvG;MAAU;QAAA8F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACF9G,OAAA;QAAQiD,OAAO,EAAEA,CAAA,KAAMoC,QAAQ,CAAC,GAAG,CAAE;QAAAqB,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClD9G,OAAA;QAAQiD,OAAO,EAAEA,CAAA,KAAMoC,QAAQ,CAAC,IAAI,CAAE;QAAAqB,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnD9G,OAAA;QAAQiD,OAAO,EAAEA,CAAA,KAAMoC,QAAQ,CAAC,GAAG,CAAE;QAAAqB,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClD9G,OAAA;QAAQiD,OAAO,EAAEA,CAAA,KAAMoC,QAAQ,CAAC,CAAC,CAAE;QAAAqB,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACN9G,OAAA;MACEqH,WAAW,EAAEA,CAAA,KAAM;QACjBlF,YAAY,CAAC,IAAI,CAAC;QAClBqD,iBAAiB,CAAC,CAAC;MACrB,CAAE;MACF8B,SAAS,EAAEA,CAAA,KAAM;QACfnF,YAAY,CAAC,KAAK,CAAC;QACnBmE,mBAAmB,CAAC,CAAC;MACvB,CAAE;MACFG,SAAS,EAAC,aAAa;MACvBW,QAAQ,EAAE3G,OAAO,KAAK,CAAC,IAAIE,OAAO,KAAK,SAAU;MAAA+F,QAAA,EAEhD/F;IAAO;MAAAgG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACT9G,OAAA;MAAKyG,SAAS,EAAC,QAAQ;MAACc,KAAK,EAAE;QAAEC,KAAK,EAAExF,UAAU;QAAEyF,MAAM,EAAEzF;MAAW;IAAE;MAAA2E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,KAAC,EAChF/F,QAAQ,IAAIE,MAAM,iBACjBjB,OAAA;MAAA0G,QAAA,gBACE1G,OAAA;QAAA0G,QAAA,GAAI,0DAAW,EAACzF,MAAM;MAAA;QAAA0F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC3B3F,YAAY,iBAAInB,OAAA,CAACJ,cAAc;QAAA+G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC5G,EAAA,CAjVQD,KAAK;EAAA,QAiBKH,WAAW;AAAA;AAAA4H,EAAA,GAjBrBzH,KAAK;AAmVd,eAAeA,KAAK;AAAC,IAAAyH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}