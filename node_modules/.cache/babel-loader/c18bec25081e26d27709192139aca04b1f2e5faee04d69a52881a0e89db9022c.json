{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const [previousValue, setPreviousValue] = useState(56000);\n  const [currentValue, setCurrentValue] = useState(56000);\n  const [rectangles, setRectangles] = useState([]);\n  const [viewOffsetY, setViewOffsetY] = useState(0); // Смещение области видимости по Y\n  const canvasRef = useRef(null);\n  const generateValue = () => {\n    const newValue = Math.floor(Math.random() * (56345 - 55600 + 1)) + 55600;\n    setCurrentValue(newValue);\n  };\n  useEffect(() => {\n    if (currentValue !== previousValue) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const scale = window.devicePixelRatio || 1;\n      const canvasWidth = 500;\n      const canvasHeight = 1500; // Высота большого холста\n      canvas.width = canvasWidth * scale;\n      canvas.height = canvasHeight * scale;\n      ctx.scale(scale, scale);\n      const difference = currentValue - previousValue;\n      const step = difference > 0 ? 1 : -1;\n      let progress = 0;\n      const startY = canvasHeight / 2 - viewOffsetY - (previousValue - 56000) / 345 * 120;\n      const targetY = canvasHeight / 2 - viewOffsetY - (currentValue - 56000) / 345 * 120;\n      const rectWidth = 30;\n      const interval = setInterval(() => {\n        progress += step;\n        ctx.clearRect(0, 0, canvasWidth, 300);\n\n        // Рисуем все прямоугольники, смещенные на viewOffsetY\n        rectangles.forEach(rect => {\n          ctx.fillStyle = rect.color;\n          ctx.fillRect(rect.x, rect.y - viewOffsetY, rect.width, rect.height);\n        });\n\n        // Рисуем текущий прямоугольник\n        const height = Math.abs(progress);\n        const rectY = difference > 0 ? startY - height : startY;\n        ctx.fillStyle = difference > 0 ? 'green' : 'red';\n        ctx.fillRect(canvasWidth / 2 - 15, rectY, rectWidth, height);\n        if (Math.abs(progress) >= Math.abs(targetY - startY)) {\n          clearInterval(interval);\n          const newRect = {\n            x: canvasWidth / 2 - 15,\n            y: rectY,\n            width: rectWidth,\n            height: height,\n            color: difference > 0 ? 'green' : 'red'\n          };\n          setRectangles(prevRectangles => [...prevRectangles, newRect]);\n\n          // Если прямоугольник вышел за границу видимости, перемещаем область видимости\n          if (rectY < viewOffsetY || rectY + height > viewOffsetY + 300) {\n            const newOffsetY = Math.max(0, rectY + height - 300);\n            setViewOffsetY(newOffsetY);\n          }\n          setPreviousValue(currentValue);\n        }\n      }, 20);\n      return () => clearInterval(interval);\n    }\n  }, [currentValue, previousValue, rectangles, viewOffsetY]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        width: 500,\n        height: 300,\n        border: '1px solid black',\n        marginBottom: '20px',\n        backgroundColor: '#fff'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateValue,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px',\n        cursor: 'pointer',\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px'\n      },\n      children: \"Generate Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Page4, \"3SZvQD5w1aHUnChanoa3jAxRDX4=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Page4","_s","previousValue","setPreviousValue","currentValue","setCurrentValue","rectangles","setRectangles","viewOffsetY","setViewOffsetY","canvasRef","generateValue","newValue","Math","floor","random","canvas","current","ctx","getContext","scale","window","devicePixelRatio","canvasWidth","canvasHeight","width","height","difference","step","progress","startY","targetY","rectWidth","interval","setInterval","clearRect","forEach","rect","fillStyle","color","fillRect","x","y","abs","rectY","clearInterval","newRect","prevRectangles","newOffsetY","max","style","display","flexDirection","alignItems","children","ref","border","marginBottom","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","fontSize","cursor","borderRadius","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Page4 = () => {\n  const [previousValue, setPreviousValue] = useState(56000);\n  const [currentValue, setCurrentValue] = useState(56000);\n  const [rectangles, setRectangles] = useState([]);\n  const [viewOffsetY, setViewOffsetY] = useState(0); // Смещение области видимости по Y\n  const canvasRef = useRef(null);\n\n  const generateValue = () => {\n    const newValue = Math.floor(Math.random() * (56345 - 55600 + 1)) + 55600;\n    setCurrentValue(newValue);\n  };\n\n  useEffect(() => {\n    if (currentValue !== previousValue) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      const scale = window.devicePixelRatio || 1;\n      const canvasWidth = 500;\n      const canvasHeight = 1500; // Высота большого холста\n      canvas.width = canvasWidth * scale;\n      canvas.height = canvasHeight * scale;\n      ctx.scale(scale, scale);\n\n      const difference = currentValue - previousValue;\n      const step = difference > 0 ? 1 : -1;\n      let progress = 0;\n\n      const startY = canvasHeight / 2 - viewOffsetY - ((previousValue - 56000) / 345) * 120;\n      const targetY = canvasHeight / 2 - viewOffsetY - ((currentValue - 56000) / 345) * 120;\n      const rectWidth = 30;\n      const interval = setInterval(() => {\n        progress += step;\n\n        ctx.clearRect(0, 0, canvasWidth, 300);\n\n        // Рисуем все прямоугольники, смещенные на viewOffsetY\n        rectangles.forEach((rect) => {\n          ctx.fillStyle = rect.color;\n          ctx.fillRect(rect.x, rect.y - viewOffsetY, rect.width, rect.height);\n        });\n\n        // Рисуем текущий прямоугольник\n        const height = Math.abs(progress);\n        const rectY = difference > 0 ? startY - height : startY;\n        ctx.fillStyle = difference > 0 ? 'green' : 'red';\n        ctx.fillRect(canvasWidth / 2 - 15, rectY, rectWidth, height);\n\n        if (Math.abs(progress) >= Math.abs(targetY - startY)) {\n          clearInterval(interval);\n\n          const newRect = {\n            x: canvasWidth / 2 - 15,\n            y: rectY,\n            width: rectWidth,\n            height: height,\n            color: difference > 0 ? 'green' : 'red',\n          };\n\n          setRectangles((prevRectangles) => [...prevRectangles, newRect]);\n\n          // Если прямоугольник вышел за границу видимости, перемещаем область видимости\n          if (rectY < viewOffsetY || rectY + height > viewOffsetY + 300) {\n            const newOffsetY = Math.max(0, rectY + height - 300);\n            setViewOffsetY(newOffsetY);\n          }\n\n          setPreviousValue(currentValue);\n        }\n      }, 20);\n\n      return () => clearInterval(interval);\n    }\n  }, [currentValue, previousValue, rectangles, viewOffsetY]);\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <canvas\n        ref={canvasRef}\n        style={{\n          width: 500,\n          height: 300,\n          border: '1px solid black',\n          marginBottom: '20px',\n          backgroundColor: '#fff',\n        }}\n      ></canvas>\n      <button\n        onClick={generateValue}\n        style={{\n          padding: '10px 20px',\n          fontSize: '16px',\n          cursor: 'pointer',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n        }}>\n        Generate Value\n      </button>\n    </div>\n  );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}