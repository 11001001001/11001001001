{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const chartContainerRef = useRef(null);\n  const chartRef = useRef(null);\n  const candleSeriesRef = useRef(null);\n  useEffect(() => {\n    // Создание графика\n    chartRef.current = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth,\n      height: 300,\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: true\n      }\n    });\n    candleSeriesRef.current = chartRef.current.addCandlestickSeries();\n\n    // Функция для получения данных о свече\n    const fetchCandleData = () => {\n      fetch('https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=5s&limit=1').then(response => response.json()).then(data => {\n        const candle = data[0];\n        const candlestick = {\n          time: candle[0] / 1000,\n          open: parseFloat(candle[1]),\n          high: parseFloat(candle[2]),\n          low: parseFloat(candle[3]),\n          close: parseFloat(candle[4])\n        };\n        candleSeriesRef.current.update(candlestick);\n      }).catch(error => {\n        console.error('Failed to fetch candle data:', error);\n      });\n    };\n    fetchCandleData();\n    const interval = setInterval(fetchCandleData, 5000); // Обновление каждые 5 секунд\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      padding: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chartContainerRef,\n      style: {\n        position: 'relative',\n        width: '100%',\n        height: '300px',\n        marginTop: '50px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Page4, \"kRmTfj0TweYoTwAdvyASpdPc6pQ=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useEffect","useRef","createChart","jsxDEV","_jsxDEV","Page4","_s","chartContainerRef","chartRef","candleSeriesRef","current","width","clientWidth","height","timeScale","timeVisible","secondsVisible","addCandlestickSeries","fetchCandleData","fetch","then","response","json","data","candle","candlestick","time","open","parseFloat","high","low","close","update","catch","error","console","interval","setInterval","clearInterval","style","position","padding","children","ref","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { createChart } from 'lightweight-charts';\n\nconst Page4 = () => {\n  const chartContainerRef = useRef(null);\n  const chartRef = useRef(null);\n  const candleSeriesRef = useRef(null);\n\n  useEffect(() => {\n    // Создание графика\n    chartRef.current = createChart(chartContainerRef.current, {\n      width: chartContainerRef.current.clientWidth,\n      height: 300,\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: true,\n      },\n    });\n\n    candleSeriesRef.current = chartRef.current.addCandlestickSeries();\n\n    // Функция для получения данных о свече\n    const fetchCandleData = () => {\n      fetch('https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=5s&limit=1')\n        .then(response => response.json())\n        .then(data => {\n          const candle = data[0];\n          const candlestick = {\n            time: candle[0] / 1000,\n            open: parseFloat(candle[1]),\n            high: parseFloat(candle[2]),\n            low: parseFloat(candle[3]),\n            close: parseFloat(candle[4]),\n          };\n          candleSeriesRef.current.update(candlestick);\n        })\n        .catch(error => {\n          console.error('Failed to fetch candle data:', error);\n        });\n    };\n\n    fetchCandleData();\n    const interval = setInterval(fetchCandleData, 5000); // Обновление каждые 5 секунд\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div style={{ position: 'relative', padding: '20px' }}>\n      {/* График свечей */}\n      <div ref={chartContainerRef} style={{ position: 'relative', width: '100%', height: '300px', marginTop: '50px' }}></div>\n    </div>\n  );\n};\n\nexport default Page4;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,iBAAiB,GAAGN,MAAM,CAAC,IAAI,CAAC;EACtC,MAAMO,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMQ,eAAe,GAAGR,MAAM,CAAC,IAAI,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd;IACAQ,QAAQ,CAACE,OAAO,GAAGR,WAAW,CAACK,iBAAiB,CAACG,OAAO,EAAE;MACxDC,KAAK,EAAEJ,iBAAiB,CAACG,OAAO,CAACE,WAAW;MAC5CC,MAAM,EAAE,GAAG;MACXC,SAAS,EAAE;QACTC,WAAW,EAAE,IAAI;QACjBC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEFP,eAAe,CAACC,OAAO,GAAGF,QAAQ,CAACE,OAAO,CAACO,oBAAoB,CAAC,CAAC;;IAEjE;IACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;MAC5BC,KAAK,CAAC,0EAA0E,CAAC,CAC9EC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACZ,MAAMC,MAAM,GAAGD,IAAI,CAAC,CAAC,CAAC;QACtB,MAAME,WAAW,GAAG;UAClBC,IAAI,EAAEF,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI;UACtBG,IAAI,EAAEC,UAAU,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC;UAC3BK,IAAI,EAAED,UAAU,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC;UAC3BM,GAAG,EAAEF,UAAU,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC;UAC1BO,KAAK,EAAEH,UAAU,CAACJ,MAAM,CAAC,CAAC,CAAC;QAC7B,CAAC;QACDf,eAAe,CAACC,OAAO,CAACsB,MAAM,CAACP,WAAW,CAAC;MAC7C,CAAC,CAAC,CACDQ,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD,CAAC,CAAC;IACN,CAAC;IAEDhB,eAAe,CAAC,CAAC;IACjB,MAAMkB,QAAQ,GAAGC,WAAW,CAACnB,eAAe,EAAE,IAAI,CAAC,CAAC,CAAC;;IAErD,OAAO,MAAMoB,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhC,OAAA;IAAKmC,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,eAEpDtC,OAAA;MAAKuC,GAAG,EAAEpC,iBAAkB;MAACgC,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAE7B,KAAK,EAAE,MAAM;QAAEE,MAAM,EAAE,OAAO;QAAE+B,SAAS,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpH,CAAC;AAEV,CAAC;AAAC1C,EAAA,CAlDID,KAAK;AAAA4C,EAAA,GAAL5C,KAAK;AAoDX,eAAeA,KAAK;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}