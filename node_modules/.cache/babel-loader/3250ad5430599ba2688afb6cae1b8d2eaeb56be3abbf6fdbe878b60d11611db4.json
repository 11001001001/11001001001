{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [rectangles, setRectangles] = useState([]);\n  const [currentRect, setCurrentRect] = useState(null);\n  const canvasWidth = 600; // Set the width of the canvas\n  const canvasHeight = 400; // Set the height of the canvas\n  const rectWidth = 30; // Width of each rectangle\n  const centerY = canvasHeight / 2; // The center of the canvas\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight); // Clear the canvas\n\n    // Improve the sharpness by setting pixel-perfect drawing\n    ctx.translate(0.5, 0.5);\n\n    // Draw existing rectangles\n    rectangles.forEach(rect => {\n      ctx.beginPath();\n      ctx.rect(rect.xOffset, rect.startY, rectWidth, rect.height);\n      ctx.strokeStyle = rect.direction > 0 ? 'green' : 'red';\n      ctx.stroke();\n      ctx.closePath();\n    });\n\n    // Draw the current rectangle in real-time\n    if (currentRect) {\n      ctx.beginPath();\n      ctx.rect(currentRect.xOffset, currentRect.startY, rectWidth, currentRect.height);\n      ctx.strokeStyle = currentRect.direction > 0 ? 'green' : 'red';\n      ctx.stroke();\n      ctx.closePath();\n    }\n  }, [rectangles, currentRect]);\n  const animateRectangle = () => {\n    const newTarget = Math.floor(Math.random() * 41) * (Math.random() > 0.5 ? 1 : -1);\n    const stepHeight = newTarget / 100; // 10 seconds, 100 steps (100ms each)\n    const direction = newTarget > 0 ? 1 : -1;\n    const lastRect = rectangles[rectangles.length - 1] || {\n      endY: centerY\n    };\n    const startY = lastRect.endY;\n    let currentHeight = 0;\n    setCurrentRect({\n      height: 0,\n      direction,\n      xOffset: -(rectangles.length + 1) * rectWidth,\n      startY\n    });\n    const interval = setInterval(() => {\n      currentHeight += stepHeight;\n      setCurrentRect({\n        height: Math.abs(currentHeight),\n        direction,\n        xOffset: -(rectangles.length + 1) * rectWidth,\n        startY\n      });\n      if (Math.abs(currentHeight) >= Math.abs(newTarget)) {\n        clearInterval(interval);\n        setRectangles(prevRectangles => [...prevRectangles, {\n          height: Math.abs(currentHeight),\n          direction,\n          xOffset: -(prevRectangles.length + 1) * rectWidth,\n          startY,\n          endY: startY + currentHeight\n        }]);\n        setCurrentRect(null);\n      }\n    }, 100);\n  };\n  useEffect(() => {\n    if (!isRunning) return;\n    const interval = setInterval(animateRectangle, 10000);\n    animateRectangle(); // Start immediately on first run\n\n    return () => clearInterval(interval);\n  }, [isRunning]);\n  const handleStartStop = () => {\n    setIsRunning(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasWidth,\n      height: canvasHeight,\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartStop,\n      children: isRunning ? 'Stop' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(Page4, \"iqILHVl0vId7QELVSt8GClCx6sc=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Page4","_s","canvasRef","isRunning","setIsRunning","rectangles","setRectangles","currentRect","setCurrentRect","canvasWidth","canvasHeight","rectWidth","centerY","canvas","current","ctx","getContext","clearRect","translate","forEach","rect","beginPath","xOffset","startY","height","strokeStyle","direction","stroke","closePath","animateRectangle","newTarget","Math","floor","random","stepHeight","lastRect","length","endY","currentHeight","interval","setInterval","abs","clearInterval","prevRectangles","handleStartStop","prevState","children","ref","width","style","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Page4 = () => {\n    const canvasRef = useRef(null);\n    const [isRunning, setIsRunning] = useState(false);\n    const [rectangles, setRectangles] = useState([]);\n    const [currentRect, setCurrentRect] = useState(null);\n\n    const canvasWidth = 600;  // Set the width of the canvas\n    const canvasHeight = 400; // Set the height of the canvas\n    const rectWidth = 30;     // Width of each rectangle\n    const centerY = canvasHeight / 2;  // The center of the canvas\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvasWidth, canvasHeight);  // Clear the canvas\n\n        // Improve the sharpness by setting pixel-perfect drawing\n        ctx.translate(0.5, 0.5);\n\n        // Draw existing rectangles\n        rectangles.forEach(rect => {\n            ctx.beginPath();\n            ctx.rect(rect.xOffset, rect.startY, rectWidth, rect.height);\n            ctx.strokeStyle = rect.direction > 0 ? 'green' : 'red';\n            ctx.stroke();\n            ctx.closePath();\n        });\n\n        // Draw the current rectangle in real-time\n        if (currentRect) {\n            ctx.beginPath();\n            ctx.rect(currentRect.xOffset, currentRect.startY, rectWidth, currentRect.height);\n            ctx.strokeStyle = currentRect.direction > 0 ? 'green' : 'red';\n            ctx.stroke();\n            ctx.closePath();\n        }\n    }, [rectangles, currentRect]);\n\n    const animateRectangle = () => {\n        const newTarget = Math.floor(Math.random() * 41) * (Math.random() > 0.5 ? 1 : -1);\n        const stepHeight = newTarget / 100; // 10 seconds, 100 steps (100ms each)\n        const direction = newTarget > 0 ? 1 : -1;\n        const lastRect = rectangles[rectangles.length - 1] || { endY: centerY };\n        const startY = lastRect.endY;\n        let currentHeight = 0;\n\n        setCurrentRect({ height: 0, direction, xOffset: -(rectangles.length + 1) * rectWidth, startY });\n\n        const interval = setInterval(() => {\n            currentHeight += stepHeight;\n\n            setCurrentRect({\n                height: Math.abs(currentHeight),\n                direction,\n                xOffset: -(rectangles.length + 1) * rectWidth,\n                startY\n            });\n\n            if (Math.abs(currentHeight) >= Math.abs(newTarget)) {\n                clearInterval(interval);\n                setRectangles(prevRectangles => [\n                    ...prevRectangles,\n                    {\n                        height: Math.abs(currentHeight),\n                        direction,\n                        xOffset: -(prevRectangles.length + 1) * rectWidth,\n                        startY,\n                        endY: startY + currentHeight\n                    }\n                ]);\n                setCurrentRect(null);\n            }\n        }, 100);\n    };\n\n    useEffect(() => {\n        if (!isRunning) return;\n\n        const interval = setInterval(animateRectangle, 10000);\n        animateRectangle(); // Start immediately on first run\n\n        return () => clearInterval(interval);\n    }, [isRunning]);\n\n    const handleStartStop = () => {\n        setIsRunning(prevState => !prevState);\n    };\n\n    return (\n        <div>\n            <canvas ref={canvasRef} width={canvasWidth} height={canvasHeight} style={{ border: '1px solid black' }} />\n            <button onClick={handleStartStop}>\n                {isRunning ? 'Stop' : 'Start'}\n            </button>\n        </div>\n    );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}