{"ast":null,"code":"/*!\n * @license\n * TradingView Lightweight Chartsâ„¢ v4.2.0\n * Copyright (c) 2024 TradingView, Inc.\n * Licensed under Apache License 2.0 https://www.apache.org/licenses/LICENSE-2.0\n */\nimport { size as size$1, bindCanvasElementBitmapSizeTo, equalSizes, tryCreateCanvasRenderingTarget2D } from 'fancy-canvas';\nconst candlestickStyleDefaults = {\n  upColor: '#26a69a',\n  downColor: '#ef5350',\n  wickVisible: true,\n  borderVisible: true,\n  borderColor: '#378658',\n  borderUpColor: '#26a69a',\n  borderDownColor: '#ef5350',\n  wickColor: '#737375',\n  wickUpColor: '#26a69a',\n  wickDownColor: '#ef5350'\n};\nconst barStyleDefaults = {\n  upColor: '#26a69a',\n  downColor: '#ef5350',\n  openVisible: true,\n  thinBars: true\n};\nconst lineStyleDefaults = {\n  color: '#2196f3',\n  lineStyle: 0 /* LineStyle.Solid */,\n  lineWidth: 3,\n  lineType: 0 /* LineType.Simple */,\n  lineVisible: true,\n  crosshairMarkerVisible: true,\n  crosshairMarkerRadius: 4,\n  crosshairMarkerBorderColor: '',\n  crosshairMarkerBorderWidth: 2,\n  crosshairMarkerBackgroundColor: '',\n  lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n  pointMarkersVisible: false\n};\nconst areaStyleDefaults = {\n  topColor: 'rgba( 46, 220, 135, 0.4)',\n  bottomColor: 'rgba( 40, 221, 100, 0)',\n  invertFilledArea: false,\n  lineColor: '#33D778',\n  lineStyle: 0 /* LineStyle.Solid */,\n  lineWidth: 3,\n  lineType: 0 /* LineType.Simple */,\n  lineVisible: true,\n  crosshairMarkerVisible: true,\n  crosshairMarkerRadius: 4,\n  crosshairMarkerBorderColor: '',\n  crosshairMarkerBorderWidth: 2,\n  crosshairMarkerBackgroundColor: '',\n  lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n  pointMarkersVisible: false\n};\nconst baselineStyleDefaults = {\n  baseValue: {\n    type: 'price',\n    price: 0\n  },\n  topFillColor1: 'rgba(38, 166, 154, 0.28)',\n  topFillColor2: 'rgba(38, 166, 154, 0.05)',\n  topLineColor: 'rgba(38, 166, 154, 1)',\n  bottomFillColor1: 'rgba(239, 83, 80, 0.05)',\n  bottomFillColor2: 'rgba(239, 83, 80, 0.28)',\n  bottomLineColor: 'rgba(239, 83, 80, 1)',\n  lineWidth: 3,\n  lineStyle: 0 /* LineStyle.Solid */,\n  lineType: 0 /* LineType.Simple */,\n  lineVisible: true,\n  crosshairMarkerVisible: true,\n  crosshairMarkerRadius: 4,\n  crosshairMarkerBorderColor: '',\n  crosshairMarkerBorderWidth: 2,\n  crosshairMarkerBackgroundColor: '',\n  lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n  pointMarkersVisible: false\n};\nconst histogramStyleDefaults = {\n  color: '#26a69a',\n  base: 0\n};\nconst customStyleDefaults = {\n  color: '#2196f3'\n};\nconst seriesOptionsDefaults = {\n  title: '',\n  visible: true,\n  lastValueVisible: true,\n  priceLineVisible: true,\n  priceLineSource: 0 /* PriceLineSource.LastBar */,\n  priceLineWidth: 1,\n  priceLineColor: '',\n  priceLineStyle: 2 /* LineStyle.Dashed */,\n  baseLineVisible: true,\n  baseLineWidth: 1,\n  baseLineColor: '#B2B5BE',\n  baseLineStyle: 0 /* LineStyle.Solid */,\n  priceFormat: {\n    type: 'price',\n    precision: 2,\n    minMove: 0.01\n  }\n};\n\n/**\n * Represents the possible line types.\n */\nvar LineType;\n(function (LineType) {\n  /**\n   * A line.\n   */\n  LineType[LineType[\"Simple\"] = 0] = \"Simple\";\n  /**\n   * A stepped line.\n   */\n  LineType[LineType[\"WithSteps\"] = 1] = \"WithSteps\";\n  /**\n   * A curved line.\n   */\n  LineType[LineType[\"Curved\"] = 2] = \"Curved\";\n})(LineType || (LineType = {}));\n/**\n * Represents the possible line styles.\n */\nvar LineStyle;\n(function (LineStyle) {\n  /**\n   * A solid line.\n   */\n  LineStyle[LineStyle[\"Solid\"] = 0] = \"Solid\";\n  /**\n   * A dotted line.\n   */\n  LineStyle[LineStyle[\"Dotted\"] = 1] = \"Dotted\";\n  /**\n   * A dashed line.\n   */\n  LineStyle[LineStyle[\"Dashed\"] = 2] = \"Dashed\";\n  /**\n   * A dashed line with bigger dashes.\n   */\n  LineStyle[LineStyle[\"LargeDashed\"] = 3] = \"LargeDashed\";\n  /**\n   * A dotted line with more space between dots.\n   */\n  LineStyle[LineStyle[\"SparseDotted\"] = 4] = \"SparseDotted\";\n})(LineStyle || (LineStyle = {}));\nfunction setLineStyle(ctx, style) {\n  const dashPatterns = {\n    [0 /* LineStyle.Solid */]: [],\n    [1 /* LineStyle.Dotted */]: [ctx.lineWidth, ctx.lineWidth],\n    [2 /* LineStyle.Dashed */]: [2 * ctx.lineWidth, 2 * ctx.lineWidth],\n    [3 /* LineStyle.LargeDashed */]: [6 * ctx.lineWidth, 6 * ctx.lineWidth],\n    [4 /* LineStyle.SparseDotted */]: [ctx.lineWidth, 4 * ctx.lineWidth]\n  };\n  const dashPattern = dashPatterns[style];\n  ctx.setLineDash(dashPattern);\n}\nfunction drawHorizontalLine(ctx, y, left, right) {\n  ctx.beginPath();\n  const correction = ctx.lineWidth % 2 ? 0.5 : 0;\n  ctx.moveTo(left, y + correction);\n  ctx.lineTo(right, y + correction);\n  ctx.stroke();\n}\nfunction drawVerticalLine(ctx, x, top, bottom) {\n  ctx.beginPath();\n  const correction = ctx.lineWidth % 2 ? 0.5 : 0;\n  ctx.moveTo(x + correction, top);\n  ctx.lineTo(x + correction, bottom);\n  ctx.stroke();\n}\nfunction strokeInPixel(ctx, drawFunction) {\n  ctx.save();\n  if (ctx.lineWidth % 2) {\n    ctx.translate(0.5, 0.5);\n  }\n  drawFunction();\n  ctx.restore();\n}\n\n/**\n * Checks an assertion. Throws if the assertion is failed.\n *\n * @param condition - Result of the assertion evaluation\n * @param message - Text to include in the exception message\n */\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error('Assertion failed' + (message ? ': ' + message : ''));\n  }\n}\nfunction ensureDefined(value) {\n  if (value === undefined) {\n    throw new Error('Value is undefined');\n  }\n  return value;\n}\nfunction ensureNotNull(value) {\n  if (value === null) {\n    throw new Error('Value is null');\n  }\n  return value;\n}\nfunction ensure(value) {\n  return ensureNotNull(ensureDefined(value));\n}\n/**\n * Compile time check for never\n */\nfunction ensureNever(value) {}\n\n/**\n * Note this object should be explicitly marked as public so that dts-bundle-generator does not mangle the property names.\n *\n * @public\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\n */\nconst namedColorRgbHexStrings = {\n  // The order of properties in this Record is not important for the internal logic.\n  // It's just GZIPped better when props follows this order.\n  // Please add new colors to the end of the record.\n  khaki: '#f0e68c',\n  azure: '#f0ffff',\n  aliceblue: '#f0f8ff',\n  ghostwhite: '#f8f8ff',\n  gold: '#ffd700',\n  goldenrod: '#daa520',\n  gainsboro: '#dcdcdc',\n  gray: '#808080',\n  green: '#008000',\n  honeydew: '#f0fff0',\n  floralwhite: '#fffaf0',\n  lightblue: '#add8e6',\n  lightcoral: '#f08080',\n  lemonchiffon: '#fffacd',\n  hotpink: '#ff69b4',\n  lightyellow: '#ffffe0',\n  greenyellow: '#adff2f',\n  lightgoldenrodyellow: '#fafad2',\n  limegreen: '#32cd32',\n  linen: '#faf0e6',\n  lightcyan: '#e0ffff',\n  magenta: '#f0f',\n  maroon: '#800000',\n  olive: '#808000',\n  orange: '#ffa500',\n  oldlace: '#fdf5e6',\n  mediumblue: '#0000cd',\n  transparent: '#0000',\n  lime: '#0f0',\n  lightpink: '#ffb6c1',\n  mistyrose: '#ffe4e1',\n  moccasin: '#ffe4b5',\n  midnightblue: '#191970',\n  orchid: '#da70d6',\n  mediumorchid: '#ba55d3',\n  mediumturquoise: '#48d1cc',\n  orangered: '#ff4500',\n  royalblue: '#4169e1',\n  powderblue: '#b0e0e6',\n  red: '#f00',\n  coral: '#ff7f50',\n  turquoise: '#40e0d0',\n  white: '#fff',\n  whitesmoke: '#f5f5f5',\n  wheat: '#f5deb3',\n  teal: '#008080',\n  steelblue: '#4682b4',\n  bisque: '#ffe4c4',\n  aquamarine: '#7fffd4',\n  aqua: '#0ff',\n  sienna: '#a0522d',\n  silver: '#c0c0c0',\n  springgreen: '#00ff7f',\n  antiquewhite: '#faebd7',\n  burlywood: '#deb887',\n  brown: '#a52a2a',\n  beige: '#f5f5dc',\n  chocolate: '#d2691e',\n  chartreuse: '#7fff00',\n  cornflowerblue: '#6495ed',\n  cornsilk: '#fff8dc',\n  crimson: '#dc143c',\n  cadetblue: '#5f9ea0',\n  tomato: '#ff6347',\n  fuchsia: '#f0f',\n  blue: '#00f',\n  salmon: '#fa8072',\n  blanchedalmond: '#ffebcd',\n  slateblue: '#6a5acd',\n  slategray: '#708090',\n  thistle: '#d8bfd8',\n  tan: '#d2b48c',\n  cyan: '#0ff',\n  darkblue: '#00008b',\n  darkcyan: '#008b8b',\n  darkgoldenrod: '#b8860b',\n  darkgray: '#a9a9a9',\n  blueviolet: '#8a2be2',\n  black: '#000',\n  darkmagenta: '#8b008b',\n  darkslateblue: '#483d8b',\n  darkkhaki: '#bdb76b',\n  darkorchid: '#9932cc',\n  darkorange: '#ff8c00',\n  darkgreen: '#006400',\n  darkred: '#8b0000',\n  dodgerblue: '#1e90ff',\n  darkslategray: '#2f4f4f',\n  dimgray: '#696969',\n  deepskyblue: '#00bfff',\n  firebrick: '#b22222',\n  forestgreen: '#228b22',\n  indigo: '#4b0082',\n  ivory: '#fffff0',\n  lavenderblush: '#fff0f5',\n  feldspar: '#d19275',\n  indianred: '#cd5c5c',\n  lightgreen: '#90ee90',\n  lightgrey: '#d3d3d3',\n  lightskyblue: '#87cefa',\n  lightslategray: '#789',\n  lightslateblue: '#8470ff',\n  snow: '#fffafa',\n  lightseagreen: '#20b2aa',\n  lightsalmon: '#ffa07a',\n  darksalmon: '#e9967a',\n  darkviolet: '#9400d3',\n  mediumpurple: '#9370d8',\n  mediumaquamarine: '#66cdaa',\n  skyblue: '#87ceeb',\n  lavender: '#e6e6fa',\n  lightsteelblue: '#b0c4de',\n  mediumvioletred: '#c71585',\n  mintcream: '#f5fffa',\n  navajowhite: '#ffdead',\n  navy: '#000080',\n  olivedrab: '#6b8e23',\n  palevioletred: '#d87093',\n  violetred: '#d02090',\n  yellow: '#ff0',\n  yellowgreen: '#9acd32',\n  lawngreen: '#7cfc00',\n  pink: '#ffc0cb',\n  paleturquoise: '#afeeee',\n  palegoldenrod: '#eee8aa',\n  darkolivegreen: '#556b2f',\n  darkseagreen: '#8fbc8f',\n  darkturquoise: '#00ced1',\n  peachpuff: '#ffdab9',\n  deeppink: '#ff1493',\n  violet: '#ee82ee',\n  palegreen: '#98fb98',\n  mediumseagreen: '#3cb371',\n  peru: '#cd853f',\n  saddlebrown: '#8b4513',\n  sandybrown: '#f4a460',\n  rosybrown: '#bc8f8f',\n  purple: '#800080',\n  seagreen: '#2e8b57',\n  seashell: '#fff5ee',\n  papayawhip: '#ffefd5',\n  mediumslateblue: '#7b68ee',\n  plum: '#dda0dd',\n  mediumspringgreen: '#00fa9a'\n};\nfunction normalizeRgbComponent(component) {\n  if (component < 0) {\n    return 0;\n  }\n  if (component > 255) {\n    return 255;\n  }\n  // NaN values are treated as 0\n  return Math.round(component) || 0;\n}\nfunction normalizeAlphaComponent(component) {\n  if (component <= 0 || component > 1) {\n    return Math.min(Math.max(component, 0), 1);\n  }\n  // limit the precision of all numbers to at most 4 digits in fractional part\n  return Math.round(component * 10000) / 10000;\n}\n/**\n * @example\n * #fb0\n * @example\n * #f0f\n * @example\n * #f0fa\n */\nconst shortHexRe = /^#([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])?$/i;\n/**\n * @example\n * #00ff00\n * @example\n * #336699\n * @example\n * #336699FA\n */\nconst hexRe = /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})?$/i;\n/**\n * @example\n * rgb(123, 234, 45)\n * @example\n * rgb(255,234,245)\n */\nconst rgbRe = /^rgb\\(\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*\\)$/;\n/**\n * @example\n * rgba(123, 234, 45, 1)\n * @example\n * rgba(255,234,245,0.1)\n */\nconst rgbaRe = /^rgba\\(\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d*\\.?\\d+)\\s*\\)$/;\nfunction colorStringToRgba(colorString) {\n  colorString = colorString.toLowerCase();\n  // eslint-disable-next-line no-restricted-syntax\n  if (colorString in namedColorRgbHexStrings) {\n    colorString = namedColorRgbHexStrings[colorString];\n  }\n  {\n    const matches = rgbaRe.exec(colorString) || rgbRe.exec(colorString);\n    if (matches) {\n      return [normalizeRgbComponent(parseInt(matches[1], 10)), normalizeRgbComponent(parseInt(matches[2], 10)), normalizeRgbComponent(parseInt(matches[3], 10)), normalizeAlphaComponent(matches.length < 5 ? 1 : parseFloat(matches[4]))];\n    }\n  }\n  {\n    const matches = hexRe.exec(colorString);\n    if (matches) {\n      return [normalizeRgbComponent(parseInt(matches[1], 16)), normalizeRgbComponent(parseInt(matches[2], 16)), normalizeRgbComponent(parseInt(matches[3], 16)), 1];\n    }\n  }\n  {\n    const matches = shortHexRe.exec(colorString);\n    if (matches) {\n      return [normalizeRgbComponent(parseInt(matches[1], 16) * 0x11), normalizeRgbComponent(parseInt(matches[2], 16) * 0x11), normalizeRgbComponent(parseInt(matches[3], 16) * 0x11), 1];\n    }\n  }\n  throw new Error(`Cannot parse color: ${colorString}`);\n}\nfunction rgbaToGrayscale(rgbValue) {\n  // Originally, the NTSC RGB to YUV formula\n  // perfected by @eugene-korobko's black magic\n  const redComponentGrayscaleWeight = 0.199;\n  const greenComponentGrayscaleWeight = 0.687;\n  const blueComponentGrayscaleWeight = 0.114;\n  return redComponentGrayscaleWeight * rgbValue[0] + greenComponentGrayscaleWeight * rgbValue[1] + blueComponentGrayscaleWeight * rgbValue[2];\n}\nfunction applyAlpha(color, alpha) {\n  // special case optimization\n  if (color === 'transparent') {\n    return color;\n  }\n  const originRgba = colorStringToRgba(color);\n  const originAlpha = originRgba[3];\n  return `rgba(${originRgba[0]}, ${originRgba[1]}, ${originRgba[2]}, ${alpha * originAlpha})`;\n}\nfunction generateContrastColors(backgroundColor) {\n  const rgb = colorStringToRgba(backgroundColor);\n  return {\n    _internal_background: `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`,\n    _internal_foreground: rgbaToGrayscale(rgb) > 160 ? 'black' : 'white'\n  };\n}\nfunction colorStringToGrayscale(backgroundColor) {\n  return rgbaToGrayscale(colorStringToRgba(backgroundColor));\n}\nfunction gradientColorAtPercent(topColor, bottomColor, percent) {\n  const [topR, topG, topB, topA] = colorStringToRgba(topColor);\n  const [bottomR, bottomG, bottomB, bottomA] = colorStringToRgba(bottomColor);\n  const resultRgba = [normalizeRgbComponent(topR + percent * (bottomR - topR)), normalizeRgbComponent(topG + percent * (bottomG - topG)), normalizeRgbComponent(topB + percent * (bottomB - topB)), normalizeAlphaComponent(topA + percent * (bottomA - topA))];\n  return `rgba(${resultRgba[0]}, ${resultRgba[1]}, ${resultRgba[2]}, ${resultRgba[3]})`;\n}\nclass Delegate {\n  constructor() {\n    this._private__listeners = [];\n  }\n  _internal_subscribe(callback, linkedObject, singleshot) {\n    const listener = {\n      _internal_callback: callback,\n      _internal_linkedObject: linkedObject,\n      _internal_singleshot: singleshot === true\n    };\n    this._private__listeners.push(listener);\n  }\n  _internal_unsubscribe(callback) {\n    const index = this._private__listeners.findIndex(listener => callback === listener._internal_callback);\n    if (index > -1) {\n      this._private__listeners.splice(index, 1);\n    }\n  }\n  _internal_unsubscribeAll(linkedObject) {\n    this._private__listeners = this._private__listeners.filter(listener => listener._internal_linkedObject !== linkedObject);\n  }\n  _internal_fire(param1, param2, param3) {\n    const listenersSnapshot = [...this._private__listeners];\n    this._private__listeners = this._private__listeners.filter(listener => !listener._internal_singleshot);\n    listenersSnapshot.forEach(listener => listener._internal_callback(param1, param2, param3));\n  }\n  _internal_hasListeners() {\n    return this._private__listeners.length > 0;\n  }\n  _internal_destroy() {\n    this._private__listeners = [];\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction merge(dst, ...sources) {\n  for (const src of sources) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const i in src) {\n      if (src[i] === undefined) {\n        continue;\n      }\n      if ('object' !== typeof src[i] || dst[i] === undefined || Array.isArray(src[i])) {\n        dst[i] = src[i];\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        merge(dst[i], src[i]);\n      }\n    }\n  }\n  return dst;\n}\nfunction isNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\nfunction isInteger(value) {\n  return typeof value === 'number' && value % 1 === 0;\n}\nfunction isString(value) {\n  return typeof value === 'string';\n}\nfunction isBoolean(value) {\n  return typeof value === 'boolean';\n}\nfunction clone(object) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = object;\n  if (!o || 'object' !== typeof o) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return o;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let c;\n  if (Array.isArray(o)) {\n    c = [];\n  } else {\n    c = {};\n  }\n  let p;\n  let v;\n  // eslint-disable-next-line no-restricted-syntax\n  for (p in o) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,no-prototype-builtins\n    if (o.hasOwnProperty(p)) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      v = o[p];\n      if (v && 'object' === typeof v) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        c[p] = clone(v);\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        c[p] = v;\n      }\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return c;\n}\nfunction notNull(t) {\n  return t !== null;\n}\nfunction undefinedIfNull(t) {\n  return t === null ? undefined : t;\n}\n\n/**\n * Default font family.\n * Must be used to generate font string when font is not specified.\n */\nconst defaultFontFamily = `-apple-system, BlinkMacSystemFont, 'Trebuchet MS', Roboto, Ubuntu, sans-serif`;\n/**\n * Generates a font string, which can be used to set in canvas' font property.\n * If no family provided, {@link defaultFontFamily} will be used.\n *\n * @param size - Font size in pixels.\n * @param family - Optional font family.\n * @param style - Optional font style.\n * @returns The font string.\n */\nfunction makeFont(size, family, style) {\n  if (style !== undefined) {\n    style = `${style} `;\n  } else {\n    style = '';\n  }\n  if (family === undefined) {\n    family = defaultFontFamily;\n  }\n  return `${style}${size}px ${family}`;\n}\nclass PriceAxisRendererOptionsProvider {\n  constructor(chartModel) {\n    this._private__rendererOptions = {\n      _internal_borderSize: 1 /* RendererConstants.BorderSize */,\n      _internal_tickLength: 5 /* RendererConstants.TickLength */,\n      _internal_fontSize: NaN,\n      _internal_font: '',\n      _internal_fontFamily: '',\n      _internal_color: '',\n      _internal_paneBackgroundColor: '',\n      _internal_paddingBottom: 0,\n      _internal_paddingInner: 0,\n      _internal_paddingOuter: 0,\n      _internal_paddingTop: 0,\n      _internal_baselineOffset: 0\n    };\n    this._private__chartModel = chartModel;\n  }\n  _internal_options() {\n    const rendererOptions = this._private__rendererOptions;\n    const currentFontSize = this._private__fontSize();\n    const currentFontFamily = this._private__fontFamily();\n    if (rendererOptions._internal_fontSize !== currentFontSize || rendererOptions._internal_fontFamily !== currentFontFamily) {\n      rendererOptions._internal_fontSize = currentFontSize;\n      rendererOptions._internal_fontFamily = currentFontFamily;\n      rendererOptions._internal_font = makeFont(currentFontSize, currentFontFamily);\n      rendererOptions._internal_paddingTop = 2.5 / 12 * currentFontSize; // 2.5 px for 12px font\n      rendererOptions._internal_paddingBottom = rendererOptions._internal_paddingTop;\n      rendererOptions._internal_paddingInner = currentFontSize / 12 * rendererOptions._internal_tickLength;\n      rendererOptions._internal_paddingOuter = currentFontSize / 12 * rendererOptions._internal_tickLength;\n      rendererOptions._internal_baselineOffset = 0;\n    }\n    rendererOptions._internal_color = this._private__textColor();\n    rendererOptions._internal_paneBackgroundColor = this._private__paneBackgroundColor();\n    return this._private__rendererOptions;\n  }\n  _private__textColor() {\n    return this._private__chartModel._internal_options().layout.textColor;\n  }\n  _private__paneBackgroundColor() {\n    return this._private__chartModel._internal_backgroundTopColor();\n  }\n  _private__fontSize() {\n    return this._private__chartModel._internal_options().layout.fontSize;\n  }\n  _private__fontFamily() {\n    return this._private__chartModel._internal_options().layout.fontFamily;\n  }\n}\nclass CompositeRenderer {\n  constructor() {\n    this._private__renderers = [];\n  }\n  _internal_setRenderers(renderers) {\n    this._private__renderers = renderers;\n  }\n  _internal_draw(target, isHovered, hitTestData) {\n    this._private__renderers.forEach(r => {\n      r._internal_draw(target, isHovered, hitTestData);\n    });\n  }\n}\nclass BitmapCoordinatesPaneRenderer {\n  _internal_draw(target, isHovered, hitTestData) {\n    target.useBitmapCoordinateSpace(scope => this._internal__drawImpl(scope, isHovered, hitTestData));\n  }\n}\nclass PaneRendererMarks extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._internal__data = null;\n  }\n  _internal_setData(data) {\n    this._internal__data = data;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._internal__data === null || this._internal__data._internal_visibleRange === null) {\n      return;\n    }\n    const visibleRange = this._internal__data._internal_visibleRange;\n    const data = this._internal__data;\n    const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    const correction = tickWidth % 2 / 2;\n    const draw = radiusMedia => {\n      ctx.beginPath();\n      for (let i = visibleRange.to - 1; i >= visibleRange.from; --i) {\n        const point = data._internal_items[i];\n        const centerX = Math.round(point._internal_x * horizontalPixelRatio) + correction; // correct x coordinate only\n        const centerY = point._internal_y * verticalPixelRatio;\n        const radius = radiusMedia * verticalPixelRatio + correction;\n        ctx.moveTo(centerX, centerY);\n        ctx.arc(centerX, centerY, radius, 0, Math.PI * 2);\n      }\n      ctx.fill();\n    };\n    if (data._internal_lineWidth > 0) {\n      ctx.fillStyle = data._internal_backColor;\n      draw(data._internal_radius + data._internal_lineWidth);\n    }\n    ctx.fillStyle = data._internal_lineColor;\n    draw(data._internal_radius);\n  }\n}\nfunction createEmptyMarkerData() {\n  return {\n    _internal_items: [{\n      _internal_x: 0,\n      _internal_y: 0,\n      _internal_time: 0,\n      _internal_price: 0\n    }],\n    _internal_lineColor: '',\n    _internal_backColor: '',\n    _internal_radius: 0,\n    _internal_lineWidth: 0,\n    _internal_visibleRange: null\n  };\n}\nconst rangeForSinglePoint = {\n  from: 0,\n  to: 1\n};\nclass CrosshairMarksPaneView {\n  constructor(chartModel, crosshair) {\n    this._private__compositeRenderer = new CompositeRenderer();\n    this._private__markersRenderers = [];\n    this._private__markersData = [];\n    this._private__invalidated = true;\n    this._private__chartModel = chartModel;\n    this._private__crosshair = crosshair;\n    this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n  }\n  _internal_update(updateType) {\n    const serieses = this._private__chartModel._internal_serieses();\n    if (serieses.length !== this._private__markersRenderers.length) {\n      this._private__markersData = serieses.map(createEmptyMarkerData);\n      this._private__markersRenderers = this._private__markersData.map(data => {\n        const res = new PaneRendererMarks();\n        res._internal_setData(data);\n        return res;\n      });\n      this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n    }\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n    }\n    return this._private__compositeRenderer;\n  }\n  _private__updateImpl() {\n    const forceHidden = this._private__crosshair._internal_options().mode === 2 /* CrosshairMode.Hidden */;\n    const serieses = this._private__chartModel._internal_serieses();\n    const timePointIndex = this._private__crosshair._internal_appliedIndex();\n    const timeScale = this._private__chartModel._internal_timeScale();\n    serieses.forEach((s, index) => {\n      var _a;\n      const data = this._private__markersData[index];\n      const seriesData = s._internal_markerDataAtIndex(timePointIndex);\n      if (forceHidden || seriesData === null || !s._internal_visible()) {\n        data._internal_visibleRange = null;\n        return;\n      }\n      const firstValue = ensureNotNull(s._internal_firstValue());\n      data._internal_lineColor = seriesData._internal_backgroundColor;\n      data._internal_radius = seriesData._internal_radius;\n      data._internal_lineWidth = seriesData._internal_borderWidth;\n      data._internal_items[0]._internal_price = seriesData._internal_price;\n      data._internal_items[0]._internal_y = s._internal_priceScale()._internal_priceToCoordinate(seriesData._internal_price, firstValue._internal_value);\n      data._internal_backColor = (_a = seriesData._internal_borderColor) !== null && _a !== void 0 ? _a : this._private__chartModel._internal_backgroundColorAtYPercentFromTop(data._internal_items[0]._internal_y / s._internal_priceScale()._internal_height());\n      data._internal_items[0]._internal_time = timePointIndex;\n      data._internal_items[0]._internal_x = timeScale._internal_indexToCoordinate(timePointIndex);\n      data._internal_visibleRange = rangeForSinglePoint;\n    });\n  }\n}\nclass CrosshairRenderer extends BitmapCoordinatesPaneRenderer {\n  constructor(data) {\n    super();\n    this._private__data = data;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null) {\n      return;\n    }\n    const vertLinesVisible = this._private__data._internal_vertLine._internal_visible;\n    const horzLinesVisible = this._private__data._internal_horzLine._internal_visible;\n    if (!vertLinesVisible && !horzLinesVisible) {\n      return;\n    }\n    const x = Math.round(this._private__data._internal_x * horizontalPixelRatio);\n    const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n    ctx.lineCap = 'butt';\n    if (vertLinesVisible && x >= 0) {\n      ctx.lineWidth = Math.floor(this._private__data._internal_vertLine._internal_lineWidth * horizontalPixelRatio);\n      ctx.strokeStyle = this._private__data._internal_vertLine._internal_color;\n      ctx.fillStyle = this._private__data._internal_vertLine._internal_color;\n      setLineStyle(ctx, this._private__data._internal_vertLine._internal_lineStyle);\n      drawVerticalLine(ctx, x, 0, bitmapSize.height);\n    }\n    if (horzLinesVisible && y >= 0) {\n      ctx.lineWidth = Math.floor(this._private__data._internal_horzLine._internal_lineWidth * verticalPixelRatio);\n      ctx.strokeStyle = this._private__data._internal_horzLine._internal_color;\n      ctx.fillStyle = this._private__data._internal_horzLine._internal_color;\n      setLineStyle(ctx, this._private__data._internal_horzLine._internal_lineStyle);\n      drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n    }\n  }\n}\nclass CrosshairPaneView {\n  constructor(source) {\n    this._private__invalidated = true;\n    this._private__rendererData = {\n      _internal_vertLine: {\n        _internal_lineWidth: 1,\n        _internal_lineStyle: 0,\n        _internal_color: '',\n        _internal_visible: false\n      },\n      _internal_horzLine: {\n        _internal_lineWidth: 1,\n        _internal_lineStyle: 0,\n        _internal_color: '',\n        _internal_visible: false\n      },\n      _internal_x: 0,\n      _internal_y: 0\n    };\n    this._private__renderer = new CrosshairRenderer(this._private__rendererData);\n    this._private__source = source;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n    }\n    return this._private__renderer;\n  }\n  _private__updateImpl() {\n    const visible = this._private__source._internal_visible();\n    const pane = ensureNotNull(this._private__source._internal_pane());\n    const crosshairOptions = pane._internal_model()._internal_options().crosshair;\n    const data = this._private__rendererData;\n    if (crosshairOptions.mode === 2 /* CrosshairMode.Hidden */) {\n      data._internal_horzLine._internal_visible = false;\n      data._internal_vertLine._internal_visible = false;\n      return;\n    }\n    data._internal_horzLine._internal_visible = visible && this._private__source._internal_horzLineVisible(pane);\n    data._internal_vertLine._internal_visible = visible && this._private__source._internal_vertLineVisible();\n    data._internal_horzLine._internal_lineWidth = crosshairOptions.horzLine.width;\n    data._internal_horzLine._internal_lineStyle = crosshairOptions.horzLine.style;\n    data._internal_horzLine._internal_color = crosshairOptions.horzLine.color;\n    data._internal_vertLine._internal_lineWidth = crosshairOptions.vertLine.width;\n    data._internal_vertLine._internal_lineStyle = crosshairOptions.vertLine.style;\n    data._internal_vertLine._internal_color = crosshairOptions.vertLine.color;\n    data._internal_x = this._private__source._internal_appliedX();\n    data._internal_y = this._private__source._internal_appliedY();\n  }\n}\n\n/**\n * Fills rectangle's inner border (so, all the filled area is limited by the [x, x + width]*[y, y + height] region)\n * ```\n * (x, y)\n * O***********************|*****\n * |        border         |  ^\n * |   *****************   |  |\n * |   |               |   |  |\n * | b |               | b |  h\n * | o |               | o |  e\n * | r |               | r |  i\n * | d |               | d |  g\n * | e |               | e |  h\n * | r |               | r |  t\n * |   |               |   |  |\n * |   *****************   |  |\n * |        border         |  v\n * |***********************|*****\n * |                       |\n * |<------- width ------->|\n * ```\n *\n * @param ctx - Context to draw on\n * @param x - Left side of the target rectangle\n * @param y - Top side of the target rectangle\n * @param width - Width of the target rectangle\n * @param height - Height of the target rectangle\n * @param borderWidth - Width of border to fill, must be less than width and height of the target rectangle\n */\nfunction fillRectInnerBorder(ctx, x, y, width, height, borderWidth) {\n  // horizontal (top and bottom) edges\n  ctx.fillRect(x + borderWidth, y, width - borderWidth * 2, borderWidth);\n  ctx.fillRect(x + borderWidth, y + height - borderWidth, width - borderWidth * 2, borderWidth);\n  // vertical (left and right) edges\n  ctx.fillRect(x, y, borderWidth, height);\n  ctx.fillRect(x + width - borderWidth, y, borderWidth, height);\n}\nfunction clearRect(ctx, x, y, w, h, clearColor) {\n  ctx.save();\n  ctx.globalCompositeOperation = 'copy';\n  ctx.fillStyle = clearColor;\n  ctx.fillRect(x, y, w, h);\n  ctx.restore();\n}\nfunction changeBorderRadius(borderRadius, offset) {\n  return borderRadius.map(x => x === 0 ? x : x + offset);\n}\nfunction drawRoundRect(\n// eslint:disable-next-line:max-params\nctx, x, y, w, h, radii) {\n  /**\n   * As of May 2023, all of the major browsers now support ctx.roundRect() so we should\n   * be able to switch to the native version soon.\n   */\n  ctx.beginPath();\n  if (ctx.roundRect) {\n    ctx.roundRect(x, y, w, h, radii);\n    return;\n  }\n  /*\n   * Deprecate the rest in v5.\n   */\n  ctx.lineTo(x + w - radii[1], y);\n  if (radii[1] !== 0) {\n    ctx.arcTo(x + w, y, x + w, y + radii[1], radii[1]);\n  }\n  ctx.lineTo(x + w, y + h - radii[2]);\n  if (radii[2] !== 0) {\n    ctx.arcTo(x + w, y + h, x + w - radii[2], y + h, radii[2]);\n  }\n  ctx.lineTo(x + radii[3], y + h);\n  if (radii[3] !== 0) {\n    ctx.arcTo(x, y + h, x, y + h - radii[3], radii[3]);\n  }\n  ctx.lineTo(x, y + radii[0]);\n  if (radii[0] !== 0) {\n    ctx.arcTo(x, y, x + radii[0], y, radii[0]);\n  }\n}\n/**\n * Draws a rounded rect with a border.\n *\n * This function assumes that the colors will be solid, without\n * any alpha. (This allows us to fix a rendering artefact.)\n *\n * @param outerBorderRadius - The radius of the border (outer edge)\n */\n// eslint-disable-next-line max-params\nfunction drawRoundRectWithBorder(ctx, left, top, width, height, backgroundColor, borderWidth = 0, outerBorderRadius = [0, 0, 0, 0], borderColor = '') {\n  ctx.save();\n  if (!borderWidth || !borderColor || borderColor === backgroundColor) {\n    drawRoundRect(ctx, left, top, width, height, outerBorderRadius);\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n    return;\n  }\n  const halfBorderWidth = borderWidth / 2;\n  const radii = changeBorderRadius(outerBorderRadius, -halfBorderWidth);\n  drawRoundRect(ctx, left + halfBorderWidth, top + halfBorderWidth, width - borderWidth, height - borderWidth, radii);\n  if (backgroundColor !== 'transparent') {\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n  }\n  if (borderColor !== 'transparent') {\n    ctx.lineWidth = borderWidth;\n    ctx.strokeStyle = borderColor;\n    ctx.closePath();\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n// eslint-disable-next-line max-params\nfunction clearRectWithGradient(ctx, x, y, w, h, topColor, bottomColor) {\n  ctx.save();\n  ctx.globalCompositeOperation = 'copy';\n  const gradient = ctx.createLinearGradient(0, 0, 0, h);\n  gradient.addColorStop(0, topColor);\n  gradient.addColorStop(1, bottomColor);\n  ctx.fillStyle = gradient;\n  ctx.fillRect(x, y, w, h);\n  ctx.restore();\n}\nclass PriceAxisViewRenderer {\n  constructor(data, commonData) {\n    this._internal_setData(data, commonData);\n  }\n  _internal_setData(data, commonData) {\n    this._private__data = data;\n    this._private__commonData = commonData;\n  }\n  _internal_height(rendererOptions, useSecondLine) {\n    if (!this._private__data._internal_visible) {\n      return 0;\n    }\n    return rendererOptions._internal_fontSize + rendererOptions._internal_paddingTop + rendererOptions._internal_paddingBottom;\n  }\n  _internal_draw(target, rendererOptions, textWidthCache, align) {\n    if (!this._private__data._internal_visible || this._private__data._internal_text.length === 0) {\n      return;\n    }\n    const textColor = this._private__data._internal_color;\n    const backgroundColor = this._private__commonData._internal_background;\n    const geometry = target.useBitmapCoordinateSpace(scope => {\n      const ctx = scope.context;\n      ctx.font = rendererOptions._internal_font;\n      const geom = this._private__calculateGeometry(scope, rendererOptions, textWidthCache, align);\n      const gb = geom._internal_bitmap;\n      const drawLabelBody = (labelBackgroundColor, labelBorderColor) => {\n        /*\n         labelBackgroundColor (and labelBorderColor) will always be a solid color (no alpha) [see generateContrastColors in color.ts].\n         Therefore we can draw the rounded label using simplified code (drawRoundRectWithBorder) that doesn't need to ensure the background and the border don't overlap.\n        */\n        if (geom._internal_alignRight) {\n          drawRoundRectWithBorder(ctx, gb._internal_xOutside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, labelBackgroundColor, gb._internal_horzBorder, [gb._internal_radius, 0, 0, gb._internal_radius], labelBorderColor);\n        } else {\n          drawRoundRectWithBorder(ctx, gb._internal_xInside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, labelBackgroundColor, gb._internal_horzBorder, [0, gb._internal_radius, gb._internal_radius, 0], labelBorderColor);\n        }\n      };\n      // draw border\n      // draw label background\n      drawLabelBody(backgroundColor, 'transparent');\n      // draw tick\n      if (this._private__data._internal_tickVisible) {\n        ctx.fillStyle = textColor;\n        ctx.fillRect(gb._internal_xInside, gb._internal_yMid, gb._internal_xTick - gb._internal_xInside, gb._internal_tickHeight);\n      }\n      // draw label border above the tick\n      drawLabelBody('transparent', backgroundColor);\n      // draw separator\n      if (this._private__data._internal_borderVisible) {\n        ctx.fillStyle = rendererOptions._internal_paneBackgroundColor;\n        ctx.fillRect(geom._internal_alignRight ? gb._internal_right - gb._internal_horzBorder : 0, gb._internal_yTop, gb._internal_horzBorder, gb._internal_yBottom - gb._internal_yTop);\n      }\n      return geom;\n    });\n    target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      const gm = geometry._internal_media;\n      ctx.font = rendererOptions._internal_font;\n      ctx.textAlign = geometry._internal_alignRight ? 'right' : 'left';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = textColor;\n      ctx.fillText(this._private__data._internal_text, gm._internal_xText, (gm._internal_yTop + gm._internal_yBottom) / 2 + gm._internal_textMidCorrection);\n    });\n  }\n  _private__calculateGeometry(scope, rendererOptions, textWidthCache, align) {\n    var _a;\n    const {\n      context: ctx,\n      bitmapSize,\n      mediaSize,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    } = scope;\n    const tickSize = this._private__data._internal_tickVisible || !this._private__data._internal_moveTextToInvisibleTick ? rendererOptions._internal_tickLength : 0;\n    const horzBorder = this._private__data._internal_separatorVisible ? rendererOptions._internal_borderSize : 0;\n    const paddingTop = rendererOptions._internal_paddingTop + this._private__commonData._internal_additionalPaddingTop;\n    const paddingBottom = rendererOptions._internal_paddingBottom + this._private__commonData._internal_additionalPaddingBottom;\n    const paddingInner = rendererOptions._internal_paddingInner;\n    const paddingOuter = rendererOptions._internal_paddingOuter;\n    const text = this._private__data._internal_text;\n    const actualTextHeight = rendererOptions._internal_fontSize;\n    const textMidCorrection = textWidthCache._internal_yMidCorrection(ctx, text);\n    const textWidth = Math.ceil(textWidthCache._internal_measureText(ctx, text));\n    const totalHeight = actualTextHeight + paddingTop + paddingBottom;\n    const totalWidth = rendererOptions._internal_borderSize + paddingInner + paddingOuter + textWidth + tickSize;\n    const tickHeightBitmap = Math.max(1, Math.floor(verticalPixelRatio));\n    let totalHeightBitmap = Math.round(totalHeight * verticalPixelRatio);\n    if (totalHeightBitmap % 2 !== tickHeightBitmap % 2) {\n      totalHeightBitmap += 1;\n    }\n    const horzBorderBitmap = horzBorder > 0 ? Math.max(1, Math.floor(horzBorder * horizontalPixelRatio)) : 0;\n    const totalWidthBitmap = Math.round(totalWidth * horizontalPixelRatio);\n    // tick overlaps scale border\n    const tickSizeBitmap = Math.round(tickSize * horizontalPixelRatio);\n    const yMid = (_a = this._private__commonData._internal_fixedCoordinate) !== null && _a !== void 0 ? _a : this._private__commonData._internal_coordinate;\n    const yMidBitmap = Math.round(yMid * verticalPixelRatio) - Math.floor(verticalPixelRatio * 0.5);\n    const yTopBitmap = Math.floor(yMidBitmap + tickHeightBitmap / 2 - totalHeightBitmap / 2);\n    const yBottomBitmap = yTopBitmap + totalHeightBitmap;\n    const alignRight = align === 'right';\n    const xInside = alignRight ? mediaSize.width - horzBorder : horzBorder;\n    const xInsideBitmap = alignRight ? bitmapSize.width - horzBorderBitmap : horzBorderBitmap;\n    let xOutsideBitmap;\n    let xTickBitmap;\n    let xText;\n    if (alignRight) {\n      // 2               1\n      //\n      //              6  5\n      //\n      // 3               4\n      xOutsideBitmap = xInsideBitmap - totalWidthBitmap;\n      xTickBitmap = xInsideBitmap - tickSizeBitmap;\n      xText = xInside - tickSize - paddingInner - horzBorder;\n    } else {\n      // 1               2\n      //\n      // 6  5\n      //\n      // 4               3\n      xOutsideBitmap = xInsideBitmap + totalWidthBitmap;\n      xTickBitmap = xInsideBitmap + tickSizeBitmap;\n      xText = xInside + tickSize + paddingInner;\n    }\n    return {\n      _internal_alignRight: alignRight,\n      _internal_bitmap: {\n        _internal_yTop: yTopBitmap,\n        _internal_yMid: yMidBitmap,\n        _internal_yBottom: yBottomBitmap,\n        _internal_totalWidth: totalWidthBitmap,\n        _internal_totalHeight: totalHeightBitmap,\n        // TODO: it is better to have different horizontal and vertical radii\n        _internal_radius: 2 * horizontalPixelRatio,\n        _internal_horzBorder: horzBorderBitmap,\n        _internal_xOutside: xOutsideBitmap,\n        _internal_xInside: xInsideBitmap,\n        _internal_xTick: xTickBitmap,\n        _internal_tickHeight: tickHeightBitmap,\n        _internal_right: bitmapSize.width\n      },\n      _internal_media: {\n        _internal_yTop: yTopBitmap / verticalPixelRatio,\n        _internal_yBottom: yBottomBitmap / verticalPixelRatio,\n        _internal_xText: xText,\n        _internal_textMidCorrection: textMidCorrection\n      }\n    };\n  }\n}\nclass PriceAxisView {\n  constructor(ctor) {\n    this._private__commonRendererData = {\n      _internal_coordinate: 0,\n      _internal_background: '#000',\n      _internal_additionalPaddingBottom: 0,\n      _internal_additionalPaddingTop: 0\n    };\n    this._private__axisRendererData = {\n      _internal_text: '',\n      _internal_visible: false,\n      _internal_tickVisible: true,\n      _internal_moveTextToInvisibleTick: false,\n      _internal_borderColor: '',\n      _internal_color: '#FFF',\n      _internal_borderVisible: false,\n      _internal_separatorVisible: false\n    };\n    this._private__paneRendererData = {\n      _internal_text: '',\n      _internal_visible: false,\n      _internal_tickVisible: false,\n      _internal_moveTextToInvisibleTick: true,\n      _internal_borderColor: '',\n      _internal_color: '#FFF',\n      _internal_borderVisible: true,\n      _internal_separatorVisible: true\n    };\n    this._private__invalidated = true;\n    this._private__axisRenderer = new (ctor || PriceAxisViewRenderer)(this._private__axisRendererData, this._private__commonRendererData);\n    this._private__paneRenderer = new (ctor || PriceAxisViewRenderer)(this._private__paneRendererData, this._private__commonRendererData);\n  }\n  _internal_text() {\n    this._private__updateRendererDataIfNeeded();\n    return this._private__axisRendererData._internal_text;\n  }\n  _internal_coordinate() {\n    this._private__updateRendererDataIfNeeded();\n    return this._private__commonRendererData._internal_coordinate;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_height(rendererOptions, useSecondLine = false) {\n    return Math.max(this._private__axisRenderer._internal_height(rendererOptions, useSecondLine), this._private__paneRenderer._internal_height(rendererOptions, useSecondLine));\n  }\n  _internal_getFixedCoordinate() {\n    return this._private__commonRendererData._internal_fixedCoordinate || 0;\n  }\n  _internal_setFixedCoordinate(value) {\n    this._private__commonRendererData._internal_fixedCoordinate = value;\n  }\n  _internal_isVisible() {\n    this._private__updateRendererDataIfNeeded();\n    return this._private__axisRendererData._internal_visible || this._private__paneRendererData._internal_visible;\n  }\n  _internal_isAxisLabelVisible() {\n    this._private__updateRendererDataIfNeeded();\n    return this._private__axisRendererData._internal_visible;\n  }\n  _internal_renderer(priceScale) {\n    this._private__updateRendererDataIfNeeded();\n    // force update tickVisible state from price scale options\n    // because we don't have and we can't have price axis in other methods\n    // (like paneRenderer or any other who call _updateRendererDataIfNeeded)\n    this._private__axisRendererData._internal_tickVisible = this._private__axisRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n    this._private__paneRendererData._internal_tickVisible = this._private__paneRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n    this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n    this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n    return this._private__axisRenderer;\n  }\n  _internal_paneRenderer() {\n    this._private__updateRendererDataIfNeeded();\n    this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n    this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n    return this._private__paneRenderer;\n  }\n  _private__updateRendererDataIfNeeded() {\n    if (this._private__invalidated) {\n      this._private__axisRendererData._internal_tickVisible = true;\n      this._private__paneRendererData._internal_tickVisible = false;\n      this._internal__updateRendererData(this._private__axisRendererData, this._private__paneRendererData, this._private__commonRendererData);\n    }\n  }\n}\nclass CrosshairPriceAxisView extends PriceAxisView {\n  constructor(source, priceScale, valueProvider) {\n    super();\n    this._private__source = source;\n    this._private__priceScale = priceScale;\n    this._private__valueProvider = valueProvider;\n  }\n  _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n    axisRendererData._internal_visible = false;\n    if (this._private__source._internal_options().mode === 2 /* CrosshairMode.Hidden */) {\n      return;\n    }\n    const options = this._private__source._internal_options().horzLine;\n    if (!options.labelVisible) {\n      return;\n    }\n    const firstValue = this._private__priceScale._internal_firstValue();\n    if (!this._private__source._internal_visible() || this._private__priceScale._internal_isEmpty() || firstValue === null) {\n      return;\n    }\n    const colors = generateContrastColors(options.labelBackgroundColor);\n    commonRendererData._internal_background = colors._internal_background;\n    axisRendererData._internal_color = colors._internal_foreground;\n    const additionalPadding = 2 / 12 * this._private__priceScale._internal_fontSize();\n    commonRendererData._internal_additionalPaddingTop = additionalPadding;\n    commonRendererData._internal_additionalPaddingBottom = additionalPadding;\n    const value = this._private__valueProvider(this._private__priceScale);\n    commonRendererData._internal_coordinate = value._internal_coordinate;\n    axisRendererData._internal_text = this._private__priceScale._internal_formatPrice(value._internal_price, firstValue);\n    axisRendererData._internal_visible = true;\n  }\n}\nconst optimizationReplacementRe = /[1-9]/g;\nconst radius$1 = 2;\nclass TimeAxisViewRenderer {\n  constructor() {\n    this._private__data = null;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal_draw(target, rendererOptions) {\n    if (this._private__data === null || this._private__data._internal_visible === false || this._private__data._internal_text.length === 0) {\n      return;\n    }\n    const textWidth = target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      ctx.font = rendererOptions._internal_font;\n      return Math.round(rendererOptions._internal_widthCache._internal_measureText(ctx, ensureNotNull(this._private__data)._internal_text, optimizationReplacementRe));\n    });\n    if (textWidth <= 0) {\n      return;\n    }\n    const horzMargin = rendererOptions._internal_paddingHorizontal;\n    const labelWidth = textWidth + 2 * horzMargin;\n    const labelWidthHalf = labelWidth / 2;\n    const timeScaleWidth = this._private__data._internal_width;\n    let coordinate = this._private__data._internal_coordinate;\n    let x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n    if (x1 < 0) {\n      coordinate = coordinate + Math.abs(0 - x1);\n      x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n    } else if (x1 + labelWidth > timeScaleWidth) {\n      coordinate = coordinate - Math.abs(timeScaleWidth - (x1 + labelWidth));\n      x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n    }\n    const x2 = x1 + labelWidth;\n    const y1 = 0;\n    const y2 = Math.ceil(y1 + rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_paddingTop + rendererOptions._internal_fontSize + rendererOptions._internal_paddingBottom);\n    target.useBitmapCoordinateSpace(({\n      context: ctx,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    }) => {\n      const data = ensureNotNull(this._private__data);\n      ctx.fillStyle = data._internal_background;\n      const x1scaled = Math.round(x1 * horizontalPixelRatio);\n      const y1scaled = Math.round(y1 * verticalPixelRatio);\n      const x2scaled = Math.round(x2 * horizontalPixelRatio);\n      const y2scaled = Math.round(y2 * verticalPixelRatio);\n      const radiusScaled = Math.round(radius$1 * horizontalPixelRatio);\n      ctx.beginPath();\n      ctx.moveTo(x1scaled, y1scaled);\n      ctx.lineTo(x1scaled, y2scaled - radiusScaled);\n      ctx.arcTo(x1scaled, y2scaled, x1scaled + radiusScaled, y2scaled, radiusScaled);\n      ctx.lineTo(x2scaled - radiusScaled, y2scaled);\n      ctx.arcTo(x2scaled, y2scaled, x2scaled, y2scaled - radiusScaled, radiusScaled);\n      ctx.lineTo(x2scaled, y1scaled);\n      ctx.fill();\n      if (data._internal_tickVisible) {\n        const tickX = Math.round(data._internal_coordinate * horizontalPixelRatio);\n        const tickTop = y1scaled;\n        const tickBottom = Math.round((tickTop + rendererOptions._internal_tickLength) * verticalPixelRatio);\n        ctx.fillStyle = data._internal_color;\n        const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n        ctx.fillRect(tickX - tickOffset, tickTop, tickWidth, tickBottom - tickTop);\n      }\n    });\n    target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      const data = ensureNotNull(this._private__data);\n      const yText = y1 + rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_paddingTop + rendererOptions._internal_fontSize / 2;\n      ctx.font = rendererOptions._internal_font;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = data._internal_color;\n      const textYCorrection = rendererOptions._internal_widthCache._internal_yMidCorrection(ctx, 'Apr0');\n      ctx.translate(x1 + horzMargin, yText + textYCorrection);\n      ctx.fillText(data._internal_text, 0, 0);\n    });\n  }\n}\nclass CrosshairTimeAxisView {\n  constructor(crosshair, model, valueProvider) {\n    this._private__invalidated = true;\n    this._private__renderer = new TimeAxisViewRenderer();\n    this._private__rendererData = {\n      _internal_visible: false,\n      _internal_background: '#4c525e',\n      _internal_color: 'white',\n      _internal_text: '',\n      _internal_width: 0,\n      _internal_coordinate: NaN,\n      _internal_tickVisible: true\n    };\n    this._private__crosshair = crosshair;\n    this._private__model = model;\n    this._private__valueProvider = valueProvider;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n    }\n    this._private__renderer._internal_setData(this._private__rendererData);\n    return this._private__renderer;\n  }\n  _private__updateImpl() {\n    const data = this._private__rendererData;\n    data._internal_visible = false;\n    if (this._private__crosshair._internal_options().mode === 2 /* CrosshairMode.Hidden */) {\n      return;\n    }\n    const options = this._private__crosshair._internal_options().vertLine;\n    if (!options.labelVisible) {\n      return;\n    }\n    const timeScale = this._private__model._internal_timeScale();\n    if (timeScale._internal_isEmpty()) {\n      return;\n    }\n    data._internal_width = timeScale._internal_width();\n    const value = this._private__valueProvider();\n    if (value === null) {\n      return;\n    }\n    data._internal_coordinate = value._internal_coordinate;\n    const currentTime = timeScale._internal_indexToTimeScalePoint(this._private__crosshair._internal_appliedIndex());\n    data._internal_text = timeScale._internal_formatDateTime(ensureNotNull(currentTime));\n    data._internal_visible = true;\n    const colors = generateContrastColors(options.labelBackgroundColor);\n    data._internal_background = colors._internal_background;\n    data._internal_color = colors._internal_foreground;\n    data._internal_tickVisible = timeScale._internal_options().ticksVisible;\n  }\n}\nclass DataSource {\n  constructor() {\n    this._internal__priceScale = null;\n    this._private__zorder = 0;\n  }\n  _internal_zorder() {\n    return this._private__zorder;\n  }\n  _internal_setZorder(zorder) {\n    this._private__zorder = zorder;\n  }\n  _internal_priceScale() {\n    return this._internal__priceScale;\n  }\n  _internal_setPriceScale(priceScale) {\n    this._internal__priceScale = priceScale;\n  }\n  _internal_labelPaneViews(pane) {\n    return [];\n  }\n  _internal_timeAxisViews() {\n    return [];\n  }\n  _internal_visible() {\n    return true;\n  }\n}\n\n/**\n * Represents the crosshair mode.\n */\nvar CrosshairMode;\n(function (CrosshairMode) {\n  /**\n   * This mode allows crosshair to move freely on the chart.\n   */\n  CrosshairMode[CrosshairMode[\"Normal\"] = 0] = \"Normal\";\n  /**\n   * This mode sticks crosshair's horizontal line to the price value of a single-value series or to the close price of OHLC-based series.\n   */\n  CrosshairMode[CrosshairMode[\"Magnet\"] = 1] = \"Magnet\";\n  /**\n   * This mode disables rendering of the crosshair.\n   */\n  CrosshairMode[CrosshairMode[\"Hidden\"] = 2] = \"Hidden\";\n})(CrosshairMode || (CrosshairMode = {}));\nclass Crosshair extends DataSource {\n  constructor(model, options) {\n    super();\n    this._private__pane = null;\n    this._private__price = NaN;\n    this._private__index = 0;\n    this._private__visible = true;\n    this._private__priceAxisViews = new Map();\n    this._private__subscribed = false;\n    this._private__x = NaN;\n    this._private__y = NaN;\n    this._private__originX = NaN;\n    this._private__originY = NaN;\n    this._private__model = model;\n    this._private__options = options;\n    this._private__markersPaneView = new CrosshairMarksPaneView(model, this);\n    const valuePriceProvider = (rawPriceProvider, rawCoordinateProvider) => {\n      return priceScale => {\n        const coordinate = rawCoordinateProvider();\n        const rawPrice = rawPriceProvider();\n        if (priceScale === ensureNotNull(this._private__pane)._internal_defaultPriceScale()) {\n          // price must be defined\n          return {\n            _internal_price: rawPrice,\n            _internal_coordinate: coordinate\n          };\n        } else {\n          // always convert from coordinate\n          const firstValue = ensureNotNull(priceScale._internal_firstValue());\n          const price = priceScale._internal_coordinateToPrice(coordinate, firstValue);\n          return {\n            _internal_price: price,\n            _internal_coordinate: coordinate\n          };\n        }\n      };\n    };\n    const valueTimeProvider = (rawIndexProvider, rawCoordinateProvider) => {\n      return () => {\n        const time = this._private__model._internal_timeScale()._internal_indexToTime(rawIndexProvider());\n        const coordinate = rawCoordinateProvider();\n        if (!time || !Number.isFinite(coordinate)) {\n          return null;\n        }\n        return {\n          _internal_time: time,\n          _internal_coordinate: coordinate\n        };\n      };\n    };\n    // for current position always return both price and coordinate\n    this._private__currentPosPriceProvider = valuePriceProvider(() => this._private__price, () => this._private__y);\n    const currentPosTimeProvider = valueTimeProvider(() => this._private__index, () => this._internal_appliedX());\n    this._private__timeAxisView = new CrosshairTimeAxisView(this, model, currentPosTimeProvider);\n    this._private__paneView = new CrosshairPaneView(this);\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_saveOriginCoord(x, y) {\n    this._private__originX = x;\n    this._private__originY = y;\n  }\n  _internal_clearOriginCoord() {\n    this._private__originX = NaN;\n    this._private__originY = NaN;\n  }\n  _internal_originCoordX() {\n    return this._private__originX;\n  }\n  _internal_originCoordY() {\n    return this._private__originY;\n  }\n  _internal_setPosition(index, price, pane) {\n    if (!this._private__subscribed) {\n      this._private__subscribed = true;\n    }\n    this._private__visible = true;\n    this._private__tryToUpdateViews(index, price, pane);\n  }\n  _internal_appliedIndex() {\n    return this._private__index;\n  }\n  _internal_appliedX() {\n    return this._private__x;\n  }\n  _internal_appliedY() {\n    return this._private__y;\n  }\n  _internal_visible() {\n    return this._private__visible;\n  }\n  _internal_clearPosition() {\n    this._private__visible = false;\n    this._private__setIndexToLastSeriesBarIndex();\n    this._private__price = NaN;\n    this._private__x = NaN;\n    this._private__y = NaN;\n    this._private__pane = null;\n    this._internal_clearOriginCoord();\n  }\n  _internal_paneViews(pane) {\n    return this._private__pane !== null ? [this._private__paneView, this._private__markersPaneView] : [];\n  }\n  _internal_horzLineVisible(pane) {\n    return pane === this._private__pane && this._private__options.horzLine.visible;\n  }\n  _internal_vertLineVisible() {\n    return this._private__options.vertLine.visible;\n  }\n  _internal_priceAxisViews(pane, priceScale) {\n    if (!this._private__visible || this._private__pane !== pane) {\n      this._private__priceAxisViews.clear();\n    }\n    const views = [];\n    if (this._private__pane === pane) {\n      views.push(this._private__createPriceAxisViewOnDemand(this._private__priceAxisViews, priceScale, this._private__currentPosPriceProvider));\n    }\n    return views;\n  }\n  _internal_timeAxisViews() {\n    return this._private__visible ? [this._private__timeAxisView] : [];\n  }\n  _internal_pane() {\n    return this._private__pane;\n  }\n  _internal_updateAllViews() {\n    this._private__paneView._internal_update();\n    this._private__priceAxisViews.forEach(value => value._internal_update());\n    this._private__timeAxisView._internal_update();\n    this._private__markersPaneView._internal_update();\n  }\n  _private__priceScaleByPane(pane) {\n    if (pane && !pane._internal_defaultPriceScale()._internal_isEmpty()) {\n      return pane._internal_defaultPriceScale();\n    }\n    return null;\n  }\n  _private__tryToUpdateViews(index, price, pane) {\n    if (this._private__tryToUpdateData(index, price, pane)) {\n      this._internal_updateAllViews();\n    }\n  }\n  _private__tryToUpdateData(newIndex, newPrice, newPane) {\n    const oldX = this._private__x;\n    const oldY = this._private__y;\n    const oldPrice = this._private__price;\n    const oldIndex = this._private__index;\n    const oldPane = this._private__pane;\n    const priceScale = this._private__priceScaleByPane(newPane);\n    this._private__index = newIndex;\n    this._private__x = isNaN(newIndex) ? NaN : this._private__model._internal_timeScale()._internal_indexToCoordinate(newIndex);\n    this._private__pane = newPane;\n    const firstValue = priceScale !== null ? priceScale._internal_firstValue() : null;\n    if (priceScale !== null && firstValue !== null) {\n      this._private__price = newPrice;\n      this._private__y = priceScale._internal_priceToCoordinate(newPrice, firstValue);\n    } else {\n      this._private__price = NaN;\n      this._private__y = NaN;\n    }\n    return oldX !== this._private__x || oldY !== this._private__y || oldIndex !== this._private__index || oldPrice !== this._private__price || oldPane !== this._private__pane;\n  }\n  _private__setIndexToLastSeriesBarIndex() {\n    const lastIndexes = this._private__model._internal_serieses().map(s => s._internal_bars()._internal_lastIndex()).filter(notNull);\n    const lastBarIndex = lastIndexes.length === 0 ? null : Math.max(...lastIndexes);\n    this._private__index = lastBarIndex !== null ? lastBarIndex : NaN;\n  }\n  _private__createPriceAxisViewOnDemand(map, priceScale, valueProvider) {\n    let view = map.get(priceScale);\n    if (view === undefined) {\n      view = new CrosshairPriceAxisView(this, priceScale, valueProvider);\n      map.set(priceScale, view);\n    }\n    return view;\n  }\n}\nfunction isDefaultPriceScale(priceScaleId) {\n  return priceScaleId === \"left\" /* DefaultPriceScaleId.Left */ || priceScaleId === \"right\" /* DefaultPriceScaleId.Right */;\n}\nfunction mergePaneInvalidation(beforeValue, newValue) {\n  if (beforeValue === undefined) {\n    return newValue;\n  }\n  const level = Math.max(beforeValue._internal_level, newValue._internal_level);\n  const autoScale = beforeValue._internal_autoScale || newValue._internal_autoScale;\n  return {\n    _internal_level: level,\n    _internal_autoScale: autoScale\n  };\n}\nclass InvalidateMask {\n  constructor(globalLevel) {\n    this._private__invalidatedPanes = new Map();\n    this._private__timeScaleInvalidations = [];\n    this._private__globalLevel = globalLevel;\n  }\n  _internal_invalidatePane(paneIndex, invalidation) {\n    const prevValue = this._private__invalidatedPanes.get(paneIndex);\n    const newValue = mergePaneInvalidation(prevValue, invalidation);\n    this._private__invalidatedPanes.set(paneIndex, newValue);\n  }\n  _internal_fullInvalidation() {\n    return this._private__globalLevel;\n  }\n  _internal_invalidateForPane(paneIndex) {\n    const paneInvalidation = this._private__invalidatedPanes.get(paneIndex);\n    if (paneInvalidation === undefined) {\n      return {\n        _internal_level: this._private__globalLevel\n      };\n    }\n    return {\n      _internal_level: Math.max(this._private__globalLevel, paneInvalidation._internal_level),\n      _internal_autoScale: paneInvalidation._internal_autoScale\n    };\n  }\n  _internal_setFitContent() {\n    this._internal_stopTimeScaleAnimation();\n    // modifies both bar spacing and right offset\n    this._private__timeScaleInvalidations = [{\n      _internal_type: 0 /* TimeScaleInvalidationType.FitContent */\n    }];\n  }\n  _internal_applyRange(range) {\n    this._internal_stopTimeScaleAnimation();\n    // modifies both bar spacing and right offset\n    this._private__timeScaleInvalidations = [{\n      _internal_type: 1 /* TimeScaleInvalidationType.ApplyRange */,\n      _internal_value: range\n    }];\n  }\n  _internal_setTimeScaleAnimation(animation) {\n    this._private__removeTimeScaleAnimation();\n    this._private__timeScaleInvalidations.push({\n      _internal_type: 5 /* TimeScaleInvalidationType.Animation */,\n      _internal_value: animation\n    });\n  }\n  _internal_stopTimeScaleAnimation() {\n    this._private__removeTimeScaleAnimation();\n    this._private__timeScaleInvalidations.push({\n      _internal_type: 6 /* TimeScaleInvalidationType.StopAnimation */\n    });\n  }\n  _internal_resetTimeScale() {\n    this._internal_stopTimeScaleAnimation();\n    // modifies both bar spacing and right offset\n    this._private__timeScaleInvalidations = [{\n      _internal_type: 4 /* TimeScaleInvalidationType.Reset */\n    }];\n  }\n  _internal_setBarSpacing(barSpacing) {\n    this._internal_stopTimeScaleAnimation();\n    this._private__timeScaleInvalidations.push({\n      _internal_type: 2 /* TimeScaleInvalidationType.ApplyBarSpacing */,\n      _internal_value: barSpacing\n    });\n  }\n  _internal_setRightOffset(offset) {\n    this._internal_stopTimeScaleAnimation();\n    this._private__timeScaleInvalidations.push({\n      _internal_type: 3 /* TimeScaleInvalidationType.ApplyRightOffset */,\n      _internal_value: offset\n    });\n  }\n  _internal_timeScaleInvalidations() {\n    return this._private__timeScaleInvalidations;\n  }\n  _internal_merge(other) {\n    for (const tsInvalidation of other._private__timeScaleInvalidations) {\n      this._private__applyTimeScaleInvalidation(tsInvalidation);\n    }\n    this._private__globalLevel = Math.max(this._private__globalLevel, other._private__globalLevel);\n    other._private__invalidatedPanes.forEach((invalidation, index) => {\n      this._internal_invalidatePane(index, invalidation);\n    });\n  }\n  static _internal_light() {\n    return new InvalidateMask(2 /* InvalidationLevel.Light */);\n  }\n  static _internal_full() {\n    return new InvalidateMask(3 /* InvalidationLevel.Full */);\n  }\n  _private__applyTimeScaleInvalidation(invalidation) {\n    switch (invalidation._internal_type) {\n      case 0 /* TimeScaleInvalidationType.FitContent */:\n        this._internal_setFitContent();\n        break;\n      case 1 /* TimeScaleInvalidationType.ApplyRange */:\n        this._internal_applyRange(invalidation._internal_value);\n        break;\n      case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n        this._internal_setBarSpacing(invalidation._internal_value);\n        break;\n      case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n        this._internal_setRightOffset(invalidation._internal_value);\n        break;\n      case 4 /* TimeScaleInvalidationType.Reset */:\n        this._internal_resetTimeScale();\n        break;\n      case 5 /* TimeScaleInvalidationType.Animation */:\n        this._internal_setTimeScaleAnimation(invalidation._internal_value);\n        break;\n      case 6 /* TimeScaleInvalidationType.StopAnimation */:\n        this._private__removeTimeScaleAnimation();\n    }\n  }\n  _private__removeTimeScaleAnimation() {\n    const index = this._private__timeScaleInvalidations.findIndex(inv => inv._internal_type === 5 /* TimeScaleInvalidationType.Animation */);\n    if (index !== -1) {\n      this._private__timeScaleInvalidations.splice(index, 1);\n    }\n  }\n}\nconst formatterOptions = {\n  _internal_decimalSign: '.',\n  _internal_decimalSignFractional: '\\''\n};\n/**\n * @param value - The number of convert.\n * @param length - The length. Must be between 0 and 16 inclusive.\n */\nfunction numberToStringWithLeadingZero(value, length) {\n  if (!isNumber(value)) {\n    return 'n/a';\n  }\n  if (!isInteger(length)) {\n    throw new TypeError('invalid length');\n  }\n  if (length < 0 || length > 16) {\n    throw new TypeError('invalid length');\n  }\n  if (length === 0) {\n    return value.toString();\n  }\n  const dummyString = '0000000000000000';\n  return (dummyString + value.toString()).slice(-length);\n}\nclass PriceFormatter {\n  constructor(priceScale, minMove) {\n    if (!minMove) {\n      minMove = 1;\n    }\n    if (!isNumber(priceScale) || !isInteger(priceScale)) {\n      priceScale = 100;\n    }\n    if (priceScale < 0) {\n      throw new TypeError('invalid base');\n    }\n    this._private__priceScale = priceScale;\n    this._private__minMove = minMove;\n    this._private__calculateDecimal();\n  }\n  format(price) {\n    // \\u2212 is unicode's minus sign https://www.fileformat.info/info/unicode/char/2212/index.htm\n    // we should use it because it has the same width as plus sign +\n    const sign = price < 0 ? '\\u2212' : '';\n    price = Math.abs(price);\n    return sign + this._private__formatAsDecimal(price);\n  }\n  _private__calculateDecimal() {\n    // check if this._base is power of 10\n    // for double fractional _fractionalLength if for the main fractional only\n    this._internal__fractionalLength = 0;\n    if (this._private__priceScale > 0 && this._private__minMove > 0) {\n      let base = this._private__priceScale;\n      while (base > 1) {\n        base /= 10;\n        this._internal__fractionalLength++;\n      }\n    }\n  }\n  _private__formatAsDecimal(price) {\n    const base = this._private__priceScale / this._private__minMove;\n    let intPart = Math.floor(price);\n    let fracString = '';\n    const fracLength = this._internal__fractionalLength !== undefined ? this._internal__fractionalLength : NaN;\n    if (base > 1) {\n      let fracPart = +(Math.round(price * base) - intPart * base).toFixed(this._internal__fractionalLength);\n      if (fracPart >= base) {\n        fracPart -= base;\n        intPart += 1;\n      }\n      fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(+fracPart.toFixed(this._internal__fractionalLength) * this._private__minMove, fracLength);\n    } else {\n      // should round int part to min move\n      intPart = Math.round(intPart * base) / base;\n      // if min move > 1, fractional part is always = 0\n      if (fracLength > 0) {\n        fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(0, fracLength);\n      }\n    }\n    return intPart.toFixed(0) + fracString;\n  }\n}\nclass PercentageFormatter extends PriceFormatter {\n  constructor(priceScale = 100) {\n    super(priceScale);\n  }\n  format(price) {\n    return `${super.format(price)}%`;\n  }\n}\nclass VolumeFormatter {\n  constructor(precision) {\n    this._private__precision = precision;\n  }\n  format(vol) {\n    let sign = '';\n    if (vol < 0) {\n      sign = '-';\n      vol = -vol;\n    }\n    if (vol < 995) {\n      return sign + this._private__formatNumber(vol);\n    } else if (vol < 999995) {\n      return sign + this._private__formatNumber(vol / 1000) + 'K';\n    } else if (vol < 999999995) {\n      vol = 1000 * Math.round(vol / 1000);\n      return sign + this._private__formatNumber(vol / 1000000) + 'M';\n    } else {\n      vol = 1000000 * Math.round(vol / 1000000);\n      return sign + this._private__formatNumber(vol / 1000000000) + 'B';\n    }\n  }\n  _private__formatNumber(value) {\n    let res;\n    const priceScale = Math.pow(10, this._private__precision);\n    value = Math.round(value * priceScale) / priceScale;\n    if (value >= 1e-15 && value < 1) {\n      res = value.toFixed(this._private__precision).replace(/\\.?0+$/, ''); // regex removes trailing zeroes\n    } else {\n      res = String(value);\n    }\n    return res.replace(/(\\.[1-9]*)0+$/, (e, p1) => p1);\n  }\n}\n\n// eslint-disable-next-line max-params, complexity\nfunction walkLine(renderingScope, items, lineType, visibleRange, barWidth,\n// the values returned by styleGetter are compared using the operator !==,\n// so if styleGetter returns objects, then styleGetter should return the same object for equal styles\nstyleGetter, finishStyledArea) {\n  if (items.length === 0 || visibleRange.from >= items.length || visibleRange.to <= 0) {\n    return;\n  }\n  const {\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  } = renderingScope;\n  const firstItem = items[visibleRange.from];\n  let currentStyle = styleGetter(renderingScope, firstItem);\n  let currentStyleFirstItem = firstItem;\n  if (visibleRange.to - visibleRange.from < 2) {\n    const halfBarWidth = barWidth / 2;\n    ctx.beginPath();\n    const item1 = {\n      _internal_x: firstItem._internal_x - halfBarWidth,\n      _internal_y: firstItem._internal_y\n    };\n    const item2 = {\n      _internal_x: firstItem._internal_x + halfBarWidth,\n      _internal_y: firstItem._internal_y\n    };\n    ctx.moveTo(item1._internal_x * horizontalPixelRatio, item1._internal_y * verticalPixelRatio);\n    ctx.lineTo(item2._internal_x * horizontalPixelRatio, item2._internal_y * verticalPixelRatio);\n    finishStyledArea(renderingScope, currentStyle, item1, item2);\n  } else {\n    const changeStyle = (newStyle, currentItem) => {\n      finishStyledArea(renderingScope, currentStyle, currentStyleFirstItem, currentItem);\n      ctx.beginPath();\n      currentStyle = newStyle;\n      currentStyleFirstItem = currentItem;\n    };\n    let currentItem = currentStyleFirstItem;\n    ctx.beginPath();\n    ctx.moveTo(firstItem._internal_x * horizontalPixelRatio, firstItem._internal_y * verticalPixelRatio);\n    for (let i = visibleRange.from + 1; i < visibleRange.to; ++i) {\n      currentItem = items[i];\n      const itemStyle = styleGetter(renderingScope, currentItem);\n      switch (lineType) {\n        case 0 /* LineType.Simple */:\n          ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n          break;\n        case 1 /* LineType.WithSteps */:\n          ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, items[i - 1]._internal_y * verticalPixelRatio);\n          if (itemStyle !== currentStyle) {\n            changeStyle(itemStyle, currentItem);\n            ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, items[i - 1]._internal_y * verticalPixelRatio);\n          }\n          ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n          break;\n        case 2 /* LineType.Curved */:\n          {\n            const [cp1, cp2] = getControlPoints(items, i - 1, i);\n            ctx.bezierCurveTo(cp1._internal_x * horizontalPixelRatio, cp1._internal_y * verticalPixelRatio, cp2._internal_x * horizontalPixelRatio, cp2._internal_y * verticalPixelRatio, currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n            break;\n          }\n      }\n      if (lineType !== 1 /* LineType.WithSteps */ && itemStyle !== currentStyle) {\n        changeStyle(itemStyle, currentItem);\n        ctx.moveTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n      }\n    }\n    if (currentStyleFirstItem !== currentItem || currentStyleFirstItem === currentItem && lineType === 1 /* LineType.WithSteps */) {\n      finishStyledArea(renderingScope, currentStyle, currentStyleFirstItem, currentItem);\n    }\n  }\n}\nconst curveTension = 6;\nfunction subtract(p1, p2) {\n  return {\n    _internal_x: p1._internal_x - p2._internal_x,\n    _internal_y: p1._internal_y - p2._internal_y\n  };\n}\nfunction add(p1, p2) {\n  return {\n    _internal_x: p1._internal_x + p2._internal_x,\n    _internal_y: p1._internal_y + p2._internal_y\n  };\n}\nfunction divide(p1, n) {\n  return {\n    _internal_x: p1._internal_x / n,\n    _internal_y: p1._internal_y / n\n  };\n}\n/**\n * @returns Two control points that can be used as arguments to {@link CanvasRenderingContext2D.bezierCurveTo} to draw a curved line between `points[fromPointIndex]` and `points[toPointIndex]`.\n */\nfunction getControlPoints(points, fromPointIndex, toPointIndex) {\n  const beforeFromPointIndex = Math.max(0, fromPointIndex - 1);\n  const afterToPointIndex = Math.min(points.length - 1, toPointIndex + 1);\n  const cp1 = add(points[fromPointIndex], divide(subtract(points[toPointIndex], points[beforeFromPointIndex]), curveTension));\n  const cp2 = subtract(points[toPointIndex], divide(subtract(points[afterToPointIndex], points[fromPointIndex]), curveTension));\n  return [cp1, cp2];\n}\nfunction finishStyledArea$1(baseLevelCoordinate, scope, style, areaFirstItem, newAreaFirstItem) {\n  const {\n    context,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  } = scope;\n  context.lineTo(newAreaFirstItem._internal_x * horizontalPixelRatio, baseLevelCoordinate * verticalPixelRatio);\n  context.lineTo(areaFirstItem._internal_x * horizontalPixelRatio, baseLevelCoordinate * verticalPixelRatio);\n  context.closePath();\n  context.fillStyle = style;\n  context.fill();\n}\nclass PaneRendererAreaBase extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._internal__data = null;\n  }\n  _internal_setData(data) {\n    this._internal__data = data;\n  }\n  _internal__drawImpl(renderingScope) {\n    var _a;\n    if (this._internal__data === null) {\n      return;\n    }\n    const {\n      _internal_items: items,\n      _internal_visibleRange: visibleRange,\n      _internal_barWidth: barWidth,\n      _internal_lineWidth: lineWidth,\n      _internal_lineStyle: lineStyle,\n      _internal_lineType: lineType\n    } = this._internal__data;\n    const baseLevelCoordinate = (_a = this._internal__data._internal_baseLevelCoordinate) !== null && _a !== void 0 ? _a : this._internal__data._internal_invertFilledArea ? 0 : renderingScope.mediaSize.height;\n    if (visibleRange === null) {\n      return;\n    }\n    const ctx = renderingScope.context;\n    ctx.lineCap = 'butt';\n    ctx.lineJoin = 'round';\n    ctx.lineWidth = lineWidth;\n    setLineStyle(ctx, lineStyle);\n    // walk lines with width=1 to have more accurate gradient's filling\n    ctx.lineWidth = 1;\n    walkLine(renderingScope, items, lineType, visibleRange, barWidth, this._internal__fillStyle.bind(this), finishStyledArea$1.bind(null, baseLevelCoordinate));\n  }\n}\nfunction clamp(value, minVal, maxVal) {\n  return Math.min(Math.max(value, minVal), maxVal);\n}\nfunction isBaseDecimal(value) {\n  if (value < 0) {\n    return false;\n  }\n  for (let current = value; current > 1; current /= 10) {\n    if (current % 10 !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction greaterOrEqual(x1, x2, epsilon) {\n  return x2 - x1 <= epsilon;\n}\nfunction equal(x1, x2, epsilon) {\n  return Math.abs(x1 - x2) < epsilon;\n}\n// We can't use Math.min(...arr) because that would only support arrays shorter than 65536 items.\nfunction min(arr) {\n  if (arr.length < 1) {\n    throw Error('array is empty');\n  }\n  let minVal = arr[0];\n  for (let i = 1; i < arr.length; ++i) {\n    if (arr[i] < minVal) {\n      minVal = arr[i];\n    }\n  }\n  return minVal;\n}\nfunction ceiledEven(x) {\n  const ceiled = Math.ceil(x);\n  return ceiled % 2 !== 0 ? ceiled - 1 : ceiled;\n}\nfunction ceiledOdd(x) {\n  const ceiled = Math.ceil(x);\n  return ceiled % 2 === 0 ? ceiled - 1 : ceiled;\n}\nclass GradientStyleCache {\n  _internal_get(scope, params) {\n    const cachedParams = this._private__params;\n    const {\n      _internal_topColor1: topColor1,\n      _internal_topColor2: topColor2,\n      _internal_bottomColor1: bottomColor1,\n      _internal_bottomColor2: bottomColor2,\n      _internal_bottom: bottom,\n      _internal_baseLevelCoordinate: baseLevelCoordinate\n    } = params;\n    if (this._private__cachedValue === undefined || cachedParams === undefined || cachedParams._internal_topColor1 !== topColor1 || cachedParams._internal_topColor2 !== topColor2 || cachedParams._internal_bottomColor1 !== bottomColor1 || cachedParams._internal_bottomColor2 !== bottomColor2 || cachedParams._internal_baseLevelCoordinate !== baseLevelCoordinate || cachedParams._internal_bottom !== bottom) {\n      const gradient = scope.context.createLinearGradient(0, 0, 0, bottom);\n      gradient.addColorStop(0, topColor1);\n      if (baseLevelCoordinate != null) {\n        const baselinePercent = clamp(baseLevelCoordinate * scope.verticalPixelRatio / bottom, 0, 1);\n        gradient.addColorStop(baselinePercent, topColor2);\n        gradient.addColorStop(baselinePercent, bottomColor1);\n      }\n      gradient.addColorStop(1, bottomColor2);\n      this._private__cachedValue = gradient;\n      this._private__params = params;\n    }\n    return this._private__cachedValue;\n  }\n}\nclass PaneRendererArea extends PaneRendererAreaBase {\n  constructor() {\n    super(...arguments);\n    this._private__fillCache = new GradientStyleCache();\n  }\n  _internal__fillStyle(renderingScope, item) {\n    return this._private__fillCache._internal_get(renderingScope, {\n      _internal_topColor1: item._internal_topColor,\n      _internal_topColor2: '',\n      _internal_bottomColor1: '',\n      _internal_bottomColor2: item._internal_bottomColor,\n      _internal_bottom: renderingScope.bitmapSize.height\n    });\n  }\n}\nfunction drawSeriesPointMarkers(renderingScope, items, pointMarkersRadius, visibleRange,\n// the values returned by styleGetter are compared using the operator !==,\n// so if styleGetter returns objects, then styleGetter should return the same object for equal styles\nstyleGetter) {\n  const {\n    horizontalPixelRatio,\n    verticalPixelRatio,\n    context\n  } = renderingScope;\n  let prevStyle = null;\n  const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n  const correction = tickWidth % 2 / 2;\n  const radius = pointMarkersRadius * verticalPixelRatio + correction;\n  for (let i = visibleRange.to - 1; i >= visibleRange.from; --i) {\n    const point = items[i];\n    if (point) {\n      const style = styleGetter(renderingScope, point);\n      if (style !== prevStyle) {\n        context.beginPath();\n        if (prevStyle !== null) {\n          context.fill();\n        }\n        context.fillStyle = style;\n        prevStyle = style;\n      }\n      const centerX = Math.round(point._internal_x * horizontalPixelRatio) + correction; // correct x coordinate only\n      const centerY = point._internal_y * verticalPixelRatio;\n      context.moveTo(centerX, centerY);\n      context.arc(centerX, centerY, radius, 0, Math.PI * 2);\n    }\n  }\n  context.fill();\n}\nfunction finishStyledArea(scope, style) {\n  const ctx = scope.context;\n  ctx.strokeStyle = style;\n  ctx.stroke();\n}\nclass PaneRendererLineBase extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._internal__data = null;\n  }\n  _internal_setData(data) {\n    this._internal__data = data;\n  }\n  _internal__drawImpl(renderingScope) {\n    if (this._internal__data === null) {\n      return;\n    }\n    const {\n      _internal_items: items,\n      _internal_visibleRange: visibleRange,\n      _internal_barWidth: barWidth,\n      _internal_lineType: lineType,\n      _internal_lineWidth: lineWidth,\n      _internal_lineStyle: lineStyle,\n      _internal_pointMarkersRadius: pointMarkersRadius\n    } = this._internal__data;\n    if (visibleRange === null) {\n      return;\n    }\n    const ctx = renderingScope.context;\n    ctx.lineCap = 'butt';\n    ctx.lineWidth = lineWidth * renderingScope.verticalPixelRatio;\n    setLineStyle(ctx, lineStyle);\n    ctx.lineJoin = 'round';\n    const styleGetter = this._internal__strokeStyle.bind(this);\n    if (lineType !== undefined) {\n      walkLine(renderingScope, items, lineType, visibleRange, barWidth, styleGetter, finishStyledArea);\n    }\n    if (pointMarkersRadius) {\n      drawSeriesPointMarkers(renderingScope, items, pointMarkersRadius, visibleRange, styleGetter);\n    }\n  }\n}\nclass PaneRendererLine extends PaneRendererLineBase {\n  _internal__strokeStyle(renderingScope, item) {\n    return item._internal_lineColor;\n  }\n}\n\n/**\n * Binary function that accepts two arguments (the first of the type of array elements, and the second is always val), and returns a value convertible to bool.\n * The value returned indicates whether the first argument is considered to go before the second.\n * The function shall not modify any of its arguments.\n */\nfunction boundCompare(lower, arr, value, compare, start = 0, to = arr.length) {\n  let count = to - start;\n  while (0 < count) {\n    const count2 = count >> 1;\n    const mid = start + count2;\n    if (compare(arr[mid], value) === lower) {\n      start = mid + 1;\n      count -= count2 + 1;\n    } else {\n      count = count2;\n    }\n  }\n  return start;\n}\nconst lowerBound = boundCompare.bind(null, true);\nconst upperBound = boundCompare.bind(null, false);\nfunction lowerBoundItemsCompare(item, time) {\n  return item._internal_time < time;\n}\nfunction upperBoundItemsCompare(item, time) {\n  return time < item._internal_time;\n}\nfunction visibleTimedValues(items, range, extendedRange) {\n  const firstBar = range._internal_left();\n  const lastBar = range._internal_right();\n  const from = lowerBound(items, firstBar, lowerBoundItemsCompare);\n  const to = upperBound(items, lastBar, upperBoundItemsCompare);\n  if (!extendedRange) {\n    return {\n      from,\n      to\n    };\n  }\n  let extendedFrom = from;\n  let extendedTo = to;\n  if (from > 0 && from < items.length && items[from]._internal_time >= firstBar) {\n    extendedFrom = from - 1;\n  }\n  if (to > 0 && to < items.length && items[to - 1]._internal_time <= lastBar) {\n    extendedTo = to + 1;\n  }\n  return {\n    from: extendedFrom,\n    to: extendedTo\n  };\n}\nclass SeriesPaneViewBase {\n  constructor(series, model, extendedVisibleRange) {\n    this._internal__invalidated = true;\n    this._internal__dataInvalidated = true;\n    this._internal__optionsInvalidated = true;\n    this._internal__items = [];\n    this._internal__itemsVisibleRange = null;\n    this._internal__series = series;\n    this._internal__model = model;\n    this._private__extendedVisibleRange = extendedVisibleRange;\n  }\n  _internal_update(updateType) {\n    this._internal__invalidated = true;\n    if (updateType === 'data') {\n      this._internal__dataInvalidated = true;\n    }\n    if (updateType === 'options') {\n      this._internal__optionsInvalidated = true;\n    }\n  }\n  _internal_renderer() {\n    if (!this._internal__series._internal_visible()) {\n      return null;\n    }\n    this._private__makeValid();\n    return this._internal__itemsVisibleRange === null ? null : this._internal__renderer;\n  }\n  _internal__updateOptions() {\n    this._internal__items = this._internal__items.map(item => Object.assign(Object.assign({}, item), this._internal__series._internal_barColorer()._internal_barStyle(item._internal_time)));\n  }\n  _internal__clearVisibleRange() {\n    this._internal__itemsVisibleRange = null;\n  }\n  _private__makeValid() {\n    if (this._internal__dataInvalidated) {\n      this._internal__fillRawPoints();\n      this._internal__dataInvalidated = false;\n    }\n    if (this._internal__optionsInvalidated) {\n      this._internal__updateOptions();\n      this._internal__optionsInvalidated = false;\n    }\n    if (this._internal__invalidated) {\n      this._private__makeValidImpl();\n      this._internal__invalidated = false;\n    }\n  }\n  _private__makeValidImpl() {\n    const priceScale = this._internal__series._internal_priceScale();\n    const timeScale = this._internal__model._internal_timeScale();\n    this._internal__clearVisibleRange();\n    if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n      return;\n    }\n    const visibleBars = timeScale._internal_visibleStrictRange();\n    if (visibleBars === null) {\n      return;\n    }\n    if (this._internal__series._internal_bars()._internal_size() === 0) {\n      return;\n    }\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return;\n    }\n    this._internal__itemsVisibleRange = visibleTimedValues(this._internal__items, visibleBars, this._private__extendedVisibleRange);\n    this._internal__convertToCoordinates(priceScale, timeScale, firstValue._internal_value);\n    this._internal__prepareRendererData();\n  }\n}\nclass LinePaneViewBase extends SeriesPaneViewBase {\n  constructor(series, model) {\n    super(series, model, true);\n  }\n  _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n    timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n    priceScale._internal_pointsArrayToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n  }\n  _internal__createRawItemBase(time, price) {\n    return {\n      _internal_time: time,\n      _internal_price: price,\n      _internal_x: NaN,\n      _internal_y: NaN\n    };\n  }\n  _internal__fillRawPoints() {\n    const colorer = this._internal__series._internal_barColorer();\n    this._internal__items = this._internal__series._internal_bars()._internal_rows().map(row => {\n      const value = row._internal_value[3 /* PlotRowValueIndex.Close */];\n      return this._internal__createRawItem(row._internal_index, value, colorer);\n    });\n  }\n}\nclass SeriesAreaPaneView extends LinePaneViewBase {\n  constructor(series, model) {\n    super(series, model);\n    this._internal__renderer = new CompositeRenderer();\n    this._private__areaRenderer = new PaneRendererArea();\n    this._private__lineRenderer = new PaneRendererLine();\n    this._internal__renderer._internal_setRenderers([this._private__areaRenderer, this._private__lineRenderer]);\n  }\n  _internal__createRawItem(time, price, colorer) {\n    return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n  }\n  _internal__prepareRendererData() {\n    const options = this._internal__series._internal_options();\n    this._private__areaRenderer._internal_setData({\n      _internal_lineType: options.lineType,\n      _internal_items: this._internal__items,\n      _internal_lineStyle: options.lineStyle,\n      _internal_lineWidth: options.lineWidth,\n      _internal_baseLevelCoordinate: null,\n      _internal_invertFilledArea: options.invertFilledArea,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing()\n    });\n    this._private__lineRenderer._internal_setData({\n      _internal_lineType: options.lineVisible ? options.lineType : undefined,\n      _internal_items: this._internal__items,\n      _internal_lineStyle: options.lineStyle,\n      _internal_lineWidth: options.lineWidth,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n      _internal_pointMarkersRadius: options.pointMarkersVisible ? options.pointMarkersRadius || options.lineWidth / 2 + 2 : undefined\n    });\n  }\n}\nfunction optimalBarWidth(barSpacing, pixelRatio) {\n  return Math.floor(barSpacing * 0.3 * pixelRatio);\n}\nfunction optimalCandlestickWidth(barSpacing, pixelRatio) {\n  const barSpacingSpecialCaseFrom = 2.5;\n  const barSpacingSpecialCaseTo = 4;\n  const barSpacingSpecialCaseCoeff = 3;\n  if (barSpacing >= barSpacingSpecialCaseFrom && barSpacing <= barSpacingSpecialCaseTo) {\n    return Math.floor(barSpacingSpecialCaseCoeff * pixelRatio);\n  }\n  // coeff should be 1 on small barspacing and go to 0.8 while groing bar spacing\n  const barSpacingReducingCoeff = 0.2;\n  const coeff = 1 - barSpacingReducingCoeff * Math.atan(Math.max(barSpacingSpecialCaseTo, barSpacing) - barSpacingSpecialCaseTo) / (Math.PI * 0.5);\n  const res = Math.floor(barSpacing * coeff * pixelRatio);\n  const scaledBarSpacing = Math.floor(barSpacing * pixelRatio);\n  const optimal = Math.min(res, scaledBarSpacing);\n  return Math.max(Math.floor(pixelRatio), optimal);\n}\nclass PaneRendererBars extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n    this._private__barWidth = 0;\n    this._private__barLineWidth = 0;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  // eslint-disable-next-line complexity\n  _internal__drawImpl({\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n      return;\n    }\n    this._private__barWidth = this._private__calcBarWidth(horizontalPixelRatio);\n    // grid and crosshair have line width = Math.floor(pixelRatio)\n    // if this value is odd, we have to make bars' width odd\n    // if this value is even, we have to make bars' width even\n    // in order of keeping crosshair-over-bar drawing symmetric\n    if (this._private__barWidth >= 2) {\n      const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n      if (lineWidth % 2 !== this._private__barWidth % 2) {\n        this._private__barWidth--;\n      }\n    }\n    // if scale is compressed, bar could become less than 1 CSS pixel\n    this._private__barLineWidth = this._private__data._internal_thinBars ? Math.min(this._private__barWidth, Math.floor(horizontalPixelRatio)) : this._private__barWidth;\n    let prevColor = null;\n    const drawOpenClose = this._private__barLineWidth <= this._private__barWidth && this._private__data._internal_barSpacing >= Math.floor(1.5 * horizontalPixelRatio);\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; ++i) {\n      const bar = this._private__data._internal_bars[i];\n      if (prevColor !== bar._internal_barColor) {\n        ctx.fillStyle = bar._internal_barColor;\n        prevColor = bar._internal_barColor;\n      }\n      const bodyWidthHalf = Math.floor(this._private__barLineWidth * 0.5);\n      const bodyCenter = Math.round(bar._internal_x * horizontalPixelRatio);\n      const bodyLeft = bodyCenter - bodyWidthHalf;\n      const bodyWidth = this._private__barLineWidth;\n      const bodyRight = bodyLeft + bodyWidth - 1;\n      const high = Math.min(bar._internal_highY, bar._internal_lowY);\n      const low = Math.max(bar._internal_highY, bar._internal_lowY);\n      const bodyTop = Math.round(high * verticalPixelRatio) - bodyWidthHalf;\n      const bodyBottom = Math.round(low * verticalPixelRatio) + bodyWidthHalf;\n      const bodyHeight = Math.max(bodyBottom - bodyTop, this._private__barLineWidth);\n      ctx.fillRect(bodyLeft, bodyTop, bodyWidth, bodyHeight);\n      const sideWidth = Math.ceil(this._private__barWidth * 1.5);\n      if (drawOpenClose) {\n        if (this._private__data._internal_openVisible) {\n          const openLeft = bodyCenter - sideWidth;\n          let openTop = Math.max(bodyTop, Math.round(bar._internal_openY * verticalPixelRatio) - bodyWidthHalf);\n          let openBottom = openTop + bodyWidth - 1;\n          if (openBottom > bodyTop + bodyHeight - 1) {\n            openBottom = bodyTop + bodyHeight - 1;\n            openTop = openBottom - bodyWidth + 1;\n          }\n          ctx.fillRect(openLeft, openTop, bodyLeft - openLeft, openBottom - openTop + 1);\n        }\n        const closeRight = bodyCenter + sideWidth;\n        let closeTop = Math.max(bodyTop, Math.round(bar._internal_closeY * verticalPixelRatio) - bodyWidthHalf);\n        let closeBottom = closeTop + bodyWidth - 1;\n        if (closeBottom > bodyTop + bodyHeight - 1) {\n          closeBottom = bodyTop + bodyHeight - 1;\n          closeTop = closeBottom - bodyWidth + 1;\n        }\n        ctx.fillRect(bodyRight + 1, closeTop, closeRight - bodyRight, closeBottom - closeTop + 1);\n      }\n    }\n  }\n  _private__calcBarWidth(pixelRatio) {\n    const limit = Math.floor(pixelRatio);\n    return Math.max(limit, Math.floor(optimalBarWidth(ensureNotNull(this._private__data)._internal_barSpacing, pixelRatio)));\n  }\n}\nclass BarsPaneViewBase extends SeriesPaneViewBase {\n  constructor(series, model) {\n    super(series, model, false);\n  }\n  _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n    timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n    priceScale._internal_barPricesToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n  }\n  _internal__createDefaultItem(time, bar, colorer) {\n    return {\n      _internal_time: time,\n      _internal_open: bar._internal_value[0 /* PlotRowValueIndex.Open */],\n      _internal_high: bar._internal_value[1 /* PlotRowValueIndex.High */],\n      _internal_low: bar._internal_value[2 /* PlotRowValueIndex.Low */],\n      _internal_close: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n      _internal_x: NaN,\n      _internal_openY: NaN,\n      _internal_highY: NaN,\n      _internal_lowY: NaN,\n      _internal_closeY: NaN\n    };\n  }\n  _internal__fillRawPoints() {\n    const colorer = this._internal__series._internal_barColorer();\n    this._internal__items = this._internal__series._internal_bars()._internal_rows().map(row => this._internal__createRawItem(row._internal_index, row, colorer));\n  }\n}\nclass SeriesBarsPaneView extends BarsPaneViewBase {\n  constructor() {\n    super(...arguments);\n    this._internal__renderer = new PaneRendererBars();\n  }\n  _internal__createRawItem(time, bar, colorer) {\n    return Object.assign(Object.assign({}, this._internal__createDefaultItem(time, bar, colorer)), colorer._internal_barStyle(time));\n  }\n  _internal__prepareRendererData() {\n    const barStyleProps = this._internal__series._internal_options();\n    this._internal__renderer._internal_setData({\n      _internal_bars: this._internal__items,\n      _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n      _internal_openVisible: barStyleProps.openVisible,\n      _internal_thinBars: barStyleProps.thinBars,\n      _internal_visibleRange: this._internal__itemsVisibleRange\n    });\n  }\n}\nclass PaneRendererBaselineArea extends PaneRendererAreaBase {\n  constructor() {\n    super(...arguments);\n    this._private__fillCache = new GradientStyleCache();\n  }\n  _internal__fillStyle(renderingScope, item) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const data = this._internal__data;\n    return this._private__fillCache._internal_get(renderingScope, {\n      _internal_topColor1: item._internal_topFillColor1,\n      _internal_topColor2: item._internal_topFillColor2,\n      _internal_bottomColor1: item._internal_bottomFillColor1,\n      _internal_bottomColor2: item._internal_bottomFillColor2,\n      _internal_bottom: renderingScope.bitmapSize.height,\n      _internal_baseLevelCoordinate: data._internal_baseLevelCoordinate\n    });\n  }\n}\nclass PaneRendererBaselineLine extends PaneRendererLineBase {\n  constructor() {\n    super(...arguments);\n    this._private__strokeCache = new GradientStyleCache();\n  }\n  _internal__strokeStyle(renderingScope, item) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const data = this._internal__data;\n    return this._private__strokeCache._internal_get(renderingScope, {\n      _internal_topColor1: item._internal_topLineColor,\n      _internal_topColor2: item._internal_topLineColor,\n      _internal_bottomColor1: item._internal_bottomLineColor,\n      _internal_bottomColor2: item._internal_bottomLineColor,\n      _internal_bottom: renderingScope.bitmapSize.height,\n      _internal_baseLevelCoordinate: data._internal_baseLevelCoordinate\n    });\n  }\n}\nclass SeriesBaselinePaneView extends LinePaneViewBase {\n  constructor(series, model) {\n    super(series, model);\n    this._internal__renderer = new CompositeRenderer();\n    this._private__baselineAreaRenderer = new PaneRendererBaselineArea();\n    this._private__baselineLineRenderer = new PaneRendererBaselineLine();\n    this._internal__renderer._internal_setRenderers([this._private__baselineAreaRenderer, this._private__baselineLineRenderer]);\n  }\n  _internal__createRawItem(time, price, colorer) {\n    return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n  }\n  _internal__prepareRendererData() {\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return;\n    }\n    const options = this._internal__series._internal_options();\n    const baseLevelCoordinate = this._internal__series._internal_priceScale()._internal_priceToCoordinate(options.baseValue.price, firstValue._internal_value);\n    const barWidth = this._internal__model._internal_timeScale()._internal_barSpacing();\n    this._private__baselineAreaRenderer._internal_setData({\n      _internal_items: this._internal__items,\n      _internal_lineWidth: options.lineWidth,\n      _internal_lineStyle: options.lineStyle,\n      _internal_lineType: options.lineType,\n      _internal_baseLevelCoordinate: baseLevelCoordinate,\n      _internal_invertFilledArea: false,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: barWidth\n    });\n    this._private__baselineLineRenderer._internal_setData({\n      _internal_items: this._internal__items,\n      _internal_lineWidth: options.lineWidth,\n      _internal_lineStyle: options.lineStyle,\n      _internal_lineType: options.lineVisible ? options.lineType : undefined,\n      _internal_pointMarkersRadius: options.pointMarkersVisible ? options.pointMarkersRadius || options.lineWidth / 2 + 2 : undefined,\n      _internal_baseLevelCoordinate: baseLevelCoordinate,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: barWidth\n    });\n  }\n}\nclass PaneRendererCandlesticks extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n    // scaled with pixelRatio\n    this._private__barWidth = 0;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal__drawImpl(renderingScope) {\n    if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n      return;\n    }\n    const {\n      horizontalPixelRatio\n    } = renderingScope;\n    // now we know pixelRatio and we could calculate barWidth effectively\n    this._private__barWidth = optimalCandlestickWidth(this._private__data._internal_barSpacing, horizontalPixelRatio);\n    // grid and crosshair have line width = Math.floor(pixelRatio)\n    // if this value is odd, we have to make candlesticks' width odd\n    // if this value is even, we have to make candlesticks' width even\n    // in order of keeping crosshair-over-candlesticks drawing symmetric\n    if (this._private__barWidth >= 2) {\n      const wickWidth = Math.floor(horizontalPixelRatio);\n      if (wickWidth % 2 !== this._private__barWidth % 2) {\n        this._private__barWidth--;\n      }\n    }\n    const bars = this._private__data._internal_bars;\n    if (this._private__data._internal_wickVisible) {\n      this._private__drawWicks(renderingScope, bars, this._private__data._internal_visibleRange);\n    }\n    if (this._private__data._internal_borderVisible) {\n      this._private__drawBorder(renderingScope, bars, this._private__data._internal_visibleRange);\n    }\n    const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n    if (!this._private__data._internal_borderVisible || this._private__barWidth > borderWidth * 2) {\n      this._private__drawCandles(renderingScope, bars, this._private__data._internal_visibleRange);\n    }\n  }\n  _private__drawWicks(renderingScope, bars, visibleRange) {\n    if (this._private__data === null) {\n      return;\n    }\n    const {\n      context: ctx,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    } = renderingScope;\n    let prevWickColor = '';\n    let wickWidth = Math.min(Math.floor(horizontalPixelRatio), Math.floor(this._private__data._internal_barSpacing * horizontalPixelRatio));\n    wickWidth = Math.max(Math.floor(horizontalPixelRatio), Math.min(wickWidth, this._private__barWidth));\n    const wickOffset = Math.floor(wickWidth * 0.5);\n    let prevEdge = null;\n    for (let i = visibleRange.from; i < visibleRange.to; i++) {\n      const bar = bars[i];\n      if (bar._internal_barWickColor !== prevWickColor) {\n        ctx.fillStyle = bar._internal_barWickColor;\n        prevWickColor = bar._internal_barWickColor;\n      }\n      const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      const high = Math.round(bar._internal_highY * verticalPixelRatio);\n      const low = Math.round(bar._internal_lowY * verticalPixelRatio);\n      const scaledX = Math.round(horizontalPixelRatio * bar._internal_x);\n      let left = scaledX - wickOffset;\n      const right = left + wickWidth - 1;\n      if (prevEdge !== null) {\n        left = Math.max(prevEdge + 1, left);\n        left = Math.min(left, right);\n      }\n      const width = right - left + 1;\n      ctx.fillRect(left, high, width, top - high);\n      ctx.fillRect(left, bottom + 1, width, low - bottom);\n      prevEdge = right;\n    }\n  }\n  _private__calculateBorderWidth(pixelRatio) {\n    let borderWidth = Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio);\n    if (this._private__barWidth <= 2 * borderWidth) {\n      borderWidth = Math.floor((this._private__barWidth - 1) * 0.5);\n    }\n    const res = Math.max(Math.floor(pixelRatio), borderWidth);\n    if (this._private__barWidth <= res * 2) {\n      // do not draw bodies, restore original value\n      return Math.max(Math.floor(pixelRatio), Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio));\n    }\n    return res;\n  }\n  _private__drawBorder(renderingScope, bars, visibleRange) {\n    if (this._private__data === null) {\n      return;\n    }\n    const {\n      context: ctx,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    } = renderingScope;\n    let prevBorderColor = '';\n    const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n    let prevEdge = null;\n    for (let i = visibleRange.from; i < visibleRange.to; i++) {\n      const bar = bars[i];\n      if (bar._internal_barBorderColor !== prevBorderColor) {\n        ctx.fillStyle = bar._internal_barBorderColor;\n        prevBorderColor = bar._internal_barBorderColor;\n      }\n      let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n      // this is important to calculate right before patching left\n      const right = left + this._private__barWidth - 1;\n      const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      if (prevEdge !== null) {\n        left = Math.max(prevEdge + 1, left);\n        left = Math.min(left, right);\n      }\n      if (this._private__data._internal_barSpacing * horizontalPixelRatio > 2 * borderWidth) {\n        fillRectInnerBorder(ctx, left, top, right - left + 1, bottom - top + 1, borderWidth);\n      } else {\n        const width = right - left + 1;\n        ctx.fillRect(left, top, width, bottom - top + 1);\n      }\n      prevEdge = right;\n    }\n  }\n  _private__drawCandles(renderingScope, bars, visibleRange) {\n    if (this._private__data === null) {\n      return;\n    }\n    const {\n      context: ctx,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    } = renderingScope;\n    let prevBarColor = '';\n    const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n    for (let i = visibleRange.from; i < visibleRange.to; i++) {\n      const bar = bars[i];\n      let top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      let bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n      let right = left + this._private__barWidth - 1;\n      if (bar._internal_barColor !== prevBarColor) {\n        const barColor = bar._internal_barColor;\n        ctx.fillStyle = barColor;\n        prevBarColor = barColor;\n      }\n      if (this._private__data._internal_borderVisible) {\n        left += borderWidth;\n        top += borderWidth;\n        right -= borderWidth;\n        bottom -= borderWidth;\n      }\n      if (top > bottom) {\n        continue;\n      }\n      ctx.fillRect(left, top, right - left + 1, bottom - top + 1);\n    }\n  }\n}\nclass SeriesCandlesticksPaneView extends BarsPaneViewBase {\n  constructor() {\n    super(...arguments);\n    this._internal__renderer = new PaneRendererCandlesticks();\n  }\n  _internal__createRawItem(time, bar, colorer) {\n    return Object.assign(Object.assign({}, this._internal__createDefaultItem(time, bar, colorer)), colorer._internal_barStyle(time));\n  }\n  _internal__prepareRendererData() {\n    const candlestickStyleProps = this._internal__series._internal_options();\n    this._internal__renderer._internal_setData({\n      _internal_bars: this._internal__items,\n      _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n      _internal_wickVisible: candlestickStyleProps.wickVisible,\n      _internal_borderVisible: candlestickStyleProps.borderVisible,\n      _internal_visibleRange: this._internal__itemsVisibleRange\n    });\n  }\n}\nclass CustomSeriesPaneRendererWrapper {\n  constructor(sourceRenderer, priceScale) {\n    this._private__sourceRenderer = sourceRenderer;\n    this._private__priceScale = priceScale;\n  }\n  _internal_draw(target, isHovered, hitTestData) {\n    this._private__sourceRenderer.draw(target, this._private__priceScale, isHovered, hitTestData);\n  }\n}\nclass SeriesCustomPaneView extends SeriesPaneViewBase {\n  constructor(series, model, paneView) {\n    super(series, model, false);\n    this._private__paneView = paneView;\n    this._internal__renderer = new CustomSeriesPaneRendererWrapper(this._private__paneView.renderer(), price => {\n      const firstValue = series._internal_firstValue();\n      if (firstValue === null) {\n        return null;\n      }\n      return series._internal_priceScale()._internal_priceToCoordinate(price, firstValue._internal_value);\n    });\n  }\n  _internal_priceValueBuilder(plotRow) {\n    return this._private__paneView.priceValueBuilder(plotRow);\n  }\n  _internal_isWhitespace(data) {\n    return this._private__paneView.isWhitespace(data);\n  }\n  _internal__fillRawPoints() {\n    const colorer = this._internal__series._internal_barColorer();\n    this._internal__items = this._internal__series._internal_bars()._internal_rows().map(row => {\n      return Object.assign(Object.assign({\n        _internal_time: row._internal_index,\n        _internal_x: NaN\n      }, colorer._internal_barStyle(row._internal_index)), {\n        _internal_originalData: row._internal_data\n      });\n    });\n  }\n  _internal__convertToCoordinates(priceScale, timeScale) {\n    timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n  }\n  _internal__prepareRendererData() {\n    this._private__paneView.update({\n      bars: this._internal__items.map(unwrapItemData),\n      barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n      visibleRange: this._internal__itemsVisibleRange\n    }, this._internal__series._internal_options());\n  }\n}\nfunction unwrapItemData(item) {\n  return {\n    x: item._internal_x,\n    time: item._internal_time,\n    originalData: item._internal_originalData,\n    barColor: item._internal_barColor\n  };\n}\nconst showSpacingMinimalBarWidth = 1;\nconst alignToMinimalWidthLimit = 4;\nclass PaneRendererHistogram extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n    this._private__precalculatedCache = [];\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n    this._private__precalculatedCache = [];\n  }\n  _internal__drawImpl({\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n      return;\n    }\n    if (!this._private__precalculatedCache.length) {\n      this._private__fillPrecalculatedCache(horizontalPixelRatio);\n    }\n    const tickWidth = Math.max(1, Math.floor(verticalPixelRatio));\n    const histogramBase = Math.round(this._private__data._internal_histogramBase * verticalPixelRatio);\n    const topHistogramBase = histogramBase - Math.floor(tickWidth / 2);\n    const bottomHistogramBase = topHistogramBase + tickWidth;\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const item = this._private__data._internal_items[i];\n      const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n      const y = Math.round(item._internal_y * verticalPixelRatio);\n      ctx.fillStyle = item._internal_barColor;\n      let top;\n      let bottom;\n      if (y <= topHistogramBase) {\n        top = y;\n        bottom = bottomHistogramBase;\n      } else {\n        top = topHistogramBase;\n        bottom = y - Math.floor(tickWidth / 2) + tickWidth;\n      }\n      ctx.fillRect(current._internal_left, top, current._internal_right - current._internal_left + 1, bottom - top);\n    }\n  }\n  // eslint-disable-next-line complexity\n  _private__fillPrecalculatedCache(pixelRatio) {\n    if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n      this._private__precalculatedCache = [];\n      return;\n    }\n    const spacing = Math.ceil(this._private__data._internal_barSpacing * pixelRatio) <= showSpacingMinimalBarWidth ? 0 : Math.max(1, Math.floor(pixelRatio));\n    const columnWidth = Math.round(this._private__data._internal_barSpacing * pixelRatio) - spacing;\n    this._private__precalculatedCache = new Array(this._private__data._internal_visibleRange.to - this._private__data._internal_visibleRange.from);\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const item = this._private__data._internal_items[i];\n      // force cast to avoid ensureDefined call\n      const x = Math.round(item._internal_x * pixelRatio);\n      let left;\n      let right;\n      if (columnWidth % 2) {\n        const halfWidth = (columnWidth - 1) / 2;\n        left = x - halfWidth;\n        right = x + halfWidth;\n      } else {\n        // shift pixel to left\n        const halfWidth = columnWidth / 2;\n        left = x - halfWidth;\n        right = x + halfWidth - 1;\n      }\n      this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from] = {\n        _internal_left: left,\n        _internal_right: right,\n        _internal_roundedCenter: x,\n        _internal_center: item._internal_x * pixelRatio,\n        _internal_time: item._internal_time\n      };\n    }\n    // correct positions\n    for (let i = this._private__data._internal_visibleRange.from + 1; i < this._private__data._internal_visibleRange.to; i++) {\n      const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n      const prev = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from - 1];\n      if (current._internal_time !== prev._internal_time + 1) {\n        continue;\n      }\n      if (current._internal_left - prev._internal_right !== spacing + 1) {\n        // have to align\n        if (prev._internal_roundedCenter > prev._internal_center) {\n          // prev wasshifted to left, so add pixel to right\n          prev._internal_right = current._internal_left - spacing - 1;\n        } else {\n          // extend current to left\n          current._internal_left = prev._internal_right + spacing + 1;\n        }\n      }\n    }\n    let minWidth = Math.ceil(this._private__data._internal_barSpacing * pixelRatio);\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n      // this could happen if barspacing < 1\n      if (current._internal_right < current._internal_left) {\n        current._internal_right = current._internal_left;\n      }\n      const width = current._internal_right - current._internal_left + 1;\n      minWidth = Math.min(width, minWidth);\n    }\n    if (spacing > 0 && minWidth < alignToMinimalWidthLimit) {\n      for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n        const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n        const width = current._internal_right - current._internal_left + 1;\n        if (width > minWidth) {\n          if (current._internal_roundedCenter > current._internal_center) {\n            current._internal_right -= 1;\n          } else {\n            current._internal_left += 1;\n          }\n        }\n      }\n    }\n  }\n}\nclass SeriesHistogramPaneView extends LinePaneViewBase {\n  constructor() {\n    super(...arguments);\n    this._internal__renderer = new PaneRendererHistogram();\n  }\n  _internal__createRawItem(time, price, colorer) {\n    return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n  }\n  _internal__prepareRendererData() {\n    const data = {\n      _internal_items: this._internal__items,\n      _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_histogramBase: this._internal__series._internal_priceScale()._internal_priceToCoordinate(this._internal__series._internal_options().base, ensureNotNull(this._internal__series._internal_firstValue())._internal_value)\n    };\n    this._internal__renderer._internal_setData(data);\n  }\n}\nclass SeriesLinePaneView extends LinePaneViewBase {\n  constructor() {\n    super(...arguments);\n    this._internal__renderer = new PaneRendererLine();\n  }\n  _internal__createRawItem(time, price, colorer) {\n    return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n  }\n  _internal__prepareRendererData() {\n    const options = this._internal__series._internal_options();\n    const data = {\n      _internal_items: this._internal__items,\n      _internal_lineStyle: options.lineStyle,\n      _internal_lineType: options.lineVisible ? options.lineType : undefined,\n      _internal_lineWidth: options.lineWidth,\n      _internal_pointMarkersRadius: options.pointMarkersVisible ? options.pointMarkersRadius || options.lineWidth / 2 + 2 : undefined,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing()\n    };\n    this._internal__renderer._internal_setData(data);\n  }\n}\nconst defaultReplacementRe = /[2-9]/g;\nclass TextWidthCache {\n  constructor(size = 50) {\n    this._private__actualSize = 0;\n    this._private__usageTick = 1;\n    this._private__oldestTick = 1;\n    this._private__tick2Labels = {};\n    this._private__cache = new Map();\n    this._private__maxSize = size;\n  }\n  _internal_reset() {\n    this._private__actualSize = 0;\n    this._private__cache.clear();\n    this._private__usageTick = 1;\n    this._private__oldestTick = 1;\n    this._private__tick2Labels = {};\n  }\n  _internal_measureText(ctx, text, optimizationReplacementRe) {\n    return this._private__getMetrics(ctx, text, optimizationReplacementRe).width;\n  }\n  _internal_yMidCorrection(ctx, text, optimizationReplacementRe) {\n    const metrics = this._private__getMetrics(ctx, text, optimizationReplacementRe);\n    // if actualBoundingBoxAscent/actualBoundingBoxDescent are not supported we use 0 as a fallback\n    return ((metrics.actualBoundingBoxAscent || 0) - (metrics.actualBoundingBoxDescent || 0)) / 2;\n  }\n  _private__getMetrics(ctx, text, optimizationReplacementRe) {\n    const re = optimizationReplacementRe || defaultReplacementRe;\n    const cacheString = String(text).replace(re, '0');\n    if (this._private__cache.has(cacheString)) {\n      return ensureDefined(this._private__cache.get(cacheString))._internal_metrics;\n    }\n    if (this._private__actualSize === this._private__maxSize) {\n      const oldestValue = this._private__tick2Labels[this._private__oldestTick];\n      delete this._private__tick2Labels[this._private__oldestTick];\n      this._private__cache.delete(oldestValue);\n      this._private__oldestTick++;\n      this._private__actualSize--;\n    }\n    ctx.save();\n    ctx.textBaseline = 'middle';\n    const metrics = ctx.measureText(cacheString);\n    ctx.restore();\n    if (metrics.width === 0 && !!text.length) {\n      // measureText can return 0 in FF depending on a canvas size, don't cache it\n      return metrics;\n    }\n    this._private__cache.set(cacheString, {\n      _internal_metrics: metrics,\n      _internal_tick: this._private__usageTick\n    });\n    this._private__tick2Labels[this._private__usageTick] = cacheString;\n    this._private__actualSize++;\n    this._private__usageTick++;\n    return metrics;\n  }\n}\nclass PanePriceAxisViewRenderer {\n  constructor(textWidthCache) {\n    this._private__priceAxisViewRenderer = null;\n    this._private__rendererOptions = null;\n    this._private__align = 'right';\n    this._private__textWidthCache = textWidthCache;\n  }\n  _internal_setParams(priceAxisViewRenderer, rendererOptions, align) {\n    this._private__priceAxisViewRenderer = priceAxisViewRenderer;\n    this._private__rendererOptions = rendererOptions;\n    this._private__align = align;\n  }\n  _internal_draw(target) {\n    if (this._private__rendererOptions === null || this._private__priceAxisViewRenderer === null) {\n      return;\n    }\n    this._private__priceAxisViewRenderer._internal_draw(target, this._private__rendererOptions, this._private__textWidthCache, this._private__align);\n  }\n}\nclass PanePriceAxisView {\n  constructor(priceAxisView, dataSource, chartModel) {\n    this._private__priceAxisView = priceAxisView;\n    this._private__textWidthCache = new TextWidthCache(50); // when should we clear cache?\n    this._private__dataSource = dataSource;\n    this._private__chartModel = chartModel;\n    this._private__fontSize = -1;\n    this._private__renderer = new PanePriceAxisViewRenderer(this._private__textWidthCache);\n  }\n  _internal_renderer() {\n    const pane = this._private__chartModel._internal_paneForSource(this._private__dataSource);\n    if (pane === null) {\n      return null;\n    }\n    // this price scale will be used to find label placement only (left, right, none)\n    const priceScale = pane._internal_isOverlay(this._private__dataSource) ? pane._internal_defaultVisiblePriceScale() : this._private__dataSource._internal_priceScale();\n    if (priceScale === null) {\n      return null;\n    }\n    const position = pane._internal_priceScalePosition(priceScale);\n    if (position === 'overlay') {\n      return null;\n    }\n    const options = this._private__chartModel._internal_priceAxisRendererOptions();\n    if (options._internal_fontSize !== this._private__fontSize) {\n      this._private__fontSize = options._internal_fontSize;\n      this._private__textWidthCache._internal_reset();\n    }\n    this._private__renderer._internal_setParams(this._private__priceAxisView._internal_paneRenderer(), options, position);\n    return this._private__renderer;\n  }\n}\nclass HorizontalLineRenderer extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal_hitTest(x, y) {\n    var _a;\n    if (!((_a = this._private__data) === null || _a === void 0 ? void 0 : _a._internal_visible)) {\n      return null;\n    }\n    const {\n      _internal_y: itemY,\n      _internal_lineWidth: lineWidth,\n      _internal_externalId: externalId\n    } = this._private__data;\n    // add a fixed area threshold around line (Y + width) for hit test\n    if (y >= itemY - lineWidth - 7 /* Constants.HitTestThreshold */ && y <= itemY + lineWidth + 7 /* Constants.HitTestThreshold */) {\n      return {\n        _internal_hitTestData: this._private__data,\n        _internal_externalId: externalId\n      };\n    }\n    return null;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null) {\n      return;\n    }\n    if (this._private__data._internal_visible === false) {\n      return;\n    }\n    const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n    if (y < 0 || y > bitmapSize.height) {\n      return;\n    }\n    ctx.lineCap = 'butt';\n    ctx.strokeStyle = this._private__data._internal_color;\n    ctx.lineWidth = Math.floor(this._private__data._internal_lineWidth * horizontalPixelRatio);\n    setLineStyle(ctx, this._private__data._internal_lineStyle);\n    drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n  }\n}\nclass SeriesHorizontalLinePaneView {\n  constructor(series) {\n    this._internal__lineRendererData = {\n      _internal_y: 0,\n      _internal_color: 'rgba(0, 0, 0, 0)',\n      _internal_lineWidth: 1,\n      _internal_lineStyle: 0 /* LineStyle.Solid */,\n      _internal_visible: false\n    };\n    this._internal__lineRenderer = new HorizontalLineRenderer();\n    this._private__invalidated = true;\n    this._internal__series = series;\n    this._internal__model = series._internal_model();\n    this._internal__lineRenderer._internal_setData(this._internal__lineRendererData);\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (!this._internal__series._internal_visible()) {\n      return null;\n    }\n    if (this._private__invalidated) {\n      this._internal__updateImpl();\n      this._private__invalidated = false;\n    }\n    return this._internal__lineRenderer;\n  }\n}\nclass SeriesHorizontalBaseLinePaneView extends SeriesHorizontalLinePaneView {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(series) {\n    super(series);\n  }\n  _internal__updateImpl() {\n    this._internal__lineRendererData._internal_visible = false;\n    const priceScale = this._internal__series._internal_priceScale();\n    const mode = priceScale._internal_mode()._internal_mode;\n    if (mode !== 2 /* PriceScaleMode.Percentage */ && mode !== 3 /* PriceScaleMode.IndexedTo100 */) {\n      return;\n    }\n    const seriesOptions = this._internal__series._internal_options();\n    if (!seriesOptions.baseLineVisible || !this._internal__series._internal_visible()) {\n      return;\n    }\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return;\n    }\n    this._internal__lineRendererData._internal_visible = true;\n    this._internal__lineRendererData._internal_y = priceScale._internal_priceToCoordinate(firstValue._internal_value, firstValue._internal_value);\n    this._internal__lineRendererData._internal_color = seriesOptions.baseLineColor;\n    this._internal__lineRendererData._internal_lineWidth = seriesOptions.baseLineWidth;\n    this._internal__lineRendererData._internal_lineStyle = seriesOptions.baseLineStyle;\n  }\n}\nclass SeriesLastPriceAnimationRenderer extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal_data() {\n    return this._private__data;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    const data = this._private__data;\n    if (data === null) {\n      return;\n    }\n    const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    const correction = tickWidth % 2 / 2;\n    const centerX = Math.round(data._internal_center.x * horizontalPixelRatio) + correction; // correct x coordinate only\n    const centerY = data._internal_center.y * verticalPixelRatio;\n    ctx.fillStyle = data._internal_seriesLineColor;\n    ctx.beginPath();\n    // TODO: it is better to have different horizontal and vertical radii\n    const centerPointRadius = Math.max(2, data._internal_seriesLineWidth * 1.5) * horizontalPixelRatio;\n    ctx.arc(centerX, centerY, centerPointRadius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.fillStyle = data._internal_fillColor;\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = tickWidth;\n    ctx.strokeStyle = data._internal_strokeColor;\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio + tickWidth / 2, 0, 2 * Math.PI, false);\n    ctx.stroke();\n  }\n}\nconst animationStagesData = [{\n  _internal_start: 0,\n  _internal_end: 0.25 /* Constants.Stage1Period */,\n  _internal_startRadius: 4 /* Constants.Stage1StartCircleRadius */,\n  _internal_endRadius: 10 /* Constants.Stage1EndCircleRadius */,\n  _internal_startFillAlpha: 0.25 /* Constants.Stage1StartFillAlpha */,\n  _internal_endFillAlpha: 0 /* Constants.Stage1EndFillAlpha */,\n  _internal_startStrokeAlpha: 0.4 /* Constants.Stage1StartStrokeAlpha */,\n  _internal_endStrokeAlpha: 0.8 /* Constants.Stage1EndStrokeAlpha */\n}, {\n  _internal_start: 0.25 /* Constants.Stage1Period */,\n  _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n  _internal_startRadius: 10 /* Constants.Stage2StartCircleRadius */,\n  _internal_endRadius: 14 /* Constants.Stage2EndCircleRadius */,\n  _internal_startFillAlpha: 0 /* Constants.Stage2StartFillAlpha */,\n  _internal_endFillAlpha: 0 /* Constants.Stage2EndFillAlpha */,\n  _internal_startStrokeAlpha: 0.8 /* Constants.Stage2StartStrokeAlpha */,\n  _internal_endStrokeAlpha: 0 /* Constants.Stage2EndStrokeAlpha */\n}, {\n  _internal_start: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n  _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */ + 0.475 /* Constants.Stage3Period */,\n  _internal_startRadius: 14 /* Constants.Stage3StartCircleRadius */,\n  _internal_endRadius: 14 /* Constants.Stage3EndCircleRadius */,\n  _internal_startFillAlpha: 0 /* Constants.Stage3StartFillAlpha */,\n  _internal_endFillAlpha: 0 /* Constants.Stage3EndFillAlpha */,\n  _internal_startStrokeAlpha: 0 /* Constants.Stage3StartStrokeAlpha */,\n  _internal_endStrokeAlpha: 0 /* Constants.Stage3EndStrokeAlpha */\n}];\nfunction color(seriesLineColor, stage, startAlpha, endAlpha) {\n  const alpha = startAlpha + (endAlpha - startAlpha) * stage;\n  return applyAlpha(seriesLineColor, alpha);\n}\nfunction radius(stage, startRadius, endRadius) {\n  return startRadius + (endRadius - startRadius) * stage;\n}\nfunction animationData(durationSinceStart, lineColor) {\n  const globalStage = durationSinceStart % 2600 /* Constants.AnimationPeriod */ / 2600 /* Constants.AnimationPeriod */;\n  let currentStageData;\n  for (const stageData of animationStagesData) {\n    if (globalStage >= stageData._internal_start && globalStage <= stageData._internal_end) {\n      currentStageData = stageData;\n      break;\n    }\n  }\n  assert(currentStageData !== undefined, 'Last price animation internal logic error');\n  const subStage = (globalStage - currentStageData._internal_start) / (currentStageData._internal_end - currentStageData._internal_start);\n  return {\n    _internal_fillColor: color(lineColor, subStage, currentStageData._internal_startFillAlpha, currentStageData._internal_endFillAlpha),\n    _internal_strokeColor: color(lineColor, subStage, currentStageData._internal_startStrokeAlpha, currentStageData._internal_endStrokeAlpha),\n    _internal_radius: radius(subStage, currentStageData._internal_startRadius, currentStageData._internal_endRadius)\n  };\n}\nclass SeriesLastPriceAnimationPaneView {\n  constructor(series) {\n    this._private__renderer = new SeriesLastPriceAnimationRenderer();\n    this._private__invalidated = true;\n    this._private__stageInvalidated = true;\n    this._private__startTime = performance.now();\n    this._private__endTime = this._private__startTime - 1;\n    this._private__series = series;\n  }\n  _internal_onDataCleared() {\n    this._private__endTime = this._private__startTime - 1;\n    this._internal_update();\n  }\n  _internal_onNewRealtimeDataReceived() {\n    this._internal_update();\n    if (this._private__series._internal_options().lastPriceAnimation === 2 /* LastPriceAnimationMode.OnDataUpdate */) {\n      const now = performance.now();\n      const timeToAnimationEnd = this._private__endTime - now;\n      if (timeToAnimationEnd > 0) {\n        if (timeToAnimationEnd < 2600 /* Constants.AnimationPeriod */ / 4) {\n          this._private__endTime += 2600 /* Constants.AnimationPeriod */;\n        }\n        return;\n      }\n      this._private__startTime = now;\n      this._private__endTime = now + 2600 /* Constants.AnimationPeriod */;\n    }\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_invalidateStage() {\n    this._private__stageInvalidated = true;\n  }\n  _internal_visible() {\n    // center point is always visible if lastPriceAnimation is not LastPriceAnimationMode.Disabled\n    return this._private__series._internal_options().lastPriceAnimation !== 0 /* LastPriceAnimationMode.Disabled */;\n  }\n  _internal_animationActive() {\n    switch (this._private__series._internal_options().lastPriceAnimation) {\n      case 0 /* LastPriceAnimationMode.Disabled */:\n        return false;\n      case 1 /* LastPriceAnimationMode.Continuous */:\n        return true;\n      case 2 /* LastPriceAnimationMode.OnDataUpdate */:\n        return performance.now() <= this._private__endTime;\n    }\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n      this._private__stageInvalidated = false;\n    } else if (this._private__stageInvalidated) {\n      this._private__updateRendererDataStage();\n      this._private__stageInvalidated = false;\n    }\n    return this._private__renderer;\n  }\n  _private__updateImpl() {\n    this._private__renderer._internal_setData(null);\n    const timeScale = this._private__series._internal_model()._internal_timeScale();\n    const visibleRange = timeScale._internal_visibleStrictRange();\n    const firstValue = this._private__series._internal_firstValue();\n    if (visibleRange === null || firstValue === null) {\n      return;\n    }\n    const lastValue = this._private__series._internal_lastValueData(true);\n    if (lastValue._internal_noData || !visibleRange._internal_contains(lastValue._internal_index)) {\n      return;\n    }\n    const lastValuePoint = {\n      x: timeScale._internal_indexToCoordinate(lastValue._internal_index),\n      y: this._private__series._internal_priceScale()._internal_priceToCoordinate(lastValue._internal_price, firstValue._internal_value)\n    };\n    const seriesLineColor = lastValue._internal_color;\n    const seriesLineWidth = this._private__series._internal_options().lineWidth;\n    const data = animationData(this._private__duration(), seriesLineColor);\n    this._private__renderer._internal_setData({\n      _internal_seriesLineColor: seriesLineColor,\n      _internal_seriesLineWidth: seriesLineWidth,\n      _internal_fillColor: data._internal_fillColor,\n      _internal_strokeColor: data._internal_strokeColor,\n      _internal_radius: data._internal_radius,\n      _internal_center: lastValuePoint\n    });\n  }\n  _private__updateRendererDataStage() {\n    const rendererData = this._private__renderer._internal_data();\n    if (rendererData !== null) {\n      const data = animationData(this._private__duration(), rendererData._internal_seriesLineColor);\n      rendererData._internal_fillColor = data._internal_fillColor;\n      rendererData._internal_strokeColor = data._internal_strokeColor;\n      rendererData._internal_radius = data._internal_radius;\n    }\n  }\n  _private__duration() {\n    return this._internal_animationActive() ? performance.now() - this._private__startTime : 2600 /* Constants.AnimationPeriod */ - 1;\n  }\n}\nfunction size(barSpacing, coeff) {\n  const result = Math.min(Math.max(barSpacing, 12 /* Constants.MinShapeSize */), 30 /* Constants.MaxShapeSize */) * coeff;\n  return ceiledOdd(result);\n}\nfunction shapeSize(shape, originalSize) {\n  switch (shape) {\n    case 'arrowDown':\n    case 'arrowUp':\n      return size(originalSize, 1);\n    case 'circle':\n      return size(originalSize, 0.8);\n    case 'square':\n      return size(originalSize, 0.7);\n  }\n}\nfunction calculateShapeHeight(barSpacing) {\n  return ceiledEven(size(barSpacing, 1));\n}\nfunction shapeMargin(barSpacing) {\n  return Math.max(size(barSpacing, 0.1), 3 /* Constants.MinShapeMargin */);\n}\nfunction calculateAdjustedMargin(margin, hasSide, hasInBar) {\n  if (hasSide) {\n    return margin;\n  } else if (hasInBar) {\n    return Math.ceil(margin / 2);\n  }\n  return 0;\n}\nfunction drawSquare(ctx, coords, size) {\n  const squareSize = shapeSize('square', size);\n  const halfSize = (squareSize - 1) * coords._internal_pixelRatio / 2;\n  const left = coords._internal_x - halfSize;\n  const top = coords._internal_y - halfSize;\n  ctx.fillRect(left, top, squareSize * coords._internal_pixelRatio, squareSize * coords._internal_pixelRatio);\n}\nfunction hitTestSquare(centerX, centerY, size, x, y) {\n  const squareSize = shapeSize('square', size);\n  const halfSize = (squareSize - 1) / 2;\n  const left = centerX - halfSize;\n  const top = centerY - halfSize;\n  return x >= left && x <= left + squareSize && y >= top && y <= top + squareSize;\n}\nfunction drawArrow(up, ctx, coords, size) {\n  const arrowSize = shapeSize('arrowUp', size);\n  const halfArrowSize = (arrowSize - 1) / 2 * coords._internal_pixelRatio;\n  const baseSize = ceiledOdd(size / 2);\n  const halfBaseSize = (baseSize - 1) / 2 * coords._internal_pixelRatio;\n  ctx.beginPath();\n  if (up) {\n    ctx.moveTo(coords._internal_x - halfArrowSize, coords._internal_y);\n    ctx.lineTo(coords._internal_x, coords._internal_y - halfArrowSize);\n    ctx.lineTo(coords._internal_x + halfArrowSize, coords._internal_y);\n    ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y);\n    ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y + halfArrowSize);\n    ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y + halfArrowSize);\n    ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y);\n  } else {\n    ctx.moveTo(coords._internal_x - halfArrowSize, coords._internal_y);\n    ctx.lineTo(coords._internal_x, coords._internal_y + halfArrowSize);\n    ctx.lineTo(coords._internal_x + halfArrowSize, coords._internal_y);\n    ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y);\n    ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y - halfArrowSize);\n    ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y - halfArrowSize);\n    ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y);\n  }\n  ctx.fill();\n}\nfunction hitTestArrow(up, centerX, centerY, size, x, y) {\n  // TODO: implement arrow hit test\n  return hitTestSquare(centerX, centerY, size, x, y);\n}\nfunction drawCircle(ctx, coords, size) {\n  const circleSize = shapeSize('circle', size);\n  const halfSize = (circleSize - 1) / 2;\n  ctx.beginPath();\n  ctx.arc(coords._internal_x, coords._internal_y, halfSize * coords._internal_pixelRatio, 0, 2 * Math.PI, false);\n  ctx.fill();\n}\nfunction hitTestCircle(centerX, centerY, size, x, y) {\n  const circleSize = shapeSize('circle', size);\n  const tolerance = 2 + circleSize / 2;\n  const xOffset = centerX - x;\n  const yOffset = centerY - y;\n  const dist = Math.sqrt(xOffset * xOffset + yOffset * yOffset);\n  return dist <= tolerance;\n}\nfunction drawText(ctx, text, x, y, horizontalPixelRatio, verticalPixelRatio) {\n  ctx.save();\n  ctx.scale(horizontalPixelRatio, verticalPixelRatio);\n  ctx.fillText(text, x, y);\n  ctx.restore();\n}\nfunction hitTestText(textX, textY, textWidth, textHeight, x, y) {\n  const halfHeight = textHeight / 2;\n  return x >= textX && x <= textX + textWidth && y >= textY - halfHeight && y <= textY + halfHeight;\n}\nclass SeriesMarkersRenderer extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n    this._private__textWidthCache = new TextWidthCache();\n    this._private__fontSize = -1;\n    this._private__fontFamily = '';\n    this._private__font = '';\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal_setParams(fontSize, fontFamily) {\n    if (this._private__fontSize !== fontSize || this._private__fontFamily !== fontFamily) {\n      this._private__fontSize = fontSize;\n      this._private__fontFamily = fontFamily;\n      this._private__font = makeFont(fontSize, fontFamily);\n      this._private__textWidthCache._internal_reset();\n    }\n  }\n  _internal_hitTest(x, y) {\n    if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n      return null;\n    }\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const item = this._private__data._internal_items[i];\n      if (hitTestItem(item, x, y)) {\n        return {\n          _internal_hitTestData: item._internal_internalId,\n          _internal_externalId: item._internal_externalId\n        };\n      }\n    }\n    return null;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }, isHovered, hitTestData) {\n    if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n      return;\n    }\n    ctx.textBaseline = 'middle';\n    ctx.font = this._private__font;\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const item = this._private__data._internal_items[i];\n      if (item._internal_text !== undefined) {\n        item._internal_text._internal_width = this._private__textWidthCache._internal_measureText(ctx, item._internal_text._internal_content);\n        item._internal_text._internal_height = this._private__fontSize;\n        item._internal_text._internal_x = item._internal_x - item._internal_text._internal_width / 2;\n      }\n      drawItem(item, ctx, horizontalPixelRatio, verticalPixelRatio);\n    }\n  }\n}\nfunction bitmapShapeItemCoordinates(item, horizontalPixelRatio, verticalPixelRatio) {\n  const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n  const correction = tickWidth % 2 / 2;\n  return {\n    _internal_x: Math.round(item._internal_x * horizontalPixelRatio) + correction,\n    _internal_y: item._internal_y * verticalPixelRatio,\n    _internal_pixelRatio: horizontalPixelRatio\n  };\n}\nfunction drawItem(item, ctx, horizontalPixelRatio, verticalPixelRatio) {\n  ctx.fillStyle = item._internal_color;\n  if (item._internal_text !== undefined) {\n    drawText(ctx, item._internal_text._internal_content, item._internal_text._internal_x, item._internal_text._internal_y, horizontalPixelRatio, verticalPixelRatio);\n  }\n  drawShape(item, ctx, bitmapShapeItemCoordinates(item, horizontalPixelRatio, verticalPixelRatio));\n}\nfunction drawShape(item, ctx, coordinates) {\n  if (item._internal_size === 0) {\n    return;\n  }\n  switch (item._internal_shape) {\n    case 'arrowDown':\n      drawArrow(false, ctx, coordinates, item._internal_size);\n      return;\n    case 'arrowUp':\n      drawArrow(true, ctx, coordinates, item._internal_size);\n      return;\n    case 'circle':\n      drawCircle(ctx, coordinates, item._internal_size);\n      return;\n    case 'square':\n      drawSquare(ctx, coordinates, item._internal_size);\n      return;\n  }\n  ensureNever(item._internal_shape);\n}\nfunction hitTestItem(item, x, y) {\n  if (item._internal_text !== undefined && hitTestText(item._internal_text._internal_x, item._internal_text._internal_y, item._internal_text._internal_width, item._internal_text._internal_height, x, y)) {\n    return true;\n  }\n  return hitTestShape(item, x, y);\n}\nfunction hitTestShape(item, x, y) {\n  if (item._internal_size === 0) {\n    return false;\n  }\n  switch (item._internal_shape) {\n    case 'arrowDown':\n      return hitTestArrow(true, item._internal_x, item._internal_y, item._internal_size, x, y);\n    case 'arrowUp':\n      return hitTestArrow(false, item._internal_x, item._internal_y, item._internal_size, x, y);\n    case 'circle':\n      return hitTestCircle(item._internal_x, item._internal_y, item._internal_size, x, y);\n    case 'square':\n      return hitTestSquare(item._internal_x, item._internal_y, item._internal_size, x, y);\n  }\n}\n\n// eslint-disable-next-line max-params\nfunction fillSizeAndY(rendererItem, marker, seriesData, offsets, textHeight, shapeMargin, priceScale, timeScale, firstValue) {\n  const inBarPrice = isNumber(seriesData) ? seriesData : seriesData._internal_close;\n  const highPrice = isNumber(seriesData) ? seriesData : seriesData._internal_high;\n  const lowPrice = isNumber(seriesData) ? seriesData : seriesData._internal_low;\n  const sizeMultiplier = isNumber(marker.size) ? Math.max(marker.size, 0) : 1;\n  const shapeSize = calculateShapeHeight(timeScale._internal_barSpacing()) * sizeMultiplier;\n  const halfSize = shapeSize / 2;\n  rendererItem._internal_size = shapeSize;\n  switch (marker.position) {\n    case 'inBar':\n      {\n        rendererItem._internal_y = priceScale._internal_priceToCoordinate(inBarPrice, firstValue);\n        if (rendererItem._internal_text !== undefined) {\n          rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n        }\n        return;\n      }\n    case 'aboveBar':\n      {\n        rendererItem._internal_y = priceScale._internal_priceToCoordinate(highPrice, firstValue) - halfSize - offsets._internal_aboveBar;\n        if (rendererItem._internal_text !== undefined) {\n          rendererItem._internal_text._internal_y = rendererItem._internal_y - halfSize - textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n          offsets._internal_aboveBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n        }\n        offsets._internal_aboveBar += shapeSize + shapeMargin;\n        return;\n      }\n    case 'belowBar':\n      {\n        rendererItem._internal_y = priceScale._internal_priceToCoordinate(lowPrice, firstValue) + halfSize + offsets._internal_belowBar;\n        if (rendererItem._internal_text !== undefined) {\n          rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n          offsets._internal_belowBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n        }\n        offsets._internal_belowBar += shapeSize + shapeMargin;\n        return;\n      }\n  }\n  ensureNever(marker.position);\n}\nclass SeriesMarkersPaneView {\n  constructor(series, model) {\n    this._private__invalidated = true;\n    this._private__dataInvalidated = true;\n    this._private__autoScaleMarginsInvalidated = true;\n    this._private__autoScaleMargins = null;\n    this._private__markersPositions = null;\n    this._private__renderer = new SeriesMarkersRenderer();\n    this._private__series = series;\n    this._private__model = model;\n    this._private__data = {\n      _internal_items: [],\n      _internal_visibleRange: null\n    };\n  }\n  _internal_update(updateType) {\n    this._private__invalidated = true;\n    this._private__autoScaleMarginsInvalidated = true;\n    if (updateType === 'data') {\n      this._private__dataInvalidated = true;\n      this._private__markersPositions = null;\n    }\n  }\n  _internal_renderer(addAnchors) {\n    if (!this._private__series._internal_visible()) {\n      return null;\n    }\n    if (this._private__invalidated) {\n      this._internal__makeValid();\n    }\n    const layout = this._private__model._internal_options().layout;\n    this._private__renderer._internal_setParams(layout.fontSize, layout.fontFamily);\n    this._private__renderer._internal_setData(this._private__data);\n    return this._private__renderer;\n  }\n  _internal_autoScaleMargins() {\n    if (this._private__autoScaleMarginsInvalidated) {\n      if (this._private__series._internal_indexedMarkers().length > 0) {\n        const barSpacing = this._private__model._internal_timeScale()._internal_barSpacing();\n        const shapeMargin$1 = shapeMargin(barSpacing);\n        const marginValue = calculateShapeHeight(barSpacing) * 1.5 + shapeMargin$1 * 2;\n        const positions = this._internal__getMarkerPositions();\n        this._private__autoScaleMargins = {\n          above: calculateAdjustedMargin(marginValue, positions.aboveBar, positions.inBar),\n          below: calculateAdjustedMargin(marginValue, positions.belowBar, positions.inBar)\n        };\n      } else {\n        this._private__autoScaleMargins = null;\n      }\n      this._private__autoScaleMarginsInvalidated = false;\n    }\n    return this._private__autoScaleMargins;\n  }\n  _internal__getMarkerPositions() {\n    if (this._private__markersPositions === null) {\n      this._private__markersPositions = this._private__series._internal_indexedMarkers().reduce((acc, marker) => {\n        if (!acc[marker.position]) {\n          acc[marker.position] = true;\n        }\n        return acc;\n      }, {\n        inBar: false,\n        aboveBar: false,\n        belowBar: false\n      });\n    }\n    return this._private__markersPositions;\n  }\n  _internal__makeValid() {\n    const priceScale = this._private__series._internal_priceScale();\n    const timeScale = this._private__model._internal_timeScale();\n    const seriesMarkers = this._private__series._internal_indexedMarkers();\n    if (this._private__dataInvalidated) {\n      this._private__data._internal_items = seriesMarkers.map(marker => ({\n        _internal_time: marker.time,\n        _internal_x: 0,\n        _internal_y: 0,\n        _internal_size: 0,\n        _internal_shape: marker.shape,\n        _internal_color: marker.color,\n        _internal_internalId: marker._internal_internalId,\n        _internal_externalId: marker.id,\n        _internal_text: undefined\n      }));\n      this._private__dataInvalidated = false;\n    }\n    const layoutOptions = this._private__model._internal_options().layout;\n    this._private__data._internal_visibleRange = null;\n    const visibleBars = timeScale._internal_visibleStrictRange();\n    if (visibleBars === null) {\n      return;\n    }\n    const firstValue = this._private__series._internal_firstValue();\n    if (firstValue === null) {\n      return;\n    }\n    if (this._private__data._internal_items.length === 0) {\n      return;\n    }\n    let prevTimeIndex = NaN;\n    const shapeMargin$1 = shapeMargin(timeScale._internal_barSpacing());\n    const offsets = {\n      _internal_aboveBar: shapeMargin$1,\n      _internal_belowBar: shapeMargin$1\n    };\n    this._private__data._internal_visibleRange = visibleTimedValues(this._private__data._internal_items, visibleBars, true);\n    for (let index = this._private__data._internal_visibleRange.from; index < this._private__data._internal_visibleRange.to; index++) {\n      const marker = seriesMarkers[index];\n      if (marker.time !== prevTimeIndex) {\n        // new bar, reset stack counter\n        offsets._internal_aboveBar = shapeMargin$1;\n        offsets._internal_belowBar = shapeMargin$1;\n        prevTimeIndex = marker.time;\n      }\n      const rendererItem = this._private__data._internal_items[index];\n      rendererItem._internal_x = timeScale._internal_indexToCoordinate(marker.time);\n      if (marker.text !== undefined && marker.text.length > 0) {\n        rendererItem._internal_text = {\n          _internal_content: marker.text,\n          _internal_x: 0,\n          _internal_y: 0,\n          _internal_width: 0,\n          _internal_height: 0\n        };\n      }\n      const dataAt = this._private__series._internal_dataAt(marker.time);\n      if (dataAt === null) {\n        continue;\n      }\n      fillSizeAndY(rendererItem, marker, dataAt, offsets, layoutOptions.fontSize, shapeMargin$1, priceScale, timeScale, firstValue._internal_value);\n    }\n    this._private__invalidated = false;\n  }\n}\nclass SeriesPriceLinePaneView extends SeriesHorizontalLinePaneView {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(series) {\n    super(series);\n  }\n  _internal__updateImpl() {\n    const data = this._internal__lineRendererData;\n    data._internal_visible = false;\n    const seriesOptions = this._internal__series._internal_options();\n    if (!seriesOptions.priceLineVisible || !this._internal__series._internal_visible()) {\n      return;\n    }\n    const lastValueData = this._internal__series._internal_lastValueData(seriesOptions.priceLineSource === 0 /* PriceLineSource.LastBar */);\n    if (lastValueData._internal_noData) {\n      return;\n    }\n    data._internal_visible = true;\n    data._internal_y = lastValueData._internal_coordinate;\n    data._internal_color = this._internal__series._internal_priceLineColor(lastValueData._internal_color);\n    data._internal_lineWidth = seriesOptions.priceLineWidth;\n    data._internal_lineStyle = seriesOptions.priceLineStyle;\n  }\n}\nclass SeriesPriceAxisView extends PriceAxisView {\n  constructor(source) {\n    super();\n    this._private__source = source;\n  }\n  _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n    axisRendererData._internal_visible = false;\n    paneRendererData._internal_visible = false;\n    const source = this._private__source;\n    if (!source._internal_visible()) {\n      return;\n    }\n    const seriesOptions = source._internal_options();\n    const showSeriesLastValue = seriesOptions.lastValueVisible;\n    const showSymbolLabel = source._internal_title() !== '';\n    const showPriceAndPercentage = seriesOptions.seriesLastValueMode === 0 /* PriceAxisLastValueMode.LastPriceAndPercentageValue */;\n    const lastValueData = source._internal_lastValueData(false);\n    if (lastValueData._internal_noData) {\n      return;\n    }\n    if (showSeriesLastValue) {\n      axisRendererData._internal_text = this._internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage);\n      axisRendererData._internal_visible = axisRendererData._internal_text.length !== 0;\n    }\n    if (showSymbolLabel || showPriceAndPercentage) {\n      paneRendererData._internal_text = this._internal__paneText(lastValueData, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage);\n      paneRendererData._internal_visible = paneRendererData._internal_text.length > 0;\n    }\n    const lastValueColor = source._internal_priceLineColor(lastValueData._internal_color);\n    const colors = generateContrastColors(lastValueColor);\n    commonRendererData._internal_background = colors._internal_background;\n    commonRendererData._internal_coordinate = lastValueData._internal_coordinate;\n    paneRendererData._internal_borderColor = source._internal_model()._internal_backgroundColorAtYPercentFromTop(lastValueData._internal_coordinate / source._internal_priceScale()._internal_height());\n    axisRendererData._internal_borderColor = lastValueColor;\n    axisRendererData._internal_color = colors._internal_foreground;\n    paneRendererData._internal_color = colors._internal_foreground;\n  }\n  _internal__paneText(lastValue, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage) {\n    let result = '';\n    const title = this._private__source._internal_title();\n    if (showSymbolLabel && title.length !== 0) {\n      result += `${title} `;\n    }\n    if (showSeriesLastValue && showPriceAndPercentage) {\n      result += this._private__source._internal_priceScale()._internal_isPercentage() ? lastValue._internal_formattedPriceAbsolute : lastValue._internal_formattedPricePercentage;\n    }\n    return result.trim();\n  }\n  _internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage) {\n    if (!showSeriesLastValue) {\n      return '';\n    }\n    if (!showPriceAndPercentage) {\n      return lastValueData._internal_text;\n    }\n    return this._private__source._internal_priceScale()._internal_isPercentage() ? lastValueData._internal_formattedPricePercentage : lastValueData._internal_formattedPriceAbsolute;\n  }\n}\nfunction computeFiniteResult(method, valueOne, valueTwo, fallback) {\n  const firstFinite = Number.isFinite(valueOne);\n  const secondFinite = Number.isFinite(valueTwo);\n  if (firstFinite && secondFinite) {\n    return method(valueOne, valueTwo);\n  }\n  return !firstFinite && !secondFinite ? fallback : firstFinite ? valueOne : valueTwo;\n}\nclass PriceRangeImpl {\n  constructor(minValue, maxValue) {\n    this._private__minValue = minValue;\n    this._private__maxValue = maxValue;\n  }\n  _internal_equals(pr) {\n    if (pr === null) {\n      return false;\n    }\n    return this._private__minValue === pr._private__minValue && this._private__maxValue === pr._private__maxValue;\n  }\n  _internal_clone() {\n    return new PriceRangeImpl(this._private__minValue, this._private__maxValue);\n  }\n  _internal_minValue() {\n    return this._private__minValue;\n  }\n  _internal_maxValue() {\n    return this._private__maxValue;\n  }\n  _internal_length() {\n    return this._private__maxValue - this._private__minValue;\n  }\n  _internal_isEmpty() {\n    return this._private__maxValue === this._private__minValue || Number.isNaN(this._private__maxValue) || Number.isNaN(this._private__minValue);\n  }\n  _internal_merge(anotherRange) {\n    if (anotherRange === null) {\n      return this;\n    }\n    return new PriceRangeImpl(computeFiniteResult(Math.min, this._internal_minValue(), anotherRange._internal_minValue(), -Infinity), computeFiniteResult(Math.max, this._internal_maxValue(), anotherRange._internal_maxValue(), Infinity));\n  }\n  _internal_scaleAroundCenter(coeff) {\n    if (!isNumber(coeff)) {\n      return;\n    }\n    const delta = this._private__maxValue - this._private__minValue;\n    if (delta === 0) {\n      return;\n    }\n    const center = (this._private__maxValue + this._private__minValue) * 0.5;\n    let maxDelta = this._private__maxValue - center;\n    let minDelta = this._private__minValue - center;\n    maxDelta *= coeff;\n    minDelta *= coeff;\n    this._private__maxValue = center + maxDelta;\n    this._private__minValue = center + minDelta;\n  }\n  _internal_shift(delta) {\n    if (!isNumber(delta)) {\n      return;\n    }\n    this._private__maxValue += delta;\n    this._private__minValue += delta;\n  }\n  _internal_toRaw() {\n    return {\n      minValue: this._private__minValue,\n      maxValue: this._private__maxValue\n    };\n  }\n  static _internal_fromRaw(raw) {\n    return raw === null ? null : new PriceRangeImpl(raw.minValue, raw.maxValue);\n  }\n}\nclass AutoscaleInfoImpl {\n  constructor(priceRange, margins) {\n    this._private__priceRange = priceRange;\n    this._private__margins = margins || null;\n  }\n  _internal_priceRange() {\n    return this._private__priceRange;\n  }\n  _internal_margins() {\n    return this._private__margins;\n  }\n  _internal_toRaw() {\n    if (this._private__priceRange === null) {\n      return null;\n    }\n    return {\n      priceRange: this._private__priceRange._internal_toRaw(),\n      margins: this._private__margins || undefined\n    };\n  }\n  static _internal_fromRaw(raw) {\n    return raw === null ? null : new AutoscaleInfoImpl(PriceRangeImpl._internal_fromRaw(raw.priceRange), raw.margins);\n  }\n}\nclass CustomPriceLinePaneView extends SeriesHorizontalLinePaneView {\n  constructor(series, priceLine) {\n    super(series);\n    this._private__priceLine = priceLine;\n  }\n  _internal__updateImpl() {\n    const data = this._internal__lineRendererData;\n    data._internal_visible = false;\n    const lineOptions = this._private__priceLine._internal_options();\n    if (!this._internal__series._internal_visible() || !lineOptions.lineVisible) {\n      return;\n    }\n    const y = this._private__priceLine._internal_yCoord();\n    if (y === null) {\n      return;\n    }\n    data._internal_visible = true;\n    data._internal_y = y;\n    data._internal_color = lineOptions.color;\n    data._internal_lineWidth = lineOptions.lineWidth;\n    data._internal_lineStyle = lineOptions.lineStyle;\n    data._internal_externalId = this._private__priceLine._internal_options().id;\n  }\n}\nclass CustomPriceLinePriceAxisView extends PriceAxisView {\n  constructor(series, priceLine) {\n    super();\n    this._private__series = series;\n    this._private__priceLine = priceLine;\n  }\n  _internal__updateRendererData(axisRendererData, paneRendererData, commonData) {\n    axisRendererData._internal_visible = false;\n    paneRendererData._internal_visible = false;\n    const options = this._private__priceLine._internal_options();\n    const labelVisible = options.axisLabelVisible;\n    const showPaneLabel = options.title !== '';\n    const series = this._private__series;\n    if (!labelVisible || !series._internal_visible()) {\n      return;\n    }\n    const y = this._private__priceLine._internal_yCoord();\n    if (y === null) {\n      return;\n    }\n    if (showPaneLabel) {\n      paneRendererData._internal_text = options.title;\n      paneRendererData._internal_visible = true;\n    }\n    paneRendererData._internal_borderColor = series._internal_model()._internal_backgroundColorAtYPercentFromTop(y / series._internal_priceScale()._internal_height());\n    axisRendererData._internal_text = this._private__formatPrice(options.price);\n    axisRendererData._internal_visible = true;\n    const colors = generateContrastColors(options.axisLabelColor || options.color);\n    commonData._internal_background = colors._internal_background;\n    const textColor = options.axisLabelTextColor || colors._internal_foreground;\n    axisRendererData._internal_color = textColor; // price text\n    paneRendererData._internal_color = textColor; // title text\n    commonData._internal_coordinate = y;\n  }\n  _private__formatPrice(price) {\n    const firstValue = this._private__series._internal_firstValue();\n    if (firstValue === null) {\n      return '';\n    }\n    return this._private__series._internal_priceScale()._internal_formatPrice(price, firstValue._internal_value);\n  }\n}\nclass CustomPriceLine {\n  constructor(series, options) {\n    this._private__series = series;\n    this._private__options = options;\n    this._private__priceLineView = new CustomPriceLinePaneView(series, this);\n    this._private__priceAxisView = new CustomPriceLinePriceAxisView(series, this);\n    this._private__panePriceAxisView = new PanePriceAxisView(this._private__priceAxisView, series, series._internal_model());\n  }\n  _internal_applyOptions(options) {\n    merge(this._private__options, options);\n    this._internal_update();\n    this._private__series._internal_model()._internal_lightUpdate();\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_paneView() {\n    return this._private__priceLineView;\n  }\n  _internal_labelPaneView() {\n    return this._private__panePriceAxisView;\n  }\n  _internal_priceAxisView() {\n    return this._private__priceAxisView;\n  }\n  _internal_update() {\n    this._private__priceLineView._internal_update();\n    this._private__priceAxisView._internal_update();\n  }\n  _internal_yCoord() {\n    const series = this._private__series;\n    const priceScale = series._internal_priceScale();\n    const timeScale = series._internal_model()._internal_timeScale();\n    if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n      return null;\n    }\n    const firstValue = series._internal_firstValue();\n    if (firstValue === null) {\n      return null;\n    }\n    return priceScale._internal_priceToCoordinate(this._private__options.price, firstValue._internal_value);\n  }\n}\nclass PriceDataSource extends DataSource {\n  constructor(model) {\n    super();\n    this._private__model = model;\n  }\n  _internal_model() {\n    return this._private__model;\n  }\n}\nconst barStyleFnMap = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Bar: (findBar, barStyle, barIndex, precomputedBars) => {\n    var _a;\n    const upColor = barStyle.upColor;\n    const downColor = barStyle.downColor;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n    return {\n      _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : isUp ? upColor : downColor\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Candlestick: (findBar, candlestickStyle, barIndex, precomputedBars) => {\n    var _a, _b, _c;\n    const upColor = candlestickStyle.upColor;\n    const downColor = candlestickStyle.downColor;\n    const borderUpColor = candlestickStyle.borderUpColor;\n    const borderDownColor = candlestickStyle.borderDownColor;\n    const wickUpColor = candlestickStyle.wickUpColor;\n    const wickDownColor = candlestickStyle.wickDownColor;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n    return {\n      _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : isUp ? upColor : downColor,\n      _internal_barBorderColor: (_b = currentBar._internal_borderColor) !== null && _b !== void 0 ? _b : isUp ? borderUpColor : borderDownColor,\n      _internal_barWickColor: (_c = currentBar._internal_wickColor) !== null && _c !== void 0 ? _c : isUp ? wickUpColor : wickDownColor\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Custom: (findBar, customStyle, barIndex, precomputedBars) => {\n    var _a;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    return {\n      _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : customStyle.color\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Area: (findBar, areaStyle, barIndex, precomputedBars) => {\n    var _a, _b, _c, _d;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    return {\n      _internal_barColor: (_a = currentBar._internal_lineColor) !== null && _a !== void 0 ? _a : areaStyle.lineColor,\n      _internal_lineColor: (_b = currentBar._internal_lineColor) !== null && _b !== void 0 ? _b : areaStyle.lineColor,\n      _internal_topColor: (_c = currentBar._internal_topColor) !== null && _c !== void 0 ? _c : areaStyle.topColor,\n      _internal_bottomColor: (_d = currentBar._internal_bottomColor) !== null && _d !== void 0 ? _d : areaStyle.bottomColor\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Baseline: (findBar, baselineStyle, barIndex, precomputedBars) => {\n    var _a, _b, _c, _d, _e, _f;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    const isAboveBaseline = currentBar._internal_value[3 /* PlotRowValueIndex.Close */] >= baselineStyle.baseValue.price;\n    return {\n      _internal_barColor: isAboveBaseline ? baselineStyle.topLineColor : baselineStyle.bottomLineColor,\n      _internal_topLineColor: (_a = currentBar._internal_topLineColor) !== null && _a !== void 0 ? _a : baselineStyle.topLineColor,\n      _internal_bottomLineColor: (_b = currentBar._internal_bottomLineColor) !== null && _b !== void 0 ? _b : baselineStyle.bottomLineColor,\n      _internal_topFillColor1: (_c = currentBar._internal_topFillColor1) !== null && _c !== void 0 ? _c : baselineStyle.topFillColor1,\n      _internal_topFillColor2: (_d = currentBar._internal_topFillColor2) !== null && _d !== void 0 ? _d : baselineStyle.topFillColor2,\n      _internal_bottomFillColor1: (_e = currentBar._internal_bottomFillColor1) !== null && _e !== void 0 ? _e : baselineStyle.bottomFillColor1,\n      _internal_bottomFillColor2: (_f = currentBar._internal_bottomFillColor2) !== null && _f !== void 0 ? _f : baselineStyle.bottomFillColor2\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Line: (findBar, lineStyle, barIndex, precomputedBars) => {\n    var _a, _b;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    return {\n      _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : lineStyle.color,\n      _internal_lineColor: (_b = currentBar._internal_color) !== null && _b !== void 0 ? _b : lineStyle.color\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Histogram: (findBar, histogramStyle, barIndex, precomputedBars) => {\n    var _a;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    return {\n      _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : histogramStyle.color\n    };\n  }\n};\nclass SeriesBarColorer {\n  constructor(series) {\n    this._private__findBar = (barIndex, precomputedBars) => {\n      if (precomputedBars !== undefined) {\n        return precomputedBars._internal_value;\n      }\n      return this._private__series._internal_bars()._internal_valueAt(barIndex);\n    };\n    this._private__series = series;\n    this._private__styleGetter = barStyleFnMap[series._internal_seriesType()];\n  }\n  _internal_barStyle(barIndex, precomputedBars) {\n    // precomputedBars: {value: [Array BarValues], previousValue: [Array BarValues] | undefined}\n    // Used to avoid binary search if bars are already known\n    return this._private__styleGetter(this._private__findBar, this._private__series._internal_options(), barIndex, precomputedBars);\n  }\n}\n\n/**\n * Search direction if no data found at provided index\n */\nvar MismatchDirection;\n(function (MismatchDirection) {\n  /**\n   * Search the nearest left item\n   */\n  MismatchDirection[MismatchDirection[\"NearestLeft\"] = -1] = \"NearestLeft\";\n  /**\n   * Do not search\n   */\n  MismatchDirection[MismatchDirection[\"None\"] = 0] = \"None\";\n  /**\n   * Search the nearest right item\n   */\n  MismatchDirection[MismatchDirection[\"NearestRight\"] = 1] = \"NearestRight\";\n})(MismatchDirection || (MismatchDirection = {}));\n// TODO: think about changing it dynamically\nconst CHUNK_SIZE = 30;\n/**\n * PlotList is an array of plot rows\n * each plot row consists of key (index in timescale) and plot value map\n */\nclass PlotList {\n  constructor() {\n    this._private__items = [];\n    this._private__minMaxCache = new Map();\n    this._private__rowSearchCache = new Map();\n  }\n  // @returns Last row\n  _internal_last() {\n    return this._internal_size() > 0 ? this._private__items[this._private__items.length - 1] : null;\n  }\n  _internal_firstIndex() {\n    return this._internal_size() > 0 ? this._private__indexAt(0) : null;\n  }\n  _internal_lastIndex() {\n    return this._internal_size() > 0 ? this._private__indexAt(this._private__items.length - 1) : null;\n  }\n  _internal_size() {\n    return this._private__items.length;\n  }\n  _internal_isEmpty() {\n    return this._internal_size() === 0;\n  }\n  _internal_contains(index) {\n    return this._private__search(index, 0 /* MismatchDirection.None */) !== null;\n  }\n  _internal_valueAt(index) {\n    return this._internal_search(index);\n  }\n  _internal_search(index, searchMode = 0 /* MismatchDirection.None */) {\n    const pos = this._private__search(index, searchMode);\n    if (pos === null) {\n      return null;\n    }\n    return Object.assign(Object.assign({}, this._private__valueAt(pos)), {\n      _internal_index: this._private__indexAt(pos)\n    });\n  }\n  _internal_rows() {\n    return this._private__items;\n  }\n  _internal_minMaxOnRangeCached(start, end, plots) {\n    // this code works for single series only\n    // could fail after whitespaces implementation\n    if (this._internal_isEmpty()) {\n      return null;\n    }\n    let result = null;\n    for (const plot of plots) {\n      const plotMinMax = this._private__minMaxOnRangeCachedImpl(start, end, plot);\n      result = mergeMinMax(result, plotMinMax);\n    }\n    return result;\n  }\n  _internal_setData(plotRows) {\n    this._private__rowSearchCache.clear();\n    this._private__minMaxCache.clear();\n    this._private__items = plotRows;\n  }\n  _private__indexAt(offset) {\n    return this._private__items[offset]._internal_index;\n  }\n  _private__valueAt(offset) {\n    return this._private__items[offset];\n  }\n  _private__search(index, searchMode) {\n    const exactPos = this._private__bsearch(index);\n    if (exactPos === null && searchMode !== 0 /* MismatchDirection.None */) {\n      switch (searchMode) {\n        case -1 /* MismatchDirection.NearestLeft */:\n          return this._private__searchNearestLeft(index);\n        case 1 /* MismatchDirection.NearestRight */:\n          return this._private__searchNearestRight(index);\n        default:\n          throw new TypeError('Unknown search mode');\n      }\n    }\n    return exactPos;\n  }\n  _private__searchNearestLeft(index) {\n    let nearestLeftPos = this._private__lowerbound(index);\n    if (nearestLeftPos > 0) {\n      nearestLeftPos = nearestLeftPos - 1;\n    }\n    return nearestLeftPos !== this._private__items.length && this._private__indexAt(nearestLeftPos) < index ? nearestLeftPos : null;\n  }\n  _private__searchNearestRight(index) {\n    const nearestRightPos = this._private__upperbound(index);\n    return nearestRightPos !== this._private__items.length && index < this._private__indexAt(nearestRightPos) ? nearestRightPos : null;\n  }\n  _private__bsearch(index) {\n    const start = this._private__lowerbound(index);\n    if (start !== this._private__items.length && !(index < this._private__items[start]._internal_index)) {\n      return start;\n    }\n    return null;\n  }\n  _private__lowerbound(index) {\n    return lowerBound(this._private__items, index, (a, b) => a._internal_index < b);\n  }\n  _private__upperbound(index) {\n    return upperBound(this._private__items, index, (a, b) => a._internal_index > b);\n  }\n  _private__plotMinMax(startIndex, endIndexExclusive, plotIndex) {\n    let result = null;\n    for (let i = startIndex; i < endIndexExclusive; i++) {\n      const values = this._private__items[i]._internal_value;\n      const v = values[plotIndex];\n      if (Number.isNaN(v)) {\n        continue;\n      }\n      if (result === null) {\n        result = {\n          _internal_min: v,\n          _internal_max: v\n        };\n      } else {\n        if (v < result._internal_min) {\n          result._internal_min = v;\n        }\n        if (v > result._internal_max) {\n          result._internal_max = v;\n        }\n      }\n    }\n    return result;\n  }\n  _private__minMaxOnRangeCachedImpl(start, end, plotIndex) {\n    // this code works for single series only\n    // could fail after whitespaces implementation\n    if (this._internal_isEmpty()) {\n      return null;\n    }\n    let result = null;\n    // assume that bar indexes only increase\n    const firstIndex = ensureNotNull(this._internal_firstIndex());\n    const lastIndex = ensureNotNull(this._internal_lastIndex());\n    const s = Math.max(start, firstIndex);\n    const e = Math.min(end, lastIndex);\n    const cachedLow = Math.ceil(s / CHUNK_SIZE) * CHUNK_SIZE;\n    const cachedHigh = Math.max(cachedLow, Math.floor(e / CHUNK_SIZE) * CHUNK_SIZE);\n    {\n      const startIndex = this._private__lowerbound(s);\n      const endIndex = this._private__upperbound(Math.min(e, cachedLow, end)); // non-inclusive end\n      const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n      result = mergeMinMax(result, plotMinMax);\n    }\n    let minMaxCache = this._private__minMaxCache.get(plotIndex);\n    if (minMaxCache === undefined) {\n      minMaxCache = new Map();\n      this._private__minMaxCache.set(plotIndex, minMaxCache);\n    }\n    // now go cached\n    for (let c = Math.max(cachedLow + 1, s); c < cachedHigh; c += CHUNK_SIZE) {\n      const chunkIndex = Math.floor(c / CHUNK_SIZE);\n      let chunkMinMax = minMaxCache.get(chunkIndex);\n      if (chunkMinMax === undefined) {\n        const chunkStart = this._private__lowerbound(chunkIndex * CHUNK_SIZE);\n        const chunkEnd = this._private__upperbound((chunkIndex + 1) * CHUNK_SIZE - 1);\n        chunkMinMax = this._private__plotMinMax(chunkStart, chunkEnd, plotIndex);\n        minMaxCache.set(chunkIndex, chunkMinMax);\n      }\n      result = mergeMinMax(result, chunkMinMax);\n    }\n    // tail\n    {\n      const startIndex = this._private__lowerbound(cachedHigh);\n      const endIndex = this._private__upperbound(e); // non-inclusive end\n      const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n      result = mergeMinMax(result, plotMinMax);\n    }\n    return result;\n  }\n}\nfunction mergeMinMax(first, second) {\n  if (first === null) {\n    return second;\n  } else {\n    if (second === null) {\n      return first;\n    } else {\n      // merge MinMax values\n      const min = Math.min(first._internal_min, second._internal_min);\n      const max = Math.max(first._internal_max, second._internal_max);\n      return {\n        _internal_min: min,\n        _internal_max: max\n      };\n    }\n  }\n}\nfunction createSeriesPlotList() {\n  return new PlotList();\n}\nclass SeriesPrimitiveRendererWrapper {\n  constructor(baseRenderer) {\n    this._private__baseRenderer = baseRenderer;\n  }\n  _internal_draw(target, isHovered, hitTestData) {\n    this._private__baseRenderer.draw(target);\n  }\n  _internal_drawBackground(target, isHovered, hitTestData) {\n    var _a, _b;\n    (_b = (_a = this._private__baseRenderer).drawBackground) === null || _b === void 0 ? void 0 : _b.call(_a, target);\n  }\n}\nclass SeriesPrimitivePaneViewWrapper {\n  constructor(paneView) {\n    this._private__cache = null;\n    this._private__paneView = paneView;\n  }\n  _internal_renderer() {\n    var _a;\n    const baseRenderer = this._private__paneView.renderer();\n    if (baseRenderer === null) {\n      return null;\n    }\n    if (((_a = this._private__cache) === null || _a === void 0 ? void 0 : _a._internal_base) === baseRenderer) {\n      return this._private__cache._internal_wrapper;\n    }\n    const wrapper = new SeriesPrimitiveRendererWrapper(baseRenderer);\n    this._private__cache = {\n      _internal_base: baseRenderer,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_zOrder() {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = this._private__paneView).zOrder) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : 'normal';\n  }\n}\nfunction getAxisViewData(baseView) {\n  var _a, _b, _c, _d, _e;\n  return {\n    _internal_text: baseView.text(),\n    _internal_coordinate: baseView.coordinate(),\n    _internal_fixedCoordinate: (_a = baseView.fixedCoordinate) === null || _a === void 0 ? void 0 : _a.call(baseView),\n    _internal_color: baseView.textColor(),\n    _internal_background: baseView.backColor(),\n    _internal_visible: (_c = (_b = baseView.visible) === null || _b === void 0 ? void 0 : _b.call(baseView)) !== null && _c !== void 0 ? _c : true,\n    _internal_tickVisible: (_e = (_d = baseView.tickVisible) === null || _d === void 0 ? void 0 : _d.call(baseView)) !== null && _e !== void 0 ? _e : true\n  };\n}\nclass SeriesPrimitiveTimeAxisViewWrapper {\n  constructor(baseView, timeScale) {\n    this._private__renderer = new TimeAxisViewRenderer();\n    this._private__baseView = baseView;\n    this._private__timeScale = timeScale;\n  }\n  _internal_renderer() {\n    this._private__renderer._internal_setData(Object.assign({\n      _internal_width: this._private__timeScale._internal_width()\n    }, getAxisViewData(this._private__baseView)));\n    return this._private__renderer;\n  }\n}\nclass SeriesPrimitivePriceAxisViewWrapper extends PriceAxisView {\n  constructor(baseView, priceScale) {\n    super();\n    this._private__baseView = baseView;\n    this._private__priceScale = priceScale;\n  }\n  _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n    const data = getAxisViewData(this._private__baseView);\n    commonRendererData._internal_background = data._internal_background;\n    axisRendererData._internal_color = data._internal_color;\n    const additionalPadding = 2 / 12 * this._private__priceScale._internal_fontSize();\n    commonRendererData._internal_additionalPaddingTop = additionalPadding;\n    commonRendererData._internal_additionalPaddingBottom = additionalPadding;\n    commonRendererData._internal_coordinate = data._internal_coordinate;\n    commonRendererData._internal_fixedCoordinate = data._internal_fixedCoordinate;\n    axisRendererData._internal_text = data._internal_text;\n    axisRendererData._internal_visible = data._internal_visible;\n    axisRendererData._internal_tickVisible = data._internal_tickVisible;\n  }\n}\nclass SeriesPrimitiveWrapper {\n  constructor(primitive, series) {\n    this._private__paneViewsCache = null;\n    this._private__timeAxisViewsCache = null;\n    this._private__priceAxisViewsCache = null;\n    this._private__priceAxisPaneViewsCache = null;\n    this._private__timeAxisPaneViewsCache = null;\n    this._private__primitive = primitive;\n    this._private__series = series;\n  }\n  _internal_primitive() {\n    return this._private__primitive;\n  }\n  _internal_updateAllViews() {\n    var _a, _b;\n    (_b = (_a = this._private__primitive).updateAllViews) === null || _b === void 0 ? void 0 : _b.call(_a);\n  }\n  _internal_paneViews() {\n    var _a, _b, _c, _d;\n    const base = (_c = (_b = (_a = this._private__primitive).paneViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n    if (((_d = this._private__paneViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n      return this._private__paneViewsCache._internal_wrapper;\n    }\n    const wrapper = base.map(pw => new SeriesPrimitivePaneViewWrapper(pw));\n    this._private__paneViewsCache = {\n      _internal_base: base,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_timeAxisViews() {\n    var _a, _b, _c, _d;\n    const base = (_c = (_b = (_a = this._private__primitive).timeAxisViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n    if (((_d = this._private__timeAxisViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n      return this._private__timeAxisViewsCache._internal_wrapper;\n    }\n    const timeScale = this._private__series._internal_model()._internal_timeScale();\n    const wrapper = base.map(aw => new SeriesPrimitiveTimeAxisViewWrapper(aw, timeScale));\n    this._private__timeAxisViewsCache = {\n      _internal_base: base,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_priceAxisViews() {\n    var _a, _b, _c, _d;\n    const base = (_c = (_b = (_a = this._private__primitive).priceAxisViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n    if (((_d = this._private__priceAxisViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n      return this._private__priceAxisViewsCache._internal_wrapper;\n    }\n    const priceScale = this._private__series._internal_priceScale();\n    const wrapper = base.map(aw => new SeriesPrimitivePriceAxisViewWrapper(aw, priceScale));\n    this._private__priceAxisViewsCache = {\n      _internal_base: base,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_priceAxisPaneViews() {\n    var _a, _b, _c, _d;\n    const base = (_c = (_b = (_a = this._private__primitive).priceAxisPaneViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n    if (((_d = this._private__priceAxisPaneViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n      return this._private__priceAxisPaneViewsCache._internal_wrapper;\n    }\n    const wrapper = base.map(pw => new SeriesPrimitivePaneViewWrapper(pw));\n    this._private__priceAxisPaneViewsCache = {\n      _internal_base: base,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_timeAxisPaneViews() {\n    var _a, _b, _c, _d;\n    const base = (_c = (_b = (_a = this._private__primitive).timeAxisPaneViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n    if (((_d = this._private__timeAxisPaneViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n      return this._private__timeAxisPaneViewsCache._internal_wrapper;\n    }\n    const wrapper = base.map(pw => new SeriesPrimitivePaneViewWrapper(pw));\n    this._private__timeAxisPaneViewsCache = {\n      _internal_base: base,\n      _internal_wrapper: wrapper\n    };\n    return wrapper;\n  }\n  _internal_autoscaleInfo(startTimePoint, endTimePoint) {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = this._private__primitive).autoscaleInfo) === null || _b === void 0 ? void 0 : _b.call(_a, startTimePoint, endTimePoint)) !== null && _c !== void 0 ? _c : null;\n  }\n  _internal_hitTest(x, y) {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = this._private__primitive).hitTest) === null || _b === void 0 ? void 0 : _b.call(_a, x, y)) !== null && _c !== void 0 ? _c : null;\n  }\n}\nfunction extractPrimitivePaneViews(primitives, extractor, zOrder, destination) {\n  primitives.forEach(wrapper => {\n    extractor(wrapper).forEach(paneView => {\n      if (paneView._internal_zOrder() !== zOrder) {\n        return;\n      }\n      destination.push(paneView);\n    });\n  });\n}\nfunction primitivePaneViewsExtractor(wrapper) {\n  return wrapper._internal_paneViews();\n}\nfunction primitivePricePaneViewsExtractor(wrapper) {\n  return wrapper._internal_priceAxisPaneViews();\n}\nfunction primitiveTimePaneViewsExtractor(wrapper) {\n  return wrapper._internal_timeAxisPaneViews();\n}\nclass Series extends PriceDataSource {\n  constructor(model, options, seriesType, pane, customPaneView) {\n    super(model);\n    this._private__data = createSeriesPlotList();\n    this._private__priceLineView = new SeriesPriceLinePaneView(this);\n    this._private__customPriceLines = [];\n    this._private__baseHorizontalLineView = new SeriesHorizontalBaseLinePaneView(this);\n    this._private__lastPriceAnimationPaneView = null;\n    this._private__barColorerCache = null;\n    this._private__markers = [];\n    this._private__indexedMarkers = [];\n    this._private__animationTimeoutId = null;\n    this._private__primitives = [];\n    this._private__options = options;\n    this._private__seriesType = seriesType;\n    const priceAxisView = new SeriesPriceAxisView(this);\n    this._private__priceAxisViews = [priceAxisView];\n    this._private__panePriceAxisView = new PanePriceAxisView(priceAxisView, this, model);\n    if (seriesType === 'Area' || seriesType === 'Line' || seriesType === 'Baseline') {\n      this._private__lastPriceAnimationPaneView = new SeriesLastPriceAnimationPaneView(this);\n    }\n    this._private__recreateFormatter();\n    this._private__recreatePaneViews(customPaneView);\n  }\n  _internal_destroy() {\n    if (this._private__animationTimeoutId !== null) {\n      clearTimeout(this._private__animationTimeoutId);\n    }\n  }\n  _internal_priceLineColor(lastBarColor) {\n    return this._private__options.priceLineColor || lastBarColor;\n  }\n  _internal_lastValueData(globalLast) {\n    const noDataRes = {\n      _internal_noData: true\n    };\n    const priceScale = this._internal_priceScale();\n    if (this._internal_model()._internal_timeScale()._internal_isEmpty() || priceScale._internal_isEmpty() || this._private__data._internal_isEmpty()) {\n      return noDataRes;\n    }\n    const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n    const firstValue = this._internal_firstValue();\n    if (visibleBars === null || firstValue === null) {\n      return noDataRes;\n    }\n    // find range of bars inside range\n    // TODO: make it more optimal\n    let bar;\n    let lastIndex;\n    if (globalLast) {\n      const lastBar = this._private__data._internal_last();\n      if (lastBar === null) {\n        return noDataRes;\n      }\n      bar = lastBar;\n      lastIndex = lastBar._internal_index;\n    } else {\n      const endBar = this._private__data._internal_search(visibleBars._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n      if (endBar === null) {\n        return noDataRes;\n      }\n      bar = this._private__data._internal_valueAt(endBar._internal_index);\n      if (bar === null) {\n        return noDataRes;\n      }\n      lastIndex = endBar._internal_index;\n    }\n    const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n    const barColorer = this._internal_barColorer();\n    const style = barColorer._internal_barStyle(lastIndex, {\n      _internal_value: bar\n    });\n    const coordinate = priceScale._internal_priceToCoordinate(price, firstValue._internal_value);\n    return {\n      _internal_noData: false,\n      _internal_price: price,\n      _internal_text: priceScale._internal_formatPrice(price, firstValue._internal_value),\n      _internal_formattedPriceAbsolute: priceScale._internal_formatPriceAbsolute(price),\n      _internal_formattedPricePercentage: priceScale._internal_formatPricePercentage(price, firstValue._internal_value),\n      _internal_color: style._internal_barColor,\n      _internal_coordinate: coordinate,\n      _internal_index: lastIndex\n    };\n  }\n  _internal_barColorer() {\n    if (this._private__barColorerCache !== null) {\n      return this._private__barColorerCache;\n    }\n    this._private__barColorerCache = new SeriesBarColorer(this);\n    return this._private__barColorerCache;\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_applyOptions(options) {\n    const targetPriceScaleId = options.priceScaleId;\n    if (targetPriceScaleId !== undefined && targetPriceScaleId !== this._private__options.priceScaleId) {\n      // series cannot do it itself, ask model\n      this._internal_model()._internal_moveSeriesToScale(this, targetPriceScaleId);\n    }\n    merge(this._private__options, options);\n    if (options.priceFormat !== undefined) {\n      this._private__recreateFormatter();\n      // updated formatter might affect rendering  and as a consequence of this the width of price axis might be changed\n      // thus we need to force the chart to do a full update to apply changes correctly\n      // full update is quite heavy operation in terms of performance\n      // but updating formatter looks like quite rare so forcing a full update here shouldn't affect the performance a lot\n      this._internal_model()._internal_fullUpdate();\n    }\n    this._internal_model()._internal_updateSource(this);\n    // a series might affect crosshair by some options (like crosshair markers)\n    // that's why we need to update crosshair as well\n    this._internal_model()._internal_updateCrosshair();\n    this._private__paneView._internal_update('options');\n  }\n  _internal_setData(data, updateInfo) {\n    this._private__data._internal_setData(data);\n    this._private__recalculateMarkers();\n    this._private__paneView._internal_update('data');\n    this._private__markersPaneView._internal_update('data');\n    if (this._private__lastPriceAnimationPaneView !== null) {\n      if (updateInfo && updateInfo._internal_lastBarUpdatedOrNewBarsAddedToTheRight) {\n        this._private__lastPriceAnimationPaneView._internal_onNewRealtimeDataReceived();\n      } else if (data.length === 0) {\n        this._private__lastPriceAnimationPaneView._internal_onDataCleared();\n      }\n    }\n    const sourcePane = this._internal_model()._internal_paneForSource(this);\n    this._internal_model()._internal_recalculatePane(sourcePane);\n    this._internal_model()._internal_updateSource(this);\n    this._internal_model()._internal_updateCrosshair();\n    this._internal_model()._internal_lightUpdate();\n  }\n  _internal_setMarkers(data) {\n    this._private__markers = data;\n    this._private__recalculateMarkers();\n    const sourcePane = this._internal_model()._internal_paneForSource(this);\n    this._private__markersPaneView._internal_update('data');\n    this._internal_model()._internal_recalculatePane(sourcePane);\n    this._internal_model()._internal_updateSource(this);\n    this._internal_model()._internal_updateCrosshair();\n    this._internal_model()._internal_lightUpdate();\n  }\n  _internal_markers() {\n    return this._private__markers;\n  }\n  _internal_indexedMarkers() {\n    return this._private__indexedMarkers;\n  }\n  _internal_createPriceLine(options) {\n    const result = new CustomPriceLine(this, options);\n    this._private__customPriceLines.push(result);\n    this._internal_model()._internal_updateSource(this);\n    return result;\n  }\n  _internal_removePriceLine(line) {\n    const index = this._private__customPriceLines.indexOf(line);\n    if (index !== -1) {\n      this._private__customPriceLines.splice(index, 1);\n    }\n    this._internal_model()._internal_updateSource(this);\n  }\n  _internal_seriesType() {\n    return this._private__seriesType;\n  }\n  _internal_firstValue() {\n    const bar = this._internal_firstBar();\n    if (bar === null) {\n      return null;\n    }\n    return {\n      _internal_value: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n      _internal_timePoint: bar._internal_time\n    };\n  }\n  _internal_firstBar() {\n    const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n    if (visibleBars === null) {\n      return null;\n    }\n    const startTimePoint = visibleBars._internal_left();\n    return this._private__data._internal_search(startTimePoint, 1 /* MismatchDirection.NearestRight */);\n  }\n  _internal_bars() {\n    return this._private__data;\n  }\n  _internal_dataAt(time) {\n    const prices = this._private__data._internal_valueAt(time);\n    if (prices === null) {\n      return null;\n    }\n    if (this._private__seriesType === 'Bar' || this._private__seriesType === 'Candlestick' || this._private__seriesType === 'Custom') {\n      return {\n        _internal_open: prices._internal_value[0 /* PlotRowValueIndex.Open */],\n        _internal_high: prices._internal_value[1 /* PlotRowValueIndex.High */],\n        _internal_low: prices._internal_value[2 /* PlotRowValueIndex.Low */],\n        _internal_close: prices._internal_value[3 /* PlotRowValueIndex.Close */]\n      };\n    } else {\n      return prices._internal_value[3 /* PlotRowValueIndex.Close */];\n    }\n  }\n  _internal_topPaneViews(pane) {\n    const res = [];\n    extractPrimitivePaneViews(this._private__primitives, primitivePaneViewsExtractor, 'top', res);\n    const animationPaneView = this._private__lastPriceAnimationPaneView;\n    if (animationPaneView === null || !animationPaneView._internal_visible()) {\n      return res;\n    }\n    if (this._private__animationTimeoutId === null && animationPaneView._internal_animationActive()) {\n      this._private__animationTimeoutId = setTimeout(() => {\n        this._private__animationTimeoutId = null;\n        this._internal_model()._internal_cursorUpdate();\n      }, 0);\n    }\n    animationPaneView._internal_invalidateStage();\n    res.unshift(animationPaneView);\n    return res;\n  }\n  _internal_paneViews() {\n    const res = [];\n    if (!this._private__isOverlay()) {\n      res.push(this._private__baseHorizontalLineView);\n    }\n    res.push(this._private__paneView, this._private__priceLineView, this._private__markersPaneView);\n    const priceLineViews = this._private__customPriceLines.map(line => line._internal_paneView());\n    res.push(...priceLineViews);\n    extractPrimitivePaneViews(this._private__primitives, primitivePaneViewsExtractor, 'normal', res);\n    return res;\n  }\n  _internal_bottomPaneViews() {\n    return this._private__extractPaneViews(primitivePaneViewsExtractor, 'bottom');\n  }\n  _internal_pricePaneViews(zOrder) {\n    return this._private__extractPaneViews(primitivePricePaneViewsExtractor, zOrder);\n  }\n  _internal_timePaneViews(zOrder) {\n    return this._private__extractPaneViews(primitiveTimePaneViewsExtractor, zOrder);\n  }\n  _internal_primitiveHitTest(x, y) {\n    return this._private__primitives.map(primitive => primitive._internal_hitTest(x, y)).filter(result => result !== null);\n  }\n  _internal_labelPaneViews(pane) {\n    return [this._private__panePriceAxisView, ...this._private__customPriceLines.map(line => line._internal_labelPaneView())];\n  }\n  _internal_priceAxisViews(pane, priceScale) {\n    if (priceScale !== this._internal__priceScale && !this._private__isOverlay()) {\n      return [];\n    }\n    const result = [...this._private__priceAxisViews];\n    for (const customPriceLine of this._private__customPriceLines) {\n      result.push(customPriceLine._internal_priceAxisView());\n    }\n    this._private__primitives.forEach(wrapper => {\n      result.push(...wrapper._internal_priceAxisViews());\n    });\n    return result;\n  }\n  _internal_timeAxisViews() {\n    const res = [];\n    this._private__primitives.forEach(wrapper => {\n      res.push(...wrapper._internal_timeAxisViews());\n    });\n    return res;\n  }\n  _internal_autoscaleInfo(startTimePoint, endTimePoint) {\n    if (this._private__options.autoscaleInfoProvider !== undefined) {\n      const autoscaleInfo = this._private__options.autoscaleInfoProvider(() => {\n        const res = this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n        return res === null ? null : res._internal_toRaw();\n      });\n      return AutoscaleInfoImpl._internal_fromRaw(autoscaleInfo);\n    }\n    return this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n  }\n  _internal_minMove() {\n    return this._private__options.priceFormat.minMove;\n  }\n  _internal_formatter() {\n    return this._private__formatter;\n  }\n  _internal_updateAllViews() {\n    var _a;\n    this._private__paneView._internal_update();\n    this._private__markersPaneView._internal_update();\n    for (const priceAxisView of this._private__priceAxisViews) {\n      priceAxisView._internal_update();\n    }\n    for (const customPriceLine of this._private__customPriceLines) {\n      customPriceLine._internal_update();\n    }\n    this._private__priceLineView._internal_update();\n    this._private__baseHorizontalLineView._internal_update();\n    (_a = this._private__lastPriceAnimationPaneView) === null || _a === void 0 ? void 0 : _a._internal_update();\n    this._private__primitives.forEach(wrapper => wrapper._internal_updateAllViews());\n  }\n  _internal_priceScale() {\n    return ensureNotNull(super._internal_priceScale());\n  }\n  _internal_markerDataAtIndex(index) {\n    const getValue = (this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline') && this._private__options.crosshairMarkerVisible;\n    if (!getValue) {\n      return null;\n    }\n    const bar = this._private__data._internal_valueAt(index);\n    if (bar === null) {\n      return null;\n    }\n    const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n    const radius = this._private__markerRadius();\n    const borderColor = this._private__markerBorderColor();\n    const borderWidth = this._private__markerBorderWidth();\n    const backgroundColor = this._private__markerBackgroundColor(index);\n    return {\n      _internal_price: price,\n      _internal_radius: radius,\n      _internal_borderColor: borderColor,\n      _internal_borderWidth: borderWidth,\n      _internal_backgroundColor: backgroundColor\n    };\n  }\n  _internal_title() {\n    return this._private__options.title;\n  }\n  _internal_visible() {\n    return this._private__options.visible;\n  }\n  _internal_attachPrimitive(primitive) {\n    this._private__primitives.push(new SeriesPrimitiveWrapper(primitive, this));\n  }\n  _internal_detachPrimitive(source) {\n    this._private__primitives = this._private__primitives.filter(wrapper => wrapper._internal_primitive() !== source);\n  }\n  _internal_customSeriesPlotValuesBuilder() {\n    if (this._private__paneView instanceof SeriesCustomPaneView === false) {\n      return undefined;\n    }\n    return data => {\n      return this._private__paneView._internal_priceValueBuilder(data);\n    };\n  }\n  _internal_customSeriesWhitespaceCheck() {\n    if (this._private__paneView instanceof SeriesCustomPaneView === false) {\n      return undefined;\n    }\n    return data => {\n      return this._private__paneView._internal_isWhitespace(data);\n    };\n  }\n  _private__isOverlay() {\n    const priceScale = this._internal_priceScale();\n    return !isDefaultPriceScale(priceScale._internal_id());\n  }\n  _private__autoscaleInfoImpl(startTimePoint, endTimePoint) {\n    if (!isInteger(startTimePoint) || !isInteger(endTimePoint) || this._private__data._internal_isEmpty()) {\n      return null;\n    }\n    // TODO: refactor this\n    // series data is strongly hardcoded to keep bars\n    const plots = this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline' || this._private__seriesType === 'Histogram' ? [3 /* PlotRowValueIndex.Close */] : [2 /* PlotRowValueIndex.Low */, 1 /* PlotRowValueIndex.High */];\n    const barsMinMax = this._private__data._internal_minMaxOnRangeCached(startTimePoint, endTimePoint, plots);\n    let range = barsMinMax !== null ? new PriceRangeImpl(barsMinMax._internal_min, barsMinMax._internal_max) : null;\n    if (this._internal_seriesType() === 'Histogram') {\n      const base = this._private__options.base;\n      const rangeWithBase = new PriceRangeImpl(base, base);\n      range = range !== null ? range._internal_merge(rangeWithBase) : rangeWithBase;\n    }\n    let margins = this._private__markersPaneView._internal_autoScaleMargins();\n    this._private__primitives.forEach(primitive => {\n      const primitiveAutoscale = primitive._internal_autoscaleInfo(startTimePoint, endTimePoint);\n      if (primitiveAutoscale === null || primitiveAutoscale === void 0 ? void 0 : primitiveAutoscale.priceRange) {\n        const primitiveRange = new PriceRangeImpl(primitiveAutoscale.priceRange.minValue, primitiveAutoscale.priceRange.maxValue);\n        range = range !== null ? range._internal_merge(primitiveRange) : primitiveRange;\n      }\n      if (primitiveAutoscale === null || primitiveAutoscale === void 0 ? void 0 : primitiveAutoscale.margins) {\n        margins = mergeMargins(margins, primitiveAutoscale.margins);\n      }\n    });\n    return new AutoscaleInfoImpl(range, margins);\n  }\n  _private__markerRadius() {\n    switch (this._private__seriesType) {\n      case 'Line':\n      case 'Area':\n      case 'Baseline':\n        return this._private__options.crosshairMarkerRadius;\n    }\n    return 0;\n  }\n  _private__markerBorderColor() {\n    switch (this._private__seriesType) {\n      case 'Line':\n      case 'Area':\n      case 'Baseline':\n        {\n          const crosshairMarkerBorderColor = this._private__options.crosshairMarkerBorderColor;\n          if (crosshairMarkerBorderColor.length !== 0) {\n            return crosshairMarkerBorderColor;\n          }\n        }\n    }\n    return null;\n  }\n  _private__markerBorderWidth() {\n    switch (this._private__seriesType) {\n      case 'Line':\n      case 'Area':\n      case 'Baseline':\n        return this._private__options.crosshairMarkerBorderWidth;\n    }\n    return 0;\n  }\n  _private__markerBackgroundColor(index) {\n    switch (this._private__seriesType) {\n      case 'Line':\n      case 'Area':\n      case 'Baseline':\n        {\n          const crosshairMarkerBackgroundColor = this._private__options.crosshairMarkerBackgroundColor;\n          if (crosshairMarkerBackgroundColor.length !== 0) {\n            return crosshairMarkerBackgroundColor;\n          }\n        }\n    }\n    return this._internal_barColorer()._internal_barStyle(index)._internal_barColor;\n  }\n  _private__recreateFormatter() {\n    switch (this._private__options.priceFormat.type) {\n      case 'custom':\n        {\n          this._private__formatter = {\n            format: this._private__options.priceFormat.formatter\n          };\n          break;\n        }\n      case 'volume':\n        {\n          this._private__formatter = new VolumeFormatter(this._private__options.priceFormat.precision);\n          break;\n        }\n      case 'percent':\n        {\n          this._private__formatter = new PercentageFormatter(this._private__options.priceFormat.precision);\n          break;\n        }\n      default:\n        {\n          const priceScale = Math.pow(10, this._private__options.priceFormat.precision);\n          this._private__formatter = new PriceFormatter(priceScale, this._private__options.priceFormat.minMove * priceScale);\n        }\n    }\n    if (this._internal__priceScale !== null) {\n      this._internal__priceScale._internal_updateFormatter();\n    }\n  }\n  _private__recalculateMarkers() {\n    const timeScale = this._internal_model()._internal_timeScale();\n    if (!timeScale._internal_hasPoints() || this._private__data._internal_isEmpty()) {\n      this._private__indexedMarkers = [];\n      return;\n    }\n    const firstDataIndex = ensureNotNull(this._private__data._internal_firstIndex());\n    this._private__indexedMarkers = this._private__markers.map((marker, index) => {\n      // the first find index on the time scale (across all series)\n      const timePointIndex = ensureNotNull(timeScale._internal_timeToIndex(marker.time, true));\n      // and then search that index inside the series data\n      const searchMode = timePointIndex < firstDataIndex ? 1 /* MismatchDirection.NearestRight */ : -1 /* MismatchDirection.NearestLeft */;\n      const seriesDataIndex = ensureNotNull(this._private__data._internal_search(timePointIndex, searchMode))._internal_index;\n      return {\n        time: seriesDataIndex,\n        position: marker.position,\n        shape: marker.shape,\n        color: marker.color,\n        id: marker.id,\n        _internal_internalId: index,\n        text: marker.text,\n        size: marker.size,\n        originalTime: marker.originalTime\n      };\n    });\n  }\n  _private__recreatePaneViews(customPaneView) {\n    this._private__markersPaneView = new SeriesMarkersPaneView(this, this._internal_model());\n    switch (this._private__seriesType) {\n      case 'Bar':\n        {\n          this._private__paneView = new SeriesBarsPaneView(this, this._internal_model());\n          break;\n        }\n      case 'Candlestick':\n        {\n          this._private__paneView = new SeriesCandlesticksPaneView(this, this._internal_model());\n          break;\n        }\n      case 'Line':\n        {\n          this._private__paneView = new SeriesLinePaneView(this, this._internal_model());\n          break;\n        }\n      case 'Custom':\n        {\n          this._private__paneView = new SeriesCustomPaneView(this, this._internal_model(), ensureDefined(customPaneView));\n          break;\n        }\n      case 'Area':\n        {\n          this._private__paneView = new SeriesAreaPaneView(this, this._internal_model());\n          break;\n        }\n      case 'Baseline':\n        {\n          this._private__paneView = new SeriesBaselinePaneView(this, this._internal_model());\n          break;\n        }\n      case 'Histogram':\n        {\n          this._private__paneView = new SeriesHistogramPaneView(this, this._internal_model());\n          break;\n        }\n      default:\n        throw Error('Unknown chart style assigned: ' + this._private__seriesType);\n    }\n  }\n  _private__extractPaneViews(extractor, zOrder) {\n    const res = [];\n    extractPrimitivePaneViews(this._private__primitives, extractor, zOrder, res);\n    return res;\n  }\n}\nfunction mergeMargins(source, additionalMargin) {\n  var _a, _b;\n  return {\n    above: Math.max((_a = source === null || source === void 0 ? void 0 : source.above) !== null && _a !== void 0 ? _a : 0, additionalMargin.above),\n    below: Math.max((_b = source === null || source === void 0 ? void 0 : source.below) !== null && _b !== void 0 ? _b : 0, additionalMargin.below)\n  };\n}\nclass Magnet {\n  constructor(options) {\n    this._private__options = options;\n  }\n  _internal_align(price, index, pane) {\n    let res = price;\n    if (this._private__options.mode === 0 /* CrosshairMode.Normal */) {\n      return res;\n    }\n    const defaultPriceScale = pane._internal_defaultPriceScale();\n    const firstValue = defaultPriceScale._internal_firstValue();\n    if (firstValue === null) {\n      return res;\n    }\n    const y = defaultPriceScale._internal_priceToCoordinate(price, firstValue);\n    // get all serieses from the pane\n    const serieses = pane._internal_dataSources().filter(ds => ds instanceof Series);\n    const candidates = serieses.reduce((acc, series) => {\n      if (pane._internal_isOverlay(series) || !series._internal_visible()) {\n        return acc;\n      }\n      const ps = series._internal_priceScale();\n      const bars = series._internal_bars();\n      if (ps._internal_isEmpty() || !bars._internal_contains(index)) {\n        return acc;\n      }\n      const bar = bars._internal_valueAt(index);\n      if (bar === null) {\n        return acc;\n      }\n      // convert bar to pixels\n      const firstPrice = ensure(series._internal_firstValue());\n      return acc.concat([ps._internal_priceToCoordinate(bar._internal_value[3 /* PlotRowValueIndex.Close */], firstPrice._internal_value)]);\n    }, []);\n    if (candidates.length === 0) {\n      return res;\n    }\n    candidates.sort((y1, y2) => Math.abs(y1 - y) - Math.abs(y2 - y));\n    const nearest = candidates[0];\n    res = defaultPriceScale._internal_coordinateToPrice(nearest, firstValue);\n    return res;\n  }\n}\nclass GridRenderer extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null) {\n      return;\n    }\n    const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    ctx.lineWidth = lineWidth;\n    strokeInPixel(ctx, () => {\n      const data = ensureNotNull(this._private__data);\n      if (data._internal_vertLinesVisible) {\n        ctx.strokeStyle = data._internal_vertLinesColor;\n        setLineStyle(ctx, data._internal_vertLineStyle);\n        ctx.beginPath();\n        for (const timeMark of data._internal_timeMarks) {\n          const x = Math.round(timeMark._internal_coord * horizontalPixelRatio);\n          ctx.moveTo(x, -lineWidth);\n          ctx.lineTo(x, bitmapSize.height + lineWidth);\n        }\n        ctx.stroke();\n      }\n      if (data._internal_horzLinesVisible) {\n        ctx.strokeStyle = data._internal_horzLinesColor;\n        setLineStyle(ctx, data._internal_horzLineStyle);\n        ctx.beginPath();\n        for (const priceMark of data._internal_priceMarks) {\n          const y = Math.round(priceMark._internal_coord * verticalPixelRatio);\n          ctx.moveTo(-lineWidth, y);\n          ctx.lineTo(bitmapSize.width + lineWidth, y);\n        }\n        ctx.stroke();\n      }\n    });\n  }\n}\nclass GridPaneView {\n  constructor(pane) {\n    this._private__renderer = new GridRenderer();\n    this._private__invalidated = true;\n    this._private__pane = pane;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      const gridOptions = this._private__pane._internal_model()._internal_options().grid;\n      const data = {\n        _internal_horzLinesVisible: gridOptions.horzLines.visible,\n        _internal_vertLinesVisible: gridOptions.vertLines.visible,\n        _internal_horzLinesColor: gridOptions.horzLines.color,\n        _internal_vertLinesColor: gridOptions.vertLines.color,\n        _internal_horzLineStyle: gridOptions.horzLines.style,\n        _internal_vertLineStyle: gridOptions.vertLines.style,\n        _internal_priceMarks: this._private__pane._internal_defaultPriceScale()._internal_marks(),\n        // need this conversiom because TimeMark is a part of external interface\n        // and fields inside TimeMark are not minified\n        _internal_timeMarks: (this._private__pane._internal_model()._internal_timeScale()._internal_marks() || []).map(tm => {\n          return {\n            _internal_coord: tm.coord\n          };\n        })\n      };\n      this._private__renderer._internal_setData(data);\n      this._private__invalidated = false;\n    }\n    return this._private__renderer;\n  }\n}\nclass Grid {\n  constructor(pane) {\n    this._private__paneView = new GridPaneView(pane);\n  }\n  _internal_paneView() {\n    return this._private__paneView;\n  }\n}\nconst defLogFormula = {\n  _internal_logicalOffset: 4,\n  _internal_coordOffset: 0.0001\n};\nfunction fromPercent(value, baseValue) {\n  if (baseValue < 0) {\n    value = -value;\n  }\n  return value / 100 * baseValue + baseValue;\n}\nfunction toPercent(value, baseValue) {\n  const result = 100 * (value - baseValue) / baseValue;\n  return baseValue < 0 ? -result : result;\n}\nfunction toPercentRange(priceRange, baseValue) {\n  const minPercent = toPercent(priceRange._internal_minValue(), baseValue);\n  const maxPercent = toPercent(priceRange._internal_maxValue(), baseValue);\n  return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction fromIndexedTo100(value, baseValue) {\n  value -= 100;\n  if (baseValue < 0) {\n    value = -value;\n  }\n  return value / 100 * baseValue + baseValue;\n}\nfunction toIndexedTo100(value, baseValue) {\n  const result = 100 * (value - baseValue) / baseValue + 100;\n  return baseValue < 0 ? -result : result;\n}\nfunction toIndexedTo100Range(priceRange, baseValue) {\n  const minPercent = toIndexedTo100(priceRange._internal_minValue(), baseValue);\n  const maxPercent = toIndexedTo100(priceRange._internal_maxValue(), baseValue);\n  return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction toLog(price, logFormula) {\n  const m = Math.abs(price);\n  if (m < 1e-15) {\n    return 0;\n  }\n  const res = Math.log10(m + logFormula._internal_coordOffset) + logFormula._internal_logicalOffset;\n  return price < 0 ? -res : res;\n}\nfunction fromLog(logical, logFormula) {\n  const m = Math.abs(logical);\n  if (m < 1e-15) {\n    return 0;\n  }\n  const res = Math.pow(10, m - logFormula._internal_logicalOffset) - logFormula._internal_coordOffset;\n  return logical < 0 ? -res : res;\n}\nfunction convertPriceRangeToLog(priceRange, logFormula) {\n  if (priceRange === null) {\n    return null;\n  }\n  const min = toLog(priceRange._internal_minValue(), logFormula);\n  const max = toLog(priceRange._internal_maxValue(), logFormula);\n  return new PriceRangeImpl(min, max);\n}\nfunction canConvertPriceRangeFromLog(priceRange, logFormula) {\n  if (priceRange === null) {\n    return false;\n  }\n  const min = fromLog(priceRange._internal_minValue(), logFormula);\n  const max = fromLog(priceRange._internal_maxValue(), logFormula);\n  return isFinite(min) && isFinite(max);\n}\nfunction convertPriceRangeFromLog(priceRange, logFormula) {\n  if (priceRange === null) {\n    return null;\n  }\n  const min = fromLog(priceRange._internal_minValue(), logFormula);\n  const max = fromLog(priceRange._internal_maxValue(), logFormula);\n  return new PriceRangeImpl(min, max);\n}\nfunction logFormulaForPriceRange(range) {\n  if (range === null) {\n    return defLogFormula;\n  }\n  const diff = Math.abs(range._internal_maxValue() - range._internal_minValue());\n  if (diff >= 1 || diff < 1e-15) {\n    return defLogFormula;\n  }\n  const digits = Math.ceil(Math.abs(Math.log10(diff)));\n  const logicalOffset = defLogFormula._internal_logicalOffset + digits;\n  const coordOffset = 1 / Math.pow(10, logicalOffset);\n  return {\n    _internal_logicalOffset: logicalOffset,\n    _internal_coordOffset: coordOffset\n  };\n}\nfunction logFormulasAreSame(f1, f2) {\n  return f1._internal_logicalOffset === f2._internal_logicalOffset && f1._internal_coordOffset === f2._internal_coordOffset;\n}\nclass PriceTickSpanCalculator {\n  constructor(base, integralDividers) {\n    this._private__base = base;\n    this._private__integralDividers = integralDividers;\n    if (isBaseDecimal(this._private__base)) {\n      this._private__fractionalDividers = [2, 2.5, 2];\n    } else {\n      this._private__fractionalDividers = [];\n      for (let baseRest = this._private__base; baseRest !== 1;) {\n        if (baseRest % 2 === 0) {\n          this._private__fractionalDividers.push(2);\n          baseRest /= 2;\n        } else if (baseRest % 5 === 0) {\n          this._private__fractionalDividers.push(2, 2.5);\n          baseRest /= 5;\n        } else {\n          throw new Error('unexpected base');\n        }\n        if (this._private__fractionalDividers.length > 100) {\n          throw new Error('something wrong with base');\n        }\n      }\n    }\n  }\n  _internal_tickSpan(high, low, maxTickSpan) {\n    const minMovement = this._private__base === 0 ? 0 : 1 / this._private__base;\n    let resultTickSpan = Math.pow(10, Math.max(0, Math.ceil(Math.log10(high - low))));\n    let index = 0;\n    let c = this._private__integralDividers[0];\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      // the second part is actual for small with very small values like 1e-10\n      // greaterOrEqual fails for such values\n      const resultTickSpanLargerMinMovement = greaterOrEqual(resultTickSpan, minMovement, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > minMovement + 1e-14 /* Constants.TickSpanEpsilon */;\n      const resultTickSpanLargerMaxTickSpan = greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */);\n      const resultTickSpanLarger1 = greaterOrEqual(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */);\n      const haveToContinue = resultTickSpanLargerMinMovement && resultTickSpanLargerMaxTickSpan && resultTickSpanLarger1;\n      if (!haveToContinue) {\n        break;\n      }\n      resultTickSpan /= c;\n      c = this._private__integralDividers[++index % this._private__integralDividers.length];\n    }\n    if (resultTickSpan <= minMovement + 1e-14 /* Constants.TickSpanEpsilon */) {\n      resultTickSpan = minMovement;\n    }\n    resultTickSpan = Math.max(1, resultTickSpan);\n    if (this._private__fractionalDividers.length > 0 && equal(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */)) {\n      index = 0;\n      c = this._private__fractionalDividers[0];\n      while (greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > minMovement + 1e-14 /* Constants.TickSpanEpsilon */) {\n        resultTickSpan /= c;\n        c = this._private__fractionalDividers[++index % this._private__fractionalDividers.length];\n      }\n    }\n    return resultTickSpan;\n  }\n}\nconst TICK_DENSITY = 2.5;\nclass PriceTickMarkBuilder {\n  constructor(priceScale, base, coordinateToLogicalFunc, logicalToCoordinateFunc) {\n    this._private__marks = [];\n    this._private__priceScale = priceScale;\n    this._private__base = base;\n    this._private__coordinateToLogicalFunc = coordinateToLogicalFunc;\n    this._private__logicalToCoordinateFunc = logicalToCoordinateFunc;\n  }\n  _internal_tickSpan(high, low) {\n    if (high < low) {\n      throw new Error('high < low');\n    }\n    const scaleHeight = this._private__priceScale._internal_height();\n    const markHeight = this._private__tickMarkHeight();\n    const maxTickSpan = (high - low) * markHeight / scaleHeight;\n    const spanCalculator1 = new PriceTickSpanCalculator(this._private__base, [2, 2.5, 2]);\n    const spanCalculator2 = new PriceTickSpanCalculator(this._private__base, [2, 2, 2.5]);\n    const spanCalculator3 = new PriceTickSpanCalculator(this._private__base, [2.5, 2, 2]);\n    const spans = [];\n    spans.push(spanCalculator1._internal_tickSpan(high, low, maxTickSpan), spanCalculator2._internal_tickSpan(high, low, maxTickSpan), spanCalculator3._internal_tickSpan(high, low, maxTickSpan));\n    return min(spans);\n  }\n  _internal_rebuildTickMarks() {\n    const priceScale = this._private__priceScale;\n    const firstValue = priceScale._internal_firstValue();\n    if (firstValue === null) {\n      this._private__marks = [];\n      return;\n    }\n    const scaleHeight = priceScale._internal_height();\n    const bottom = this._private__coordinateToLogicalFunc(scaleHeight - 1, firstValue);\n    const top = this._private__coordinateToLogicalFunc(0, firstValue);\n    const extraTopBottomMargin = this._private__priceScale._internal_options().entireTextOnly ? this._private__fontHeight() / 2 : 0;\n    const minCoord = extraTopBottomMargin;\n    const maxCoord = scaleHeight - 1 - extraTopBottomMargin;\n    const high = Math.max(bottom, top);\n    const low = Math.min(bottom, top);\n    if (high === low) {\n      this._private__marks = [];\n      return;\n    }\n    let span = this._internal_tickSpan(high, low);\n    let mod = high % span;\n    mod += mod < 0 ? span : 0;\n    const sign = high >= low ? 1 : -1;\n    let prevCoord = null;\n    let targetIndex = 0;\n    for (let logical = high - mod; logical > low; logical -= span) {\n      const coord = this._private__logicalToCoordinateFunc(logical, firstValue, true);\n      // check if there is place for it\n      // this is required for log scale\n      if (prevCoord !== null && Math.abs(coord - prevCoord) < this._private__tickMarkHeight()) {\n        continue;\n      }\n      // check if a tick mark is partially visible and skip it if entireTextOnly is true\n      if (coord < minCoord || coord > maxCoord) {\n        continue;\n      }\n      if (targetIndex < this._private__marks.length) {\n        this._private__marks[targetIndex]._internal_coord = coord;\n        this._private__marks[targetIndex]._internal_label = priceScale._internal_formatLogical(logical);\n      } else {\n        this._private__marks.push({\n          _internal_coord: coord,\n          _internal_label: priceScale._internal_formatLogical(logical)\n        });\n      }\n      targetIndex++;\n      prevCoord = coord;\n      if (priceScale._internal_isLog()) {\n        // recalc span\n        span = this._internal_tickSpan(logical * sign, low);\n      }\n    }\n    this._private__marks.length = targetIndex;\n  }\n  _internal_marks() {\n    return this._private__marks;\n  }\n  _private__fontHeight() {\n    return this._private__priceScale._internal_fontSize();\n  }\n  _private__tickMarkHeight() {\n    return Math.ceil(this._private__fontHeight() * TICK_DENSITY);\n  }\n}\nfunction sortSources(sources) {\n  return sources.slice().sort((s1, s2) => {\n    return ensureNotNull(s1._internal_zorder()) - ensureNotNull(s2._internal_zorder());\n  });\n}\n\n/**\n * Represents the price scale mode.\n */\nvar PriceScaleMode;\n(function (PriceScaleMode) {\n  /**\n   * Price scale shows prices. Price range changes linearly.\n   */\n  PriceScaleMode[PriceScaleMode[\"Normal\"] = 0] = \"Normal\";\n  /**\n   * Price scale shows prices. Price range changes logarithmically.\n   */\n  PriceScaleMode[PriceScaleMode[\"Logarithmic\"] = 1] = \"Logarithmic\";\n  /**\n   * Price scale shows percentage values according the first visible value of the price scale.\n   * The first visible value is 0% in this mode.\n   */\n  PriceScaleMode[PriceScaleMode[\"Percentage\"] = 2] = \"Percentage\";\n  /**\n   * The same as percentage mode, but the first value is moved to 100.\n   */\n  PriceScaleMode[PriceScaleMode[\"IndexedTo100\"] = 3] = \"IndexedTo100\";\n})(PriceScaleMode || (PriceScaleMode = {}));\nconst percentageFormatter = new PercentageFormatter();\nconst defaultPriceFormatter = new PriceFormatter(100, 1);\nclass PriceScale {\n  constructor(id, options, layoutOptions, localizationOptions) {\n    this._private__height = 0;\n    this._private__internalHeightCache = null;\n    this._private__priceRange = null;\n    this._private__priceRangeSnapshot = null;\n    this._private__invalidatedForRange = {\n      _internal_isValid: false,\n      _internal_visibleBars: null\n    };\n    this._private__marginAbove = 0;\n    this._private__marginBelow = 0;\n    this._private__onMarksChanged = new Delegate();\n    this._private__modeChanged = new Delegate();\n    this._private__dataSources = [];\n    this._private__cachedOrderedSources = null;\n    this._private__marksCache = null;\n    this._private__scaleStartPoint = null;\n    this._private__scrollStartPoint = null;\n    this._private__formatter = defaultPriceFormatter;\n    this._private__logFormula = logFormulaForPriceRange(null);\n    this._private__id = id;\n    this._private__options = options;\n    this._private__layoutOptions = layoutOptions;\n    this._private__localizationOptions = localizationOptions;\n    this._private__markBuilder = new PriceTickMarkBuilder(this, 100, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n  }\n  _internal_id() {\n    return this._private__id;\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_applyOptions(options) {\n    merge(this._private__options, options);\n    this._internal_updateFormatter();\n    if (options.mode !== undefined) {\n      this._internal_setMode({\n        _internal_mode: options.mode\n      });\n    }\n    if (options.scaleMargins !== undefined) {\n      const top = ensureDefined(options.scaleMargins.top);\n      const bottom = ensureDefined(options.scaleMargins.bottom);\n      if (top < 0 || top > 1) {\n        throw new Error(`Invalid top margin - expect value between 0 and 1, given=${top}`);\n      }\n      if (bottom < 0 || bottom > 1) {\n        throw new Error(`Invalid bottom margin - expect value between 0 and 1, given=${bottom}`);\n      }\n      if (top + bottom > 1) {\n        throw new Error(`Invalid margins - sum of margins must be less than 1, given=${top + bottom}`);\n      }\n      this._private__invalidateInternalHeightCache();\n      this._private__marksCache = null;\n    }\n  }\n  _internal_isAutoScale() {\n    return this._private__options.autoScale;\n  }\n  _internal_isLog() {\n    return this._private__options.mode === 1 /* PriceScaleMode.Logarithmic */;\n  }\n  _internal_isPercentage() {\n    return this._private__options.mode === 2 /* PriceScaleMode.Percentage */;\n  }\n  _internal_isIndexedTo100() {\n    return this._private__options.mode === 3 /* PriceScaleMode.IndexedTo100 */;\n  }\n  _internal_mode() {\n    return {\n      _internal_autoScale: this._private__options.autoScale,\n      _internal_isInverted: this._private__options.invertScale,\n      _internal_mode: this._private__options.mode\n    };\n  }\n  // eslint-disable-next-line complexity\n  _internal_setMode(newMode) {\n    const oldMode = this._internal_mode();\n    let priceRange = null;\n    if (newMode._internal_autoScale !== undefined) {\n      this._private__options.autoScale = newMode._internal_autoScale;\n    }\n    if (newMode._internal_mode !== undefined) {\n      this._private__options.mode = newMode._internal_mode;\n      if (newMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || newMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */) {\n        this._private__options.autoScale = true;\n      }\n      // TODO: Remove after making rebuildTickMarks lazy\n      this._private__invalidatedForRange._internal_isValid = false;\n    }\n    // define which scale converted from\n    if (oldMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n      if (canConvertPriceRangeFromLog(this._private__priceRange, this._private__logFormula)) {\n        priceRange = convertPriceRangeFromLog(this._private__priceRange, this._private__logFormula);\n        if (priceRange !== null) {\n          this._internal_setPriceRange(priceRange);\n        }\n      } else {\n        this._private__options.autoScale = true;\n      }\n    }\n    // define which scale converted to\n    if (newMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n      priceRange = convertPriceRangeToLog(this._private__priceRange, this._private__logFormula);\n      if (priceRange !== null) {\n        this._internal_setPriceRange(priceRange);\n      }\n    }\n    const modeChanged = oldMode._internal_mode !== this._private__options.mode;\n    if (modeChanged && (oldMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || this._internal_isPercentage())) {\n      this._internal_updateFormatter();\n    }\n    if (modeChanged && (oldMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */ || this._internal_isIndexedTo100())) {\n      this._internal_updateFormatter();\n    }\n    if (newMode._internal_isInverted !== undefined && oldMode._internal_isInverted !== newMode._internal_isInverted) {\n      this._private__options.invertScale = newMode._internal_isInverted;\n      this._private__onIsInvertedChanged();\n    }\n    this._private__modeChanged._internal_fire(oldMode, this._internal_mode());\n  }\n  _internal_modeChanged() {\n    return this._private__modeChanged;\n  }\n  _internal_fontSize() {\n    return this._private__layoutOptions.fontSize;\n  }\n  _internal_height() {\n    return this._private__height;\n  }\n  _internal_setHeight(value) {\n    if (this._private__height === value) {\n      return;\n    }\n    this._private__height = value;\n    this._private__invalidateInternalHeightCache();\n    this._private__marksCache = null;\n  }\n  _internal_internalHeight() {\n    if (this._private__internalHeightCache) {\n      return this._private__internalHeightCache;\n    }\n    const res = this._internal_height() - this._private__topMarginPx() - this._private__bottomMarginPx();\n    this._private__internalHeightCache = res;\n    return res;\n  }\n  _internal_priceRange() {\n    this._private__makeSureItIsValid();\n    return this._private__priceRange;\n  }\n  _internal_setPriceRange(newPriceRange, isForceSetValue) {\n    const oldPriceRange = this._private__priceRange;\n    if (!isForceSetValue && !(oldPriceRange === null && newPriceRange !== null) && (oldPriceRange === null || oldPriceRange._internal_equals(newPriceRange))) {\n      return;\n    }\n    this._private__marksCache = null;\n    this._private__priceRange = newPriceRange;\n  }\n  _internal_isEmpty() {\n    this._private__makeSureItIsValid();\n    return this._private__height === 0 || !this._private__priceRange || this._private__priceRange._internal_isEmpty();\n  }\n  _internal_invertedCoordinate(coordinate) {\n    return this._internal_isInverted() ? coordinate : this._internal_height() - 1 - coordinate;\n  }\n  _internal_priceToCoordinate(price, baseValue) {\n    if (this._internal_isPercentage()) {\n      price = toPercent(price, baseValue);\n    } else if (this._internal_isIndexedTo100()) {\n      price = toIndexedTo100(price, baseValue);\n    }\n    return this._private__logicalToCoordinate(price, baseValue);\n  }\n  _internal_pointsArrayToCoordinates(points, baseValue, visibleRange) {\n    this._private__makeSureItIsValid();\n    const bh = this._private__bottomMarginPx();\n    const range = ensureNotNull(this._internal_priceRange());\n    const min = range._internal_minValue();\n    const max = range._internal_maxValue();\n    const ih = this._internal_internalHeight() - 1;\n    const isInverted = this._internal_isInverted();\n    const hmm = ih / (max - min);\n    const fromIndex = visibleRange === undefined ? 0 : visibleRange.from;\n    const toIndex = visibleRange === undefined ? points.length : visibleRange.to;\n    const transformFn = this._private__getCoordinateTransformer();\n    for (let i = fromIndex; i < toIndex; i++) {\n      const point = points[i];\n      const price = point._internal_price;\n      if (isNaN(price)) {\n        continue;\n      }\n      let logical = price;\n      if (transformFn !== null) {\n        logical = transformFn(point._internal_price, baseValue);\n      }\n      const invCoordinate = bh + hmm * (logical - min);\n      const coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      point._internal_y = coordinate;\n    }\n  }\n  _internal_barPricesToCoordinates(pricesList, baseValue, visibleRange) {\n    this._private__makeSureItIsValid();\n    const bh = this._private__bottomMarginPx();\n    const range = ensureNotNull(this._internal_priceRange());\n    const min = range._internal_minValue();\n    const max = range._internal_maxValue();\n    const ih = this._internal_internalHeight() - 1;\n    const isInverted = this._internal_isInverted();\n    const hmm = ih / (max - min);\n    const fromIndex = visibleRange === undefined ? 0 : visibleRange.from;\n    const toIndex = visibleRange === undefined ? pricesList.length : visibleRange.to;\n    const transformFn = this._private__getCoordinateTransformer();\n    for (let i = fromIndex; i < toIndex; i++) {\n      const bar = pricesList[i];\n      let openLogical = bar._internal_open;\n      let highLogical = bar._internal_high;\n      let lowLogical = bar._internal_low;\n      let closeLogical = bar._internal_close;\n      if (transformFn !== null) {\n        openLogical = transformFn(bar._internal_open, baseValue);\n        highLogical = transformFn(bar._internal_high, baseValue);\n        lowLogical = transformFn(bar._internal_low, baseValue);\n        closeLogical = transformFn(bar._internal_close, baseValue);\n      }\n      let invCoordinate = bh + hmm * (openLogical - min);\n      let coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      bar._internal_openY = coordinate;\n      invCoordinate = bh + hmm * (highLogical - min);\n      coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      bar._internal_highY = coordinate;\n      invCoordinate = bh + hmm * (lowLogical - min);\n      coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      bar._internal_lowY = coordinate;\n      invCoordinate = bh + hmm * (closeLogical - min);\n      coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      bar._internal_closeY = coordinate;\n    }\n  }\n  _internal_coordinateToPrice(coordinate, baseValue) {\n    const logical = this._private__coordinateToLogical(coordinate, baseValue);\n    return this._internal_logicalToPrice(logical, baseValue);\n  }\n  _internal_logicalToPrice(logical, baseValue) {\n    let value = logical;\n    if (this._internal_isPercentage()) {\n      value = fromPercent(value, baseValue);\n    } else if (this._internal_isIndexedTo100()) {\n      value = fromIndexedTo100(value, baseValue);\n    }\n    return value;\n  }\n  _internal_dataSources() {\n    return this._private__dataSources;\n  }\n  _internal_orderedSources() {\n    if (this._private__cachedOrderedSources) {\n      return this._private__cachedOrderedSources;\n    }\n    let sources = [];\n    for (let i = 0; i < this._private__dataSources.length; i++) {\n      const ds = this._private__dataSources[i];\n      if (ds._internal_zorder() === null) {\n        ds._internal_setZorder(i + 1);\n      }\n      sources.push(ds);\n    }\n    sources = sortSources(sources);\n    this._private__cachedOrderedSources = sources;\n    return this._private__cachedOrderedSources;\n  }\n  _internal_addDataSource(source) {\n    if (this._private__dataSources.indexOf(source) !== -1) {\n      return;\n    }\n    this._private__dataSources.push(source);\n    this._internal_updateFormatter();\n    this._internal_invalidateSourcesCache();\n  }\n  _internal_removeDataSource(source) {\n    const index = this._private__dataSources.indexOf(source);\n    if (index === -1) {\n      throw new Error('source is not attached to scale');\n    }\n    this._private__dataSources.splice(index, 1);\n    if (this._private__dataSources.length === 0) {\n      this._internal_setMode({\n        _internal_autoScale: true\n      });\n      // if no sources on price scale let's clear price range cache as well as enabling auto scale\n      this._internal_setPriceRange(null);\n    }\n    this._internal_updateFormatter();\n    this._internal_invalidateSourcesCache();\n  }\n  _internal_firstValue() {\n    // TODO: cache the result\n    let result = null;\n    for (const source of this._private__dataSources) {\n      const firstValue = source._internal_firstValue();\n      if (firstValue === null) {\n        continue;\n      }\n      if (result === null || firstValue._internal_timePoint < result._internal_timePoint) {\n        result = firstValue;\n      }\n    }\n    return result === null ? null : result._internal_value;\n  }\n  _internal_isInverted() {\n    return this._private__options.invertScale;\n  }\n  _internal_marks() {\n    const firstValueIsNull = this._internal_firstValue() === null;\n    // do not recalculate marks if firstValueIsNull is true because in this case we'll always get empty result\n    // this could happen in case when a series had some data and then you set empty data to it (in a simplified case)\n    // we could display an empty price scale, but this is not good from UX\n    // so in this case we need to keep an previous marks to display them on the scale\n    // as one of possible examples for this situation could be the following:\n    // let's say you have a study/indicator attached to a price scale and then you decide to stop it, i.e. remove its data because of its visibility\n    // a user will see the previous marks on the scale until you turn on your study back or remove it from the chart completely\n    if (this._private__marksCache !== null && (firstValueIsNull || this._private__marksCache._internal_firstValueIsNull === firstValueIsNull)) {\n      return this._private__marksCache._internal_marks;\n    }\n    this._private__markBuilder._internal_rebuildTickMarks();\n    const marks = this._private__markBuilder._internal_marks();\n    this._private__marksCache = {\n      _internal_marks: marks,\n      _internal_firstValueIsNull: firstValueIsNull\n    };\n    this._private__onMarksChanged._internal_fire();\n    return marks;\n  }\n  _internal_onMarksChanged() {\n    return this._private__onMarksChanged;\n  }\n  _internal_startScale(x) {\n    if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n      return;\n    }\n    if (this._private__scaleStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n      return;\n    }\n    if (this._internal_isEmpty()) {\n      return;\n    }\n    // invert x\n    this._private__scaleStartPoint = this._private__height - x;\n    this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n  }\n  _internal_scaleTo(x) {\n    if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n      return;\n    }\n    if (this._private__scaleStartPoint === null) {\n      return;\n    }\n    this._internal_setMode({\n      _internal_autoScale: false\n    });\n    // invert x\n    x = this._private__height - x;\n    if (x < 0) {\n      x = 0;\n    }\n    let scaleCoeff = (this._private__scaleStartPoint + (this._private__height - 1) * 0.2) / (x + (this._private__height - 1) * 0.2);\n    const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n    scaleCoeff = Math.max(scaleCoeff, 0.1);\n    newPriceRange._internal_scaleAroundCenter(scaleCoeff);\n    this._internal_setPriceRange(newPriceRange);\n  }\n  _internal_endScale() {\n    if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n      return;\n    }\n    this._private__scaleStartPoint = null;\n    this._private__priceRangeSnapshot = null;\n  }\n  _internal_startScroll(x) {\n    if (this._internal_isAutoScale()) {\n      return;\n    }\n    if (this._private__scrollStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n      return;\n    }\n    if (this._internal_isEmpty()) {\n      return;\n    }\n    this._private__scrollStartPoint = x;\n    this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n  }\n  _internal_scrollTo(x) {\n    if (this._internal_isAutoScale()) {\n      return;\n    }\n    if (this._private__scrollStartPoint === null) {\n      return;\n    }\n    const priceUnitsPerPixel = ensureNotNull(this._internal_priceRange())._internal_length() / (this._internal_internalHeight() - 1);\n    let pixelDelta = x - this._private__scrollStartPoint;\n    if (this._internal_isInverted()) {\n      pixelDelta *= -1;\n    }\n    const priceDelta = pixelDelta * priceUnitsPerPixel;\n    const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n    newPriceRange._internal_shift(priceDelta);\n    this._internal_setPriceRange(newPriceRange, true);\n    this._private__marksCache = null;\n  }\n  _internal_endScroll() {\n    if (this._internal_isAutoScale()) {\n      return;\n    }\n    if (this._private__scrollStartPoint === null) {\n      return;\n    }\n    this._private__scrollStartPoint = null;\n    this._private__priceRangeSnapshot = null;\n  }\n  _internal_formatter() {\n    if (!this._private__formatter) {\n      this._internal_updateFormatter();\n    }\n    return this._private__formatter;\n  }\n  _internal_formatPrice(price, firstValue) {\n    switch (this._private__options.mode) {\n      case 2 /* PriceScaleMode.Percentage */:\n        return this._private__formatPercentage(toPercent(price, firstValue));\n      case 3 /* PriceScaleMode.IndexedTo100 */:\n        return this._internal_formatter().format(toIndexedTo100(price, firstValue));\n      default:\n        return this._private__formatPrice(price);\n    }\n  }\n  _internal_formatLogical(logical) {\n    switch (this._private__options.mode) {\n      case 2 /* PriceScaleMode.Percentage */:\n        return this._private__formatPercentage(logical);\n      case 3 /* PriceScaleMode.IndexedTo100 */:\n        return this._internal_formatter().format(logical);\n      default:\n        return this._private__formatPrice(logical);\n    }\n  }\n  _internal_formatPriceAbsolute(price) {\n    return this._private__formatPrice(price, ensureNotNull(this._private__formatterSource())._internal_formatter());\n  }\n  _internal_formatPricePercentage(price, baseValue) {\n    price = toPercent(price, baseValue);\n    return this._private__formatPercentage(price, percentageFormatter);\n  }\n  _internal_sourcesForAutoScale() {\n    return this._private__dataSources;\n  }\n  _internal_recalculatePriceRange(visibleBars) {\n    this._private__invalidatedForRange = {\n      _internal_visibleBars: visibleBars,\n      _internal_isValid: false\n    };\n  }\n  _internal_updateAllViews() {\n    this._private__dataSources.forEach(s => s._internal_updateAllViews());\n  }\n  _internal_updateFormatter() {\n    this._private__marksCache = null;\n    const formatterSource = this._private__formatterSource();\n    let base = 100;\n    if (formatterSource !== null) {\n      base = Math.round(1 / formatterSource._internal_minMove());\n    }\n    this._private__formatter = defaultPriceFormatter;\n    if (this._internal_isPercentage()) {\n      this._private__formatter = percentageFormatter;\n      base = 100;\n    } else if (this._internal_isIndexedTo100()) {\n      this._private__formatter = new PriceFormatter(100, 1);\n      base = 100;\n    } else {\n      if (formatterSource !== null) {\n        // user\n        this._private__formatter = formatterSource._internal_formatter();\n      }\n    }\n    this._private__markBuilder = new PriceTickMarkBuilder(this, base, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n    this._private__markBuilder._internal_rebuildTickMarks();\n  }\n  _internal_invalidateSourcesCache() {\n    this._private__cachedOrderedSources = null;\n  }\n  /**\n   * @returns The {@link IPriceDataSource} that will be used as the \"formatter source\" (take minMove for formatter).\n   */\n  _private__formatterSource() {\n    return this._private__dataSources[0] || null;\n  }\n  _private__topMarginPx() {\n    return this._internal_isInverted() ? this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow : this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove;\n  }\n  _private__bottomMarginPx() {\n    return this._internal_isInverted() ? this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove : this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow;\n  }\n  _private__makeSureItIsValid() {\n    if (!this._private__invalidatedForRange._internal_isValid) {\n      this._private__invalidatedForRange._internal_isValid = true;\n      this._private__recalculatePriceRangeImpl();\n    }\n  }\n  _private__invalidateInternalHeightCache() {\n    this._private__internalHeightCache = null;\n  }\n  _private__logicalToCoordinate(logical, baseValue) {\n    this._private__makeSureItIsValid();\n    if (this._internal_isEmpty()) {\n      return 0;\n    }\n    logical = this._internal_isLog() && logical ? toLog(logical, this._private__logFormula) : logical;\n    const range = ensureNotNull(this._internal_priceRange());\n    const invCoordinate = this._private__bottomMarginPx() + (this._internal_internalHeight() - 1) * (logical - range._internal_minValue()) / range._internal_length();\n    const coordinate = this._internal_invertedCoordinate(invCoordinate);\n    return coordinate;\n  }\n  _private__coordinateToLogical(coordinate, baseValue) {\n    this._private__makeSureItIsValid();\n    if (this._internal_isEmpty()) {\n      return 0;\n    }\n    const invCoordinate = this._internal_invertedCoordinate(coordinate);\n    const range = ensureNotNull(this._internal_priceRange());\n    const logical = range._internal_minValue() + range._internal_length() * ((invCoordinate - this._private__bottomMarginPx()) / (this._internal_internalHeight() - 1));\n    return this._internal_isLog() ? fromLog(logical, this._private__logFormula) : logical;\n  }\n  _private__onIsInvertedChanged() {\n    this._private__marksCache = null;\n    this._private__markBuilder._internal_rebuildTickMarks();\n  }\n  // eslint-disable-next-line complexity\n  _private__recalculatePriceRangeImpl() {\n    const visibleBars = this._private__invalidatedForRange._internal_visibleBars;\n    if (visibleBars === null) {\n      return;\n    }\n    let priceRange = null;\n    const sources = this._internal_sourcesForAutoScale();\n    let marginAbove = 0;\n    let marginBelow = 0;\n    for (const source of sources) {\n      if (!source._internal_visible()) {\n        continue;\n      }\n      const firstValue = source._internal_firstValue();\n      if (firstValue === null) {\n        continue;\n      }\n      const autoScaleInfo = source._internal_autoscaleInfo(visibleBars._internal_left(), visibleBars._internal_right());\n      let sourceRange = autoScaleInfo && autoScaleInfo._internal_priceRange();\n      if (sourceRange !== null) {\n        switch (this._private__options.mode) {\n          case 1 /* PriceScaleMode.Logarithmic */:\n            sourceRange = convertPriceRangeToLog(sourceRange, this._private__logFormula);\n            break;\n          case 2 /* PriceScaleMode.Percentage */:\n            sourceRange = toPercentRange(sourceRange, firstValue._internal_value);\n            break;\n          case 3 /* PriceScaleMode.IndexedTo100 */:\n            sourceRange = toIndexedTo100Range(sourceRange, firstValue._internal_value);\n            break;\n        }\n        if (priceRange === null) {\n          priceRange = sourceRange;\n        } else {\n          priceRange = priceRange._internal_merge(ensureNotNull(sourceRange));\n        }\n        if (autoScaleInfo !== null) {\n          const margins = autoScaleInfo._internal_margins();\n          if (margins !== null) {\n            marginAbove = Math.max(marginAbove, margins.above);\n            marginBelow = Math.max(marginBelow, margins.below);\n          }\n        }\n      }\n    }\n    if (marginAbove !== this._private__marginAbove || marginBelow !== this._private__marginBelow) {\n      this._private__marginAbove = marginAbove;\n      this._private__marginBelow = marginBelow;\n      this._private__marksCache = null;\n      this._private__invalidateInternalHeightCache();\n    }\n    if (priceRange !== null) {\n      // keep current range is new is empty\n      if (priceRange._internal_minValue() === priceRange._internal_maxValue()) {\n        const formatterSource = this._private__formatterSource();\n        const minMove = formatterSource === null || this._internal_isPercentage() || this._internal_isIndexedTo100() ? 1 : formatterSource._internal_minMove();\n        // if price range is degenerated to 1 point let's extend it by 10 min move values\n        // to avoid incorrect range and empty (blank) scale (in case of min tick much greater than 1)\n        const extendValue = 5 * minMove;\n        if (this._internal_isLog()) {\n          priceRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n        }\n        priceRange = new PriceRangeImpl(priceRange._internal_minValue() - extendValue, priceRange._internal_maxValue() + extendValue);\n        if (this._internal_isLog()) {\n          priceRange = convertPriceRangeToLog(priceRange, this._private__logFormula);\n        }\n      }\n      if (this._internal_isLog()) {\n        const rawRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n        const newLogFormula = logFormulaForPriceRange(rawRange);\n        if (!logFormulasAreSame(newLogFormula, this._private__logFormula)) {\n          const rawSnapshot = this._private__priceRangeSnapshot !== null ? convertPriceRangeFromLog(this._private__priceRangeSnapshot, this._private__logFormula) : null;\n          this._private__logFormula = newLogFormula;\n          priceRange = convertPriceRangeToLog(rawRange, newLogFormula);\n          if (rawSnapshot !== null) {\n            this._private__priceRangeSnapshot = convertPriceRangeToLog(rawSnapshot, newLogFormula);\n          }\n        }\n      }\n      this._internal_setPriceRange(priceRange);\n    } else {\n      // reset empty to default\n      if (this._private__priceRange === null) {\n        this._internal_setPriceRange(new PriceRangeImpl(-0.5, 0.5));\n        this._private__logFormula = logFormulaForPriceRange(null);\n      }\n    }\n    this._private__invalidatedForRange._internal_isValid = true;\n  }\n  _private__getCoordinateTransformer() {\n    if (this._internal_isPercentage()) {\n      return toPercent;\n    } else if (this._internal_isIndexedTo100()) {\n      return toIndexedTo100;\n    } else if (this._internal_isLog()) {\n      return price => toLog(price, this._private__logFormula);\n    }\n    return null;\n  }\n  _private__formatValue(value, formatter, fallbackFormatter) {\n    if (formatter === undefined) {\n      if (fallbackFormatter === undefined) {\n        fallbackFormatter = this._internal_formatter();\n      }\n      return fallbackFormatter.format(value);\n    }\n    return formatter(value);\n  }\n  _private__formatPrice(price, fallbackFormatter) {\n    return this._private__formatValue(price, this._private__localizationOptions.priceFormatter, fallbackFormatter);\n  }\n  _private__formatPercentage(percentage, fallbackFormatter) {\n    return this._private__formatValue(percentage, this._private__localizationOptions.percentageFormatter, fallbackFormatter);\n  }\n}\nconst DEFAULT_STRETCH_FACTOR = 1000;\nclass Pane {\n  constructor(timeScale, model) {\n    this._private__dataSources = [];\n    this._private__overlaySourcesByScaleId = new Map();\n    this._private__height = 0;\n    this._private__width = 0;\n    this._private__stretchFactor = DEFAULT_STRETCH_FACTOR;\n    this._private__cachedOrderedSources = null;\n    this._private__destroyed = new Delegate();\n    this._private__timeScale = timeScale;\n    this._private__model = model;\n    this._private__grid = new Grid(this);\n    const options = model._internal_options();\n    this._private__leftPriceScale = this._private__createPriceScale(\"left\" /* DefaultPriceScaleId.Left */, options.leftPriceScale);\n    this._private__rightPriceScale = this._private__createPriceScale(\"right\" /* DefaultPriceScaleId.Right */, options.rightPriceScale);\n    this._private__leftPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__leftPriceScale), this);\n    this._private__rightPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__rightPriceScale), this);\n    this._internal_applyScaleOptions(options);\n  }\n  _internal_applyScaleOptions(options) {\n    if (options.leftPriceScale) {\n      this._private__leftPriceScale._internal_applyOptions(options.leftPriceScale);\n    }\n    if (options.rightPriceScale) {\n      this._private__rightPriceScale._internal_applyOptions(options.rightPriceScale);\n    }\n    if (options.localization) {\n      this._private__leftPriceScale._internal_updateFormatter();\n      this._private__rightPriceScale._internal_updateFormatter();\n    }\n    if (options.overlayPriceScales) {\n      const sourceArrays = Array.from(this._private__overlaySourcesByScaleId.values());\n      for (const arr of sourceArrays) {\n        const priceScale = ensureNotNull(arr[0]._internal_priceScale());\n        priceScale._internal_applyOptions(options.overlayPriceScales);\n        if (options.localization) {\n          priceScale._internal_updateFormatter();\n        }\n      }\n    }\n  }\n  _internal_priceScaleById(id) {\n    switch (id) {\n      case \"left\" /* DefaultPriceScaleId.Left */:\n        {\n          return this._private__leftPriceScale;\n        }\n      case \"right\" /* DefaultPriceScaleId.Right */:\n        {\n          return this._private__rightPriceScale;\n        }\n    }\n    if (this._private__overlaySourcesByScaleId.has(id)) {\n      return ensureDefined(this._private__overlaySourcesByScaleId.get(id))[0]._internal_priceScale();\n    }\n    return null;\n  }\n  _internal_destroy() {\n    this._internal_model()._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n    this._private__leftPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n    this._private__rightPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n    this._private__dataSources.forEach(source => {\n      if (source._internal_destroy) {\n        source._internal_destroy();\n      }\n    });\n    this._private__destroyed._internal_fire();\n  }\n  _internal_stretchFactor() {\n    return this._private__stretchFactor;\n  }\n  _internal_setStretchFactor(factor) {\n    this._private__stretchFactor = factor;\n  }\n  _internal_model() {\n    return this._private__model;\n  }\n  _internal_width() {\n    return this._private__width;\n  }\n  _internal_height() {\n    return this._private__height;\n  }\n  _internal_setWidth(width) {\n    this._private__width = width;\n    this._internal_updateAllSources();\n  }\n  _internal_setHeight(height) {\n    this._private__height = height;\n    this._private__leftPriceScale._internal_setHeight(height);\n    this._private__rightPriceScale._internal_setHeight(height);\n    // process overlays\n    this._private__dataSources.forEach(ds => {\n      if (this._internal_isOverlay(ds)) {\n        const priceScale = ds._internal_priceScale();\n        if (priceScale !== null) {\n          priceScale._internal_setHeight(height);\n        }\n      }\n    });\n    this._internal_updateAllSources();\n  }\n  _internal_dataSources() {\n    return this._private__dataSources;\n  }\n  _internal_isOverlay(source) {\n    const priceScale = source._internal_priceScale();\n    if (priceScale === null) {\n      return true;\n    }\n    return this._private__leftPriceScale !== priceScale && this._private__rightPriceScale !== priceScale;\n  }\n  _internal_addDataSource(source, targetScaleId, zOrder) {\n    const targetZOrder = zOrder !== undefined ? zOrder : this._private__getZOrderMinMax()._internal_maxZOrder + 1;\n    this._private__insertDataSource(source, targetScaleId, targetZOrder);\n  }\n  _internal_removeDataSource(source) {\n    const index = this._private__dataSources.indexOf(source);\n    assert(index !== -1, 'removeDataSource: invalid data source');\n    this._private__dataSources.splice(index, 1);\n    const priceScaleId = ensureNotNull(source._internal_priceScale())._internal_id();\n    if (this._private__overlaySourcesByScaleId.has(priceScaleId)) {\n      const overlaySources = ensureDefined(this._private__overlaySourcesByScaleId.get(priceScaleId));\n      const overlayIndex = overlaySources.indexOf(source);\n      if (overlayIndex !== -1) {\n        overlaySources.splice(overlayIndex, 1);\n        if (overlaySources.length === 0) {\n          this._private__overlaySourcesByScaleId.delete(priceScaleId);\n        }\n      }\n    }\n    const priceScale = source._internal_priceScale();\n    // if source has owner, it returns owner's price scale\n    // and it does not have source in their list\n    if (priceScale && priceScale._internal_dataSources().indexOf(source) >= 0) {\n      priceScale._internal_removeDataSource(source);\n    }\n    if (priceScale !== null) {\n      priceScale._internal_invalidateSourcesCache();\n      this._internal_recalculatePriceScale(priceScale);\n    }\n    this._private__cachedOrderedSources = null;\n  }\n  _internal_priceScalePosition(priceScale) {\n    if (priceScale === this._private__leftPriceScale) {\n      return 'left';\n    }\n    if (priceScale === this._private__rightPriceScale) {\n      return 'right';\n    }\n    return 'overlay';\n  }\n  _internal_leftPriceScale() {\n    return this._private__leftPriceScale;\n  }\n  _internal_rightPriceScale() {\n    return this._private__rightPriceScale;\n  }\n  _internal_startScalePrice(priceScale, x) {\n    priceScale._internal_startScale(x);\n  }\n  _internal_scalePriceTo(priceScale, x) {\n    priceScale._internal_scaleTo(x);\n    // TODO: be more smart and update only affected views\n    this._internal_updateAllSources();\n  }\n  _internal_endScalePrice(priceScale) {\n    priceScale._internal_endScale();\n  }\n  _internal_startScrollPrice(priceScale, x) {\n    priceScale._internal_startScroll(x);\n  }\n  _internal_scrollPriceTo(priceScale, x) {\n    priceScale._internal_scrollTo(x);\n    this._internal_updateAllSources();\n  }\n  _internal_endScrollPrice(priceScale) {\n    priceScale._internal_endScroll();\n  }\n  _internal_updateAllSources() {\n    this._private__dataSources.forEach(source => {\n      source._internal_updateAllViews();\n    });\n  }\n  _internal_defaultPriceScale() {\n    let priceScale = null;\n    if (this._private__model._internal_options().rightPriceScale.visible && this._private__rightPriceScale._internal_dataSources().length !== 0) {\n      priceScale = this._private__rightPriceScale;\n    } else if (this._private__model._internal_options().leftPriceScale.visible && this._private__leftPriceScale._internal_dataSources().length !== 0) {\n      priceScale = this._private__leftPriceScale;\n    } else if (this._private__dataSources.length !== 0) {\n      priceScale = this._private__dataSources[0]._internal_priceScale();\n    }\n    if (priceScale === null) {\n      priceScale = this._private__rightPriceScale;\n    }\n    return priceScale;\n  }\n  _internal_defaultVisiblePriceScale() {\n    let priceScale = null;\n    if (this._private__model._internal_options().rightPriceScale.visible) {\n      priceScale = this._private__rightPriceScale;\n    } else if (this._private__model._internal_options().leftPriceScale.visible) {\n      priceScale = this._private__leftPriceScale;\n    }\n    return priceScale;\n  }\n  _internal_recalculatePriceScale(priceScale) {\n    if (priceScale === null || !priceScale._internal_isAutoScale()) {\n      return;\n    }\n    this._private__recalculatePriceScaleImpl(priceScale);\n  }\n  _internal_resetPriceScale(priceScale) {\n    const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n    priceScale._internal_setMode({\n      _internal_autoScale: true\n    });\n    if (visibleBars !== null) {\n      priceScale._internal_recalculatePriceRange(visibleBars);\n    }\n    this._internal_updateAllSources();\n  }\n  _internal_momentaryAutoScale() {\n    this._private__recalculatePriceScaleImpl(this._private__leftPriceScale);\n    this._private__recalculatePriceScaleImpl(this._private__rightPriceScale);\n  }\n  _internal_recalculate() {\n    this._internal_recalculatePriceScale(this._private__leftPriceScale);\n    this._internal_recalculatePriceScale(this._private__rightPriceScale);\n    this._private__dataSources.forEach(ds => {\n      if (this._internal_isOverlay(ds)) {\n        this._internal_recalculatePriceScale(ds._internal_priceScale());\n      }\n    });\n    this._internal_updateAllSources();\n    this._private__model._internal_lightUpdate();\n  }\n  _internal_orderedSources() {\n    if (this._private__cachedOrderedSources === null) {\n      this._private__cachedOrderedSources = sortSources(this._private__dataSources);\n    }\n    return this._private__cachedOrderedSources;\n  }\n  _internal_onDestroyed() {\n    return this._private__destroyed;\n  }\n  _internal_grid() {\n    return this._private__grid;\n  }\n  _private__recalculatePriceScaleImpl(priceScale) {\n    // TODO: can use this checks\n    const sourceForAutoScale = priceScale._internal_sourcesForAutoScale();\n    if (sourceForAutoScale && sourceForAutoScale.length > 0 && !this._private__timeScale._internal_isEmpty()) {\n      const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n      if (visibleBars !== null) {\n        priceScale._internal_recalculatePriceRange(visibleBars);\n      }\n    }\n    priceScale._internal_updateAllViews();\n  }\n  _private__getZOrderMinMax() {\n    const sources = this._internal_orderedSources();\n    if (sources.length === 0) {\n      return {\n        _internal_minZOrder: 0,\n        _internal_maxZOrder: 0\n      };\n    }\n    let minZOrder = 0;\n    let maxZOrder = 0;\n    for (let j = 0; j < sources.length; j++) {\n      const ds = sources[j];\n      const zOrder = ds._internal_zorder();\n      if (zOrder !== null) {\n        if (zOrder < minZOrder) {\n          minZOrder = zOrder;\n        }\n        if (zOrder > maxZOrder) {\n          maxZOrder = zOrder;\n        }\n      }\n    }\n    return {\n      _internal_minZOrder: minZOrder,\n      _internal_maxZOrder: maxZOrder\n    };\n  }\n  _private__insertDataSource(source, priceScaleId, zOrder) {\n    let priceScale = this._internal_priceScaleById(priceScaleId);\n    if (priceScale === null) {\n      priceScale = this._private__createPriceScale(priceScaleId, this._private__model._internal_options().overlayPriceScales);\n    }\n    this._private__dataSources.push(source);\n    if (!isDefaultPriceScale(priceScaleId)) {\n      const overlaySources = this._private__overlaySourcesByScaleId.get(priceScaleId) || [];\n      overlaySources.push(source);\n      this._private__overlaySourcesByScaleId.set(priceScaleId, overlaySources);\n    }\n    priceScale._internal_addDataSource(source);\n    source._internal_setPriceScale(priceScale);\n    source._internal_setZorder(zOrder);\n    this._internal_recalculatePriceScale(priceScale);\n    this._private__cachedOrderedSources = null;\n  }\n  _private__onPriceScaleModeChanged(priceScale, oldMode, newMode) {\n    if (oldMode._internal_mode === newMode._internal_mode) {\n      return;\n    }\n    // momentary auto scale if we toggle percentage/indexedTo100 mode\n    this._private__recalculatePriceScaleImpl(priceScale);\n  }\n  _private__createPriceScale(id, options) {\n    const actualOptions = Object.assign({\n      visible: true,\n      autoScale: true\n    }, clone(options));\n    const priceScale = new PriceScale(id, actualOptions, this._private__model._internal_options().layout, this._private__model._internal_options().localization);\n    priceScale._internal_setHeight(this._internal_height());\n    return priceScale;\n  }\n}\nclass FormattedLabelsCache {\n  constructor(format, horzScaleBehavior, size = 50) {\n    this._private__actualSize = 0;\n    this._private__usageTick = 1;\n    this._private__oldestTick = 1;\n    this._private__cache = new Map();\n    this._private__tick2Labels = new Map();\n    this._private__format = format;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._private__maxSize = size;\n  }\n  _internal_format(tickMark) {\n    const time = tickMark.time;\n    const cacheKey = this._private__horzScaleBehavior.cacheKey(time);\n    const tick = this._private__cache.get(cacheKey);\n    if (tick !== undefined) {\n      return tick._internal_string;\n    }\n    if (this._private__actualSize === this._private__maxSize) {\n      const oldestValue = this._private__tick2Labels.get(this._private__oldestTick);\n      this._private__tick2Labels.delete(this._private__oldestTick);\n      this._private__cache.delete(ensureDefined(oldestValue));\n      this._private__oldestTick++;\n      this._private__actualSize--;\n    }\n    const str = this._private__format(tickMark);\n    this._private__cache.set(cacheKey, {\n      _internal_string: str,\n      _internal_tick: this._private__usageTick\n    });\n    this._private__tick2Labels.set(this._private__usageTick, cacheKey);\n    this._private__actualSize++;\n    this._private__usageTick++;\n    return str;\n  }\n}\nclass RangeImpl {\n  constructor(left, right) {\n    assert(left <= right, 'right should be >= left');\n    this._private__left = left;\n    this._private__right = right;\n  }\n  _internal_left() {\n    return this._private__left;\n  }\n  _internal_right() {\n    return this._private__right;\n  }\n  _internal_count() {\n    return this._private__right - this._private__left + 1;\n  }\n  _internal_contains(index) {\n    return this._private__left <= index && index <= this._private__right;\n  }\n  _internal_equals(other) {\n    return this._private__left === other._internal_left() && this._private__right === other._internal_right();\n  }\n}\nfunction areRangesEqual(first, second) {\n  if (first === null || second === null) {\n    return first === second;\n  }\n  return first._internal_equals(second);\n}\nclass TickMarks {\n  constructor() {\n    this._private__marksByWeight = new Map();\n    this._private__cache = null;\n    this._private__uniformDistribution = false;\n  }\n  _internal_setUniformDistribution(val) {\n    this._private__uniformDistribution = val;\n    this._private__cache = null;\n  }\n  _internal_setTimeScalePoints(newPoints, firstChangedPointIndex) {\n    this._private__removeMarksSinceIndex(firstChangedPointIndex);\n    this._private__cache = null;\n    for (let index = firstChangedPointIndex; index < newPoints.length; ++index) {\n      const point = newPoints[index];\n      let marksForWeight = this._private__marksByWeight.get(point.timeWeight);\n      if (marksForWeight === undefined) {\n        marksForWeight = [];\n        this._private__marksByWeight.set(point.timeWeight, marksForWeight);\n      }\n      marksForWeight.push({\n        index: index,\n        time: point.time,\n        weight: point.timeWeight,\n        originalTime: point.originalTime\n      });\n    }\n  }\n  _internal_build(spacing, maxWidth) {\n    const maxIndexesPerMark = Math.ceil(maxWidth / spacing);\n    if (this._private__cache === null || this._private__cache._internal_maxIndexesPerMark !== maxIndexesPerMark) {\n      this._private__cache = {\n        _internal_marks: this._private__buildMarksImpl(maxIndexesPerMark),\n        _internal_maxIndexesPerMark: maxIndexesPerMark\n      };\n    }\n    return this._private__cache._internal_marks;\n  }\n  _private__removeMarksSinceIndex(sinceIndex) {\n    if (sinceIndex === 0) {\n      this._private__marksByWeight.clear();\n      return;\n    }\n    const weightsToClear = [];\n    this._private__marksByWeight.forEach((marks, timeWeight) => {\n      if (sinceIndex <= marks[0].index) {\n        weightsToClear.push(timeWeight);\n      } else {\n        marks.splice(lowerBound(marks, sinceIndex, tm => tm.index < sinceIndex), Infinity);\n      }\n    });\n    for (const weight of weightsToClear) {\n      this._private__marksByWeight.delete(weight);\n    }\n  }\n  _private__buildMarksImpl(maxIndexesPerMark) {\n    let marks = [];\n    for (const weight of Array.from(this._private__marksByWeight.keys()).sort((a, b) => b - a)) {\n      if (!this._private__marksByWeight.get(weight)) {\n        continue;\n      }\n      // Built tickMarks are now prevMarks, and marks it as new array\n      const prevMarks = marks;\n      marks = [];\n      const prevMarksLength = prevMarks.length;\n      let prevMarksPointer = 0;\n      const currentWeight = ensureDefined(this._private__marksByWeight.get(weight));\n      const currentWeightLength = currentWeight.length;\n      let rightIndex = Infinity;\n      let leftIndex = -Infinity;\n      for (let i = 0; i < currentWeightLength; i++) {\n        const mark = currentWeight[i];\n        const currentIndex = mark.index;\n        // Determine indexes with which current index will be compared\n        // All marks to the right is moved to new array\n        while (prevMarksPointer < prevMarksLength) {\n          const lastMark = prevMarks[prevMarksPointer];\n          const lastIndex = lastMark.index;\n          if (lastIndex < currentIndex) {\n            prevMarksPointer++;\n            marks.push(lastMark);\n            leftIndex = lastIndex;\n            rightIndex = Infinity;\n          } else {\n            rightIndex = lastIndex;\n            break;\n          }\n        }\n        if (rightIndex - currentIndex >= maxIndexesPerMark && currentIndex - leftIndex >= maxIndexesPerMark) {\n          // TickMark fits. Place it into new array\n          marks.push(mark);\n          leftIndex = currentIndex;\n        } else {\n          if (this._private__uniformDistribution) {\n            return prevMarks;\n          }\n        }\n      }\n      // Place all unused tickMarks into new array;\n      for (; prevMarksPointer < prevMarksLength; prevMarksPointer++) {\n        marks.push(prevMarks[prevMarksPointer]);\n      }\n    }\n    return marks;\n  }\n}\nclass TimeScaleVisibleRange {\n  constructor(logicalRange) {\n    this._private__logicalRange = logicalRange;\n  }\n  _internal_strictRange() {\n    if (this._private__logicalRange === null) {\n      return null;\n    }\n    return new RangeImpl(Math.floor(this._private__logicalRange._internal_left()), Math.ceil(this._private__logicalRange._internal_right()));\n  }\n  _internal_logicalRange() {\n    return this._private__logicalRange;\n  }\n  static _internal_invalid() {\n    return new TimeScaleVisibleRange(null);\n  }\n}\nconst defaultTickMarkMaxCharacterLength = 8;\nfunction markWithGreaterWeight(a, b) {\n  return a.weight > b.weight ? a : b;\n}\nclass TimeScale {\n  constructor(model, options, localizationOptions, horzScaleBehavior) {\n    this._private__width = 0;\n    this._private__baseIndexOrNull = null;\n    this._private__points = [];\n    this._private__scrollStartPoint = null;\n    this._private__scaleStartPoint = null;\n    this._private__tickMarks = new TickMarks();\n    this._private__formattedByWeight = new Map();\n    this._private__visibleRange = TimeScaleVisibleRange._internal_invalid();\n    this._private__visibleRangeInvalidated = true;\n    this._private__visibleBarsChanged = new Delegate();\n    this._private__logicalRangeChanged = new Delegate();\n    this._private__optionsApplied = new Delegate();\n    this._private__commonTransitionStartState = null;\n    this._private__timeMarksCache = null;\n    this._private__labels = [];\n    this._private__options = options;\n    this._private__localizationOptions = localizationOptions;\n    this._private__rightOffset = options.rightOffset;\n    this._private__barSpacing = options.barSpacing;\n    this._private__model = model;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._private__updateDateTimeFormatter();\n    this._private__tickMarks._internal_setUniformDistribution(options.uniformDistribution);\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_applyLocalizationOptions(localizationOptions) {\n    merge(this._private__localizationOptions, localizationOptions);\n    this._private__invalidateTickMarks();\n    this._private__updateDateTimeFormatter();\n  }\n  _internal_applyOptions(options, localizationOptions) {\n    var _a;\n    merge(this._private__options, options);\n    if (this._private__options.fixLeftEdge) {\n      this._private__doFixLeftEdge();\n    }\n    if (this._private__options.fixRightEdge) {\n      this._private__doFixRightEdge();\n    }\n    // note that bar spacing should be applied before right offset\n    // because right offset depends on bar spacing\n    if (options.barSpacing !== undefined) {\n      this._private__model._internal_setBarSpacing(options.barSpacing);\n    }\n    if (options.rightOffset !== undefined) {\n      this._private__model._internal_setRightOffset(options.rightOffset);\n    }\n    if (options.minBarSpacing !== undefined) {\n      // yes, if we apply min bar spacing then we need to correct bar spacing\n      // the easiest way is to apply it once again\n      this._private__model._internal_setBarSpacing((_a = options.barSpacing) !== null && _a !== void 0 ? _a : this._private__barSpacing);\n    }\n    this._private__invalidateTickMarks();\n    this._private__updateDateTimeFormatter();\n    this._private__optionsApplied._internal_fire();\n  }\n  _internal_indexToTime(index) {\n    var _a, _b;\n    return (_b = (_a = this._private__points[index]) === null || _a === void 0 ? void 0 : _a.time) !== null && _b !== void 0 ? _b : null;\n  }\n  _internal_indexToTimeScalePoint(index) {\n    var _a;\n    return (_a = this._private__points[index]) !== null && _a !== void 0 ? _a : null;\n  }\n  _internal_timeToIndex(time, findNearest) {\n    if (this._private__points.length < 1) {\n      // no time points available\n      return null;\n    }\n    if (this._private__horzScaleBehavior.key(time) > this._private__horzScaleBehavior.key(this._private__points[this._private__points.length - 1].time)) {\n      // special case\n      return findNearest ? this._private__points.length - 1 : null;\n    }\n    const index = lowerBound(this._private__points, this._private__horzScaleBehavior.key(time), (a, b) => this._private__horzScaleBehavior.key(a.time) < b);\n    if (this._private__horzScaleBehavior.key(time) < this._private__horzScaleBehavior.key(this._private__points[index].time)) {\n      return findNearest ? index : null;\n    }\n    return index;\n  }\n  _internal_isEmpty() {\n    return this._private__width === 0 || this._private__points.length === 0 || this._private__baseIndexOrNull === null;\n  }\n  _internal_hasPoints() {\n    return this._private__points.length > 0;\n  }\n  // strict range: integer indices of the bars in the visible range rounded in more wide direction\n  _internal_visibleStrictRange() {\n    this._private__updateVisibleRange();\n    return this._private__visibleRange._internal_strictRange();\n  }\n  _internal_visibleLogicalRange() {\n    this._private__updateVisibleRange();\n    return this._private__visibleRange._internal_logicalRange();\n  }\n  _internal_visibleTimeRange() {\n    const visibleBars = this._internal_visibleStrictRange();\n    if (visibleBars === null) {\n      return null;\n    }\n    const range = {\n      from: visibleBars._internal_left(),\n      to: visibleBars._internal_right()\n    };\n    return this._internal_timeRangeForLogicalRange(range);\n  }\n  _internal_timeRangeForLogicalRange(range) {\n    const from = Math.round(range.from);\n    const to = Math.round(range.to);\n    const firstIndex = ensureNotNull(this._private__firstIndex());\n    const lastIndex = ensureNotNull(this._private__lastIndex());\n    return {\n      from: ensureNotNull(this._internal_indexToTimeScalePoint(Math.max(firstIndex, from))),\n      to: ensureNotNull(this._internal_indexToTimeScalePoint(Math.min(lastIndex, to)))\n    };\n  }\n  _internal_logicalRangeForTimeRange(range) {\n    return {\n      from: ensureNotNull(this._internal_timeToIndex(range.from, true)),\n      to: ensureNotNull(this._internal_timeToIndex(range.to, true))\n    };\n  }\n  _internal_width() {\n    return this._private__width;\n  }\n  _internal_setWidth(newWidth) {\n    if (!isFinite(newWidth) || newWidth <= 0) {\n      return;\n    }\n    if (this._private__width === newWidth) {\n      return;\n    }\n    // when we change the width and we need to correct visible range because of fixing left edge\n    // we need to check the previous visible range rather than the new one\n    // because it might be updated by changing width, bar spacing, etc\n    // but we need to try to keep the same range\n    const previousVisibleRange = this._internal_visibleLogicalRange();\n    const oldWidth = this._private__width;\n    this._private__width = newWidth;\n    this._private__visibleRangeInvalidated = true;\n    if (this._private__options.lockVisibleTimeRangeOnResize && oldWidth !== 0) {\n      // recalculate bar spacing\n      const newBarSpacing = this._private__barSpacing * newWidth / oldWidth;\n      this._private__barSpacing = newBarSpacing;\n    }\n    // if time scale is scrolled to the end of data and we have fixed right edge\n    // keep left edge instead of right\n    // we need it to avoid \"shaking\" if the last bar visibility affects time scale width\n    if (this._private__options.fixLeftEdge) {\n      // note that logical left range means not the middle of a bar (it's the left border)\n      if (previousVisibleRange !== null && previousVisibleRange._internal_left() <= 0) {\n        const delta = oldWidth - newWidth;\n        // reduce  _rightOffset means move right\n        // we could move more than required - this will be fixed by _correctOffset()\n        this._private__rightOffset -= Math.round(delta / this._private__barSpacing) + 1;\n        this._private__visibleRangeInvalidated = true;\n      }\n    }\n    // updating bar spacing should be first because right offset depends on it\n    this._private__correctBarSpacing();\n    this._private__correctOffset();\n  }\n  _internal_indexToCoordinate(index) {\n    if (this._internal_isEmpty() || !isInteger(index)) {\n      return 0;\n    }\n    const baseIndex = this._internal_baseIndex();\n    const deltaFromRight = baseIndex + this._private__rightOffset - index;\n    const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n    return coordinate;\n  }\n  _internal_indexesToCoordinates(points, visibleRange) {\n    const baseIndex = this._internal_baseIndex();\n    const indexFrom = visibleRange === undefined ? 0 : visibleRange.from;\n    const indexTo = visibleRange === undefined ? points.length : visibleRange.to;\n    for (let i = indexFrom; i < indexTo; i++) {\n      const index = points[i]._internal_time;\n      const deltaFromRight = baseIndex + this._private__rightOffset - index;\n      const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n      points[i]._internal_x = coordinate;\n    }\n  }\n  _internal_coordinateToIndex(x) {\n    return Math.ceil(this._private__coordinateToFloatIndex(x));\n  }\n  _internal_setRightOffset(offset) {\n    this._private__visibleRangeInvalidated = true;\n    this._private__rightOffset = offset;\n    this._private__correctOffset();\n    this._private__model._internal_recalculateAllPanes();\n    this._private__model._internal_lightUpdate();\n  }\n  _internal_barSpacing() {\n    return this._private__barSpacing;\n  }\n  _internal_setBarSpacing(newBarSpacing) {\n    this._private__setBarSpacing(newBarSpacing);\n    // do not allow scroll out of visible bars\n    this._private__correctOffset();\n    this._private__model._internal_recalculateAllPanes();\n    this._private__model._internal_lightUpdate();\n  }\n  _internal_rightOffset() {\n    return this._private__rightOffset;\n  }\n  // eslint-disable-next-line complexity\n  _internal_marks() {\n    if (this._internal_isEmpty()) {\n      return null;\n    }\n    if (this._private__timeMarksCache !== null) {\n      return this._private__timeMarksCache;\n    }\n    const spacing = this._private__barSpacing;\n    const fontSize = this._private__model._internal_options().layout.fontSize;\n    const pixelsPer8Characters = (fontSize + 4) * 5;\n    const pixelsPerCharacter = pixelsPer8Characters / defaultTickMarkMaxCharacterLength;\n    const maxLabelWidth = pixelsPerCharacter * (this._private__options.tickMarkMaxCharacterLength || defaultTickMarkMaxCharacterLength);\n    const indexPerLabel = Math.round(maxLabelWidth / spacing);\n    const visibleBars = ensureNotNull(this._internal_visibleStrictRange());\n    const firstBar = Math.max(visibleBars._internal_left(), visibleBars._internal_left() - indexPerLabel);\n    const lastBar = Math.max(visibleBars._internal_right(), visibleBars._internal_right() - indexPerLabel);\n    const items = this._private__tickMarks._internal_build(spacing, maxLabelWidth);\n    // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second label on time scale\"\n    const earliestIndexOfSecondLabel = this._private__firstIndex() + indexPerLabel;\n    // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second last label on time scale\"\n    const indexOfSecondLastLabel = this._private__lastIndex() - indexPerLabel;\n    const isAllScalingAndScrollingDisabled = this._private__isAllScalingAndScrollingDisabled();\n    const isLeftEdgeFixed = this._private__options.fixLeftEdge || isAllScalingAndScrollingDisabled;\n    const isRightEdgeFixed = this._private__options.fixRightEdge || isAllScalingAndScrollingDisabled;\n    let targetIndex = 0;\n    for (const tm of items) {\n      if (!(firstBar <= tm.index && tm.index <= lastBar)) {\n        continue;\n      }\n      let label;\n      if (targetIndex < this._private__labels.length) {\n        label = this._private__labels[targetIndex];\n        label.coord = this._internal_indexToCoordinate(tm.index);\n        label.label = this._private__formatLabel(tm);\n        label.weight = tm.weight;\n      } else {\n        label = {\n          needAlignCoordinate: false,\n          coord: this._internal_indexToCoordinate(tm.index),\n          label: this._private__formatLabel(tm),\n          weight: tm.weight\n        };\n        this._private__labels.push(label);\n      }\n      if (this._private__barSpacing > maxLabelWidth / 2 && !isAllScalingAndScrollingDisabled) {\n        // if there is enough space then let's show all tick marks as usual\n        label.needAlignCoordinate = false;\n      } else {\n        // if a user is able to scroll after a tick mark then show it as usual, otherwise the coordinate might be aligned\n        // if the index is for the second (last) label or later (earlier) then most likely this label might be displayed without correcting the coordinate\n        label.needAlignCoordinate = isLeftEdgeFixed && tm.index <= earliestIndexOfSecondLabel || isRightEdgeFixed && tm.index >= indexOfSecondLastLabel;\n      }\n      targetIndex++;\n    }\n    this._private__labels.length = targetIndex;\n    this._private__timeMarksCache = this._private__labels;\n    return this._private__labels;\n  }\n  _internal_restoreDefault() {\n    this._private__visibleRangeInvalidated = true;\n    this._internal_setBarSpacing(this._private__options.barSpacing);\n    this._internal_setRightOffset(this._private__options.rightOffset);\n  }\n  _internal_setBaseIndex(baseIndex) {\n    this._private__visibleRangeInvalidated = true;\n    this._private__baseIndexOrNull = baseIndex;\n    this._private__correctOffset();\n    this._private__doFixLeftEdge();\n  }\n  /**\n   * Zoom in/out the scale around a `zoomPoint` on `scale` value.\n   *\n   * @param zoomPoint - X coordinate of the point to apply the zoom.\n   * If `rightBarStaysOnScroll` option is disabled, then will be used to restore right offset.\n   * @param scale - Zoom value (in 1/10 parts of current bar spacing).\n   * Negative value means zoom out, positive - zoom in.\n   */\n  _internal_zoom(zoomPoint, scale) {\n    const floatIndexAtZoomPoint = this._private__coordinateToFloatIndex(zoomPoint);\n    const barSpacing = this._internal_barSpacing();\n    const newBarSpacing = barSpacing + scale * (barSpacing / 10);\n    // zoom in/out bar spacing\n    this._internal_setBarSpacing(newBarSpacing);\n    if (!this._private__options.rightBarStaysOnScroll) {\n      // and then correct right offset to move index under zoomPoint back to its coordinate\n      this._internal_setRightOffset(this._internal_rightOffset() + (floatIndexAtZoomPoint - this._private__coordinateToFloatIndex(zoomPoint)));\n    }\n  }\n  _internal_startScale(x) {\n    if (this._private__scrollStartPoint) {\n      this._internal_endScroll();\n    }\n    if (this._private__scaleStartPoint !== null || this._private__commonTransitionStartState !== null) {\n      return;\n    }\n    if (this._internal_isEmpty()) {\n      return;\n    }\n    this._private__scaleStartPoint = x;\n    this._private__saveCommonTransitionsStartState();\n  }\n  _internal_scaleTo(x) {\n    if (this._private__commonTransitionStartState === null) {\n      return;\n    }\n    const startLengthFromRight = clamp(this._private__width - x, 0, this._private__width);\n    const currentLengthFromRight = clamp(this._private__width - ensureNotNull(this._private__scaleStartPoint), 0, this._private__width);\n    if (startLengthFromRight === 0 || currentLengthFromRight === 0) {\n      return;\n    }\n    this._internal_setBarSpacing(this._private__commonTransitionStartState._internal_barSpacing * startLengthFromRight / currentLengthFromRight);\n  }\n  _internal_endScale() {\n    if (this._private__scaleStartPoint === null) {\n      return;\n    }\n    this._private__scaleStartPoint = null;\n    this._private__clearCommonTransitionsStartState();\n  }\n  _internal_startScroll(x) {\n    if (this._private__scrollStartPoint !== null || this._private__commonTransitionStartState !== null) {\n      return;\n    }\n    if (this._internal_isEmpty()) {\n      return;\n    }\n    this._private__scrollStartPoint = x;\n    this._private__saveCommonTransitionsStartState();\n  }\n  _internal_scrollTo(x) {\n    if (this._private__scrollStartPoint === null) {\n      return;\n    }\n    const shiftInLogical = (this._private__scrollStartPoint - x) / this._internal_barSpacing();\n    this._private__rightOffset = ensureNotNull(this._private__commonTransitionStartState)._internal_rightOffset + shiftInLogical;\n    this._private__visibleRangeInvalidated = true;\n    // do not allow scroll out of visible bars\n    this._private__correctOffset();\n  }\n  _internal_endScroll() {\n    if (this._private__scrollStartPoint === null) {\n      return;\n    }\n    this._private__scrollStartPoint = null;\n    this._private__clearCommonTransitionsStartState();\n  }\n  _internal_scrollToRealTime() {\n    this._internal_scrollToOffsetAnimated(this._private__options.rightOffset);\n  }\n  _internal_scrollToOffsetAnimated(offset, animationDuration = 400 /* Constants.DefaultAnimationDuration */) {\n    if (!isFinite(offset)) {\n      throw new RangeError('offset is required and must be finite number');\n    }\n    if (!isFinite(animationDuration) || animationDuration <= 0) {\n      throw new RangeError('animationDuration (optional) must be finite positive number');\n    }\n    const source = this._private__rightOffset;\n    const animationStart = performance.now();\n    this._private__model._internal_setTimeScaleAnimation({\n      _internal_finished: time => (time - animationStart) / animationDuration >= 1,\n      _internal_getPosition: time => {\n        const animationProgress = (time - animationStart) / animationDuration;\n        const finishAnimation = animationProgress >= 1;\n        return finishAnimation ? offset : source + (offset - source) * animationProgress;\n      }\n    });\n  }\n  _internal_update(newPoints, firstChangedPointIndex) {\n    this._private__visibleRangeInvalidated = true;\n    this._private__points = newPoints;\n    this._private__tickMarks._internal_setTimeScalePoints(newPoints, firstChangedPointIndex);\n    this._private__correctOffset();\n  }\n  _internal_visibleBarsChanged() {\n    return this._private__visibleBarsChanged;\n  }\n  _internal_logicalRangeChanged() {\n    return this._private__logicalRangeChanged;\n  }\n  _internal_optionsApplied() {\n    return this._private__optionsApplied;\n  }\n  _internal_baseIndex() {\n    // null is used to known that baseIndex is not set yet\n    // so in methods which should known whether it is set or not\n    // we should check field `_baseIndexOrNull` instead of getter `baseIndex()`\n    // see minRightOffset for example\n    return this._private__baseIndexOrNull || 0;\n  }\n  _internal_setVisibleRange(range) {\n    const length = range._internal_count();\n    this._private__setBarSpacing(this._private__width / length);\n    this._private__rightOffset = range._internal_right() - this._internal_baseIndex();\n    this._private__correctOffset();\n    this._private__visibleRangeInvalidated = true;\n    this._private__model._internal_recalculateAllPanes();\n    this._private__model._internal_lightUpdate();\n  }\n  _internal_fitContent() {\n    const first = this._private__firstIndex();\n    const last = this._private__lastIndex();\n    if (first === null || last === null) {\n      return;\n    }\n    this._internal_setVisibleRange(new RangeImpl(first, last + this._private__options.rightOffset));\n  }\n  _internal_setLogicalRange(range) {\n    const barRange = new RangeImpl(range.from, range.to);\n    this._internal_setVisibleRange(barRange);\n  }\n  _internal_formatDateTime(timeScalePoint) {\n    if (this._private__localizationOptions.timeFormatter !== undefined) {\n      return this._private__localizationOptions.timeFormatter(timeScalePoint.originalTime);\n    }\n    return this._private__horzScaleBehavior.formatHorzItem(timeScalePoint.time);\n  }\n  _private__isAllScalingAndScrollingDisabled() {\n    const {\n      handleScroll,\n      handleScale\n    } = this._private__model._internal_options();\n    return !handleScroll.horzTouchDrag && !handleScroll.mouseWheel && !handleScroll.pressedMouseMove && !handleScroll.vertTouchDrag && !handleScale.axisDoubleClickReset.time && !handleScale.axisPressedMouseMove.time && !handleScale.mouseWheel && !handleScale.pinch;\n  }\n  _private__firstIndex() {\n    return this._private__points.length === 0 ? null : 0;\n  }\n  _private__lastIndex() {\n    return this._private__points.length === 0 ? null : this._private__points.length - 1;\n  }\n  _private__rightOffsetForCoordinate(x) {\n    return (this._private__width - 1 - x) / this._private__barSpacing;\n  }\n  _private__coordinateToFloatIndex(x) {\n    const deltaFromRight = this._private__rightOffsetForCoordinate(x);\n    const baseIndex = this._internal_baseIndex();\n    const index = baseIndex + this._private__rightOffset - deltaFromRight;\n    // JavaScript uses very strange rounding\n    // we need rounding to avoid problems with calculation errors\n    return Math.round(index * 1000000) / 1000000;\n  }\n  _private__setBarSpacing(newBarSpacing) {\n    const oldBarSpacing = this._private__barSpacing;\n    this._private__barSpacing = newBarSpacing;\n    this._private__correctBarSpacing();\n    // this._barSpacing might be changed in _correctBarSpacing\n    if (oldBarSpacing !== this._private__barSpacing) {\n      this._private__visibleRangeInvalidated = true;\n      this._private__resetTimeMarksCache();\n    }\n  }\n  _private__updateVisibleRange() {\n    if (!this._private__visibleRangeInvalidated) {\n      return;\n    }\n    this._private__visibleRangeInvalidated = false;\n    if (this._internal_isEmpty()) {\n      this._private__setVisibleRange(TimeScaleVisibleRange._internal_invalid());\n      return;\n    }\n    const baseIndex = this._internal_baseIndex();\n    const newBarsLength = this._private__width / this._private__barSpacing;\n    const rightBorder = this._private__rightOffset + baseIndex;\n    const leftBorder = rightBorder - newBarsLength + 1;\n    const logicalRange = new RangeImpl(leftBorder, rightBorder);\n    this._private__setVisibleRange(new TimeScaleVisibleRange(logicalRange));\n  }\n  _private__correctBarSpacing() {\n    const minBarSpacing = this._private__minBarSpacing();\n    if (this._private__barSpacing < minBarSpacing) {\n      this._private__barSpacing = minBarSpacing;\n      this._private__visibleRangeInvalidated = true;\n    }\n    if (this._private__width !== 0) {\n      // make sure that this (1 / Constants.MinVisibleBarsCount) >= coeff in max bar spacing (it's 0.5 here)\n      const maxBarSpacing = this._private__width * 0.5;\n      if (this._private__barSpacing > maxBarSpacing) {\n        this._private__barSpacing = maxBarSpacing;\n        this._private__visibleRangeInvalidated = true;\n      }\n    }\n  }\n  _private__minBarSpacing() {\n    // if both options are enabled then limit bar spacing so that zooming-out is not possible\n    // if it would cause either the first or last points to move too far from an edge\n    if (this._private__options.fixLeftEdge && this._private__options.fixRightEdge && this._private__points.length !== 0) {\n      return this._private__width / this._private__points.length;\n    }\n    return this._private__options.minBarSpacing;\n  }\n  _private__correctOffset() {\n    // block scrolling of to future\n    const maxRightOffset = this._private__maxRightOffset();\n    if (this._private__rightOffset > maxRightOffset) {\n      this._private__rightOffset = maxRightOffset;\n      this._private__visibleRangeInvalidated = true;\n    }\n    // block scrolling of to past\n    const minRightOffset = this._private__minRightOffset();\n    if (minRightOffset !== null && this._private__rightOffset < minRightOffset) {\n      this._private__rightOffset = minRightOffset;\n      this._private__visibleRangeInvalidated = true;\n    }\n  }\n  _private__minRightOffset() {\n    const firstIndex = this._private__firstIndex();\n    const baseIndex = this._private__baseIndexOrNull;\n    if (firstIndex === null || baseIndex === null) {\n      return null;\n    }\n    const barsEstimation = this._private__options.fixLeftEdge ? this._private__width / this._private__barSpacing : Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n    return firstIndex - baseIndex - 1 + barsEstimation;\n  }\n  _private__maxRightOffset() {\n    return this._private__options.fixRightEdge ? 0 : this._private__width / this._private__barSpacing - Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n  }\n  _private__saveCommonTransitionsStartState() {\n    this._private__commonTransitionStartState = {\n      _internal_barSpacing: this._internal_barSpacing(),\n      _internal_rightOffset: this._internal_rightOffset()\n    };\n  }\n  _private__clearCommonTransitionsStartState() {\n    this._private__commonTransitionStartState = null;\n  }\n  _private__formatLabel(tickMark) {\n    let formatter = this._private__formattedByWeight.get(tickMark.weight);\n    if (formatter === undefined) {\n      formatter = new FormattedLabelsCache(mark => {\n        return this._private__formatLabelImpl(mark);\n      }, this._private__horzScaleBehavior);\n      this._private__formattedByWeight.set(tickMark.weight, formatter);\n    }\n    return formatter._internal_format(tickMark);\n  }\n  _private__formatLabelImpl(tickMark) {\n    return this._private__horzScaleBehavior.formatTickmark(tickMark, this._private__localizationOptions);\n  }\n  _private__setVisibleRange(newVisibleRange) {\n    const oldVisibleRange = this._private__visibleRange;\n    this._private__visibleRange = newVisibleRange;\n    if (!areRangesEqual(oldVisibleRange._internal_strictRange(), this._private__visibleRange._internal_strictRange())) {\n      this._private__visibleBarsChanged._internal_fire();\n    }\n    if (!areRangesEqual(oldVisibleRange._internal_logicalRange(), this._private__visibleRange._internal_logicalRange())) {\n      this._private__logicalRangeChanged._internal_fire();\n    }\n    // TODO: reset only coords in case when this._visibleBars has not been changed\n    this._private__resetTimeMarksCache();\n  }\n  _private__resetTimeMarksCache() {\n    this._private__timeMarksCache = null;\n  }\n  _private__invalidateTickMarks() {\n    this._private__resetTimeMarksCache();\n    this._private__formattedByWeight.clear();\n  }\n  _private__updateDateTimeFormatter() {\n    this._private__horzScaleBehavior.updateFormatter(this._private__localizationOptions);\n  }\n  _private__doFixLeftEdge() {\n    if (!this._private__options.fixLeftEdge) {\n      return;\n    }\n    const firstIndex = this._private__firstIndex();\n    if (firstIndex === null) {\n      return;\n    }\n    const visibleRange = this._internal_visibleStrictRange();\n    if (visibleRange === null) {\n      return;\n    }\n    const delta = visibleRange._internal_left() - firstIndex;\n    if (delta < 0) {\n      const leftEdgeOffset = this._private__rightOffset - delta - 1;\n      this._internal_setRightOffset(leftEdgeOffset);\n    }\n    this._private__correctBarSpacing();\n  }\n  _private__doFixRightEdge() {\n    this._private__correctOffset();\n    this._private__correctBarSpacing();\n  }\n}\nclass MediaCoordinatesPaneRenderer {\n  _internal_draw(target, isHovered, hitTestData) {\n    target.useMediaCoordinateSpace(scope => this._internal__drawImpl(scope, isHovered, hitTestData));\n  }\n  _internal_drawBackground(target, isHovered, hitTestData) {\n    target.useMediaCoordinateSpace(scope => this._internal__drawBackgroundImpl(scope, isHovered, hitTestData));\n  }\n  _internal__drawBackgroundImpl(renderingScope, isHovered, hitTestData) {}\n}\nclass WatermarkRenderer extends MediaCoordinatesPaneRenderer {\n  constructor(data) {\n    super();\n    this._private__metricsCache = new Map();\n    this._private__data = data;\n  }\n  _internal__drawImpl(renderingScope) {}\n  _internal__drawBackgroundImpl(renderingScope) {\n    if (!this._private__data._internal_visible) {\n      return;\n    }\n    const {\n      context: ctx,\n      mediaSize\n    } = renderingScope;\n    let textHeight = 0;\n    for (const line of this._private__data._internal_lines) {\n      if (line._internal_text.length === 0) {\n        continue;\n      }\n      ctx.font = line._internal_font;\n      const textWidth = this._private__metrics(ctx, line._internal_text);\n      if (textWidth > mediaSize.width) {\n        line._internal_zoom = mediaSize.width / textWidth;\n      } else {\n        line._internal_zoom = 1;\n      }\n      textHeight += line._internal_lineHeight * line._internal_zoom;\n    }\n    let vertOffset = 0;\n    switch (this._private__data._internal_vertAlign) {\n      case 'top':\n        vertOffset = 0;\n        break;\n      case 'center':\n        vertOffset = Math.max((mediaSize.height - textHeight) / 2, 0);\n        break;\n      case 'bottom':\n        vertOffset = Math.max(mediaSize.height - textHeight, 0);\n        break;\n    }\n    ctx.fillStyle = this._private__data._internal_color;\n    for (const line of this._private__data._internal_lines) {\n      ctx.save();\n      let horzOffset = 0;\n      switch (this._private__data._internal_horzAlign) {\n        case 'left':\n          ctx.textAlign = 'left';\n          horzOffset = line._internal_lineHeight / 2;\n          break;\n        case 'center':\n          ctx.textAlign = 'center';\n          horzOffset = mediaSize.width / 2;\n          break;\n        case 'right':\n          ctx.textAlign = 'right';\n          horzOffset = mediaSize.width - 1 - line._internal_lineHeight / 2;\n          break;\n      }\n      ctx.translate(horzOffset, vertOffset);\n      ctx.textBaseline = 'top';\n      ctx.font = line._internal_font;\n      ctx.scale(line._internal_zoom, line._internal_zoom);\n      ctx.fillText(line._internal_text, 0, line._internal_vertOffset);\n      ctx.restore();\n      vertOffset += line._internal_lineHeight * line._internal_zoom;\n    }\n  }\n  _private__metrics(ctx, text) {\n    const fontCache = this._private__fontCache(ctx.font);\n    let result = fontCache.get(text);\n    if (result === undefined) {\n      result = ctx.measureText(text).width;\n      fontCache.set(text, result);\n    }\n    return result;\n  }\n  _private__fontCache(font) {\n    let fontCache = this._private__metricsCache.get(font);\n    if (fontCache === undefined) {\n      fontCache = new Map();\n      this._private__metricsCache.set(font, fontCache);\n    }\n    return fontCache;\n  }\n}\nclass WatermarkPaneView {\n  constructor(source) {\n    this._private__invalidated = true;\n    this._private__rendererData = {\n      _internal_visible: false,\n      _internal_color: '',\n      _internal_lines: [],\n      _internal_vertAlign: 'center',\n      _internal_horzAlign: 'center'\n    };\n    this._private__renderer = new WatermarkRenderer(this._private__rendererData);\n    this._private__source = source;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n    }\n    return this._private__renderer;\n  }\n  _private__updateImpl() {\n    const options = this._private__source._internal_options();\n    const data = this._private__rendererData;\n    data._internal_visible = options.visible;\n    if (!data._internal_visible) {\n      return;\n    }\n    data._internal_color = options.color;\n    data._internal_horzAlign = options.horzAlign;\n    data._internal_vertAlign = options.vertAlign;\n    data._internal_lines = [{\n      _internal_text: options.text,\n      _internal_font: makeFont(options.fontSize, options.fontFamily, options.fontStyle),\n      _internal_lineHeight: options.fontSize * 1.2,\n      _internal_vertOffset: 0,\n      _internal_zoom: 0\n    }];\n  }\n}\nclass Watermark extends DataSource {\n  constructor(model, options) {\n    super();\n    this._private__options = options;\n    this._private__paneView = new WatermarkPaneView(this);\n  }\n  _internal_priceAxisViews() {\n    return [];\n  }\n  _internal_paneViews() {\n    return [this._private__paneView];\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_updateAllViews() {\n    this._private__paneView._internal_update();\n  }\n}\n\n/// <reference types=\"_build-time-constants\" />\n/**\n * Determine how to exit the tracking mode.\n *\n * By default, mobile users will long press to deactivate the scroll and have the ability to check values and dates.\n * Another press is required to activate the scroll, be able to move left/right, zoom, etc.\n */\nvar TrackingModeExitMode;\n(function (TrackingModeExitMode) {\n  /**\n   * Tracking Mode will be deactivated on touch end event.\n   */\n  TrackingModeExitMode[TrackingModeExitMode[\"OnTouchEnd\"] = 0] = \"OnTouchEnd\";\n  /**\n   * Tracking Mode will be deactivated on the next tap event.\n   */\n  TrackingModeExitMode[TrackingModeExitMode[\"OnNextTap\"] = 1] = \"OnNextTap\";\n})(TrackingModeExitMode || (TrackingModeExitMode = {}));\nclass ChartModel {\n  constructor(invalidateHandler, options, horzScaleBehavior) {\n    this._private__panes = [];\n    this._private__serieses = [];\n    this._private__width = 0;\n    this._private__hoveredSource = null;\n    this._private__priceScalesOptionsChanged = new Delegate();\n    this._private__crosshairMoved = new Delegate();\n    this._private__gradientColorsCache = null;\n    this._private__invalidateHandler = invalidateHandler;\n    this._private__options = options;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._private__rendererOptionsProvider = new PriceAxisRendererOptionsProvider(this);\n    this._private__timeScale = new TimeScale(this, options.timeScale, this._private__options.localization, horzScaleBehavior);\n    this._private__crosshair = new Crosshair(this, options.crosshair);\n    this._private__magnet = new Magnet(options.crosshair);\n    this._private__watermark = new Watermark(this, options.watermark);\n    this._internal_createPane();\n    this._private__panes[0]._internal_setStretchFactor(DEFAULT_STRETCH_FACTOR * 2);\n    this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n    this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n  }\n  _internal_fullUpdate() {\n    this._private__invalidate(InvalidateMask._internal_full());\n  }\n  _internal_lightUpdate() {\n    this._private__invalidate(InvalidateMask._internal_light());\n  }\n  _internal_cursorUpdate() {\n    this._private__invalidate(new InvalidateMask(1 /* InvalidationLevel.Cursor */));\n  }\n  _internal_updateSource(source) {\n    const inv = this._private__invalidationMaskForSource(source);\n    this._private__invalidate(inv);\n  }\n  _internal_hoveredSource() {\n    return this._private__hoveredSource;\n  }\n  _internal_setHoveredSource(source) {\n    const prevSource = this._private__hoveredSource;\n    this._private__hoveredSource = source;\n    if (prevSource !== null) {\n      this._internal_updateSource(prevSource._internal_source);\n    }\n    if (source !== null) {\n      this._internal_updateSource(source._internal_source);\n    }\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_applyOptions(options) {\n    merge(this._private__options, options);\n    this._private__panes.forEach(p => p._internal_applyScaleOptions(options));\n    if (options.timeScale !== undefined) {\n      this._private__timeScale._internal_applyOptions(options.timeScale);\n    }\n    if (options.localization !== undefined) {\n      this._private__timeScale._internal_applyLocalizationOptions(options.localization);\n    }\n    if (options.leftPriceScale || options.rightPriceScale) {\n      this._private__priceScalesOptionsChanged._internal_fire();\n    }\n    this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n    this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n    this._internal_fullUpdate();\n  }\n  _internal_applyPriceScaleOptions(priceScaleId, options) {\n    if (priceScaleId === \"left\" /* DefaultPriceScaleId.Left */) {\n      this._internal_applyOptions({\n        leftPriceScale: options\n      });\n      return;\n    } else if (priceScaleId === \"right\" /* DefaultPriceScaleId.Right */) {\n      this._internal_applyOptions({\n        rightPriceScale: options\n      });\n      return;\n    }\n    const res = this._internal_findPriceScale(priceScaleId);\n    if (res === null) {\n      {\n        throw new Error(`Trying to apply price scale options with incorrect ID: ${priceScaleId}`);\n      }\n    }\n    res._internal_priceScale._internal_applyOptions(options);\n    this._private__priceScalesOptionsChanged._internal_fire();\n  }\n  _internal_findPriceScale(priceScaleId) {\n    for (const pane of this._private__panes) {\n      const priceScale = pane._internal_priceScaleById(priceScaleId);\n      if (priceScale !== null) {\n        return {\n          _internal_pane: pane,\n          _internal_priceScale: priceScale\n        };\n      }\n    }\n    return null;\n  }\n  _internal_timeScale() {\n    return this._private__timeScale;\n  }\n  _internal_panes() {\n    return this._private__panes;\n  }\n  _internal_watermarkSource() {\n    return this._private__watermark;\n  }\n  _internal_crosshairSource() {\n    return this._private__crosshair;\n  }\n  _internal_crosshairMoved() {\n    return this._private__crosshairMoved;\n  }\n  _internal_setPaneHeight(pane, height) {\n    pane._internal_setHeight(height);\n    this._internal_recalculateAllPanes();\n  }\n  _internal_setWidth(width) {\n    this._private__width = width;\n    this._private__timeScale._internal_setWidth(this._private__width);\n    this._private__panes.forEach(pane => pane._internal_setWidth(width));\n    this._internal_recalculateAllPanes();\n  }\n  _internal_createPane(index) {\n    const pane = new Pane(this._private__timeScale, this);\n    if (index !== undefined) {\n      this._private__panes.splice(index, 0, pane);\n    } else {\n      // adding to the end - common case\n      this._private__panes.push(pane);\n    }\n    const actualIndex = index === undefined ? this._private__panes.length - 1 : index;\n    // we always do autoscaling on the creation\n    // if autoscale option is true, it is ok, just recalculate by invalidation mask\n    // if autoscale option is false, autoscale anyway on the first draw\n    // also there is a scenario when autoscale is true in constructor and false later on applyOptions\n    const mask = InvalidateMask._internal_full();\n    mask._internal_invalidatePane(actualIndex, {\n      _internal_level: 0 /* InvalidationLevel.None */,\n      _internal_autoScale: true\n    });\n    this._private__invalidate(mask);\n    return pane;\n  }\n  _internal_startScalePrice(pane, priceScale, x) {\n    pane._internal_startScalePrice(priceScale, x);\n  }\n  _internal_scalePriceTo(pane, priceScale, x) {\n    pane._internal_scalePriceTo(priceScale, x);\n    this._internal_updateCrosshair();\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n  _internal_endScalePrice(pane, priceScale) {\n    pane._internal_endScalePrice(priceScale);\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n  _internal_startScrollPrice(pane, priceScale, x) {\n    if (priceScale._internal_isAutoScale()) {\n      return;\n    }\n    pane._internal_startScrollPrice(priceScale, x);\n  }\n  _internal_scrollPriceTo(pane, priceScale, x) {\n    if (priceScale._internal_isAutoScale()) {\n      return;\n    }\n    pane._internal_scrollPriceTo(priceScale, x);\n    this._internal_updateCrosshair();\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n  _internal_endScrollPrice(pane, priceScale) {\n    if (priceScale._internal_isAutoScale()) {\n      return;\n    }\n    pane._internal_endScrollPrice(priceScale);\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n  _internal_resetPriceScale(pane, priceScale) {\n    pane._internal_resetPriceScale(priceScale);\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n  _internal_startScaleTime(position) {\n    this._private__timeScale._internal_startScale(position);\n  }\n  /**\n   * Zoom in/out the chart (depends on scale value).\n   *\n   * @param pointX - X coordinate of the point to apply the zoom (the point which should stay on its place)\n   * @param scale - Zoom value. Negative value means zoom out, positive - zoom in.\n   */\n  _internal_zoomTime(pointX, scale) {\n    const timeScale = this._internal_timeScale();\n    if (timeScale._internal_isEmpty() || scale === 0) {\n      return;\n    }\n    const timeScaleWidth = timeScale._internal_width();\n    pointX = Math.max(1, Math.min(pointX, timeScaleWidth));\n    timeScale._internal_zoom(pointX, scale);\n    this._internal_recalculateAllPanes();\n  }\n  _internal_scrollChart(x) {\n    this._internal_startScrollTime(0);\n    this._internal_scrollTimeTo(x);\n    this._internal_endScrollTime();\n  }\n  _internal_scaleTimeTo(x) {\n    this._private__timeScale._internal_scaleTo(x);\n    this._internal_recalculateAllPanes();\n  }\n  _internal_endScaleTime() {\n    this._private__timeScale._internal_endScale();\n    this._internal_lightUpdate();\n  }\n  _internal_startScrollTime(x) {\n    this._private__timeScale._internal_startScroll(x);\n  }\n  _internal_scrollTimeTo(x) {\n    this._private__timeScale._internal_scrollTo(x);\n    this._internal_recalculateAllPanes();\n  }\n  _internal_endScrollTime() {\n    this._private__timeScale._internal_endScroll();\n    this._internal_lightUpdate();\n  }\n  _internal_serieses() {\n    return this._private__serieses;\n  }\n  _internal_setAndSaveCurrentPosition(x, y, event, pane, skipEvent) {\n    this._private__crosshair._internal_saveOriginCoord(x, y);\n    let price = NaN;\n    let index = this._private__timeScale._internal_coordinateToIndex(x);\n    const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n    if (visibleBars !== null) {\n      index = Math.min(Math.max(visibleBars._internal_left(), index), visibleBars._internal_right());\n    }\n    const priceScale = pane._internal_defaultPriceScale();\n    const firstValue = priceScale._internal_firstValue();\n    if (firstValue !== null) {\n      price = priceScale._internal_coordinateToPrice(y, firstValue);\n    }\n    price = this._private__magnet._internal_align(price, index, pane);\n    this._private__crosshair._internal_setPosition(index, price, pane);\n    this._internal_cursorUpdate();\n    if (!skipEvent) {\n      this._private__crosshairMoved._internal_fire(this._private__crosshair._internal_appliedIndex(), {\n        x,\n        y\n      }, event);\n    }\n  }\n  // A position provided external (not from an internal event listener)\n  _internal_setAndSaveSyntheticPosition(price, horizontalPosition, pane) {\n    const priceScale = pane._internal_defaultPriceScale();\n    const firstValue = priceScale._internal_firstValue();\n    const y = priceScale._internal_priceToCoordinate(price, ensureNotNull(firstValue));\n    const index = this._private__timeScale._internal_timeToIndex(horizontalPosition, true);\n    const x = this._private__timeScale._internal_indexToCoordinate(ensureNotNull(index));\n    this._internal_setAndSaveCurrentPosition(x, y, null, pane, true);\n  }\n  _internal_clearCurrentPosition(skipEvent) {\n    const crosshair = this._internal_crosshairSource();\n    crosshair._internal_clearPosition();\n    this._internal_cursorUpdate();\n    if (!skipEvent) {\n      this._private__crosshairMoved._internal_fire(null, null, null);\n    }\n  }\n  _internal_updateCrosshair() {\n    // apply magnet\n    const pane = this._private__crosshair._internal_pane();\n    if (pane !== null) {\n      const x = this._private__crosshair._internal_originCoordX();\n      const y = this._private__crosshair._internal_originCoordY();\n      this._internal_setAndSaveCurrentPosition(x, y, null, pane);\n    }\n    this._private__crosshair._internal_updateAllViews();\n  }\n  _internal_updateTimeScale(newBaseIndex, newPoints, firstChangedPointIndex) {\n    const oldFirstTime = this._private__timeScale._internal_indexToTime(0);\n    if (newPoints !== undefined && firstChangedPointIndex !== undefined) {\n      this._private__timeScale._internal_update(newPoints, firstChangedPointIndex);\n    }\n    const newFirstTime = this._private__timeScale._internal_indexToTime(0);\n    const currentBaseIndex = this._private__timeScale._internal_baseIndex();\n    const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n    // if time scale cannot return current visible bars range (e.g. time scale has zero-width)\n    // then we do not need to update right offset to shift visible bars range to have the same right offset as we have before new bar\n    // (and actually we cannot)\n    if (visibleBars !== null && oldFirstTime !== null && newFirstTime !== null) {\n      const isLastSeriesBarVisible = visibleBars._internal_contains(currentBaseIndex);\n      const isLeftBarShiftToLeft = this._private__horzScaleBehavior.key(oldFirstTime) > this._private__horzScaleBehavior.key(newFirstTime);\n      const isSeriesPointsAdded = newBaseIndex !== null && newBaseIndex > currentBaseIndex;\n      const isSeriesPointsAddedToRight = isSeriesPointsAdded && !isLeftBarShiftToLeft;\n      const allowShiftWhenReplacingWhitespace = this._private__timeScale._internal_options().allowShiftVisibleRangeOnWhitespaceReplacement;\n      const replacedExistingWhitespace = firstChangedPointIndex === undefined;\n      const needShiftVisibleRangeOnNewBar = isLastSeriesBarVisible && (!replacedExistingWhitespace || allowShiftWhenReplacingWhitespace) && this._private__timeScale._internal_options().shiftVisibleRangeOnNewBar;\n      if (isSeriesPointsAddedToRight && !needShiftVisibleRangeOnNewBar) {\n        const compensationShift = newBaseIndex - currentBaseIndex;\n        this._private__timeScale._internal_setRightOffset(this._private__timeScale._internal_rightOffset() - compensationShift);\n      }\n    }\n    this._private__timeScale._internal_setBaseIndex(newBaseIndex);\n  }\n  _internal_recalculatePane(pane) {\n    if (pane !== null) {\n      pane._internal_recalculate();\n    }\n  }\n  _internal_paneForSource(source) {\n    const pane = this._private__panes.find(p => p._internal_orderedSources().includes(source));\n    return pane === undefined ? null : pane;\n  }\n  _internal_recalculateAllPanes() {\n    this._private__watermark._internal_updateAllViews();\n    this._private__panes.forEach(p => p._internal_recalculate());\n    this._internal_updateCrosshair();\n  }\n  _internal_destroy() {\n    this._private__panes.forEach(p => p._internal_destroy());\n    this._private__panes.length = 0;\n    // to avoid memleaks\n    this._private__options.localization.priceFormatter = undefined;\n    this._private__options.localization.percentageFormatter = undefined;\n    this._private__options.localization.timeFormatter = undefined;\n  }\n  _internal_rendererOptionsProvider() {\n    return this._private__rendererOptionsProvider;\n  }\n  _internal_priceAxisRendererOptions() {\n    return this._private__rendererOptionsProvider._internal_options();\n  }\n  _internal_priceScalesOptionsChanged() {\n    return this._private__priceScalesOptionsChanged;\n  }\n  _internal_createSeries(seriesType, options, customPaneView) {\n    const pane = this._private__panes[0];\n    const series = this._private__createSeries(options, seriesType, pane, customPaneView);\n    this._private__serieses.push(series);\n    if (this._private__serieses.length === 1) {\n      // call fullUpdate to recalculate chart's parts geometry\n      this._internal_fullUpdate();\n    } else {\n      this._internal_lightUpdate();\n    }\n    return series;\n  }\n  _internal_removeSeries(series) {\n    const pane = this._internal_paneForSource(series);\n    const seriesIndex = this._private__serieses.indexOf(series);\n    assert(seriesIndex !== -1, 'Series not found');\n    this._private__serieses.splice(seriesIndex, 1);\n    ensureNotNull(pane)._internal_removeDataSource(series);\n    if (series._internal_destroy) {\n      series._internal_destroy();\n    }\n  }\n  _internal_moveSeriesToScale(series, targetScaleId) {\n    const pane = ensureNotNull(this._internal_paneForSource(series));\n    pane._internal_removeDataSource(series);\n    // check if targetScaleId exists\n    const target = this._internal_findPriceScale(targetScaleId);\n    if (target === null) {\n      // new scale on the same pane\n      const zOrder = series._internal_zorder();\n      pane._internal_addDataSource(series, targetScaleId, zOrder);\n    } else {\n      // if move to the new scale of the same pane, keep zorder\n      // if move to new pane\n      const zOrder = target._internal_pane === pane ? series._internal_zorder() : undefined;\n      target._internal_pane._internal_addDataSource(series, targetScaleId, zOrder);\n    }\n  }\n  _internal_fitContent() {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_setFitContent();\n    this._private__invalidate(mask);\n  }\n  _internal_setTargetLogicalRange(range) {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_applyRange(range);\n    this._private__invalidate(mask);\n  }\n  _internal_resetTimeScale() {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_resetTimeScale();\n    this._private__invalidate(mask);\n  }\n  _internal_setBarSpacing(spacing) {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_setBarSpacing(spacing);\n    this._private__invalidate(mask);\n  }\n  _internal_setRightOffset(offset) {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_setRightOffset(offset);\n    this._private__invalidate(mask);\n  }\n  _internal_setTimeScaleAnimation(animation) {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_setTimeScaleAnimation(animation);\n    this._private__invalidate(mask);\n  }\n  _internal_stopTimeScaleAnimation() {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_stopTimeScaleAnimation();\n    this._private__invalidate(mask);\n  }\n  _internal_defaultVisiblePriceScaleId() {\n    return this._private__options.rightPriceScale.visible ? \"right\" /* DefaultPriceScaleId.Right */ : \"left\" /* DefaultPriceScaleId.Left */;\n  }\n  _internal_backgroundBottomColor() {\n    return this._private__backgroundBottomColor;\n  }\n  _internal_backgroundTopColor() {\n    return this._private__backgroundTopColor;\n  }\n  _internal_backgroundColorAtYPercentFromTop(percent) {\n    const bottomColor = this._private__backgroundBottomColor;\n    const topColor = this._private__backgroundTopColor;\n    if (bottomColor === topColor) {\n      // solid background\n      return bottomColor;\n    }\n    // gradient background\n    // percent should be from 0 to 100 (we're using only integer values to make cache more efficient)\n    percent = Math.max(0, Math.min(100, Math.round(percent * 100)));\n    if (this._private__gradientColorsCache === null || this._private__gradientColorsCache._internal_topColor !== topColor || this._private__gradientColorsCache._internal_bottomColor !== bottomColor) {\n      this._private__gradientColorsCache = {\n        _internal_topColor: topColor,\n        _internal_bottomColor: bottomColor,\n        _internal_colors: new Map()\n      };\n    } else {\n      const cachedValue = this._private__gradientColorsCache._internal_colors.get(percent);\n      if (cachedValue !== undefined) {\n        return cachedValue;\n      }\n    }\n    const result = gradientColorAtPercent(topColor, bottomColor, percent / 100);\n    this._private__gradientColorsCache._internal_colors.set(percent, result);\n    return result;\n  }\n  _private__paneInvalidationMask(pane, level) {\n    const inv = new InvalidateMask(level);\n    if (pane !== null) {\n      const index = this._private__panes.indexOf(pane);\n      inv._internal_invalidatePane(index, {\n        _internal_level: level\n      });\n    }\n    return inv;\n  }\n  _private__invalidationMaskForSource(source, invalidateType) {\n    if (invalidateType === undefined) {\n      invalidateType = 2 /* InvalidationLevel.Light */;\n    }\n    return this._private__paneInvalidationMask(this._internal_paneForSource(source), invalidateType);\n  }\n  _private__invalidate(mask) {\n    if (this._private__invalidateHandler) {\n      this._private__invalidateHandler(mask);\n    }\n    this._private__panes.forEach(pane => pane._internal_grid()._internal_paneView()._internal_update());\n  }\n  _private__createSeries(options, seriesType, pane, customPaneView) {\n    const series = new Series(this, options, seriesType, pane, customPaneView);\n    const targetScaleId = options.priceScaleId !== undefined ? options.priceScaleId : this._internal_defaultVisiblePriceScaleId();\n    pane._internal_addDataSource(series, targetScaleId);\n    if (!isDefaultPriceScale(targetScaleId)) {\n      // let's apply that options again to apply margins\n      series._internal_applyOptions(options);\n    }\n    return series;\n  }\n  _private__getBackgroundColor(side) {\n    const layoutOptions = this._private__options.layout;\n    if (layoutOptions.background.type === \"gradient\" /* ColorType.VerticalGradient */) {\n      return side === 0 /* BackgroundColorSide.Top */ ? layoutOptions.background.topColor : layoutOptions.background.bottomColor;\n    }\n    return layoutOptions.background.color;\n  }\n}\nfunction fillUpDownCandlesticksColors(options) {\n  if (options.borderColor !== undefined) {\n    options.borderUpColor = options.borderColor;\n    options.borderDownColor = options.borderColor;\n  }\n  if (options.wickColor !== undefined) {\n    options.wickUpColor = options.wickColor;\n    options.wickDownColor = options.wickColor;\n  }\n}\n/**\n * Represents the type of the last price animation for series such as area or line.\n */\nvar LastPriceAnimationMode;\n(function (LastPriceAnimationMode) {\n  /**\n   * Animation is always disabled\n   */\n  LastPriceAnimationMode[LastPriceAnimationMode[\"Disabled\"] = 0] = \"Disabled\";\n  /**\n   * Animation is always enabled.\n   */\n  LastPriceAnimationMode[LastPriceAnimationMode[\"Continuous\"] = 1] = \"Continuous\";\n  /**\n   * Animation is active after new data.\n   */\n  LastPriceAnimationMode[LastPriceAnimationMode[\"OnDataUpdate\"] = 2] = \"OnDataUpdate\";\n})(LastPriceAnimationMode || (LastPriceAnimationMode = {}));\nfunction precisionByMinMove(minMove) {\n  if (minMove >= 1) {\n    return 0;\n  }\n  let i = 0;\n  for (; i < 8; i++) {\n    const intPart = Math.round(minMove);\n    const fractPart = Math.abs(intPart - minMove);\n    if (fractPart < 1e-8) {\n      return i;\n    }\n    minMove = minMove * 10;\n  }\n  return i;\n}\n/**\n * Represents the source of data to be used for the horizontal price line.\n */\nvar PriceLineSource;\n(function (PriceLineSource) {\n  /**\n   * Use the last bar data.\n   */\n  PriceLineSource[PriceLineSource[\"LastBar\"] = 0] = \"LastBar\";\n  /**\n   * Use the last visible data of the chart viewport.\n   */\n  PriceLineSource[PriceLineSource[\"LastVisible\"] = 1] = \"LastVisible\";\n})(PriceLineSource || (PriceLineSource = {}));\n\n/**\n * Represents a type of color.\n */\nvar ColorType;\n(function (ColorType) {\n  /** Solid color */\n  ColorType[\"Solid\"] = \"solid\";\n  /** Vertical gradient color */\n  ColorType[\"VerticalGradient\"] = \"gradient\";\n})(ColorType || (ColorType = {}));\n\n/**\n * Check if a time value is a business day object.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link BusinessDay} object, false otherwise.\n */\nfunction isBusinessDay(time) {\n  return !isNumber(time) && !isString(time);\n}\n/**\n * Check if a time value is a UTC timestamp number.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link UTCTimestamp} number, false otherwise.\n */\nfunction isUTCTimestamp(time) {\n  return isNumber(time);\n}\n/**\n * Represents the type of a tick mark on the time axis.\n */\nvar TickMarkType;\n(function (TickMarkType) {\n  /**\n   * The start of the year (e.g. it's the first tick mark in a year).\n   */\n  TickMarkType[TickMarkType[\"Year\"] = 0] = \"Year\";\n  /**\n   * The start of the month (e.g. it's the first tick mark in a month).\n   */\n  TickMarkType[TickMarkType[\"Month\"] = 1] = \"Month\";\n  /**\n   * A day of the month.\n   */\n  TickMarkType[TickMarkType[\"DayOfMonth\"] = 2] = \"DayOfMonth\";\n  /**\n   * A time without seconds.\n   */\n  TickMarkType[TickMarkType[\"Time\"] = 3] = \"Time\";\n  /**\n   * A time with seconds.\n   */\n  TickMarkType[TickMarkType[\"TimeWithSeconds\"] = 4] = \"TimeWithSeconds\";\n})(TickMarkType || (TickMarkType = {}));\nconst getMonth = date => date.getUTCMonth() + 1;\nconst getDay = date => date.getUTCDate();\nconst getYear = date => date.getUTCFullYear();\nconst dd = date => numberToStringWithLeadingZero(getDay(date), 2);\nconst MMMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1).toLocaleString(locale, {\n  month: 'long'\n});\nconst MMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1).toLocaleString(locale, {\n  month: 'short'\n});\nconst MM = date => numberToStringWithLeadingZero(getMonth(date), 2);\nconst yy = date => numberToStringWithLeadingZero(getYear(date) % 100, 2);\nconst yyyy = date => numberToStringWithLeadingZero(getYear(date), 4);\nfunction formatDate(date, format, locale) {\n  return format.replace(/yyyy/g, yyyy(date)).replace(/yy/g, yy(date)).replace(/MMMM/g, MMMM(date, locale)).replace(/MMM/g, MMM(date, locale)).replace(/MM/g, MM(date)).replace(/dd/g, dd(date));\n}\nclass DateFormatter {\n  constructor(dateFormat = 'yyyy-MM-dd', locale = 'default') {\n    this._private__dateFormat = dateFormat;\n    this._private__locale = locale;\n  }\n  _internal_format(date) {\n    return formatDate(date, this._private__dateFormat, this._private__locale);\n  }\n}\nclass TimeFormatter {\n  constructor(format) {\n    this._private__formatStr = format || '%h:%m:%s';\n  }\n  _internal_format(date) {\n    return this._private__formatStr.replace('%h', numberToStringWithLeadingZero(date.getUTCHours(), 2)).replace('%m', numberToStringWithLeadingZero(date.getUTCMinutes(), 2)).replace('%s', numberToStringWithLeadingZero(date.getUTCSeconds(), 2));\n  }\n}\nconst defaultParams = {\n  _internal_dateFormat: 'yyyy-MM-dd',\n  _internal_timeFormat: '%h:%m:%s',\n  _internal_dateTimeSeparator: ' ',\n  _internal_locale: 'default'\n};\nclass DateTimeFormatter {\n  constructor(params = {}) {\n    const formatterParams = Object.assign(Object.assign({}, defaultParams), params);\n    this._private__dateFormatter = new DateFormatter(formatterParams._internal_dateFormat, formatterParams._internal_locale);\n    this._private__timeFormatter = new TimeFormatter(formatterParams._internal_timeFormat);\n    this._private__separator = formatterParams._internal_dateTimeSeparator;\n  }\n  _internal_format(dateTime) {\n    return `${this._private__dateFormatter._internal_format(dateTime)}${this._private__separator}${this._private__timeFormatter._internal_format(dateTime)}`;\n  }\n}\nfunction defaultTickMarkFormatter(timePoint, tickMarkType, locale) {\n  const formatOptions = {};\n  switch (tickMarkType) {\n    case 0 /* TickMarkType.Year */:\n      formatOptions.year = 'numeric';\n      break;\n    case 1 /* TickMarkType.Month */:\n      formatOptions.month = 'short';\n      break;\n    case 2 /* TickMarkType.DayOfMonth */:\n      formatOptions.day = 'numeric';\n      break;\n    case 3 /* TickMarkType.Time */:\n      formatOptions.hour12 = false;\n      formatOptions.hour = '2-digit';\n      formatOptions.minute = '2-digit';\n      break;\n    case 4 /* TickMarkType.TimeWithSeconds */:\n      formatOptions.hour12 = false;\n      formatOptions.hour = '2-digit';\n      formatOptions.minute = '2-digit';\n      formatOptions.second = '2-digit';\n      break;\n  }\n  const date = timePoint._internal_businessDay === undefined ? new Date(timePoint._internal_timestamp * 1000) : new Date(Date.UTC(timePoint._internal_businessDay.year, timePoint._internal_businessDay.month - 1, timePoint._internal_businessDay.day));\n  // from given date we should use only as UTC date or timestamp\n  // but to format as locale date we can convert UTC date to local date\n  const localDateFromUtc = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return localDateFromUtc.toLocaleString(locale, formatOptions);\n}\nfunction hours(count) {\n  return count * 60 * 60 * 1000;\n}\nfunction minutes(count) {\n  return count * 60 * 1000;\n}\nfunction seconds(count) {\n  return count * 1000;\n}\nconst intradayWeightDivisors = [{\n  _internal_divisor: seconds(1),\n  _internal_weight: 10 /* TickMarkWeight.Second */\n}, {\n  _internal_divisor: minutes(1),\n  _internal_weight: 20 /* TickMarkWeight.Minute1 */\n}, {\n  _internal_divisor: minutes(5),\n  _internal_weight: 21 /* TickMarkWeight.Minute5 */\n}, {\n  _internal_divisor: minutes(30),\n  _internal_weight: 22 /* TickMarkWeight.Minute30 */\n}, {\n  _internal_divisor: hours(1),\n  _internal_weight: 30 /* TickMarkWeight.Hour1 */\n}, {\n  _internal_divisor: hours(3),\n  _internal_weight: 31 /* TickMarkWeight.Hour3 */\n}, {\n  _internal_divisor: hours(6),\n  _internal_weight: 32 /* TickMarkWeight.Hour6 */\n}, {\n  _internal_divisor: hours(12),\n  _internal_weight: 33 /* TickMarkWeight.Hour12 */\n}];\nfunction weightByTime(currentDate, prevDate) {\n  if (currentDate.getUTCFullYear() !== prevDate.getUTCFullYear()) {\n    return 70 /* TickMarkWeight.Year */;\n  } else if (currentDate.getUTCMonth() !== prevDate.getUTCMonth()) {\n    return 60 /* TickMarkWeight.Month */;\n  } else if (currentDate.getUTCDate() !== prevDate.getUTCDate()) {\n    return 50 /* TickMarkWeight.Day */;\n  }\n  for (let i = intradayWeightDivisors.length - 1; i >= 0; --i) {\n    if (Math.floor(prevDate.getTime() / intradayWeightDivisors[i]._internal_divisor) !== Math.floor(currentDate.getTime() / intradayWeightDivisors[i]._internal_divisor)) {\n      return intradayWeightDivisors[i]._internal_weight;\n    }\n  }\n  return 0 /* TickMarkWeight.LessThanSecond */;\n}\nfunction cast(t) {\n  return t;\n}\nfunction fillWeightsForPoints(sortedTimePoints, startIndex = 0) {\n  if (sortedTimePoints.length === 0) {\n    return;\n  }\n  let prevTime = startIndex === 0 ? null : cast(sortedTimePoints[startIndex - 1].time)._internal_timestamp;\n  let prevDate = prevTime !== null ? new Date(prevTime * 1000) : null;\n  let totalTimeDiff = 0;\n  for (let index = startIndex; index < sortedTimePoints.length; ++index) {\n    const currentPoint = sortedTimePoints[index];\n    const currentDate = new Date(cast(currentPoint.time)._internal_timestamp * 1000);\n    if (prevDate !== null) {\n      currentPoint.timeWeight = weightByTime(currentDate, prevDate);\n    }\n    totalTimeDiff += cast(currentPoint.time)._internal_timestamp - (prevTime || cast(currentPoint.time)._internal_timestamp);\n    prevTime = cast(currentPoint.time)._internal_timestamp;\n    prevDate = currentDate;\n  }\n  if (startIndex === 0 && sortedTimePoints.length > 1) {\n    // let's guess a weight for the first point\n    // let's say the previous point was average time back in the history\n    const averageTimeDiff = Math.ceil(totalTimeDiff / (sortedTimePoints.length - 1));\n    const approxPrevDate = new Date((cast(sortedTimePoints[0].time)._internal_timestamp - averageTimeDiff) * 1000);\n    sortedTimePoints[0].timeWeight = weightByTime(new Date(cast(sortedTimePoints[0].time)._internal_timestamp * 1000), approxPrevDate);\n  }\n}\nfunction businessDayConverter(time) {\n  let businessDay = time;\n  if (isString(time)) {\n    businessDay = stringToBusinessDay(time);\n  }\n  if (!isBusinessDay(businessDay)) {\n    throw new Error('time must be of type BusinessDay');\n  }\n  const date = new Date(Date.UTC(businessDay.year, businessDay.month - 1, businessDay.day, 0, 0, 0, 0));\n  return {\n    _internal_timestamp: Math.round(date.getTime() / 1000),\n    _internal_businessDay: businessDay\n  };\n}\nfunction timestampConverter(time) {\n  if (!isUTCTimestamp(time)) {\n    throw new Error('time must be of type isUTCTimestamp');\n  }\n  return {\n    _internal_timestamp: time\n  };\n}\nfunction selectTimeConverter(data) {\n  if (data.length === 0) {\n    return null;\n  }\n  if (isBusinessDay(data[0].time) || isString(data[0].time)) {\n    return businessDayConverter;\n  }\n  return timestampConverter;\n}\nconst validDateRegex = /^\\d\\d\\d\\d-\\d\\d-\\d\\d$/;\nfunction convertTime(time) {\n  if (isUTCTimestamp(time)) {\n    return timestampConverter(time);\n  }\n  if (!isBusinessDay(time)) {\n    return businessDayConverter(stringToBusinessDay(time));\n  }\n  return businessDayConverter(time);\n}\nfunction stringToBusinessDay(value) {\n  {\n    // in some browsers (I look at your Chrome) the Date constructor may accept invalid date string\n    // but parses them in 'implementation specific' way\n    // for example 2019-1-1 isn't the same as 2019-01-01 (for Chrome both are 'valid' date strings)\n    // see https://bugs.chromium.org/p/chromium/issues/detail?id=968939\n    // so, we need to be sure that date has valid format to avoid strange behavior and hours of debugging\n    // but let's do this in development build only because of perf\n    if (!validDateRegex.test(value)) {\n      throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n    }\n  }\n  const d = new Date(value);\n  if (isNaN(d.getTime())) {\n    throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n  }\n  return {\n    day: d.getUTCDate(),\n    month: d.getUTCMonth() + 1,\n    year: d.getUTCFullYear()\n  };\n}\nfunction convertStringToBusinessDay(value) {\n  if (isString(value.time)) {\n    value.time = stringToBusinessDay(value.time);\n  }\n}\nfunction convertStringsToBusinessDays(data) {\n  return data.forEach(convertStringToBusinessDay);\n}\n\n// eslint-disable-next-line complexity\nfunction weightToTickMarkType(weight, timeVisible, secondsVisible) {\n  switch (weight) {\n    case 0 /* TickMarkWeight.LessThanSecond */:\n    case 10 /* TickMarkWeight.Second */:\n      return timeVisible ? secondsVisible ? 4 /* TickMarkType.TimeWithSeconds */ : 3 /* TickMarkType.Time */ : 2 /* TickMarkType.DayOfMonth */;\n    case 20 /* TickMarkWeight.Minute1 */:\n    case 21 /* TickMarkWeight.Minute5 */:\n    case 22 /* TickMarkWeight.Minute30 */:\n    case 30 /* TickMarkWeight.Hour1 */:\n    case 31 /* TickMarkWeight.Hour3 */:\n    case 32 /* TickMarkWeight.Hour6 */:\n    case 33 /* TickMarkWeight.Hour12 */:\n      return timeVisible ? 3 /* TickMarkType.Time */ : 2 /* TickMarkType.DayOfMonth */;\n    case 50 /* TickMarkWeight.Day */:\n      return 2 /* TickMarkType.DayOfMonth */;\n    case 60 /* TickMarkWeight.Month */:\n      return 1 /* TickMarkType.Month */;\n    case 70 /* TickMarkWeight.Year */:\n      return 0 /* TickMarkType.Year */;\n  }\n}\nclass HorzScaleBehaviorTime {\n  options() {\n    return this._private__options;\n  }\n  setOptions(options) {\n    this._private__options = options;\n    this.updateFormatter(options.localization);\n  }\n  preprocessData(data) {\n    if (Array.isArray(data)) {\n      convertStringsToBusinessDays(data);\n    } else {\n      convertStringToBusinessDay(data);\n    }\n  }\n  createConverterToInternalObj(data) {\n    return ensureNotNull(selectTimeConverter(data));\n  }\n  key(item) {\n    // eslint-disable-next-line no-restricted-syntax\n    if (typeof item === 'object' && \"_internal_timestamp\" in item) {\n      return item._internal_timestamp;\n    } else {\n      return this.key(this.convertHorzItemToInternal(item));\n    }\n  }\n  cacheKey(item) {\n    const time = item;\n    return time._internal_businessDay === undefined ? new Date(time._internal_timestamp * 1000).getTime() : new Date(Date.UTC(time._internal_businessDay.year, time._internal_businessDay.month - 1, time._internal_businessDay.day)).getTime();\n  }\n  convertHorzItemToInternal(item) {\n    return convertTime(item);\n  }\n  updateFormatter(options) {\n    if (!this._private__options) {\n      return;\n    }\n    const dateFormat = options.dateFormat;\n    if (this._private__options.timeScale.timeVisible) {\n      this._private__dateTimeFormatter = new DateTimeFormatter({\n        _internal_dateFormat: dateFormat,\n        _internal_timeFormat: this._private__options.timeScale.secondsVisible ? '%h:%m:%s' : '%h:%m',\n        _internal_dateTimeSeparator: '   ',\n        _internal_locale: options.locale\n      });\n    } else {\n      this._private__dateTimeFormatter = new DateFormatter(dateFormat, options.locale);\n    }\n  }\n  formatHorzItem(item) {\n    const tp = item;\n    return this._private__dateTimeFormatter._internal_format(new Date(tp._internal_timestamp * 1000));\n  }\n  formatTickmark(tickMark, localizationOptions) {\n    const tickMarkType = weightToTickMarkType(tickMark.weight, this._private__options.timeScale.timeVisible, this._private__options.timeScale.secondsVisible);\n    const options = this._private__options.timeScale;\n    if (options.tickMarkFormatter !== undefined) {\n      const tickMarkString = options.tickMarkFormatter(tickMark.originalTime, tickMarkType, localizationOptions.locale);\n      if (tickMarkString !== null) {\n        return tickMarkString;\n      }\n    }\n    return defaultTickMarkFormatter(tickMark.time, tickMarkType, localizationOptions.locale);\n  }\n  maxTickMarkWeight(tickMarks) {\n    let maxWeight = tickMarks.reduce(markWithGreaterWeight, tickMarks[0]).weight;\n    // special case: it looks strange if 15:00 is bold but 14:00 is not\n    // so if maxWeight > TickMarkWeight.Hour1 and < TickMarkWeight.Day reduce it to TickMarkWeight.Hour1\n    if (maxWeight > 30 /* TickMarkWeight.Hour1 */ && maxWeight < 50 /* TickMarkWeight.Day */) {\n      maxWeight = 30 /* TickMarkWeight.Hour1 */;\n    }\n    return maxWeight;\n  }\n  fillWeightsForPoints(sortedTimePoints, startIndex) {\n    fillWeightsForPoints(sortedTimePoints, startIndex);\n  }\n  static _internal_applyDefaults(options) {\n    return merge({\n      localization: {\n        dateFormat: 'dd MMM \\'yy'\n      }\n    }, options !== null && options !== void 0 ? options : {});\n  }\n}\n\n/**\n * When you're trying to use the library in server-side context (for instance in SSR)\n * you don't have some browser-specific variables like navigator or window\n * and if the library will use them on the top level of the library\n * the import will fail due ReferenceError\n * thus, this allows use the navigator on the top level and being imported in server-side context as well\n * See issue #446\n */\n// eslint-disable-next-line @typescript-eslint/tslint/config\nconst isRunningOnClientSide = typeof window !== 'undefined';\nfunction isFF() {\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  return window.navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n}\nfunction isIOS() {\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  // eslint-disable-next-line deprecation/deprecation\n  return /iPhone|iPad|iPod/.test(window.navigator.platform);\n}\nfunction isChrome() {\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  return window.chrome !== undefined;\n}\n// Determine whether the browser is running on windows.\nfunction isWindows() {\n  var _a;\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  // more accurate if available\n  if ((_a = navigator === null || navigator === void 0 ? void 0 : navigator.userAgentData) === null || _a === void 0 ? void 0 : _a.platform) {\n    return navigator.userAgentData.platform === 'Windows';\n  }\n  return navigator.userAgent.toLowerCase().indexOf('win') >= 0;\n}\n// Determine whether the browser is Chromium based.\nfunction isChromiumBased() {\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  if (!navigator.userAgentData) {\n    return false;\n  }\n  return navigator.userAgentData.brands.some(brand => {\n    return brand.brand.includes('Chromium');\n  });\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction warn(msg) {\n  {\n    // eslint-disable-next-line no-console\n    console.warn(msg);\n  }\n}\n\n// on Hi-DPI CSS size * Device Pixel Ratio should be integer to avoid smoothing\n// For chart widget we decrease the size because we must be inside container.\n// For time axis this is not important, since it just affects space for pane widgets\nfunction suggestChartSize(originalSize) {\n  const integerWidth = Math.floor(originalSize.width);\n  const integerHeight = Math.floor(originalSize.height);\n  const width = integerWidth - integerWidth % 2;\n  const height = integerHeight - integerHeight % 2;\n  return size$1({\n    width,\n    height\n  });\n}\nfunction suggestTimeScaleHeight(originalHeight) {\n  return originalHeight + originalHeight % 2;\n}\nfunction suggestPriceScaleWidth(originalWidth) {\n  return originalWidth + originalWidth % 2;\n}\nfunction distanceBetweenPoints(pos1, pos2) {\n  return pos1._internal_position - pos2._internal_position;\n}\nfunction speedPxPerMSec(pos1, pos2, maxSpeed) {\n  const speed = (pos1._internal_position - pos2._internal_position) / (pos1._internal_time - pos2._internal_time);\n  return Math.sign(speed) * Math.min(Math.abs(speed), maxSpeed);\n}\nfunction durationMSec(speed, dumpingCoeff) {\n  const lnDumpingCoeff = Math.log(dumpingCoeff);\n  return Math.log(1 /* Constants.EpsilonDistance */ * lnDumpingCoeff / -speed) / lnDumpingCoeff;\n}\nclass KineticAnimation {\n  constructor(minSpeed, maxSpeed, dumpingCoeff, minMove) {\n    this._private__position1 = null;\n    this._private__position2 = null;\n    this._private__position3 = null;\n    this._private__position4 = null;\n    this._private__animationStartPosition = null;\n    this._private__durationMsecs = 0;\n    this._private__speedPxPerMsec = 0;\n    this._private__minSpeed = minSpeed;\n    this._private__maxSpeed = maxSpeed;\n    this._private__dumpingCoeff = dumpingCoeff;\n    this._private__minMove = minMove;\n  }\n  _internal_addPosition(position, time) {\n    if (this._private__position1 !== null) {\n      if (this._private__position1._internal_time === time) {\n        this._private__position1._internal_position = position;\n        return;\n      }\n      if (Math.abs(this._private__position1._internal_position - position) < this._private__minMove) {\n        return;\n      }\n    }\n    this._private__position4 = this._private__position3;\n    this._private__position3 = this._private__position2;\n    this._private__position2 = this._private__position1;\n    this._private__position1 = {\n      _internal_time: time,\n      _internal_position: position\n    };\n  }\n  _internal_start(position, time) {\n    if (this._private__position1 === null || this._private__position2 === null) {\n      return;\n    }\n    if (time - this._private__position1._internal_time > 50 /* Constants.MaxStartDelay */) {\n      return;\n    }\n    // To calculate all the rest parameters we should calculate the speed af first\n    let totalDistance = 0;\n    const speed1 = speedPxPerMSec(this._private__position1, this._private__position2, this._private__maxSpeed);\n    const distance1 = distanceBetweenPoints(this._private__position1, this._private__position2);\n    // We're calculating weighted average speed\n    // Than more distance for a segment, than more its weight\n    const speedItems = [speed1];\n    const distanceItems = [distance1];\n    totalDistance += distance1;\n    if (this._private__position3 !== null) {\n      const speed2 = speedPxPerMSec(this._private__position2, this._private__position3, this._private__maxSpeed);\n      // stop at this moment if direction of the segment is opposite\n      if (Math.sign(speed2) === Math.sign(speed1)) {\n        const distance2 = distanceBetweenPoints(this._private__position2, this._private__position3);\n        speedItems.push(speed2);\n        distanceItems.push(distance2);\n        totalDistance += distance2;\n        if (this._private__position4 !== null) {\n          const speed3 = speedPxPerMSec(this._private__position3, this._private__position4, this._private__maxSpeed);\n          if (Math.sign(speed3) === Math.sign(speed1)) {\n            const distance3 = distanceBetweenPoints(this._private__position3, this._private__position4);\n            speedItems.push(speed3);\n            distanceItems.push(distance3);\n            totalDistance += distance3;\n          }\n        }\n      }\n    }\n    let resultSpeed = 0;\n    for (let i = 0; i < speedItems.length; ++i) {\n      resultSpeed += distanceItems[i] / totalDistance * speedItems[i];\n    }\n    if (Math.abs(resultSpeed) < this._private__minSpeed) {\n      return;\n    }\n    this._private__animationStartPosition = {\n      _internal_position: position,\n      _internal_time: time\n    };\n    this._private__speedPxPerMsec = resultSpeed;\n    this._private__durationMsecs = durationMSec(Math.abs(resultSpeed), this._private__dumpingCoeff);\n  }\n  _internal_getPosition(time) {\n    const startPosition = ensureNotNull(this._private__animationStartPosition);\n    const durationMsecs = time - startPosition._internal_time;\n    return startPosition._internal_position + this._private__speedPxPerMsec * (Math.pow(this._private__dumpingCoeff, durationMsecs) - 1) / Math.log(this._private__dumpingCoeff);\n  }\n  _internal_finished(time) {\n    return this._private__animationStartPosition === null || this._private__progressDuration(time) === this._private__durationMsecs;\n  }\n  _private__progressDuration(time) {\n    const startPosition = ensureNotNull(this._private__animationStartPosition);\n    const progress = time - startPosition._internal_time;\n    return Math.min(progress, this._private__durationMsecs);\n  }\n}\nconst svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 35 19\" width=\"35\" height=\"19\" fill=\"none\"><g fill-rule=\"evenodd\" clip-path=\"url(#a)\" clip-rule=\"evenodd\"><path fill=\"var(--stroke)\" d=\"M2 0H0v10h6v9h21.4l.5-1.3 6-15 1-2.7H23.7l-.5 1.3-.2.6a5 5 0 0 0-7-.9V0H2Zm20 17h4l5.2-13 .8-2h-7l-1 2.5-.2.5-1.5 3.8-.3.7V17Zm-.8-10a3 3 0 0 0 .7-2.7A3 3 0 1 0 16.8 7h4.4ZM14 7V2H2v6h6v9h4V7h2Z\"/><path fill=\"var(--fill)\" d=\"M14 2H2v6h6v9h6V2Zm12 15h-7l6-15h7l-6 15Zm-7-9a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\"/></g><defs><clipPath id=\"a\"><path fill=\"var(--stroke)\" d=\"M0 0h35v19H0z\"/></clipPath></defs></svg>`;\nconst css = `a#tv-attr-logo{--fill:#131722;--stroke:#fff;position:absolute;left:10px;bottom:10px;height:19px;width:35px;margin:0;padding:0;border:0;z-index:3;}a#tv-attr-logo[data-dark]{--fill:#D1D4DC;--stroke:#131722;}`;\n// This widget doesn't support dynamically responding to options changes\n// because it is expected that the `attributionLogo` option won't be changed\n// and this saves some bundle size.\nclass AttributionLogoWidget {\n  constructor(container, chart) {\n    this._private__element = undefined;\n    this._private__cssElement = undefined;\n    this._private__theme = undefined;\n    this._private__visible = false;\n    this._private__container = container;\n    this._private__chart = chart;\n    this._private__render();\n  }\n  _internal_update() {\n    this._private__render();\n  }\n  _internal_removeElement() {\n    if (this._private__element) {\n      this._private__container.removeChild(this._private__element);\n    }\n    if (this._private__cssElement) {\n      this._private__container.removeChild(this._private__cssElement);\n    }\n    this._private__element = undefined;\n    this._private__cssElement = undefined;\n  }\n  _private__shouldUpdate() {\n    return this._private__visible !== this._private__shouldBeVisible() || this._private__theme !== this._private__themeToUse();\n  }\n  _private__themeToUse() {\n    return colorStringToGrayscale(this._private__chart._internal_options().layout.textColor) > 160 ? 'dark' : 'light';\n  }\n  _private__shouldBeVisible() {\n    return this._private__chart._internal_options().layout.attributionLogo;\n  }\n  _private__getUTMSource() {\n    const url = new URL(location.href);\n    if (!url.hostname) {\n      // ignore local testing\n      return '';\n    }\n    return '&utm_source=' + url.hostname + url.pathname;\n  }\n  _private__render() {\n    if (!this._private__shouldUpdate()) {\n      return;\n    }\n    this._internal_removeElement();\n    this._private__visible = this._private__shouldBeVisible();\n    if (this._private__visible) {\n      this._private__theme = this._private__themeToUse();\n      this._private__cssElement = document.createElement('style');\n      this._private__cssElement.innerText = css;\n      this._private__element = document.createElement('a');\n      this._private__element.href = `https://www.tradingview.com/?utm_medium=lwc-link&utm_campaign=lwc-chart${this._private__getUTMSource()}`;\n      this._private__element.title = 'Charting by TradingView';\n      this._private__element.id = 'tv-attr-logo';\n      this._private__element.target = '_blank';\n      this._private__element.innerHTML = svg;\n      this._private__element.toggleAttribute('data-dark', this._private__theme === 'dark');\n      this._private__container.appendChild(this._private__cssElement);\n      this._private__container.appendChild(this._private__element);\n    }\n  }\n}\nfunction createBoundCanvas(parentElement, size) {\n  const doc = ensureNotNull(parentElement.ownerDocument);\n  const canvas = doc.createElement('canvas');\n  parentElement.appendChild(canvas);\n  const binding = bindCanvasElementBitmapSizeTo(canvas, {\n    type: 'device-pixel-content-box',\n    options: {\n      allowResizeObserver: false\n    },\n    transform: (bitmapSize, canvasElementClientSize) => ({\n      width: Math.max(bitmapSize.width, canvasElementClientSize.width),\n      height: Math.max(bitmapSize.height, canvasElementClientSize.height)\n    })\n  });\n  binding.resizeCanvasElement(size);\n  return binding;\n}\nfunction releaseCanvas(canvas) {\n  var _a;\n  // This function fixes the iOS Safari error \"Total canvas memory use exceeds the maximum limit\".\n  // Seems that iOS Safari stores canvas elements for some additional time internally.\n  // So if we create/destroy a lot of canvas elements in a short period of time we can get this error.\n  // We resize the canvas to 1x1 pixels to force it to release memmory resources.\n  canvas.width = 1;\n  canvas.height = 1;\n  (_a = canvas.getContext('2d')) === null || _a === void 0 ? void 0 : _a.clearRect(0, 0, 1, 1);\n}\nfunction drawBackground(renderer, target, isHovered, hitTestData) {\n  if (renderer._internal_drawBackground) {\n    renderer._internal_drawBackground(target, isHovered, hitTestData);\n  }\n}\nfunction drawForeground(renderer, target, isHovered, hitTestData) {\n  renderer._internal_draw(target, isHovered, hitTestData);\n}\nfunction drawSourcePaneViews(paneViewsGetter, drawRendererFn, source, pane) {\n  const paneViews = paneViewsGetter(source, pane);\n  for (const paneView of paneViews) {\n    const renderer = paneView._internal_renderer();\n    if (renderer !== null) {\n      drawRendererFn(renderer);\n    }\n  }\n}\nfunction preventScrollByWheelClick(el) {\n  if (!isChrome()) {\n    return;\n  }\n  el.addEventListener('mousedown', e => {\n    if (e.button === 1 /* MouseEventButton.Middle */) {\n      // prevent incorrect scrolling event\n      e.preventDefault();\n      return false;\n    }\n    return undefined;\n  });\n}\n\n// TODO: get rid of a lot of boolean flags, probably we should replace it with some enum\nclass MouseEventHandler {\n  constructor(target, handler, options) {\n    this._private__clickCount = 0;\n    this._private__clickTimeoutId = null;\n    this._private__clickPosition = {\n      _internal_x: Number.NEGATIVE_INFINITY,\n      _internal_y: Number.POSITIVE_INFINITY\n    };\n    this._private__tapCount = 0;\n    this._private__tapTimeoutId = null;\n    this._private__tapPosition = {\n      _internal_x: Number.NEGATIVE_INFINITY,\n      _internal_y: Number.POSITIVE_INFINITY\n    };\n    this._private__longTapTimeoutId = null;\n    this._private__longTapActive = false;\n    this._private__mouseMoveStartPosition = null;\n    this._private__touchMoveStartPosition = null;\n    this._private__touchMoveExceededManhattanDistance = false;\n    this._private__cancelClick = false;\n    this._private__cancelTap = false;\n    this._private__unsubscribeOutsideMouseEvents = null;\n    this._private__unsubscribeOutsideTouchEvents = null;\n    this._private__unsubscribeMobileSafariEvents = null;\n    this._private__unsubscribeMousemove = null;\n    this._private__unsubscribeRootMouseEvents = null;\n    this._private__unsubscribeRootTouchEvents = null;\n    this._private__startPinchMiddlePoint = null;\n    this._private__startPinchDistance = 0;\n    this._private__pinchPrevented = false;\n    this._private__preventTouchDragProcess = false;\n    this._private__mousePressed = false;\n    this._private__lastTouchEventTimeStamp = 0;\n    // for touchstart/touchmove/touchend events we handle only first touch\n    // i.e. we don't support several active touches at the same time (except pinch event)\n    this._private__activeTouchId = null;\n    // accept all mouse leave events if it's not an iOS device\n    // see _mouseEnterHandler, _mouseMoveHandler, _mouseLeaveHandler\n    this._private__acceptMouseLeave = !isIOS();\n    /**\n     * In Firefox mouse events dont't fire if the mouse position is outside of the browser's border.\n     * To prevent the mouse from hanging while pressed we're subscribing on the mouseleave event of the document element.\n     * We're subscribing on mouseleave, but this event is actually fired on mouseup outside of the browser's border.\n     */\n    this._private__onFirefoxOutsideMouseUp = mouseUpEvent => {\n      this._private__mouseUpHandler(mouseUpEvent);\n    };\n    /**\n     * Safari doesn't fire touchstart/mousedown events on double tap since iOS 13.\n     * There are two possible solutions:\n     * 1) Call preventDefault in touchEnd handler. But it also prevents click event from firing.\n     * 2) Add listener on dblclick event that fires with the preceding mousedown/mouseup.\n     * https://developer.apple.com/forums/thread/125073\n     */\n    this._private__onMobileSafariDoubleClick = dblClickEvent => {\n      if (this._private__firesTouchEvents(dblClickEvent)) {\n        const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n        ++this._private__tapCount;\n        if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n          const {\n            _internal_manhattanDistance: manhattanDistance\n          } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__tapPosition);\n          if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n            this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n          }\n          this._private__resetTapTimeout();\n        }\n      } else {\n        const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n        ++this._private__clickCount;\n        if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n          const {\n            _internal_manhattanDistance: manhattanDistance\n          } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__clickPosition);\n          if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n            this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n          }\n          this._private__resetClickTimeout();\n        }\n      }\n    };\n    this._private__target = target;\n    this._private__handler = handler;\n    this._private__options = options;\n    this._private__init();\n  }\n  _internal_destroy() {\n    if (this._private__unsubscribeOutsideMouseEvents !== null) {\n      this._private__unsubscribeOutsideMouseEvents();\n      this._private__unsubscribeOutsideMouseEvents = null;\n    }\n    if (this._private__unsubscribeOutsideTouchEvents !== null) {\n      this._private__unsubscribeOutsideTouchEvents();\n      this._private__unsubscribeOutsideTouchEvents = null;\n    }\n    if (this._private__unsubscribeMousemove !== null) {\n      this._private__unsubscribeMousemove();\n      this._private__unsubscribeMousemove = null;\n    }\n    if (this._private__unsubscribeRootMouseEvents !== null) {\n      this._private__unsubscribeRootMouseEvents();\n      this._private__unsubscribeRootMouseEvents = null;\n    }\n    if (this._private__unsubscribeRootTouchEvents !== null) {\n      this._private__unsubscribeRootTouchEvents();\n      this._private__unsubscribeRootTouchEvents = null;\n    }\n    if (this._private__unsubscribeMobileSafariEvents !== null) {\n      this._private__unsubscribeMobileSafariEvents();\n      this._private__unsubscribeMobileSafariEvents = null;\n    }\n    this._private__clearLongTapTimeout();\n    this._private__resetClickTimeout();\n  }\n  _private__mouseEnterHandler(enterEvent) {\n    if (this._private__unsubscribeMousemove) {\n      this._private__unsubscribeMousemove();\n    }\n    const boundMouseMoveHandler = this._private__mouseMoveHandler.bind(this);\n    this._private__unsubscribeMousemove = () => {\n      this._private__target.removeEventListener('mousemove', boundMouseMoveHandler);\n    };\n    this._private__target.addEventListener('mousemove', boundMouseMoveHandler);\n    if (this._private__firesTouchEvents(enterEvent)) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(enterEvent);\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseEnterEvent);\n    this._private__acceptMouseLeave = true;\n  }\n  _private__resetClickTimeout() {\n    if (this._private__clickTimeoutId !== null) {\n      clearTimeout(this._private__clickTimeoutId);\n    }\n    this._private__clickCount = 0;\n    this._private__clickTimeoutId = null;\n    this._private__clickPosition = {\n      _internal_x: Number.NEGATIVE_INFINITY,\n      _internal_y: Number.POSITIVE_INFINITY\n    };\n  }\n  _private__resetTapTimeout() {\n    if (this._private__tapTimeoutId !== null) {\n      clearTimeout(this._private__tapTimeoutId);\n    }\n    this._private__tapCount = 0;\n    this._private__tapTimeoutId = null;\n    this._private__tapPosition = {\n      _internal_x: Number.NEGATIVE_INFINITY,\n      _internal_y: Number.POSITIVE_INFINITY\n    };\n  }\n  _private__mouseMoveHandler(moveEvent) {\n    if (this._private__mousePressed || this._private__touchMoveStartPosition !== null) {\n      return;\n    }\n    if (this._private__firesTouchEvents(moveEvent)) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(moveEvent);\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseMoveEvent);\n    this._private__acceptMouseLeave = true;\n  }\n  _private__touchMoveHandler(moveEvent) {\n    const touch = touchWithId(moveEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n    if (touch === null) {\n      return;\n    }\n    this._private__lastTouchEventTimeStamp = eventTimeStamp(moveEvent);\n    if (this._private__startPinchMiddlePoint !== null) {\n      return;\n    }\n    if (this._private__preventTouchDragProcess) {\n      return;\n    }\n    // prevent pinch if move event comes faster than the second touch\n    this._private__pinchPrevented = true;\n    const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(touch), ensureNotNull(this._private__touchMoveStartPosition));\n    const {\n      _internal_xOffset: xOffset,\n      _internal_yOffset: yOffset,\n      _internal_manhattanDistance: manhattanDistance\n    } = moveInfo;\n    if (!this._private__touchMoveExceededManhattanDistance && manhattanDistance < 5 /* Constants.CancelTapManhattanDistance */) {\n      return;\n    }\n    if (!this._private__touchMoveExceededManhattanDistance) {\n      // first time when current position exceeded manhattan distance\n      // vertical drag is more important than horizontal drag\n      // because we scroll the page vertically often than horizontally\n      const correctedXOffset = xOffset * 0.5;\n      // a drag can be only if touch page scroll isn't allowed\n      const isVertDrag = yOffset >= correctedXOffset && !this._private__options._internal_treatVertTouchDragAsPageScroll();\n      const isHorzDrag = correctedXOffset > yOffset && !this._private__options._internal_treatHorzTouchDragAsPageScroll();\n      // if drag event happened then we should revert preventDefault state to original one\n      // and try to process the drag event\n      // else we shouldn't prevent default of the event and ignore processing the drag event\n      if (!isVertDrag && !isHorzDrag) {\n        this._private__preventTouchDragProcess = true;\n      }\n      this._private__touchMoveExceededManhattanDistance = true;\n      // if manhattan distance is more that 5 - we should cancel tap event\n      this._private__cancelTap = true;\n      this._private__clearLongTapTimeout();\n      this._private__resetTapTimeout();\n    }\n    if (!this._private__preventTouchDragProcess) {\n      const compatEvent = this._private__makeCompatEvent(moveEvent, touch);\n      this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchMoveEvent);\n      // we should prevent default in case of touch only\n      // to prevent scroll of the page\n      preventDefault(moveEvent);\n    }\n  }\n  _private__mouseMoveWithDownHandler(moveEvent) {\n    if (moveEvent.button !== 0 /* MouseEventButton.Left */) {\n      return;\n    }\n    const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(moveEvent), ensureNotNull(this._private__mouseMoveStartPosition));\n    const {\n      _internal_manhattanDistance: manhattanDistance\n    } = moveInfo;\n    if (manhattanDistance >= 5 /* Constants.CancelClickManhattanDistance */) {\n      // if manhattan distance is more that 5 - we should cancel click event\n      this._private__cancelClick = true;\n      this._private__resetClickTimeout();\n    }\n    if (this._private__cancelClick) {\n      // if this._cancelClick is true, that means that minimum manhattan distance is already exceeded\n      const compatEvent = this._private__makeCompatEvent(moveEvent);\n      this._private__processMouseEvent(compatEvent, this._private__handler._internal_pressedMouseMoveEvent);\n    }\n  }\n  _private__touchMouseMoveWithDownInfo(currentPosition, startPosition) {\n    const xOffset = Math.abs(startPosition._internal_x - currentPosition._internal_x);\n    const yOffset = Math.abs(startPosition._internal_y - currentPosition._internal_y);\n    const manhattanDistance = xOffset + yOffset;\n    return {\n      _internal_xOffset: xOffset,\n      _internal_yOffset: yOffset,\n      _internal_manhattanDistance: manhattanDistance\n    };\n  }\n  // eslint-disable-next-line complexity\n  _private__touchEndHandler(touchEndEvent) {\n    let touch = touchWithId(touchEndEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n    if (touch === null && touchEndEvent.touches.length === 0) {\n      // something went wrong, somehow we missed the required touchend event\n      // probably the browser has not sent this event\n      touch = touchEndEvent.changedTouches[0];\n    }\n    if (touch === null) {\n      return;\n    }\n    this._private__activeTouchId = null;\n    this._private__lastTouchEventTimeStamp = eventTimeStamp(touchEndEvent);\n    this._private__clearLongTapTimeout();\n    this._private__touchMoveStartPosition = null;\n    if (this._private__unsubscribeRootTouchEvents) {\n      this._private__unsubscribeRootTouchEvents();\n      this._private__unsubscribeRootTouchEvents = null;\n    }\n    const compatEvent = this._private__makeCompatEvent(touchEndEvent, touch);\n    this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchEndEvent);\n    ++this._private__tapCount;\n    if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n      // check that both clicks are near enough\n      const {\n        _internal_manhattanDistance: manhattanDistance\n      } = this._private__touchMouseMoveWithDownInfo(getPosition(touch), this._private__tapPosition);\n      if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n      }\n      this._private__resetTapTimeout();\n    } else {\n      if (!this._private__cancelTap) {\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_tapEvent);\n        // do not fire mouse events if tap handler was executed\n        // prevent click event on new dom element (who appeared after tap)\n        if (this._private__handler._internal_tapEvent) {\n          preventDefault(touchEndEvent);\n        }\n      }\n    }\n    // prevent, for example, safari's dblclick-to-zoom or fast-click after long-tap\n    // we handle mouseDoubleClickEvent here ourselves\n    if (this._private__tapCount === 0) {\n      preventDefault(touchEndEvent);\n    }\n    if (touchEndEvent.touches.length === 0) {\n      if (this._private__longTapActive) {\n        this._private__longTapActive = false;\n        // prevent native click event\n        preventDefault(touchEndEvent);\n      }\n    }\n  }\n  _private__mouseUpHandler(mouseUpEvent) {\n    if (mouseUpEvent.button !== 0 /* MouseEventButton.Left */) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(mouseUpEvent);\n    this._private__mouseMoveStartPosition = null;\n    this._private__mousePressed = false;\n    if (this._private__unsubscribeRootMouseEvents) {\n      this._private__unsubscribeRootMouseEvents();\n      this._private__unsubscribeRootMouseEvents = null;\n    }\n    if (isFF()) {\n      const rootElement = this._private__target.ownerDocument.documentElement;\n      rootElement.removeEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n    }\n    if (this._private__firesTouchEvents(mouseUpEvent)) {\n      return;\n    }\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseUpEvent);\n    ++this._private__clickCount;\n    if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n      // check that both clicks are near enough\n      const {\n        _internal_manhattanDistance: manhattanDistance\n      } = this._private__touchMouseMoveWithDownInfo(getPosition(mouseUpEvent), this._private__clickPosition);\n      if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n      }\n      this._private__resetClickTimeout();\n    } else {\n      if (!this._private__cancelClick) {\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseClickEvent);\n      }\n    }\n  }\n  _private__clearLongTapTimeout() {\n    if (this._private__longTapTimeoutId === null) {\n      return;\n    }\n    clearTimeout(this._private__longTapTimeoutId);\n    this._private__longTapTimeoutId = null;\n  }\n  _private__touchStartHandler(downEvent) {\n    if (this._private__activeTouchId !== null) {\n      return;\n    }\n    const touch = downEvent.changedTouches[0];\n    this._private__activeTouchId = touch.identifier;\n    this._private__lastTouchEventTimeStamp = eventTimeStamp(downEvent);\n    const rootElement = this._private__target.ownerDocument.documentElement;\n    this._private__cancelTap = false;\n    this._private__touchMoveExceededManhattanDistance = false;\n    this._private__preventTouchDragProcess = false;\n    this._private__touchMoveStartPosition = getPosition(touch);\n    if (this._private__unsubscribeRootTouchEvents) {\n      this._private__unsubscribeRootTouchEvents();\n      this._private__unsubscribeRootTouchEvents = null;\n    }\n    {\n      const boundTouchMoveWithDownHandler = this._private__touchMoveHandler.bind(this);\n      const boundTouchEndHandler = this._private__touchEndHandler.bind(this);\n      this._private__unsubscribeRootTouchEvents = () => {\n        rootElement.removeEventListener('touchmove', boundTouchMoveWithDownHandler);\n        rootElement.removeEventListener('touchend', boundTouchEndHandler);\n      };\n      rootElement.addEventListener('touchmove', boundTouchMoveWithDownHandler, {\n        passive: false\n      });\n      rootElement.addEventListener('touchend', boundTouchEndHandler, {\n        passive: false\n      });\n      this._private__clearLongTapTimeout();\n      this._private__longTapTimeoutId = setTimeout(this._private__longTapHandler.bind(this, downEvent), 240 /* Delay.LongTap */);\n    }\n    const compatEvent = this._private__makeCompatEvent(downEvent, touch);\n    this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchStartEvent);\n    if (!this._private__tapTimeoutId) {\n      this._private__tapCount = 0;\n      this._private__tapTimeoutId = setTimeout(this._private__resetTapTimeout.bind(this), 500 /* Delay.ResetClick */);\n      this._private__tapPosition = getPosition(touch);\n    }\n  }\n  _private__mouseDownHandler(downEvent) {\n    if (downEvent.button !== 0 /* MouseEventButton.Left */) {\n      return;\n    }\n    const rootElement = this._private__target.ownerDocument.documentElement;\n    if (isFF()) {\n      rootElement.addEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n    }\n    this._private__cancelClick = false;\n    this._private__mouseMoveStartPosition = getPosition(downEvent);\n    if (this._private__unsubscribeRootMouseEvents) {\n      this._private__unsubscribeRootMouseEvents();\n      this._private__unsubscribeRootMouseEvents = null;\n    }\n    {\n      const boundMouseMoveWithDownHandler = this._private__mouseMoveWithDownHandler.bind(this);\n      const boundMouseUpHandler = this._private__mouseUpHandler.bind(this);\n      this._private__unsubscribeRootMouseEvents = () => {\n        rootElement.removeEventListener('mousemove', boundMouseMoveWithDownHandler);\n        rootElement.removeEventListener('mouseup', boundMouseUpHandler);\n      };\n      rootElement.addEventListener('mousemove', boundMouseMoveWithDownHandler);\n      rootElement.addEventListener('mouseup', boundMouseUpHandler);\n    }\n    this._private__mousePressed = true;\n    if (this._private__firesTouchEvents(downEvent)) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(downEvent);\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDownEvent);\n    if (!this._private__clickTimeoutId) {\n      this._private__clickCount = 0;\n      this._private__clickTimeoutId = setTimeout(this._private__resetClickTimeout.bind(this), 500 /* Delay.ResetClick */);\n      this._private__clickPosition = getPosition(downEvent);\n    }\n  }\n  _private__init() {\n    this._private__target.addEventListener('mouseenter', this._private__mouseEnterHandler.bind(this));\n    // Do not show context menu when something went wrong\n    this._private__target.addEventListener('touchcancel', this._private__clearLongTapTimeout.bind(this));\n    {\n      const doc = this._private__target.ownerDocument;\n      const outsideHandler = event => {\n        if (!this._private__handler._internal_mouseDownOutsideEvent) {\n          return;\n        }\n        if (event.composed && this._private__target.contains(event.composedPath()[0])) {\n          return;\n        }\n        if (event.target && this._private__target.contains(event.target)) {\n          return;\n        }\n        this._private__handler._internal_mouseDownOutsideEvent();\n      };\n      this._private__unsubscribeOutsideTouchEvents = () => {\n        doc.removeEventListener('touchstart', outsideHandler);\n      };\n      this._private__unsubscribeOutsideMouseEvents = () => {\n        doc.removeEventListener('mousedown', outsideHandler);\n      };\n      doc.addEventListener('mousedown', outsideHandler);\n      doc.addEventListener('touchstart', outsideHandler, {\n        passive: true\n      });\n    }\n    if (isIOS()) {\n      this._private__unsubscribeMobileSafariEvents = () => {\n        this._private__target.removeEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n      };\n      this._private__target.addEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n    }\n    this._private__target.addEventListener('mouseleave', this._private__mouseLeaveHandler.bind(this));\n    this._private__target.addEventListener('touchstart', this._private__touchStartHandler.bind(this), {\n      passive: true\n    });\n    preventScrollByWheelClick(this._private__target);\n    this._private__target.addEventListener('mousedown', this._private__mouseDownHandler.bind(this));\n    this._private__initPinch();\n    // Hey mobile Safari, what's up?\n    // If mobile Safari doesn't have any touchmove handler with passive=false\n    // it treats a touchstart and the following touchmove events as cancelable=false,\n    // so we can't prevent them (as soon we subscribe on touchmove inside touchstart's handler).\n    // And we'll get scroll of the page along with chart's one instead of only chart's scroll.\n    this._private__target.addEventListener('touchmove', () => {}, {\n      passive: false\n    });\n  }\n  _private__initPinch() {\n    if (this._private__handler._internal_pinchStartEvent === undefined && this._private__handler._internal_pinchEvent === undefined && this._private__handler._internal_pinchEndEvent === undefined) {\n      return;\n    }\n    this._private__target.addEventListener('touchstart', event => this._private__checkPinchState(event.touches), {\n      passive: true\n    });\n    this._private__target.addEventListener('touchmove', event => {\n      if (event.touches.length !== 2 || this._private__startPinchMiddlePoint === null) {\n        return;\n      }\n      if (this._private__handler._internal_pinchEvent !== undefined) {\n        const currentDistance = getDistance(event.touches[0], event.touches[1]);\n        const scale = currentDistance / this._private__startPinchDistance;\n        this._private__handler._internal_pinchEvent(this._private__startPinchMiddlePoint, scale);\n        preventDefault(event);\n      }\n    }, {\n      passive: false\n    });\n    this._private__target.addEventListener('touchend', event => {\n      this._private__checkPinchState(event.touches);\n    });\n  }\n  _private__checkPinchState(touches) {\n    if (touches.length === 1) {\n      this._private__pinchPrevented = false;\n    }\n    if (touches.length !== 2 || this._private__pinchPrevented || this._private__longTapActive) {\n      this._private__stopPinch();\n    } else {\n      this._private__startPinch(touches);\n    }\n  }\n  _private__startPinch(touches) {\n    const box = getBoundingClientRect(this._private__target);\n    this._private__startPinchMiddlePoint = {\n      _internal_x: (touches[0].clientX - box.left + (touches[1].clientX - box.left)) / 2,\n      _internal_y: (touches[0].clientY - box.top + (touches[1].clientY - box.top)) / 2\n    };\n    this._private__startPinchDistance = getDistance(touches[0], touches[1]);\n    if (this._private__handler._internal_pinchStartEvent !== undefined) {\n      this._private__handler._internal_pinchStartEvent();\n    }\n    this._private__clearLongTapTimeout();\n  }\n  _private__stopPinch() {\n    if (this._private__startPinchMiddlePoint === null) {\n      return;\n    }\n    this._private__startPinchMiddlePoint = null;\n    if (this._private__handler._internal_pinchEndEvent !== undefined) {\n      this._private__handler._internal_pinchEndEvent();\n    }\n  }\n  _private__mouseLeaveHandler(event) {\n    if (this._private__unsubscribeMousemove) {\n      this._private__unsubscribeMousemove();\n    }\n    if (this._private__firesTouchEvents(event)) {\n      return;\n    }\n    if (!this._private__acceptMouseLeave) {\n      // mobile Safari sometimes emits mouse leave event for no reason, there is no way to handle it in other way\n      // just ignore this event if there was no mouse move or mouse enter events\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(event);\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseLeaveEvent);\n    // accept all mouse leave events if it's not an iOS device\n    this._private__acceptMouseLeave = !isIOS();\n  }\n  _private__longTapHandler(event) {\n    const touch = touchWithId(event.touches, ensureNotNull(this._private__activeTouchId));\n    if (touch === null) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(event, touch);\n    this._private__processTouchEvent(compatEvent, this._private__handler._internal_longTapEvent);\n    this._private__cancelTap = true;\n    // long tap is active until touchend event with 0 touches occurred\n    this._private__longTapActive = true;\n  }\n  _private__firesTouchEvents(e) {\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents !== undefined) {\n      return e.sourceCapabilities.firesTouchEvents;\n    }\n    return eventTimeStamp(e) < this._private__lastTouchEventTimeStamp + 500 /* Delay.PreventFiresTouchEvents */;\n  }\n  _private__processTouchEvent(event, callback) {\n    if (callback) {\n      callback.call(this._private__handler, event);\n    }\n  }\n  _private__processMouseEvent(event, callback) {\n    if (!callback) {\n      return;\n    }\n    callback.call(this._private__handler, event);\n  }\n  _private__makeCompatEvent(event, touch) {\n    // TouchEvent has no clientX/Y coordinates:\n    // We have to use the last Touch instead\n    const eventLike = touch || event;\n    const box = this._private__target.getBoundingClientRect() || {\n      left: 0,\n      top: 0\n    };\n    return {\n      clientX: eventLike.clientX,\n      clientY: eventLike.clientY,\n      pageX: eventLike.pageX,\n      pageY: eventLike.pageY,\n      screenX: eventLike.screenX,\n      screenY: eventLike.screenY,\n      localX: eventLike.clientX - box.left,\n      localY: eventLike.clientY - box.top,\n      ctrlKey: event.ctrlKey,\n      altKey: event.altKey,\n      shiftKey: event.shiftKey,\n      metaKey: event.metaKey,\n      _internal_isTouch: !event.type.startsWith('mouse') && event.type !== 'contextmenu' && event.type !== 'click',\n      _internal_srcType: event.type,\n      _internal_target: eventLike.target,\n      _internal_view: event.view,\n      _internal_preventDefault: () => {\n        if (event.type !== 'touchstart') {\n          // touchstart is passive and cannot be prevented\n          preventDefault(event);\n        }\n      }\n    };\n  }\n}\nfunction getBoundingClientRect(element) {\n  return element.getBoundingClientRect() || {\n    left: 0,\n    top: 0\n  };\n}\nfunction getDistance(p1, p2) {\n  const xDiff = p1.clientX - p2.clientX;\n  const yDiff = p1.clientY - p2.clientY;\n  return Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n}\nfunction preventDefault(event) {\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n}\nfunction getPosition(eventLike) {\n  return {\n    _internal_x: eventLike.pageX,\n    _internal_y: eventLike.pageY\n  };\n}\nfunction eventTimeStamp(e) {\n  // for some reason e.timestamp is always 0 on iPad with magic mouse, so we use performance.now() as a fallback\n  return e.timeStamp || performance.now();\n}\nfunction touchWithId(touches, id) {\n  for (let i = 0; i < touches.length; ++i) {\n    if (touches[i].identifier === id) {\n      return touches[i];\n    }\n  }\n  return null;\n}\n\n// returns true if item is above reference\nfunction comparePrimitiveZOrder(item, reference) {\n  return !reference || item === 'top' && reference !== 'top' || item === 'normal' && reference === 'bottom';\n}\nfunction findBestPrimitiveHitTest(sources, x, y) {\n  var _a, _b;\n  let bestPrimitiveHit;\n  let bestHitSource;\n  for (const source of sources) {\n    const primitiveHitResults = (_b = (_a = source._internal_primitiveHitTest) === null || _a === void 0 ? void 0 : _a.call(source, x, y)) !== null && _b !== void 0 ? _b : [];\n    for (const hitResult of primitiveHitResults) {\n      if (comparePrimitiveZOrder(hitResult.zOrder, bestPrimitiveHit === null || bestPrimitiveHit === void 0 ? void 0 : bestPrimitiveHit.zOrder)) {\n        bestPrimitiveHit = hitResult;\n        bestHitSource = source;\n      }\n    }\n  }\n  if (!bestPrimitiveHit || !bestHitSource) {\n    return null;\n  }\n  return {\n    _internal_hit: bestPrimitiveHit,\n    _internal_source: bestHitSource\n  };\n}\nfunction convertPrimitiveHitResult(primitiveHit) {\n  return {\n    _internal_source: primitiveHit._internal_source,\n    _internal_object: {\n      _internal_externalId: primitiveHit._internal_hit.externalId\n    },\n    _internal_cursorStyle: primitiveHit._internal_hit.cursorStyle\n  };\n}\n/**\n * Performs a hit test on a collection of pane views to determine which view and object\n * is located at a given coordinate (x, y) and returns the matching pane view and\n * hit-tested result object, or null if no match is found.\n */\nfunction hitTestPaneView(paneViews, x, y) {\n  for (const paneView of paneViews) {\n    const renderer = paneView._internal_renderer();\n    if (renderer !== null && renderer._internal_hitTest) {\n      const result = renderer._internal_hitTest(x, y);\n      if (result !== null) {\n        return {\n          _internal_view: paneView,\n          _internal_object: result\n        };\n      }\n    }\n  }\n  return null;\n}\nfunction hitTestPane(pane, x, y) {\n  const sources = pane._internal_orderedSources();\n  const bestPrimitiveHit = findBestPrimitiveHitTest(sources, x, y);\n  if ((bestPrimitiveHit === null || bestPrimitiveHit === void 0 ? void 0 : bestPrimitiveHit._internal_hit.zOrder) === 'top') {\n    // a primitive hit on the 'top' layer will always beat the built-in hit tests\n    // (on normal layer) so we can return early here.\n    return convertPrimitiveHitResult(bestPrimitiveHit);\n  }\n  for (const source of sources) {\n    if (bestPrimitiveHit && bestPrimitiveHit._internal_source === source && bestPrimitiveHit._internal_hit.zOrder !== 'bottom' && !bestPrimitiveHit._internal_hit.isBackground) {\n      // a primitive will be drawn above a built-in item like a series marker\n      // therefore it takes precedence here.\n      return convertPrimitiveHitResult(bestPrimitiveHit);\n    }\n    const sourceResult = hitTestPaneView(source._internal_paneViews(pane), x, y);\n    if (sourceResult !== null) {\n      return {\n        _internal_source: source,\n        _internal_view: sourceResult._internal_view,\n        _internal_object: sourceResult._internal_object\n      };\n    }\n    if (bestPrimitiveHit && bestPrimitiveHit._internal_source === source && bestPrimitiveHit._internal_hit.zOrder !== 'bottom' && bestPrimitiveHit._internal_hit.isBackground) {\n      return convertPrimitiveHitResult(bestPrimitiveHit);\n    }\n  }\n  if (bestPrimitiveHit === null || bestPrimitiveHit === void 0 ? void 0 : bestPrimitiveHit._internal_hit) {\n    // return primitive hits for the 'bottom' layer\n    return convertPrimitiveHitResult(bestPrimitiveHit);\n  }\n  return null;\n}\nfunction buildPriceAxisViewsGetter(zOrder, priceScaleId) {\n  return source => {\n    var _a, _b, _c, _d;\n    const psId = (_b = (_a = source._internal_priceScale()) === null || _a === void 0 ? void 0 : _a._internal_id()) !== null && _b !== void 0 ? _b : '';\n    if (psId !== priceScaleId) {\n      // exclude if source is using a different price scale.\n      return [];\n    }\n    return (_d = (_c = source._internal_pricePaneViews) === null || _c === void 0 ? void 0 : _c.call(source, zOrder)) !== null && _d !== void 0 ? _d : [];\n  };\n}\nfunction recalculateOverlapping(views, direction, scaleHeight, rendererOptions) {\n  if (!views.length) {\n    return;\n  }\n  let currentGroupStart = 0;\n  const center = scaleHeight / 2;\n  const initLabelHeight = views[0]._internal_height(rendererOptions, true);\n  let spaceBeforeCurrentGroup = direction === 1 ? center - (views[0]._internal_getFixedCoordinate() - initLabelHeight / 2) : views[0]._internal_getFixedCoordinate() - initLabelHeight / 2 - center;\n  spaceBeforeCurrentGroup = Math.max(0, spaceBeforeCurrentGroup);\n  for (let i = 1; i < views.length; i++) {\n    const view = views[i];\n    const prev = views[i - 1];\n    const height = prev._internal_height(rendererOptions, false);\n    const coordinate = view._internal_getFixedCoordinate();\n    const prevFixedCoordinate = prev._internal_getFixedCoordinate();\n    const overlap = direction === 1 ? coordinate > prevFixedCoordinate - height : coordinate < prevFixedCoordinate + height;\n    if (overlap) {\n      const fixedCoordinate = prevFixedCoordinate - height * direction;\n      view._internal_setFixedCoordinate(fixedCoordinate);\n      const edgePoint = fixedCoordinate - direction * height / 2;\n      const outOfViewport = direction === 1 ? edgePoint < 0 : edgePoint > scaleHeight;\n      if (outOfViewport && spaceBeforeCurrentGroup > 0) {\n        // shift the whole group up or down\n        const desiredGroupShift = direction === 1 ? -1 - edgePoint : edgePoint - scaleHeight;\n        const possibleShift = Math.min(desiredGroupShift, spaceBeforeCurrentGroup);\n        for (let k = currentGroupStart; k < views.length; k++) {\n          views[k]._internal_setFixedCoordinate(views[k]._internal_getFixedCoordinate() + direction * possibleShift);\n        }\n        spaceBeforeCurrentGroup -= possibleShift;\n      }\n    } else {\n      currentGroupStart = i;\n      spaceBeforeCurrentGroup = direction === 1 ? prevFixedCoordinate - height - coordinate : coordinate - (prevFixedCoordinate + height);\n    }\n  }\n}\nclass PriceAxisWidget {\n  constructor(pane, options, rendererOptionsProvider, side) {\n    this._private__priceScale = null;\n    this._private__size = null;\n    this._private__mousedown = false;\n    this._private__widthCache = new TextWidthCache(200);\n    this._private__font = null;\n    this._private__prevOptimalWidth = 0;\n    this._private__isSettingSize = false;\n    this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n      if (this._private__isSettingSize) {\n        return;\n      }\n      this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n    };\n    this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n      if (this._private__isSettingSize) {\n        return;\n      }\n      this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n    };\n    this._private__pane = pane;\n    this._private__options = options;\n    this._private__layoutOptions = options.layout;\n    this._private__rendererOptionsProvider = rendererOptionsProvider;\n    this._private__isLeft = side === 'left';\n    this._private__sourcePaneViews = buildPriceAxisViewsGetter('normal', side);\n    this._private__sourceTopPaneViews = buildPriceAxisViewsGetter('top', side);\n    this._private__sourceBottomPaneViews = buildPriceAxisViewsGetter('bottom', side);\n    this._private__cell = document.createElement('div');\n    this._private__cell.style.height = '100%';\n    this._private__cell.style.overflow = 'hidden';\n    this._private__cell.style.width = '25px';\n    this._private__cell.style.left = '0';\n    this._private__cell.style.position = 'relative';\n    this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    const canvas = this._private__canvasBinding.canvasElement;\n    canvas.style.position = 'absolute';\n    canvas.style.zIndex = '1';\n    canvas.style.left = '0';\n    canvas.style.top = '0';\n    this._private__topCanvasBinding = createBoundCanvas(this._private__cell, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    const topCanvas = this._private__topCanvasBinding.canvasElement;\n    topCanvas.style.position = 'absolute';\n    topCanvas.style.zIndex = '2';\n    topCanvas.style.left = '0';\n    topCanvas.style.top = '0';\n    const handler = {\n      _internal_mouseDownEvent: this._private__mouseDownEvent.bind(this),\n      _internal_touchStartEvent: this._private__mouseDownEvent.bind(this),\n      _internal_pressedMouseMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n      _internal_touchMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n      _internal_mouseDownOutsideEvent: this._private__mouseDownOutsideEvent.bind(this),\n      _internal_mouseUpEvent: this._private__mouseUpEvent.bind(this),\n      _internal_touchEndEvent: this._private__mouseUpEvent.bind(this),\n      _internal_mouseDoubleClickEvent: this._private__mouseDoubleClickEvent.bind(this),\n      _internal_doubleTapEvent: this._private__mouseDoubleClickEvent.bind(this),\n      _internal_mouseEnterEvent: this._private__mouseEnterEvent.bind(this),\n      _internal_mouseLeaveEvent: this._private__mouseLeaveEvent.bind(this)\n    };\n    this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, handler, {\n      _internal_treatVertTouchDragAsPageScroll: () => !this._private__options.handleScroll.vertTouchDrag,\n      _internal_treatHorzTouchDragAsPageScroll: () => true\n    });\n  }\n  _internal_destroy() {\n    this._private__mouseEventHandler._internal_destroy();\n    this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__topCanvasBinding.canvasElement);\n    this._private__topCanvasBinding.dispose();\n    this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__canvasBinding.canvasElement);\n    this._private__canvasBinding.dispose();\n    if (this._private__priceScale !== null) {\n      this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n    }\n    this._private__priceScale = null;\n  }\n  _internal_getElement() {\n    return this._private__cell;\n  }\n  _internal_fontSize() {\n    return this._private__layoutOptions.fontSize;\n  }\n  _internal_rendererOptions() {\n    const options = this._private__rendererOptionsProvider._internal_options();\n    const isFontChanged = this._private__font !== options._internal_font;\n    if (isFontChanged) {\n      this._private__widthCache._internal_reset();\n      this._private__font = options._internal_font;\n    }\n    return options;\n  }\n  _internal_optimalWidth() {\n    if (this._private__priceScale === null) {\n      return 0;\n    }\n    let tickMarkMaxWidth = 0;\n    const rendererOptions = this._internal_rendererOptions();\n    const ctx = ensureNotNull(this._private__canvasBinding.canvasElement.getContext('2d'));\n    ctx.save();\n    const tickMarks = this._private__priceScale._internal_marks();\n    ctx.font = this._private__baseFont();\n    if (tickMarks.length > 0) {\n      tickMarkMaxWidth = Math.max(this._private__widthCache._internal_measureText(ctx, tickMarks[0]._internal_label), this._private__widthCache._internal_measureText(ctx, tickMarks[tickMarks.length - 1]._internal_label));\n    }\n    const views = this._private__backLabels();\n    for (let j = views.length; j--;) {\n      const width = this._private__widthCache._internal_measureText(ctx, views[j]._internal_text());\n      if (width > tickMarkMaxWidth) {\n        tickMarkMaxWidth = width;\n      }\n    }\n    const firstValue = this._private__priceScale._internal_firstValue();\n    if (firstValue !== null && this._private__size !== null) {\n      const topValue = this._private__priceScale._internal_coordinateToPrice(1, firstValue);\n      const bottomValue = this._private__priceScale._internal_coordinateToPrice(this._private__size.height - 2, firstValue);\n      tickMarkMaxWidth = Math.max(tickMarkMaxWidth, this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.floor(Math.min(topValue, bottomValue)) + 0.11111111111111, firstValue)), this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.ceil(Math.max(topValue, bottomValue)) - 0.11111111111111, firstValue)));\n    }\n    ctx.restore();\n    const resultTickMarksMaxWidth = tickMarkMaxWidth || 34 /* Constants.DefaultOptimalWidth */;\n    const res = Math.ceil(rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_paddingInner + rendererOptions._internal_paddingOuter + 5 /* Constants.LabelOffset */ + resultTickMarksMaxWidth);\n    // make it even, remove this after migration to perfect fancy canvas\n    return suggestPriceScaleWidth(res);\n  }\n  _internal_setSize(newSize) {\n    if (this._private__size === null || !equalSizes(this._private__size, newSize)) {\n      this._private__size = newSize;\n      this._private__isSettingSize = true;\n      this._private__canvasBinding.resizeCanvasElement(newSize);\n      this._private__topCanvasBinding.resizeCanvasElement(newSize);\n      this._private__isSettingSize = false;\n      this._private__cell.style.width = `${newSize.width}px`;\n      this._private__cell.style.height = `${newSize.height}px`;\n    }\n  }\n  _internal_getWidth() {\n    return ensureNotNull(this._private__size).width;\n  }\n  _internal_setPriceScale(priceScale) {\n    if (this._private__priceScale === priceScale) {\n      return;\n    }\n    if (this._private__priceScale !== null) {\n      this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n    }\n    this._private__priceScale = priceScale;\n    priceScale._internal_onMarksChanged()._internal_subscribe(this._private__onMarksChanged.bind(this), this);\n  }\n  _internal_priceScale() {\n    return this._private__priceScale;\n  }\n  _internal_reset() {\n    const pane = this._private__pane._internal_state();\n    const model = this._private__pane._internal_chart()._internal_model();\n    model._internal_resetPriceScale(pane, ensureNotNull(this._internal_priceScale()));\n  }\n  _internal_paint(type) {\n    if (this._private__size === null) {\n      return;\n    }\n    if (type !== 1 /* InvalidationLevel.Cursor */) {\n      this._private__alignLabels();\n      this._private__canvasBinding.applySuggestedBitmapSize();\n      const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n      if (target !== null) {\n        target.useBitmapCoordinateSpace(scope => {\n          this._private__drawBackground(scope);\n          this._private__drawBorder(scope);\n        });\n        this._private__pane._internal_drawAdditionalSources(target, this._private__sourceBottomPaneViews);\n        this._private__drawTickMarks(target);\n        this._private__pane._internal_drawAdditionalSources(target, this._private__sourcePaneViews);\n        this._private__drawBackLabels(target);\n      }\n    }\n    this._private__topCanvasBinding.applySuggestedBitmapSize();\n    const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n    if (topTarget !== null) {\n      topTarget.useBitmapCoordinateSpace(({\n        context: ctx,\n        bitmapSize\n      }) => {\n        ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n      });\n      this._private__drawCrosshairLabel(topTarget);\n      this._private__pane._internal_drawAdditionalSources(topTarget, this._private__sourceTopPaneViews);\n    }\n  }\n  _internal_getBitmapSize() {\n    return this._private__canvasBinding.bitmapSize;\n  }\n  _internal_drawBitmap(ctx, x, y) {\n    const bitmapSize = this._internal_getBitmapSize();\n    if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n      ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n    }\n  }\n  _internal_update() {\n    var _a;\n    // this call has side-effect - it regenerates marks on the price scale\n    (_a = this._private__priceScale) === null || _a === void 0 ? void 0 : _a._internal_marks();\n  }\n  _private__mouseDownEvent(e) {\n    if (this._private__priceScale === null || this._private__priceScale._internal_isEmpty() || !this._private__options.handleScale.axisPressedMouseMove.price) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const pane = this._private__pane._internal_state();\n    this._private__mousedown = true;\n    model._internal_startScalePrice(pane, this._private__priceScale, e.localY);\n  }\n  _private__pressedMouseMoveEvent(e) {\n    if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const pane = this._private__pane._internal_state();\n    const priceScale = this._private__priceScale;\n    model._internal_scalePriceTo(pane, priceScale, e.localY);\n  }\n  _private__mouseDownOutsideEvent() {\n    if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const pane = this._private__pane._internal_state();\n    const priceScale = this._private__priceScale;\n    if (this._private__mousedown) {\n      this._private__mousedown = false;\n      model._internal_endScalePrice(pane, priceScale);\n    }\n  }\n  _private__mouseUpEvent(e) {\n    if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const pane = this._private__pane._internal_state();\n    this._private__mousedown = false;\n    model._internal_endScalePrice(pane, this._private__priceScale);\n  }\n  _private__mouseDoubleClickEvent(e) {\n    if (this._private__options.handleScale.axisDoubleClickReset.price) {\n      this._internal_reset();\n    }\n  }\n  _private__mouseEnterEvent(e) {\n    if (this._private__priceScale === null) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    if (model._internal_options().handleScale.axisPressedMouseMove.price && !this._private__priceScale._internal_isPercentage() && !this._private__priceScale._internal_isIndexedTo100()) {\n      this._private__setCursor(1 /* CursorType.NsResize */);\n    }\n  }\n  _private__mouseLeaveEvent(e) {\n    this._private__setCursor(0 /* CursorType.Default */);\n  }\n  _private__backLabels() {\n    const res = [];\n    const priceScale = this._private__priceScale === null ? undefined : this._private__priceScale;\n    const addViewsForSources = sources => {\n      for (let i = 0; i < sources.length; ++i) {\n        const source = sources[i];\n        const views = source._internal_priceAxisViews(this._private__pane._internal_state(), priceScale);\n        for (let j = 0; j < views.length; j++) {\n          res.push(views[j]);\n        }\n      }\n    };\n    // calculate max and min coordinates for views on selection\n    // crosshair individually\n    addViewsForSources(this._private__pane._internal_state()._internal_orderedSources());\n    return res;\n  }\n  _private__drawBackground({\n    context: ctx,\n    bitmapSize\n  }) {\n    const {\n      width,\n      height\n    } = bitmapSize;\n    const model = this._private__pane._internal_state()._internal_model();\n    const topColor = model._internal_backgroundTopColor();\n    const bottomColor = model._internal_backgroundBottomColor();\n    if (topColor === bottomColor) {\n      clearRect(ctx, 0, 0, width, height, topColor);\n    } else {\n      clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n    }\n  }\n  _private__drawBorder({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio\n  }) {\n    if (this._private__size === null || this._private__priceScale === null || !this._private__priceScale._internal_options().borderVisible) {\n      return;\n    }\n    ctx.fillStyle = this._private__priceScale._internal_options().borderColor;\n    const borderSize = Math.max(1, Math.floor(this._internal_rendererOptions()._internal_borderSize * horizontalPixelRatio));\n    let left;\n    if (this._private__isLeft) {\n      left = bitmapSize.width - borderSize;\n    } else {\n      left = 0;\n    }\n    ctx.fillRect(left, 0, borderSize, bitmapSize.height);\n  }\n  _private__drawTickMarks(target) {\n    if (this._private__size === null || this._private__priceScale === null) {\n      return;\n    }\n    const tickMarks = this._private__priceScale._internal_marks();\n    const priceScaleOptions = this._private__priceScale._internal_options();\n    const rendererOptions = this._internal_rendererOptions();\n    const tickMarkLeftX = this._private__isLeft ? this._private__size.width - rendererOptions._internal_tickLength : 0;\n    if (priceScaleOptions.borderVisible && priceScaleOptions.ticksVisible) {\n      target.useBitmapCoordinateSpace(({\n        context: ctx,\n        horizontalPixelRatio,\n        verticalPixelRatio\n      }) => {\n        ctx.fillStyle = priceScaleOptions.borderColor;\n        const tickHeight = Math.max(1, Math.floor(verticalPixelRatio));\n        const tickOffset = Math.floor(verticalPixelRatio * 0.5);\n        const tickLength = Math.round(rendererOptions._internal_tickLength * horizontalPixelRatio);\n        ctx.beginPath();\n        for (const tickMark of tickMarks) {\n          ctx.rect(Math.floor(tickMarkLeftX * horizontalPixelRatio), Math.round(tickMark._internal_coord * verticalPixelRatio) - tickOffset, tickLength, tickHeight);\n        }\n        ctx.fill();\n      });\n    }\n    target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      var _a;\n      ctx.font = this._private__baseFont();\n      ctx.fillStyle = (_a = priceScaleOptions.textColor) !== null && _a !== void 0 ? _a : this._private__layoutOptions.textColor;\n      ctx.textAlign = this._private__isLeft ? 'right' : 'left';\n      ctx.textBaseline = 'middle';\n      const textLeftX = this._private__isLeft ? Math.round(tickMarkLeftX - rendererOptions._internal_paddingInner) : Math.round(tickMarkLeftX + rendererOptions._internal_tickLength + rendererOptions._internal_paddingInner);\n      const yMidCorrections = tickMarks.map(mark => this._private__widthCache._internal_yMidCorrection(ctx, mark._internal_label));\n      for (let i = tickMarks.length; i--;) {\n        const tickMark = tickMarks[i];\n        ctx.fillText(tickMark._internal_label, textLeftX, tickMark._internal_coord + yMidCorrections[i]);\n      }\n    });\n  }\n  _private__alignLabels() {\n    if (this._private__size === null || this._private__priceScale === null) {\n      return;\n    }\n    const views = [];\n    const orderedSources = this._private__priceScale._internal_orderedSources().slice(); // Copy of array\n    const pane = this._private__pane;\n    const paneState = pane._internal_state();\n    const rendererOptions = this._internal_rendererOptions();\n    // if we are default price scale, append labels from no-scale\n    const isDefault = this._private__priceScale === paneState._internal_defaultVisiblePriceScale();\n    if (isDefault) {\n      this._private__pane._internal_state()._internal_orderedSources().forEach(source => {\n        if (paneState._internal_isOverlay(source)) {\n          orderedSources.push(source);\n        }\n      });\n    }\n    const priceScale = this._private__priceScale;\n    const updateForSources = sources => {\n      sources.forEach(source => {\n        const sourceViews = source._internal_priceAxisViews(paneState, priceScale);\n        // never align selected sources\n        sourceViews.forEach(view => {\n          view._internal_setFixedCoordinate(null);\n          if (view._internal_isVisible()) {\n            views.push(view);\n          }\n        });\n      });\n    };\n    // crosshair individually\n    updateForSources(orderedSources);\n    views.forEach(view => view._internal_setFixedCoordinate(view._internal_coordinate()));\n    const options = this._private__priceScale._internal_options();\n    if (!options.alignLabels) {\n      return;\n    }\n    this._private__fixLabelOverlap(views, rendererOptions);\n  }\n  _private__fixLabelOverlap(views, rendererOptions) {\n    if (this._private__size === null) {\n      return;\n    }\n    const center = this._private__size.height / 2;\n    // split into two parts\n    const top = views.filter(view => view._internal_coordinate() <= center);\n    const bottom = views.filter(view => view._internal_coordinate() > center);\n    // sort top from center to top\n    top.sort((l, r) => r._internal_coordinate() - l._internal_coordinate());\n    bottom.sort((l, r) => l._internal_coordinate() - r._internal_coordinate());\n    for (const view of views) {\n      const halfHeight = Math.floor(view._internal_height(rendererOptions) / 2);\n      const coordinate = view._internal_coordinate();\n      if (coordinate > -halfHeight && coordinate < halfHeight) {\n        view._internal_setFixedCoordinate(halfHeight);\n      }\n      if (coordinate > this._private__size.height - halfHeight && coordinate < this._private__size.height + halfHeight) {\n        view._internal_setFixedCoordinate(this._private__size.height - halfHeight);\n      }\n    }\n    recalculateOverlapping(top, 1, this._private__size.height, rendererOptions);\n    recalculateOverlapping(bottom, -1, this._private__size.height, rendererOptions);\n  }\n  _private__drawBackLabels(target) {\n    if (this._private__size === null) {\n      return;\n    }\n    const views = this._private__backLabels();\n    const rendererOptions = this._internal_rendererOptions();\n    const align = this._private__isLeft ? 'right' : 'left';\n    views.forEach(view => {\n      if (view._internal_isAxisLabelVisible()) {\n        const renderer = view._internal_renderer(ensureNotNull(this._private__priceScale));\n        renderer._internal_draw(target, rendererOptions, this._private__widthCache, align);\n      }\n    });\n  }\n  _private__drawCrosshairLabel(target) {\n    if (this._private__size === null || this._private__priceScale === null) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const views = []; // array of arrays\n    const pane = this._private__pane._internal_state();\n    const v = model._internal_crosshairSource()._internal_priceAxisViews(pane, this._private__priceScale);\n    if (v.length) {\n      views.push(v);\n    }\n    const ro = this._internal_rendererOptions();\n    const align = this._private__isLeft ? 'right' : 'left';\n    views.forEach(arr => {\n      arr.forEach(view => {\n        view._internal_renderer(ensureNotNull(this._private__priceScale))._internal_draw(target, ro, this._private__widthCache, align);\n      });\n    });\n  }\n  _private__setCursor(type) {\n    this._private__cell.style.cursor = type === 1 /* CursorType.NsResize */ ? 'ns-resize' : 'default';\n  }\n  _private__onMarksChanged() {\n    const width = this._internal_optimalWidth();\n    // avoid price scale is shrunk\n    // using < instead !== to avoid infinite changes\n    if (this._private__prevOptimalWidth < width) {\n      this._private__pane._internal_chart()._internal_model()._internal_fullUpdate();\n    }\n    this._private__prevOptimalWidth = width;\n  }\n  _private__baseFont() {\n    return makeFont(this._private__layoutOptions.fontSize, this._private__layoutOptions.fontFamily);\n  }\n}\nfunction sourceBottomPaneViews$1(source, pane) {\n  var _a, _b;\n  return (_b = (_a = source._internal_bottomPaneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nfunction sourcePaneViews$1(source, pane) {\n  var _a, _b;\n  return (_b = (_a = source._internal_paneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nfunction sourceLabelPaneViews(source, pane) {\n  var _a, _b;\n  return (_b = (_a = source._internal_labelPaneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nfunction sourceTopPaneViews$1(source, pane) {\n  var _a, _b;\n  return (_b = (_a = source._internal_topPaneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nclass PaneWidget {\n  constructor(chart, state) {\n    this._private__size = size$1({\n      width: 0,\n      height: 0\n    });\n    this._private__leftPriceAxisWidget = null;\n    this._private__rightPriceAxisWidget = null;\n    this._private__attributionLogoWidget = null;\n    this._private__startScrollingPos = null;\n    this._private__isScrolling = false;\n    this._private__clicked = new Delegate();\n    this._private__dblClicked = new Delegate();\n    this._private__prevPinchScale = 0;\n    this._private__longTap = false;\n    this._private__startTrackPoint = null;\n    this._private__exitTrackingModeOnNextTry = false;\n    this._private__initCrosshairPosition = null;\n    this._private__scrollXAnimation = null;\n    this._private__isSettingSize = false;\n    this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n      if (this._private__isSettingSize || this._private__state === null) {\n        return;\n      }\n      this._private__model()._internal_lightUpdate();\n    };\n    this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n      if (this._private__isSettingSize || this._private__state === null) {\n        return;\n      }\n      this._private__model()._internal_lightUpdate();\n    };\n    this._private__chart = chart;\n    this._private__state = state;\n    this._private__state._internal_onDestroyed()._internal_subscribe(this._private__onStateDestroyed.bind(this), this, true);\n    this._private__paneCell = document.createElement('td');\n    this._private__paneCell.style.padding = '0';\n    this._private__paneCell.style.position = 'relative';\n    const paneWrapper = document.createElement('div');\n    paneWrapper.style.width = '100%';\n    paneWrapper.style.height = '100%';\n    paneWrapper.style.position = 'relative';\n    paneWrapper.style.overflow = 'hidden';\n    this._private__leftAxisCell = document.createElement('td');\n    this._private__leftAxisCell.style.padding = '0';\n    this._private__rightAxisCell = document.createElement('td');\n    this._private__rightAxisCell.style.padding = '0';\n    this._private__paneCell.appendChild(paneWrapper);\n    this._private__canvasBinding = createBoundCanvas(paneWrapper, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    const canvas = this._private__canvasBinding.canvasElement;\n    canvas.style.position = 'absolute';\n    canvas.style.zIndex = '1';\n    canvas.style.left = '0';\n    canvas.style.top = '0';\n    this._private__topCanvasBinding = createBoundCanvas(paneWrapper, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    const topCanvas = this._private__topCanvasBinding.canvasElement;\n    topCanvas.style.position = 'absolute';\n    topCanvas.style.zIndex = '2';\n    topCanvas.style.left = '0';\n    topCanvas.style.top = '0';\n    this._private__rowElement = document.createElement('tr');\n    this._private__rowElement.appendChild(this._private__leftAxisCell);\n    this._private__rowElement.appendChild(this._private__paneCell);\n    this._private__rowElement.appendChild(this._private__rightAxisCell);\n    this._internal_updatePriceAxisWidgetsStates();\n    this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n      _internal_treatVertTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options().handleScroll.vertTouchDrag,\n      _internal_treatHorzTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options().handleScroll.horzTouchDrag\n    });\n  }\n  _internal_destroy() {\n    if (this._private__leftPriceAxisWidget !== null) {\n      this._private__leftPriceAxisWidget._internal_destroy();\n    }\n    if (this._private__rightPriceAxisWidget !== null) {\n      this._private__rightPriceAxisWidget._internal_destroy();\n    }\n    this._private__attributionLogoWidget = null;\n    this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__topCanvasBinding.canvasElement);\n    this._private__topCanvasBinding.dispose();\n    this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__canvasBinding.canvasElement);\n    this._private__canvasBinding.dispose();\n    if (this._private__state !== null) {\n      this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n    }\n    this._private__mouseEventHandler._internal_destroy();\n  }\n  _internal_state() {\n    return ensureNotNull(this._private__state);\n  }\n  _internal_setState(pane) {\n    var _a, _b;\n    if (this._private__state !== null) {\n      this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n    }\n    this._private__state = pane;\n    if (this._private__state !== null) {\n      this._private__state._internal_onDestroyed()._internal_subscribe(PaneWidget.prototype._private__onStateDestroyed.bind(this), this, true);\n    }\n    this._internal_updatePriceAxisWidgetsStates();\n    if (this._private__chart._internal_paneWidgets().indexOf(this) === this._private__chart._internal_paneWidgets().length - 1) {\n      this._private__attributionLogoWidget = (_a = this._private__attributionLogoWidget) !== null && _a !== void 0 ? _a : new AttributionLogoWidget(this._private__paneCell, this._private__chart);\n      this._private__attributionLogoWidget._internal_update();\n    } else {\n      (_b = this._private__attributionLogoWidget) === null || _b === void 0 ? void 0 : _b._internal_removeElement();\n      this._private__attributionLogoWidget = null;\n    }\n  }\n  _internal_chart() {\n    return this._private__chart;\n  }\n  _internal_getElement() {\n    return this._private__rowElement;\n  }\n  _internal_updatePriceAxisWidgetsStates() {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__recreatePriceAxisWidgets();\n    if (this._private__model()._internal_serieses().length === 0) {\n      return;\n    }\n    if (this._private__leftPriceAxisWidget !== null) {\n      const leftPriceScale = this._private__state._internal_leftPriceScale();\n      this._private__leftPriceAxisWidget._internal_setPriceScale(ensureNotNull(leftPriceScale));\n    }\n    if (this._private__rightPriceAxisWidget !== null) {\n      const rightPriceScale = this._private__state._internal_rightPriceScale();\n      this._private__rightPriceAxisWidget._internal_setPriceScale(ensureNotNull(rightPriceScale));\n    }\n  }\n  _internal_updatePriceAxisWidgets() {\n    if (this._private__leftPriceAxisWidget !== null) {\n      this._private__leftPriceAxisWidget._internal_update();\n    }\n    if (this._private__rightPriceAxisWidget !== null) {\n      this._private__rightPriceAxisWidget._internal_update();\n    }\n  }\n  _internal_stretchFactor() {\n    return this._private__state !== null ? this._private__state._internal_stretchFactor() : 0;\n  }\n  _internal_setStretchFactor(stretchFactor) {\n    if (this._private__state) {\n      this._private__state._internal_setStretchFactor(stretchFactor);\n    }\n  }\n  _internal_mouseEnterEvent(event) {\n    if (!this._private__state) {\n      return;\n    }\n    this._private__onMouseEvent();\n    const x = event.localX;\n    const y = event.localY;\n    this._private__setCrosshairPosition(x, y, event);\n  }\n  _internal_mouseDownEvent(event) {\n    this._private__onMouseEvent();\n    this._private__mouseTouchDownEvent();\n    this._private__setCrosshairPosition(event.localX, event.localY, event);\n  }\n  _internal_mouseMoveEvent(event) {\n    var _a;\n    if (!this._private__state) {\n      return;\n    }\n    this._private__onMouseEvent();\n    const x = event.localX;\n    const y = event.localY;\n    this._private__setCrosshairPosition(x, y, event);\n    const hitTest = this._internal_hitTest(x, y);\n    this._private__chart._internal_setCursorStyle((_a = hitTest === null || hitTest === void 0 ? void 0 : hitTest._internal_cursorStyle) !== null && _a !== void 0 ? _a : null);\n    this._private__model()._internal_setHoveredSource(hitTest && {\n      _internal_source: hitTest._internal_source,\n      _internal_object: hitTest._internal_object\n    });\n  }\n  _internal_mouseClickEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__onMouseEvent();\n    this._private__fireClickedDelegate(event);\n  }\n  _internal_mouseDoubleClickEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__fireMouseClickDelegate(this._private__dblClicked, event);\n  }\n  _internal_doubleTapEvent(event) {\n    this._internal_mouseDoubleClickEvent(event);\n  }\n  _internal_pressedMouseMoveEvent(event) {\n    this._private__onMouseEvent();\n    this._private__pressedMouseTouchMoveEvent(event);\n    this._private__setCrosshairPosition(event.localX, event.localY, event);\n  }\n  _internal_mouseUpEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__onMouseEvent();\n    this._private__longTap = false;\n    this._private__endScroll(event);\n  }\n  _internal_tapEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__fireClickedDelegate(event);\n  }\n  _internal_longTapEvent(event) {\n    this._private__longTap = true;\n    if (this._private__startTrackPoint === null) {\n      const point = {\n        x: event.localX,\n        y: event.localY\n      };\n      this._private__startTrackingMode(point, point, event);\n    }\n  }\n  _internal_mouseLeaveEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__onMouseEvent();\n    this._private__state._internal_model()._internal_setHoveredSource(null);\n    this._private__clearCrosshairPosition();\n  }\n  _internal_clicked() {\n    return this._private__clicked;\n  }\n  _internal_dblClicked() {\n    return this._private__dblClicked;\n  }\n  _internal_pinchStartEvent() {\n    this._private__prevPinchScale = 1;\n    this._private__model()._internal_stopTimeScaleAnimation();\n  }\n  _internal_pinchEvent(middlePoint, scale) {\n    if (!this._private__chart._internal_options().handleScale.pinch) {\n      return;\n    }\n    const zoomScale = (scale - this._private__prevPinchScale) * 5;\n    this._private__prevPinchScale = scale;\n    this._private__model()._internal_zoomTime(middlePoint._internal_x, zoomScale);\n  }\n  _internal_touchStartEvent(event) {\n    this._private__longTap = false;\n    this._private__exitTrackingModeOnNextTry = this._private__startTrackPoint !== null;\n    this._private__mouseTouchDownEvent();\n    const crosshair = this._private__model()._internal_crosshairSource();\n    if (this._private__startTrackPoint !== null && crosshair._internal_visible()) {\n      this._private__initCrosshairPosition = {\n        x: crosshair._internal_appliedX(),\n        y: crosshair._internal_appliedY()\n      };\n      this._private__startTrackPoint = {\n        x: event.localX,\n        y: event.localY\n      };\n    }\n  }\n  _internal_touchMoveEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    const x = event.localX;\n    const y = event.localY;\n    if (this._private__startTrackPoint !== null) {\n      // tracking mode: move crosshair\n      this._private__exitTrackingModeOnNextTry = false;\n      const origPoint = ensureNotNull(this._private__initCrosshairPosition);\n      const newX = origPoint.x + (x - this._private__startTrackPoint.x);\n      const newY = origPoint.y + (y - this._private__startTrackPoint.y);\n      this._private__setCrosshairPosition(newX, newY, event);\n      return;\n    }\n    this._private__pressedMouseTouchMoveEvent(event);\n  }\n  _internal_touchEndEvent(event) {\n    if (this._internal_chart()._internal_options().trackingMode.exitMode === 0 /* TrackingModeExitMode.OnTouchEnd */) {\n      this._private__exitTrackingModeOnNextTry = true;\n    }\n    this._private__tryExitTrackingMode();\n    this._private__endScroll(event);\n  }\n  _internal_hitTest(x, y) {\n    const state = this._private__state;\n    if (state === null) {\n      return null;\n    }\n    return hitTestPane(state, x, y);\n  }\n  _internal_setPriceAxisSize(width, position) {\n    const priceAxisWidget = position === 'left' ? this._private__leftPriceAxisWidget : this._private__rightPriceAxisWidget;\n    ensureNotNull(priceAxisWidget)._internal_setSize(size$1({\n      width,\n      height: this._private__size.height\n    }));\n  }\n  _internal_getSize() {\n    return this._private__size;\n  }\n  _internal_setSize(newSize) {\n    if (equalSizes(this._private__size, newSize)) {\n      return;\n    }\n    this._private__size = newSize;\n    this._private__isSettingSize = true;\n    this._private__canvasBinding.resizeCanvasElement(newSize);\n    this._private__topCanvasBinding.resizeCanvasElement(newSize);\n    this._private__isSettingSize = false;\n    this._private__paneCell.style.width = newSize.width + 'px';\n    this._private__paneCell.style.height = newSize.height + 'px';\n  }\n  _internal_recalculatePriceScales() {\n    const pane = ensureNotNull(this._private__state);\n    pane._internal_recalculatePriceScale(pane._internal_leftPriceScale());\n    pane._internal_recalculatePriceScale(pane._internal_rightPriceScale());\n    for (const source of pane._internal_dataSources()) {\n      if (pane._internal_isOverlay(source)) {\n        const priceScale = source._internal_priceScale();\n        if (priceScale !== null) {\n          pane._internal_recalculatePriceScale(priceScale);\n        }\n        // for overlay drawings price scale is owner's price scale\n        // however owner's price scale could not contain ds\n        source._internal_updateAllViews();\n      }\n    }\n  }\n  _internal_getBitmapSize() {\n    return this._private__canvasBinding.bitmapSize;\n  }\n  _internal_drawBitmap(ctx, x, y) {\n    const bitmapSize = this._internal_getBitmapSize();\n    if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n      ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n    }\n  }\n  _internal_paint(type) {\n    if (type === 0 /* InvalidationLevel.None */) {\n      return;\n    }\n    if (this._private__state === null) {\n      return;\n    }\n    if (type > 1 /* InvalidationLevel.Cursor */) {\n      this._internal_recalculatePriceScales();\n    }\n    if (this._private__leftPriceAxisWidget !== null) {\n      this._private__leftPriceAxisWidget._internal_paint(type);\n    }\n    if (this._private__rightPriceAxisWidget !== null) {\n      this._private__rightPriceAxisWidget._internal_paint(type);\n    }\n    if (type !== 1 /* InvalidationLevel.Cursor */) {\n      this._private__canvasBinding.applySuggestedBitmapSize();\n      const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n      if (target !== null) {\n        target.useBitmapCoordinateSpace(scope => {\n          this._private__drawBackground(scope);\n        });\n        if (this._private__state) {\n          this._private__drawSources(target, sourceBottomPaneViews$1);\n          this._private__drawGrid(target);\n          this._private__drawWatermark(target);\n          this._private__drawSources(target, sourcePaneViews$1);\n          this._private__drawSources(target, sourceLabelPaneViews);\n        }\n      }\n    }\n    this._private__topCanvasBinding.applySuggestedBitmapSize();\n    const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n    if (topTarget !== null) {\n      topTarget.useBitmapCoordinateSpace(({\n        context: ctx,\n        bitmapSize\n      }) => {\n        ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n      });\n      this._private__drawCrosshair(topTarget);\n      this._private__drawSources(topTarget, sourceTopPaneViews$1);\n    }\n  }\n  _internal_leftPriceAxisWidget() {\n    return this._private__leftPriceAxisWidget;\n  }\n  _internal_rightPriceAxisWidget() {\n    return this._private__rightPriceAxisWidget;\n  }\n  _internal_drawAdditionalSources(target, paneViewsGetter) {\n    this._private__drawSources(target, paneViewsGetter);\n  }\n  _private__onStateDestroyed() {\n    if (this._private__state !== null) {\n      this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n    }\n    this._private__state = null;\n  }\n  _private__fireClickedDelegate(event) {\n    this._private__fireMouseClickDelegate(this._private__clicked, event);\n  }\n  _private__fireMouseClickDelegate(delegate, event) {\n    const x = event.localX;\n    const y = event.localY;\n    if (delegate._internal_hasListeners()) {\n      delegate._internal_fire(this._private__model()._internal_timeScale()._internal_coordinateToIndex(x), {\n        x,\n        y\n      }, event);\n    }\n  }\n  _private__drawBackground({\n    context: ctx,\n    bitmapSize\n  }) {\n    const {\n      width,\n      height\n    } = bitmapSize;\n    const model = this._private__model();\n    const topColor = model._internal_backgroundTopColor();\n    const bottomColor = model._internal_backgroundBottomColor();\n    if (topColor === bottomColor) {\n      clearRect(ctx, 0, 0, width, height, bottomColor);\n    } else {\n      clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n    }\n  }\n  _private__drawGrid(target) {\n    const state = ensureNotNull(this._private__state);\n    const paneView = state._internal_grid()._internal_paneView();\n    const renderer = paneView._internal_renderer();\n    if (renderer !== null) {\n      renderer._internal_draw(target, false);\n    }\n  }\n  _private__drawWatermark(target) {\n    const source = this._private__model()._internal_watermarkSource();\n    this._private__drawSourceImpl(target, sourcePaneViews$1, drawBackground, source);\n    this._private__drawSourceImpl(target, sourcePaneViews$1, drawForeground, source);\n  }\n  _private__drawCrosshair(target) {\n    this._private__drawSourceImpl(target, sourcePaneViews$1, drawForeground, this._private__model()._internal_crosshairSource());\n  }\n  _private__drawSources(target, paneViewsGetter) {\n    const state = ensureNotNull(this._private__state);\n    const sources = state._internal_orderedSources();\n    for (const source of sources) {\n      this._private__drawSourceImpl(target, paneViewsGetter, drawBackground, source);\n    }\n    for (const source of sources) {\n      this._private__drawSourceImpl(target, paneViewsGetter, drawForeground, source);\n    }\n  }\n  _private__drawSourceImpl(target, paneViewsGetter, drawFn, source) {\n    const state = ensureNotNull(this._private__state);\n    const hoveredSource = state._internal_model()._internal_hoveredSource();\n    const isHovered = hoveredSource !== null && hoveredSource._internal_source === source;\n    const objecId = hoveredSource !== null && isHovered && hoveredSource._internal_object !== undefined ? hoveredSource._internal_object._internal_hitTestData : undefined;\n    const drawRendererFn = renderer => drawFn(renderer, target, isHovered, objecId);\n    drawSourcePaneViews(paneViewsGetter, drawRendererFn, source, state);\n  }\n  _private__recreatePriceAxisWidgets() {\n    if (this._private__state === null) {\n      return;\n    }\n    const chart = this._private__chart;\n    const leftAxisVisible = this._private__state._internal_leftPriceScale()._internal_options().visible;\n    const rightAxisVisible = this._private__state._internal_rightPriceScale()._internal_options().visible;\n    if (!leftAxisVisible && this._private__leftPriceAxisWidget !== null) {\n      this._private__leftAxisCell.removeChild(this._private__leftPriceAxisWidget._internal_getElement());\n      this._private__leftPriceAxisWidget._internal_destroy();\n      this._private__leftPriceAxisWidget = null;\n    }\n    if (!rightAxisVisible && this._private__rightPriceAxisWidget !== null) {\n      this._private__rightAxisCell.removeChild(this._private__rightPriceAxisWidget._internal_getElement());\n      this._private__rightPriceAxisWidget._internal_destroy();\n      this._private__rightPriceAxisWidget = null;\n    }\n    const rendererOptionsProvider = chart._internal_model()._internal_rendererOptionsProvider();\n    if (leftAxisVisible && this._private__leftPriceAxisWidget === null) {\n      this._private__leftPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'left');\n      this._private__leftAxisCell.appendChild(this._private__leftPriceAxisWidget._internal_getElement());\n    }\n    if (rightAxisVisible && this._private__rightPriceAxisWidget === null) {\n      this._private__rightPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'right');\n      this._private__rightAxisCell.appendChild(this._private__rightPriceAxisWidget._internal_getElement());\n    }\n  }\n  _private__preventScroll(event) {\n    return event._internal_isTouch && this._private__longTap || this._private__startTrackPoint !== null;\n  }\n  _private__correctXCoord(x) {\n    return Math.max(0, Math.min(x, this._private__size.width - 1));\n  }\n  _private__correctYCoord(y) {\n    return Math.max(0, Math.min(y, this._private__size.height - 1));\n  }\n  _private__setCrosshairPosition(x, y, event) {\n    this._private__model()._internal_setAndSaveCurrentPosition(this._private__correctXCoord(x), this._private__correctYCoord(y), event, ensureNotNull(this._private__state));\n  }\n  _private__clearCrosshairPosition() {\n    this._private__model()._internal_clearCurrentPosition();\n  }\n  _private__tryExitTrackingMode() {\n    if (this._private__exitTrackingModeOnNextTry) {\n      this._private__startTrackPoint = null;\n      this._private__clearCrosshairPosition();\n    }\n  }\n  _private__startTrackingMode(startTrackPoint, crossHairPosition, event) {\n    this._private__startTrackPoint = startTrackPoint;\n    this._private__exitTrackingModeOnNextTry = false;\n    this._private__setCrosshairPosition(crossHairPosition.x, crossHairPosition.y, event);\n    const crosshair = this._private__model()._internal_crosshairSource();\n    this._private__initCrosshairPosition = {\n      x: crosshair._internal_appliedX(),\n      y: crosshair._internal_appliedY()\n    };\n  }\n  _private__model() {\n    return this._private__chart._internal_model();\n  }\n  _private__endScroll(event) {\n    if (!this._private__isScrolling) {\n      return;\n    }\n    const model = this._private__model();\n    const state = this._internal_state();\n    model._internal_endScrollPrice(state, state._internal_defaultPriceScale());\n    this._private__startScrollingPos = null;\n    this._private__isScrolling = false;\n    model._internal_endScrollTime();\n    if (this._private__scrollXAnimation !== null) {\n      const startAnimationTime = performance.now();\n      const timeScale = model._internal_timeScale();\n      this._private__scrollXAnimation._internal_start(timeScale._internal_rightOffset(), startAnimationTime);\n      if (!this._private__scrollXAnimation._internal_finished(startAnimationTime)) {\n        model._internal_setTimeScaleAnimation(this._private__scrollXAnimation);\n      }\n    }\n  }\n  _private__onMouseEvent() {\n    this._private__startTrackPoint = null;\n  }\n  _private__mouseTouchDownEvent() {\n    if (!this._private__state) {\n      return;\n    }\n    this._private__model()._internal_stopTimeScaleAnimation();\n    if (document.activeElement !== document.body && document.activeElement !== document.documentElement) {\n      // If any focusable element except the page itself is focused, remove the focus\n      ensureNotNull(document.activeElement).blur();\n    } else {\n      // Clear selection\n      const selection = document.getSelection();\n      if (selection !== null) {\n        selection.removeAllRanges();\n      }\n    }\n    const priceScale = this._private__state._internal_defaultPriceScale();\n    if (priceScale._internal_isEmpty() || this._private__model()._internal_timeScale()._internal_isEmpty()) {\n      return;\n    }\n  }\n  // eslint-disable-next-line complexity\n  _private__pressedMouseTouchMoveEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    const model = this._private__model();\n    const timeScale = model._internal_timeScale();\n    if (timeScale._internal_isEmpty()) {\n      return;\n    }\n    const chartOptions = this._private__chart._internal_options();\n    const scrollOptions = chartOptions.handleScroll;\n    const kineticScrollOptions = chartOptions.kineticScroll;\n    if ((!scrollOptions.pressedMouseMove || event._internal_isTouch) && (!scrollOptions.horzTouchDrag && !scrollOptions.vertTouchDrag || !event._internal_isTouch)) {\n      return;\n    }\n    const priceScale = this._private__state._internal_defaultPriceScale();\n    const now = performance.now();\n    if (this._private__startScrollingPos === null && !this._private__preventScroll(event)) {\n      this._private__startScrollingPos = {\n        x: event.clientX,\n        y: event.clientY,\n        _internal_timestamp: now,\n        _internal_localX: event.localX,\n        _internal_localY: event.localY\n      };\n    }\n    if (this._private__startScrollingPos !== null && !this._private__isScrolling && (this._private__startScrollingPos.x !== event.clientX || this._private__startScrollingPos.y !== event.clientY)) {\n      if (event._internal_isTouch && kineticScrollOptions.touch || !event._internal_isTouch && kineticScrollOptions.mouse) {\n        const barSpacing = timeScale._internal_barSpacing();\n        this._private__scrollXAnimation = new KineticAnimation(0.2 /* KineticScrollConstants.MinScrollSpeed */ / barSpacing, 7 /* KineticScrollConstants.MaxScrollSpeed */ / barSpacing, 0.997 /* KineticScrollConstants.DumpingCoeff */, 15 /* KineticScrollConstants.ScrollMinMove */ / barSpacing);\n        this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), this._private__startScrollingPos._internal_timestamp);\n      } else {\n        this._private__scrollXAnimation = null;\n      }\n      if (!priceScale._internal_isEmpty()) {\n        model._internal_startScrollPrice(this._private__state, priceScale, event.localY);\n      }\n      model._internal_startScrollTime(event.localX);\n      this._private__isScrolling = true;\n    }\n    if (this._private__isScrolling) {\n      // this allows scrolling not default price scales\n      if (!priceScale._internal_isEmpty()) {\n        model._internal_scrollPriceTo(this._private__state, priceScale, event.localY);\n      }\n      model._internal_scrollTimeTo(event.localX);\n      if (this._private__scrollXAnimation !== null) {\n        this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), now);\n      }\n    }\n  }\n}\nclass PriceAxisStub {\n  constructor(side, options, params, borderVisible, bottomColor) {\n    this._private__invalidated = true;\n    this._private__size = size$1({\n      width: 0,\n      height: 0\n    });\n    this._private__canvasSuggestedBitmapSizeChangedHandler = () => this._internal_paint(3 /* InvalidationLevel.Full */);\n    this._private__isLeft = side === 'left';\n    this._private__rendererOptionsProvider = params._internal_rendererOptionsProvider;\n    this._private__options = options;\n    this._private__borderVisible = borderVisible;\n    this._private__bottomColor = bottomColor;\n    this._private__cell = document.createElement('div');\n    this._private__cell.style.width = '25px';\n    this._private__cell.style.height = '100%';\n    this._private__cell.style.overflow = 'hidden';\n    this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n  }\n  _internal_destroy() {\n    this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__canvasBinding.canvasElement);\n    this._private__canvasBinding.dispose();\n  }\n  _internal_getElement() {\n    return this._private__cell;\n  }\n  _internal_getSize() {\n    return this._private__size;\n  }\n  _internal_setSize(newSize) {\n    if (!equalSizes(this._private__size, newSize)) {\n      this._private__size = newSize;\n      this._private__canvasBinding.resizeCanvasElement(newSize);\n      this._private__cell.style.width = `${newSize.width}px`;\n      this._private__cell.style.height = `${newSize.height}px`;\n      this._private__invalidated = true;\n    }\n  }\n  _internal_paint(type) {\n    if (type < 3 /* InvalidationLevel.Full */ && !this._private__invalidated) {\n      return;\n    }\n    if (this._private__size.width === 0 || this._private__size.height === 0) {\n      return;\n    }\n    this._private__invalidated = false;\n    this._private__canvasBinding.applySuggestedBitmapSize();\n    const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n    if (target !== null) {\n      target.useBitmapCoordinateSpace(scope => {\n        this._private__drawBackground(scope);\n        this._private__drawBorder(scope);\n      });\n    }\n  }\n  _internal_getBitmapSize() {\n    return this._private__canvasBinding.bitmapSize;\n  }\n  _internal_drawBitmap(ctx, x, y) {\n    const bitmapSize = this._internal_getBitmapSize();\n    if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n      ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n    }\n  }\n  _private__drawBorder({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (!this._private__borderVisible()) {\n      return;\n    }\n    ctx.fillStyle = this._private__options.timeScale.borderColor;\n    const horzBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * horizontalPixelRatio);\n    const vertBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * verticalPixelRatio);\n    const left = this._private__isLeft ? bitmapSize.width - horzBorderSize : 0;\n    ctx.fillRect(left, 0, horzBorderSize, vertBorderSize);\n  }\n  _private__drawBackground({\n    context: ctx,\n    bitmapSize\n  }) {\n    clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__bottomColor());\n  }\n}\nfunction buildTimeAxisViewsGetter(zOrder) {\n  return source => {\n    var _a, _b;\n    return (_b = (_a = source._internal_timePaneViews) === null || _a === void 0 ? void 0 : _a.call(source, zOrder)) !== null && _b !== void 0 ? _b : [];\n  };\n}\nconst sourcePaneViews = buildTimeAxisViewsGetter('normal');\nconst sourceTopPaneViews = buildTimeAxisViewsGetter('top');\nconst sourceBottomPaneViews = buildTimeAxisViewsGetter('bottom');\nclass TimeAxisWidget {\n  constructor(chartWidget, horzScaleBehavior) {\n    this._private__leftStub = null;\n    this._private__rightStub = null;\n    this._private__rendererOptions = null;\n    this._private__mouseDown = false;\n    this._private__size = size$1({\n      width: 0,\n      height: 0\n    });\n    this._private__sizeChanged = new Delegate();\n    this._private__widthCache = new TextWidthCache(5);\n    this._private__isSettingSize = false;\n    this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n      if (!this._private__isSettingSize) {\n        this._private__chart._internal_model()._internal_lightUpdate();\n      }\n    };\n    this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n      if (!this._private__isSettingSize) {\n        this._private__chart._internal_model()._internal_lightUpdate();\n      }\n    };\n    this._private__chart = chartWidget;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._private__options = chartWidget._internal_options().layout;\n    this._private__element = document.createElement('tr');\n    this._private__leftStubCell = document.createElement('td');\n    this._private__leftStubCell.style.padding = '0';\n    this._private__rightStubCell = document.createElement('td');\n    this._private__rightStubCell.style.padding = '0';\n    this._private__cell = document.createElement('td');\n    this._private__cell.style.height = '25px';\n    this._private__cell.style.padding = '0';\n    this._private__dv = document.createElement('div');\n    this._private__dv.style.width = '100%';\n    this._private__dv.style.height = '100%';\n    this._private__dv.style.position = 'relative';\n    this._private__dv.style.overflow = 'hidden';\n    this._private__cell.appendChild(this._private__dv);\n    this._private__canvasBinding = createBoundCanvas(this._private__dv, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    const canvas = this._private__canvasBinding.canvasElement;\n    canvas.style.position = 'absolute';\n    canvas.style.zIndex = '1';\n    canvas.style.left = '0';\n    canvas.style.top = '0';\n    this._private__topCanvasBinding = createBoundCanvas(this._private__dv, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    const topCanvas = this._private__topCanvasBinding.canvasElement;\n    topCanvas.style.position = 'absolute';\n    topCanvas.style.zIndex = '2';\n    topCanvas.style.left = '0';\n    topCanvas.style.top = '0';\n    this._private__element.appendChild(this._private__leftStubCell);\n    this._private__element.appendChild(this._private__cell);\n    this._private__element.appendChild(this._private__rightStubCell);\n    this._private__recreateStubs();\n    this._private__chart._internal_model()._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__recreateStubs.bind(this), this);\n    this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n      _internal_treatVertTouchDragAsPageScroll: () => true,\n      _internal_treatHorzTouchDragAsPageScroll: () => !this._private__chart._internal_options().handleScroll.horzTouchDrag\n    });\n  }\n  _internal_destroy() {\n    this._private__mouseEventHandler._internal_destroy();\n    if (this._private__leftStub !== null) {\n      this._private__leftStub._internal_destroy();\n    }\n    if (this._private__rightStub !== null) {\n      this._private__rightStub._internal_destroy();\n    }\n    this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__topCanvasBinding.canvasElement);\n    this._private__topCanvasBinding.dispose();\n    this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    releaseCanvas(this._private__canvasBinding.canvasElement);\n    this._private__canvasBinding.dispose();\n  }\n  _internal_getElement() {\n    return this._private__element;\n  }\n  _internal_leftStub() {\n    return this._private__leftStub;\n  }\n  _internal_rightStub() {\n    return this._private__rightStub;\n  }\n  _internal_mouseDownEvent(event) {\n    if (this._private__mouseDown) {\n      return;\n    }\n    this._private__mouseDown = true;\n    const model = this._private__chart._internal_model();\n    if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n      return;\n    }\n    model._internal_startScaleTime(event.localX);\n  }\n  _internal_touchStartEvent(event) {\n    this._internal_mouseDownEvent(event);\n  }\n  _internal_mouseDownOutsideEvent() {\n    const model = this._private__chart._internal_model();\n    if (!model._internal_timeScale()._internal_isEmpty() && this._private__mouseDown) {\n      this._private__mouseDown = false;\n      if (this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n        model._internal_endScaleTime();\n      }\n    }\n  }\n  _internal_pressedMouseMoveEvent(event) {\n    const model = this._private__chart._internal_model();\n    if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n      return;\n    }\n    model._internal_scaleTimeTo(event.localX);\n  }\n  _internal_touchMoveEvent(event) {\n    this._internal_pressedMouseMoveEvent(event);\n  }\n  _internal_mouseUpEvent() {\n    this._private__mouseDown = false;\n    const model = this._private__chart._internal_model();\n    if (model._internal_timeScale()._internal_isEmpty() && !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n      return;\n    }\n    model._internal_endScaleTime();\n  }\n  _internal_touchEndEvent() {\n    this._internal_mouseUpEvent();\n  }\n  _internal_mouseDoubleClickEvent() {\n    if (this._private__chart._internal_options().handleScale.axisDoubleClickReset.time) {\n      this._private__chart._internal_model()._internal_resetTimeScale();\n    }\n  }\n  _internal_doubleTapEvent() {\n    this._internal_mouseDoubleClickEvent();\n  }\n  _internal_mouseEnterEvent() {\n    if (this._private__chart._internal_model()._internal_options().handleScale.axisPressedMouseMove.time) {\n      this._private__setCursor(1 /* CursorType.EwResize */);\n    }\n  }\n  _internal_mouseLeaveEvent() {\n    this._private__setCursor(0 /* CursorType.Default */);\n  }\n  _internal_getSize() {\n    return this._private__size;\n  }\n  _internal_sizeChanged() {\n    return this._private__sizeChanged;\n  }\n  _internal_setSizes(timeAxisSize, leftStubWidth, rightStubWidth) {\n    if (!equalSizes(this._private__size, timeAxisSize)) {\n      this._private__size = timeAxisSize;\n      this._private__isSettingSize = true;\n      this._private__canvasBinding.resizeCanvasElement(timeAxisSize);\n      this._private__topCanvasBinding.resizeCanvasElement(timeAxisSize);\n      this._private__isSettingSize = false;\n      this._private__cell.style.width = `${timeAxisSize.width}px`;\n      this._private__cell.style.height = `${timeAxisSize.height}px`;\n      this._private__sizeChanged._internal_fire(timeAxisSize);\n    }\n    if (this._private__leftStub !== null) {\n      this._private__leftStub._internal_setSize(size$1({\n        width: leftStubWidth,\n        height: timeAxisSize.height\n      }));\n    }\n    if (this._private__rightStub !== null) {\n      this._private__rightStub._internal_setSize(size$1({\n        width: rightStubWidth,\n        height: timeAxisSize.height\n      }));\n    }\n  }\n  _internal_optimalHeight() {\n    const rendererOptions = this._private__getRendererOptions();\n    return Math.ceil(\n    // rendererOptions.offsetSize +\n    rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_fontSize + rendererOptions._internal_paddingTop + rendererOptions._internal_paddingBottom + rendererOptions._internal_labelBottomOffset);\n  }\n  _internal_update() {\n    // this call has side-effect - it regenerates marks on the time scale\n    this._private__chart._internal_model()._internal_timeScale()._internal_marks();\n  }\n  _internal_getBitmapSize() {\n    return this._private__canvasBinding.bitmapSize;\n  }\n  _internal_drawBitmap(ctx, x, y) {\n    const bitmapSize = this._internal_getBitmapSize();\n    if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n      ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n    }\n  }\n  _internal_paint(type) {\n    if (type === 0 /* InvalidationLevel.None */) {\n      return;\n    }\n    if (type !== 1 /* InvalidationLevel.Cursor */) {\n      this._private__canvasBinding.applySuggestedBitmapSize();\n      const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n      if (target !== null) {\n        target.useBitmapCoordinateSpace(scope => {\n          this._private__drawBackground(scope);\n          this._private__drawBorder(scope);\n          this._private__drawAdditionalSources(target, sourceBottomPaneViews);\n        });\n        this._private__drawTickMarks(target);\n        this._private__drawAdditionalSources(target, sourcePaneViews);\n        // atm we don't have sources to be drawn on time axis except crosshair which is rendered on top level canvas\n        // so let's don't call this code at all for now\n        // this._drawLabels(this._chart.model().dataSources(), target);\n      }\n      if (this._private__leftStub !== null) {\n        this._private__leftStub._internal_paint(type);\n      }\n      if (this._private__rightStub !== null) {\n        this._private__rightStub._internal_paint(type);\n      }\n    }\n    this._private__topCanvasBinding.applySuggestedBitmapSize();\n    const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n    if (topTarget !== null) {\n      topTarget.useBitmapCoordinateSpace(({\n        context: ctx,\n        bitmapSize\n      }) => {\n        ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n      });\n      this._private__drawLabels([...this._private__chart._internal_model()._internal_serieses(), this._private__chart._internal_model()._internal_crosshairSource()], topTarget);\n      this._private__drawAdditionalSources(topTarget, sourceTopPaneViews);\n    }\n  }\n  _private__drawAdditionalSources(target, axisViewsGetter) {\n    const sources = this._private__chart._internal_model()._internal_serieses();\n    for (const source of sources) {\n      drawSourcePaneViews(axisViewsGetter, renderer => drawBackground(renderer, target, false, undefined), source, undefined);\n    }\n    for (const source of sources) {\n      drawSourcePaneViews(axisViewsGetter, renderer => drawForeground(renderer, target, false, undefined), source, undefined);\n    }\n  }\n  _private__drawBackground({\n    context: ctx,\n    bitmapSize\n  }) {\n    clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__chart._internal_model()._internal_backgroundBottomColor());\n  }\n  _private__drawBorder({\n    context: ctx,\n    bitmapSize,\n    verticalPixelRatio\n  }) {\n    if (this._private__chart._internal_options().timeScale.borderVisible) {\n      ctx.fillStyle = this._private__lineColor();\n      const borderSize = Math.max(1, Math.floor(this._private__getRendererOptions()._internal_borderSize * verticalPixelRatio));\n      ctx.fillRect(0, 0, bitmapSize.width, borderSize);\n    }\n  }\n  _private__drawTickMarks(target) {\n    const timeScale = this._private__chart._internal_model()._internal_timeScale();\n    const tickMarks = timeScale._internal_marks();\n    if (!tickMarks || tickMarks.length === 0) {\n      return;\n    }\n    const maxWeight = this._private__horzScaleBehavior.maxTickMarkWeight(tickMarks);\n    const rendererOptions = this._private__getRendererOptions();\n    const options = timeScale._internal_options();\n    if (options.borderVisible && options.ticksVisible) {\n      target.useBitmapCoordinateSpace(({\n        context: ctx,\n        horizontalPixelRatio,\n        verticalPixelRatio\n      }) => {\n        ctx.strokeStyle = this._private__lineColor();\n        ctx.fillStyle = this._private__lineColor();\n        const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n        ctx.beginPath();\n        const tickLen = Math.round(rendererOptions._internal_tickLength * verticalPixelRatio);\n        for (let index = tickMarks.length; index--;) {\n          const x = Math.round(tickMarks[index].coord * horizontalPixelRatio);\n          ctx.rect(x - tickOffset, 0, tickWidth, tickLen);\n        }\n        ctx.fill();\n      });\n    }\n    target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      const yText = rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_paddingTop + rendererOptions._internal_fontSize / 2;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = this._private__textColor();\n      // draw base marks\n      ctx.font = this._private__baseFont();\n      for (const tickMark of tickMarks) {\n        if (tickMark.weight < maxWeight) {\n          const coordinate = tickMark.needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark.coord, tickMark.label) : tickMark.coord;\n          ctx.fillText(tickMark.label, coordinate, yText);\n        }\n      }\n      if (this._private__chart._internal_options().timeScale.allowBoldLabels) {\n        ctx.font = this._private__baseBoldFont();\n      }\n      for (const tickMark of tickMarks) {\n        if (tickMark.weight >= maxWeight) {\n          const coordinate = tickMark.needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark.coord, tickMark.label) : tickMark.coord;\n          ctx.fillText(tickMark.label, coordinate, yText);\n        }\n      }\n    });\n  }\n  _private__alignTickMarkLabelCoordinate(ctx, coordinate, labelText) {\n    const labelWidth = this._private__widthCache._internal_measureText(ctx, labelText);\n    const labelWidthHalf = labelWidth / 2;\n    const leftTextCoordinate = Math.floor(coordinate - labelWidthHalf) + 0.5;\n    if (leftTextCoordinate < 0) {\n      coordinate = coordinate + Math.abs(0 - leftTextCoordinate);\n    } else if (leftTextCoordinate + labelWidth > this._private__size.width) {\n      coordinate = coordinate - Math.abs(this._private__size.width - (leftTextCoordinate + labelWidth));\n    }\n    return coordinate;\n  }\n  _private__drawLabels(sources, target) {\n    const rendererOptions = this._private__getRendererOptions();\n    for (const source of sources) {\n      for (const view of source._internal_timeAxisViews()) {\n        view._internal_renderer()._internal_draw(target, rendererOptions);\n      }\n    }\n  }\n  _private__lineColor() {\n    return this._private__chart._internal_options().timeScale.borderColor;\n  }\n  _private__textColor() {\n    return this._private__options.textColor;\n  }\n  _private__fontSize() {\n    return this._private__options.fontSize;\n  }\n  _private__baseFont() {\n    return makeFont(this._private__fontSize(), this._private__options.fontFamily);\n  }\n  _private__baseBoldFont() {\n    return makeFont(this._private__fontSize(), this._private__options.fontFamily, 'bold');\n  }\n  _private__getRendererOptions() {\n    if (this._private__rendererOptions === null) {\n      this._private__rendererOptions = {\n        _internal_borderSize: 1 /* Constants.BorderSize */,\n        _internal_baselineOffset: NaN,\n        _internal_paddingTop: NaN,\n        _internal_paddingBottom: NaN,\n        _internal_paddingHorizontal: NaN,\n        _internal_tickLength: 5 /* Constants.TickLength */,\n        _internal_fontSize: NaN,\n        _internal_font: '',\n        _internal_widthCache: new TextWidthCache(),\n        _internal_labelBottomOffset: 0\n      };\n    }\n    const rendererOptions = this._private__rendererOptions;\n    const newFont = this._private__baseFont();\n    if (rendererOptions._internal_font !== newFont) {\n      const fontSize = this._private__fontSize();\n      rendererOptions._internal_fontSize = fontSize;\n      rendererOptions._internal_font = newFont;\n      rendererOptions._internal_paddingTop = 3 * fontSize / 12;\n      rendererOptions._internal_paddingBottom = 3 * fontSize / 12;\n      rendererOptions._internal_paddingHorizontal = 9 * fontSize / 12;\n      rendererOptions._internal_baselineOffset = 0;\n      rendererOptions._internal_labelBottomOffset = 4 * fontSize / 12;\n      rendererOptions._internal_widthCache._internal_reset();\n    }\n    return this._private__rendererOptions;\n  }\n  _private__setCursor(type) {\n    this._private__cell.style.cursor = type === 1 /* CursorType.EwResize */ ? 'ew-resize' : 'default';\n  }\n  _private__recreateStubs() {\n    const model = this._private__chart._internal_model();\n    const options = model._internal_options();\n    if (!options.leftPriceScale.visible && this._private__leftStub !== null) {\n      this._private__leftStubCell.removeChild(this._private__leftStub._internal_getElement());\n      this._private__leftStub._internal_destroy();\n      this._private__leftStub = null;\n    }\n    if (!options.rightPriceScale.visible && this._private__rightStub !== null) {\n      this._private__rightStubCell.removeChild(this._private__rightStub._internal_getElement());\n      this._private__rightStub._internal_destroy();\n      this._private__rightStub = null;\n    }\n    const rendererOptionsProvider = this._private__chart._internal_model()._internal_rendererOptionsProvider();\n    const params = {\n      _internal_rendererOptionsProvider: rendererOptionsProvider\n    };\n    const borderVisibleGetter = () => {\n      return options.leftPriceScale.borderVisible && model._internal_timeScale()._internal_options().borderVisible;\n    };\n    const bottomColorGetter = () => model._internal_backgroundBottomColor();\n    if (options.leftPriceScale.visible && this._private__leftStub === null) {\n      this._private__leftStub = new PriceAxisStub('left', options, params, borderVisibleGetter, bottomColorGetter);\n      this._private__leftStubCell.appendChild(this._private__leftStub._internal_getElement());\n    }\n    if (options.rightPriceScale.visible && this._private__rightStub === null) {\n      this._private__rightStub = new PriceAxisStub('right', options, params, borderVisibleGetter, bottomColorGetter);\n      this._private__rightStubCell.appendChild(this._private__rightStub._internal_getElement());\n    }\n  }\n}\nconst windowsChrome = isChromiumBased() && isWindows();\nclass ChartWidget {\n  constructor(container, options, horzScaleBehavior) {\n    this._private__paneWidgets = [];\n    this._private__drawRafId = 0;\n    this._private__height = 0;\n    this._private__width = 0;\n    this._private__leftPriceAxisWidth = 0;\n    this._private__rightPriceAxisWidth = 0;\n    this._private__invalidateMask = null;\n    this._private__drawPlanned = false;\n    this._private__clicked = new Delegate();\n    this._private__dblClicked = new Delegate();\n    this._private__crosshairMoved = new Delegate();\n    this._private__observer = null;\n    this._private__cursorStyleOverride = null;\n    this._private__container = container;\n    this._private__options = options;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._private__element = document.createElement('div');\n    this._private__element.classList.add('tv-lightweight-charts');\n    this._private__element.style.overflow = 'hidden';\n    this._private__element.style.direction = 'ltr';\n    this._private__element.style.width = '100%';\n    this._private__element.style.height = '100%';\n    disableSelection(this._private__element);\n    this._private__tableElement = document.createElement('table');\n    this._private__tableElement.setAttribute('cellspacing', '0');\n    this._private__element.appendChild(this._private__tableElement);\n    this._private__onWheelBound = this._private__onMousewheel.bind(this);\n    if (shouldSubscribeMouseWheel(this._private__options)) {\n      this._private__setMouseWheelEventListener(true);\n    }\n    this._private__model = new ChartModel(this._private__invalidateHandler.bind(this), this._private__options, horzScaleBehavior);\n    this._internal_model()._internal_crosshairMoved()._internal_subscribe(this._private__onPaneWidgetCrosshairMoved.bind(this), this);\n    this._private__timeAxisWidget = new TimeAxisWidget(this, this._private__horzScaleBehavior);\n    this._private__tableElement.appendChild(this._private__timeAxisWidget._internal_getElement());\n    const usedObserver = options.autoSize && this._private__installObserver();\n    // observer could not fire event immediately for some cases\n    // so we have to set initial size manually\n    let width = this._private__options.width;\n    let height = this._private__options.height;\n    // ignore width/height options if observer has actually been used\n    // however respect options if installing resize observer failed\n    if (usedObserver || width === 0 || height === 0) {\n      const containerRect = container.getBoundingClientRect();\n      width = width || containerRect.width;\n      height = height || containerRect.height;\n    }\n    // BEWARE: resize must be called BEFORE _syncGuiWithModel (in constructor only)\n    // or after but with adjustSize to properly update time scale\n    this._internal_resize(width, height);\n    this._private__syncGuiWithModel();\n    container.appendChild(this._private__element);\n    this._private__updateTimeAxisVisibility();\n    this._private__model._internal_timeScale()._internal_optionsApplied()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n    this._private__model._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n  }\n  _internal_model() {\n    return this._private__model;\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_paneWidgets() {\n    return this._private__paneWidgets;\n  }\n  _internal_timeAxisWidget() {\n    return this._private__timeAxisWidget;\n  }\n  _internal_destroy() {\n    this._private__setMouseWheelEventListener(false);\n    if (this._private__drawRafId !== 0) {\n      window.cancelAnimationFrame(this._private__drawRafId);\n    }\n    this._private__model._internal_crosshairMoved()._internal_unsubscribeAll(this);\n    this._private__model._internal_timeScale()._internal_optionsApplied()._internal_unsubscribeAll(this);\n    this._private__model._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n    this._private__model._internal_destroy();\n    for (const paneWidget of this._private__paneWidgets) {\n      this._private__tableElement.removeChild(paneWidget._internal_getElement());\n      paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n      paneWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n      paneWidget._internal_destroy();\n    }\n    this._private__paneWidgets = [];\n    // for (const paneSeparator of this._paneSeparators) {\n    // \tthis._destroySeparator(paneSeparator);\n    // }\n    // this._paneSeparators = [];\n    ensureNotNull(this._private__timeAxisWidget)._internal_destroy();\n    if (this._private__element.parentElement !== null) {\n      this._private__element.parentElement.removeChild(this._private__element);\n    }\n    this._private__crosshairMoved._internal_destroy();\n    this._private__clicked._internal_destroy();\n    this._private__dblClicked._internal_destroy();\n    this._private__uninstallObserver();\n  }\n  _internal_resize(width, height, forceRepaint = false) {\n    if (this._private__height === height && this._private__width === width) {\n      return;\n    }\n    const sizeHint = suggestChartSize(size$1({\n      width,\n      height\n    }));\n    this._private__height = sizeHint.height;\n    this._private__width = sizeHint.width;\n    const heightStr = this._private__height + 'px';\n    const widthStr = this._private__width + 'px';\n    ensureNotNull(this._private__element).style.height = heightStr;\n    ensureNotNull(this._private__element).style.width = widthStr;\n    this._private__tableElement.style.height = heightStr;\n    this._private__tableElement.style.width = widthStr;\n    if (forceRepaint) {\n      this._private__drawImpl(InvalidateMask._internal_full(), performance.now());\n    } else {\n      this._private__model._internal_fullUpdate();\n    }\n  }\n  _internal_paint(invalidateMask) {\n    if (invalidateMask === undefined) {\n      invalidateMask = InvalidateMask._internal_full();\n    }\n    for (let i = 0; i < this._private__paneWidgets.length; i++) {\n      this._private__paneWidgets[i]._internal_paint(invalidateMask._internal_invalidateForPane(i)._internal_level);\n    }\n    if (this._private__options.timeScale.visible) {\n      this._private__timeAxisWidget._internal_paint(invalidateMask._internal_fullInvalidation());\n    }\n  }\n  _internal_applyOptions(options) {\n    const currentlyHasMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n    // we don't need to merge options here because it's done in chart model\n    // and since both model and widget share the same object it will be done automatically for widget as well\n    // not ideal solution for sure, but it work's for now Â¯\\_(ãƒ„)_/Â¯\n    this._private__model._internal_applyOptions(options);\n    const shouldHaveMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n    if (shouldHaveMouseWheelListener !== currentlyHasMouseWheelListener) {\n      this._private__setMouseWheelEventListener(shouldHaveMouseWheelListener);\n    }\n    this._private__updateTimeAxisVisibility();\n    this._private__applyAutoSizeOptions(options);\n  }\n  _internal_clicked() {\n    return this._private__clicked;\n  }\n  _internal_dblClicked() {\n    return this._private__dblClicked;\n  }\n  _internal_crosshairMoved() {\n    return this._private__crosshairMoved;\n  }\n  _internal_takeScreenshot() {\n    if (this._private__invalidateMask !== null) {\n      this._private__drawImpl(this._private__invalidateMask, performance.now());\n      this._private__invalidateMask = null;\n    }\n    const screeshotBitmapSize = this._private__traverseLayout(null);\n    const screenshotCanvas = document.createElement('canvas');\n    screenshotCanvas.width = screeshotBitmapSize.width;\n    screenshotCanvas.height = screeshotBitmapSize.height;\n    const ctx = ensureNotNull(screenshotCanvas.getContext('2d'));\n    this._private__traverseLayout(ctx);\n    return screenshotCanvas;\n  }\n  _internal_getPriceAxisWidth(position) {\n    if (position === 'left' && !this._private__isLeftAxisVisible()) {\n      return 0;\n    }\n    if (position === 'right' && !this._private__isRightAxisVisible()) {\n      return 0;\n    }\n    if (this._private__paneWidgets.length === 0) {\n      return 0;\n    }\n    // we don't need to worry about exactly pane widget here\n    // because all pane widgets have the same width of price axis widget\n    // see _adjustSizeImpl\n    const priceAxisWidget = position === 'left' ? this._private__paneWidgets[0]._internal_leftPriceAxisWidget() : this._private__paneWidgets[0]._internal_rightPriceAxisWidget();\n    return ensureNotNull(priceAxisWidget)._internal_getWidth();\n  }\n  _internal_autoSizeActive() {\n    return this._private__options.autoSize && this._private__observer !== null;\n  }\n  _internal_element() {\n    return this._private__element;\n  }\n  _internal_setCursorStyle(style) {\n    this._private__cursorStyleOverride = style;\n    if (this._private__cursorStyleOverride) {\n      this._internal_element().style.setProperty('cursor', style);\n    } else {\n      this._internal_element().style.removeProperty('cursor');\n    }\n  }\n  _internal_getCursorOverrideStyle() {\n    return this._private__cursorStyleOverride;\n  }\n  _internal_paneSize() {\n    // we currently only support a single pane.\n    return ensureDefined(this._private__paneWidgets[0])._internal_getSize();\n  }\n  // eslint-disable-next-line complexity\n  _private__applyAutoSizeOptions(options) {\n    if (options.autoSize === undefined && this._private__observer && (options.width !== undefined || options.height !== undefined)) {\n      warn(`You should turn autoSize off explicitly before specifying sizes; try adding options.autoSize: false to new options`);\n      return;\n    }\n    if (options.autoSize && !this._private__observer) {\n      // installing observer will override resize if successful\n      this._private__installObserver();\n    }\n    if (options.autoSize === false && this._private__observer !== null) {\n      this._private__uninstallObserver();\n    }\n    if (!options.autoSize && (options.width !== undefined || options.height !== undefined)) {\n      this._internal_resize(options.width || this._private__width, options.height || this._private__height);\n    }\n  }\n  /**\n   * Traverses the widget's layout (pane and axis child widgets),\n   * draws the screenshot (if rendering context is passed) and returns the screenshot bitmap size\n   *\n   * @param ctx - if passed, used to draw the screenshot of widget\n   * @returns screenshot bitmap size\n   */\n  _private__traverseLayout(ctx) {\n    let totalWidth = 0;\n    let totalHeight = 0;\n    const firstPane = this._private__paneWidgets[0];\n    const drawPriceAxises = (position, targetX) => {\n      let targetY = 0;\n      for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n        const paneWidget = this._private__paneWidgets[paneIndex];\n        const priceAxisWidget = ensureNotNull(position === 'left' ? paneWidget._internal_leftPriceAxisWidget() : paneWidget._internal_rightPriceAxisWidget());\n        const bitmapSize = priceAxisWidget._internal_getBitmapSize();\n        if (ctx !== null) {\n          priceAxisWidget._internal_drawBitmap(ctx, targetX, targetY);\n        }\n        targetY += bitmapSize.height;\n        // if (paneIndex < this._paneWidgets.length - 1) {\n        // \tconst separator = this._paneSeparators[paneIndex];\n        // \tconst separatorBitmapSize = separator.getBitmapSize();\n        // \tif (ctx !== null) {\n        // \t\tseparator.drawBitmap(ctx, targetX, targetY);\n        // \t}\n        // \ttargetY += separatorBitmapSize.height;\n        // }\n      }\n    };\n    // draw left price scale if exists\n    if (this._private__isLeftAxisVisible()) {\n      drawPriceAxises('left', 0);\n      const leftAxisBitmapWidth = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n      totalWidth += leftAxisBitmapWidth;\n    }\n    for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n      const paneWidget = this._private__paneWidgets[paneIndex];\n      const bitmapSize = paneWidget._internal_getBitmapSize();\n      if (ctx !== null) {\n        paneWidget._internal_drawBitmap(ctx, totalWidth, totalHeight);\n      }\n      totalHeight += bitmapSize.height;\n      // if (paneIndex < this._paneWidgets.length - 1) {\n      // \tconst separator = this._paneSeparators[paneIndex];\n      // \tconst separatorBitmapSize = separator.getBitmapSize();\n      // \tif (ctx !== null) {\n      // \t\tseparator.drawBitmap(ctx, totalWidth, totalHeight);\n      // \t}\n      // \ttotalHeight += separatorBitmapSize.height;\n      // }\n    }\n    const firstPaneBitmapWidth = firstPane._internal_getBitmapSize().width;\n    totalWidth += firstPaneBitmapWidth;\n    // draw right price scale if exists\n    if (this._private__isRightAxisVisible()) {\n      drawPriceAxises('right', totalWidth);\n      const rightAxisBitmapWidth = ensureNotNull(firstPane._internal_rightPriceAxisWidget())._internal_getBitmapSize().width;\n      totalWidth += rightAxisBitmapWidth;\n    }\n    const drawStub = (position, targetX, targetY) => {\n      const stub = ensureNotNull(position === 'left' ? this._private__timeAxisWidget._internal_leftStub() : this._private__timeAxisWidget._internal_rightStub());\n      stub._internal_drawBitmap(ensureNotNull(ctx), targetX, targetY);\n    };\n    // draw time scale and stubs\n    if (this._private__options.timeScale.visible) {\n      const timeAxisBitmapSize = this._private__timeAxisWidget._internal_getBitmapSize();\n      if (ctx !== null) {\n        let targetX = 0;\n        if (this._private__isLeftAxisVisible()) {\n          drawStub('left', targetX, totalHeight);\n          targetX = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n        }\n        this._private__timeAxisWidget._internal_drawBitmap(ctx, targetX, totalHeight);\n        targetX += timeAxisBitmapSize.width;\n        if (this._private__isRightAxisVisible()) {\n          drawStub('right', targetX, totalHeight);\n        }\n      }\n      totalHeight += timeAxisBitmapSize.height;\n    }\n    return size$1({\n      width: totalWidth,\n      height: totalHeight\n    });\n  }\n  // eslint-disable-next-line complexity\n  _private__adjustSizeImpl() {\n    let totalStretch = 0;\n    let leftPriceAxisWidth = 0;\n    let rightPriceAxisWidth = 0;\n    for (const paneWidget of this._private__paneWidgets) {\n      if (this._private__isLeftAxisVisible()) {\n        leftPriceAxisWidth = Math.max(leftPriceAxisWidth, ensureNotNull(paneWidget._internal_leftPriceAxisWidget())._internal_optimalWidth(), this._private__options.leftPriceScale.minimumWidth);\n      }\n      if (this._private__isRightAxisVisible()) {\n        rightPriceAxisWidth = Math.max(rightPriceAxisWidth, ensureNotNull(paneWidget._internal_rightPriceAxisWidget())._internal_optimalWidth(), this._private__options.rightPriceScale.minimumWidth);\n      }\n      totalStretch += paneWidget._internal_stretchFactor();\n    }\n    leftPriceAxisWidth = suggestPriceScaleWidth(leftPriceAxisWidth);\n    rightPriceAxisWidth = suggestPriceScaleWidth(rightPriceAxisWidth);\n    const width = this._private__width;\n    const height = this._private__height;\n    const paneWidth = Math.max(width - leftPriceAxisWidth - rightPriceAxisWidth, 0);\n    // const separatorCount = this._paneSeparators.length;\n    // const separatorHeight = SEPARATOR_HEIGHT;\n    const separatorsHeight = 0; // separatorHeight * separatorCount;\n    const timeAxisVisible = this._private__options.timeScale.visible;\n    let timeAxisHeight = timeAxisVisible ? Math.max(this._private__timeAxisWidget._internal_optimalHeight(), this._private__options.timeScale.minimumHeight) : 0;\n    timeAxisHeight = suggestTimeScaleHeight(timeAxisHeight);\n    const otherWidgetHeight = separatorsHeight + timeAxisHeight;\n    const totalPaneHeight = height < otherWidgetHeight ? 0 : height - otherWidgetHeight;\n    const stretchPixels = totalPaneHeight / totalStretch;\n    let accumulatedHeight = 0;\n    for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; ++paneIndex) {\n      const paneWidget = this._private__paneWidgets[paneIndex];\n      paneWidget._internal_setState(this._private__model._internal_panes()[paneIndex]);\n      let paneHeight = 0;\n      let calculatePaneHeight = 0;\n      if (paneIndex === this._private__paneWidgets.length - 1) {\n        calculatePaneHeight = totalPaneHeight - accumulatedHeight;\n      } else {\n        calculatePaneHeight = Math.round(paneWidget._internal_stretchFactor() * stretchPixels);\n      }\n      paneHeight = Math.max(calculatePaneHeight, 2);\n      accumulatedHeight += paneHeight;\n      paneWidget._internal_setSize(size$1({\n        width: paneWidth,\n        height: paneHeight\n      }));\n      if (this._private__isLeftAxisVisible()) {\n        paneWidget._internal_setPriceAxisSize(leftPriceAxisWidth, 'left');\n      }\n      if (this._private__isRightAxisVisible()) {\n        paneWidget._internal_setPriceAxisSize(rightPriceAxisWidth, 'right');\n      }\n      if (paneWidget._internal_state()) {\n        this._private__model._internal_setPaneHeight(paneWidget._internal_state(), paneHeight);\n      }\n    }\n    this._private__timeAxisWidget._internal_setSizes(size$1({\n      width: timeAxisVisible ? paneWidth : 0,\n      height: timeAxisHeight\n    }), timeAxisVisible ? leftPriceAxisWidth : 0, timeAxisVisible ? rightPriceAxisWidth : 0);\n    this._private__model._internal_setWidth(paneWidth);\n    if (this._private__leftPriceAxisWidth !== leftPriceAxisWidth) {\n      this._private__leftPriceAxisWidth = leftPriceAxisWidth;\n    }\n    if (this._private__rightPriceAxisWidth !== rightPriceAxisWidth) {\n      this._private__rightPriceAxisWidth = rightPriceAxisWidth;\n    }\n  }\n  _private__setMouseWheelEventListener(add) {\n    if (add) {\n      this._private__element.addEventListener('wheel', this._private__onWheelBound, {\n        passive: false\n      });\n      return;\n    }\n    this._private__element.removeEventListener('wheel', this._private__onWheelBound);\n  }\n  _private__determineWheelSpeedAdjustment(event) {\n    switch (event.deltaMode) {\n      case event.DOM_DELTA_PAGE:\n        // one screen at time scroll mode\n        return 120;\n      case event.DOM_DELTA_LINE:\n        // one line at time scroll mode\n        return 32;\n    }\n    if (!windowsChrome) {\n      return 1;\n    }\n    // Chromium on Windows has a bug where the scroll speed isn't correctly\n    // adjusted for high density displays. We need to correct for this so that\n    // scroll speed is consistent between browsers.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1001735\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1207308\n    return 1 / window.devicePixelRatio;\n  }\n  _private__onMousewheel(event) {\n    if ((event.deltaX === 0 || !this._private__options.handleScroll.mouseWheel) && (event.deltaY === 0 || !this._private__options.handleScale.mouseWheel)) {\n      return;\n    }\n    const scrollSpeedAdjustment = this._private__determineWheelSpeedAdjustment(event);\n    const deltaX = scrollSpeedAdjustment * event.deltaX / 100;\n    const deltaY = -(scrollSpeedAdjustment * event.deltaY / 100);\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    if (deltaY !== 0 && this._private__options.handleScale.mouseWheel) {\n      const zoomScale = Math.sign(deltaY) * Math.min(1, Math.abs(deltaY));\n      const scrollPosition = event.clientX - this._private__element.getBoundingClientRect().left;\n      this._internal_model()._internal_zoomTime(scrollPosition, zoomScale);\n    }\n    if (deltaX !== 0 && this._private__options.handleScroll.mouseWheel) {\n      this._internal_model()._internal_scrollChart(deltaX * -80); // 80 is a made up coefficient, and minus is for the \"natural\" scroll\n    }\n  }\n  _private__drawImpl(invalidateMask, time) {\n    var _a;\n    const invalidationType = invalidateMask._internal_fullInvalidation();\n    // actions for full invalidation ONLY (not shared with light)\n    if (invalidationType === 3 /* InvalidationLevel.Full */) {\n      this._private__updateGui();\n    }\n    // light or full invalidate actions\n    if (invalidationType === 3 /* InvalidationLevel.Full */ || invalidationType === 2 /* InvalidationLevel.Light */) {\n      this._private__applyMomentaryAutoScale(invalidateMask);\n      this._private__applyTimeScaleInvalidations(invalidateMask, time);\n      this._private__timeAxisWidget._internal_update();\n      this._private__paneWidgets.forEach(pane => {\n        pane._internal_updatePriceAxisWidgets();\n      });\n      // In the case a full invalidation has been postponed during the draw, reapply\n      // the timescale invalidations. A full invalidation would mean there is a change\n      // in the timescale width (caused by price scale changes) that needs to be drawn\n      // right away to avoid flickering.\n      if (((_a = this._private__invalidateMask) === null || _a === void 0 ? void 0 : _a._internal_fullInvalidation()) === 3 /* InvalidationLevel.Full */) {\n        this._private__invalidateMask._internal_merge(invalidateMask);\n        this._private__updateGui();\n        this._private__applyMomentaryAutoScale(this._private__invalidateMask);\n        this._private__applyTimeScaleInvalidations(this._private__invalidateMask, time);\n        invalidateMask = this._private__invalidateMask;\n        this._private__invalidateMask = null;\n      }\n    }\n    this._internal_paint(invalidateMask);\n  }\n  _private__applyTimeScaleInvalidations(invalidateMask, time) {\n    for (const tsInvalidation of invalidateMask._internal_timeScaleInvalidations()) {\n      this._private__applyTimeScaleInvalidation(tsInvalidation, time);\n    }\n  }\n  _private__applyMomentaryAutoScale(invalidateMask) {\n    const panes = this._private__model._internal_panes();\n    for (let i = 0; i < panes.length; i++) {\n      if (invalidateMask._internal_invalidateForPane(i)._internal_autoScale) {\n        panes[i]._internal_momentaryAutoScale();\n      }\n    }\n  }\n  _private__applyTimeScaleInvalidation(invalidation, time) {\n    const timeScale = this._private__model._internal_timeScale();\n    switch (invalidation._internal_type) {\n      case 0 /* TimeScaleInvalidationType.FitContent */:\n        timeScale._internal_fitContent();\n        break;\n      case 1 /* TimeScaleInvalidationType.ApplyRange */:\n        timeScale._internal_setLogicalRange(invalidation._internal_value);\n        break;\n      case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n        timeScale._internal_setBarSpacing(invalidation._internal_value);\n        break;\n      case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n        timeScale._internal_setRightOffset(invalidation._internal_value);\n        break;\n      case 4 /* TimeScaleInvalidationType.Reset */:\n        timeScale._internal_restoreDefault();\n        break;\n      case 5 /* TimeScaleInvalidationType.Animation */:\n        if (!invalidation._internal_value._internal_finished(time)) {\n          timeScale._internal_setRightOffset(invalidation._internal_value._internal_getPosition(time));\n        }\n        break;\n    }\n  }\n  _private__invalidateHandler(invalidateMask) {\n    if (this._private__invalidateMask !== null) {\n      this._private__invalidateMask._internal_merge(invalidateMask);\n    } else {\n      this._private__invalidateMask = invalidateMask;\n    }\n    if (!this._private__drawPlanned) {\n      this._private__drawPlanned = true;\n      this._private__drawRafId = window.requestAnimationFrame(time => {\n        this._private__drawPlanned = false;\n        this._private__drawRafId = 0;\n        if (this._private__invalidateMask !== null) {\n          const mask = this._private__invalidateMask;\n          this._private__invalidateMask = null;\n          this._private__drawImpl(mask, time);\n          for (const tsInvalidation of mask._internal_timeScaleInvalidations()) {\n            if (tsInvalidation._internal_type === 5 /* TimeScaleInvalidationType.Animation */ && !tsInvalidation._internal_value._internal_finished(time)) {\n              this._internal_model()._internal_setTimeScaleAnimation(tsInvalidation._internal_value);\n              break;\n            }\n          }\n        }\n      });\n    }\n  }\n  _private__updateGui() {\n    this._private__syncGuiWithModel();\n  }\n  // private _destroySeparator(separator: PaneSeparator): void {\n  // \tthis._tableElement.removeChild(separator.getElement());\n  // \tseparator.destroy();\n  // }\n  _private__syncGuiWithModel() {\n    const panes = this._private__model._internal_panes();\n    const targetPaneWidgetsCount = panes.length;\n    const actualPaneWidgetsCount = this._private__paneWidgets.length;\n    // Remove (if needed) pane widgets and separators\n    for (let i = targetPaneWidgetsCount; i < actualPaneWidgetsCount; i++) {\n      const paneWidget = ensureDefined(this._private__paneWidgets.pop());\n      this._private__tableElement.removeChild(paneWidget._internal_getElement());\n      paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n      paneWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n      paneWidget._internal_destroy();\n      // const paneSeparator = this._paneSeparators.pop();\n      // if (paneSeparator !== undefined) {\n      // \tthis._destroySeparator(paneSeparator);\n      // }\n    }\n    // Create (if needed) new pane widgets and separators\n    for (let i = actualPaneWidgetsCount; i < targetPaneWidgetsCount; i++) {\n      const paneWidget = new PaneWidget(this, panes[i]);\n      paneWidget._internal_clicked()._internal_subscribe(this._private__onPaneWidgetClicked.bind(this), this);\n      paneWidget._internal_dblClicked()._internal_subscribe(this._private__onPaneWidgetDblClicked.bind(this), this);\n      this._private__paneWidgets.push(paneWidget);\n      // create and insert separator\n      // if (i > 1) {\n      // \tconst paneSeparator = new PaneSeparator(this, i - 1, i, true);\n      // \tthis._paneSeparators.push(paneSeparator);\n      // \tthis._tableElement.insertBefore(paneSeparator.getElement(), this._timeAxisWidget.getElement());\n      // }\n      // insert paneWidget\n      this._private__tableElement.insertBefore(paneWidget._internal_getElement(), this._private__timeAxisWidget._internal_getElement());\n    }\n    for (let i = 0; i < targetPaneWidgetsCount; i++) {\n      const state = panes[i];\n      const paneWidget = this._private__paneWidgets[i];\n      if (paneWidget._internal_state() !== state) {\n        paneWidget._internal_setState(state);\n      } else {\n        paneWidget._internal_updatePriceAxisWidgetsStates();\n      }\n    }\n    this._private__updateTimeAxisVisibility();\n    this._private__adjustSizeImpl();\n  }\n  _private__getMouseEventParamsImpl(index, point, event) {\n    var _a;\n    const seriesData = new Map();\n    if (index !== null) {\n      const serieses = this._private__model._internal_serieses();\n      serieses.forEach(s => {\n        // TODO: replace with search left\n        const data = s._internal_bars()._internal_search(index);\n        if (data !== null) {\n          seriesData.set(s, data);\n        }\n      });\n    }\n    let clientTime;\n    if (index !== null) {\n      const timePoint = (_a = this._private__model._internal_timeScale()._internal_indexToTimeScalePoint(index)) === null || _a === void 0 ? void 0 : _a.originalTime;\n      if (timePoint !== undefined) {\n        clientTime = timePoint;\n      }\n    }\n    const hoveredSource = this._internal_model()._internal_hoveredSource();\n    const hoveredSeries = hoveredSource !== null && hoveredSource._internal_source instanceof Series ? hoveredSource._internal_source : undefined;\n    const hoveredObject = hoveredSource !== null && hoveredSource._internal_object !== undefined ? hoveredSource._internal_object._internal_externalId : undefined;\n    return {\n      _internal_originalTime: clientTime,\n      _internal_index: index !== null && index !== void 0 ? index : undefined,\n      _internal_point: point !== null && point !== void 0 ? point : undefined,\n      _internal_hoveredSeries: hoveredSeries,\n      _internal_seriesData: seriesData,\n      _internal_hoveredObject: hoveredObject,\n      _internal_touchMouseEventData: event !== null && event !== void 0 ? event : undefined\n    };\n  }\n  _private__onPaneWidgetClicked(time, point, event) {\n    this._private__clicked._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n  }\n  _private__onPaneWidgetDblClicked(time, point, event) {\n    this._private__dblClicked._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n  }\n  _private__onPaneWidgetCrosshairMoved(time, point, event) {\n    this._private__crosshairMoved._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n  }\n  _private__updateTimeAxisVisibility() {\n    const display = this._private__options.timeScale.visible ? '' : 'none';\n    this._private__timeAxisWidget._internal_getElement().style.display = display;\n  }\n  _private__isLeftAxisVisible() {\n    return this._private__paneWidgets[0]._internal_state()._internal_leftPriceScale()._internal_options().visible;\n  }\n  _private__isRightAxisVisible() {\n    return this._private__paneWidgets[0]._internal_state()._internal_rightPriceScale()._internal_options().visible;\n  }\n  _private__installObserver() {\n    // eslint-disable-next-line no-restricted-syntax\n    if (!('ResizeObserver' in window)) {\n      warn('Options contains \"autoSize\" flag, but the browser does not support ResizeObserver feature. Please provide polyfill.');\n      return false;\n    } else {\n      this._private__observer = new ResizeObserver(entries => {\n        const containerEntry = entries.find(entry => entry.target === this._private__container);\n        if (!containerEntry) {\n          return;\n        }\n        this._internal_resize(containerEntry.contentRect.width, containerEntry.contentRect.height);\n      });\n      this._private__observer.observe(this._private__container, {\n        box: 'border-box'\n      });\n      return true;\n    }\n  }\n  _private__uninstallObserver() {\n    if (this._private__observer !== null) {\n      this._private__observer.disconnect();\n    }\n    this._private__observer = null;\n  }\n}\nfunction disableSelection(element) {\n  element.style.userSelect = 'none';\n  // eslint-disable-next-line deprecation/deprecation\n  element.style.webkitUserSelect = 'none';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n  element.style.msUserSelect = 'none';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n  element.style.MozUserSelect = 'none';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n  element.style.webkitTapHighlightColor = 'transparent';\n}\nfunction shouldSubscribeMouseWheel(options) {\n  return Boolean(options.handleScroll.mouseWheel || options.handleScale.mouseWheel);\n}\nfunction isWhitespaceData(data) {\n  return data.open === undefined && data.value === undefined;\n}\nfunction isFulfilledData(data) {\n  return isFulfilledBarData(data) || isFulfilledLineData(data);\n}\nfunction isFulfilledBarData(data) {\n  return data.open !== undefined;\n}\nfunction isFulfilledLineData(data) {\n  return data.value !== undefined;\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n/* global Reflect, Promise */\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nfunction getColoredLineBasedSeriesPlotRow(time, index, item, originalTime) {\n  const val = item.value;\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [val, val, val, val],\n    _internal_originalTime: originalTime\n  };\n  if (item.color !== undefined) {\n    res._internal_color = item.color;\n  }\n  return res;\n}\nfunction getAreaSeriesPlotRow(time, index, item, originalTime) {\n  const val = item.value;\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [val, val, val, val],\n    _internal_originalTime: originalTime\n  };\n  if (item.lineColor !== undefined) {\n    res._internal_lineColor = item.lineColor;\n  }\n  if (item.topColor !== undefined) {\n    res._internal_topColor = item.topColor;\n  }\n  if (item.bottomColor !== undefined) {\n    res._internal_bottomColor = item.bottomColor;\n  }\n  return res;\n}\nfunction getBaselineSeriesPlotRow(time, index, item, originalTime) {\n  const val = item.value;\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [val, val, val, val],\n    _internal_originalTime: originalTime\n  };\n  if (item.topLineColor !== undefined) {\n    res._internal_topLineColor = item.topLineColor;\n  }\n  if (item.bottomLineColor !== undefined) {\n    res._internal_bottomLineColor = item.bottomLineColor;\n  }\n  if (item.topFillColor1 !== undefined) {\n    res._internal_topFillColor1 = item.topFillColor1;\n  }\n  if (item.topFillColor2 !== undefined) {\n    res._internal_topFillColor2 = item.topFillColor2;\n  }\n  if (item.bottomFillColor1 !== undefined) {\n    res._internal_bottomFillColor1 = item.bottomFillColor1;\n  }\n  if (item.bottomFillColor2 !== undefined) {\n    res._internal_bottomFillColor2 = item.bottomFillColor2;\n  }\n  return res;\n}\nfunction getBarSeriesPlotRow(time, index, item, originalTime) {\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [item.open, item.high, item.low, item.close],\n    _internal_originalTime: originalTime\n  };\n  if (item.color !== undefined) {\n    res._internal_color = item.color;\n  }\n  return res;\n}\nfunction getCandlestickSeriesPlotRow(time, index, item, originalTime) {\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [item.open, item.high, item.low, item.close],\n    _internal_originalTime: originalTime\n  };\n  if (item.color !== undefined) {\n    res._internal_color = item.color;\n  }\n  if (item.borderColor !== undefined) {\n    res._internal_borderColor = item.borderColor;\n  }\n  if (item.wickColor !== undefined) {\n    res._internal_wickColor = item.wickColor;\n  }\n  return res;\n}\nfunction getCustomSeriesPlotRow(time, index, item, originalTime, dataToPlotRow) {\n  const values = ensureDefined(dataToPlotRow)(item);\n  const max = Math.max(...values);\n  const min = Math.min(...values);\n  const last = values[values.length - 1];\n  const value = [last, max, min, last];\n  const _a = item,\n    {\n      time: excludedTime,\n      color\n    } = _a,\n    data = __rest(_a, [\"time\", \"color\"]);\n  return {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: value,\n    _internal_originalTime: originalTime,\n    _internal_data: data,\n    _internal_color: color\n  };\n}\nfunction isSeriesPlotRow(row) {\n  return row._internal_value !== undefined;\n}\nfunction wrapCustomValues(plotRow, bar) {\n  if (bar.customValues !== undefined) {\n    plotRow._internal_customValues = bar.customValues;\n  }\n  return plotRow;\n}\nfunction isWhitespaceDataWithCustomCheck(bar, customIsWhitespace) {\n  if (customIsWhitespace) {\n    return customIsWhitespace(bar);\n  }\n  return isWhitespaceData(bar);\n}\nfunction wrapWhitespaceData(createPlotRowFn) {\n  return (time, index, bar, originalTime, dataToPlotRow, customIsWhitespace) => {\n    if (isWhitespaceDataWithCustomCheck(bar, customIsWhitespace)) {\n      return wrapCustomValues({\n        _internal_time: time,\n        _internal_index: index,\n        _internal_originalTime: originalTime\n      }, bar);\n    }\n    return wrapCustomValues(createPlotRowFn(time, index, bar, originalTime, dataToPlotRow), bar);\n  };\n}\nfunction getSeriesPlotRowCreator(seriesType) {\n  const seriesPlotRowFnMap = {\n    Candlestick: wrapWhitespaceData(getCandlestickSeriesPlotRow),\n    Bar: wrapWhitespaceData(getBarSeriesPlotRow),\n    Area: wrapWhitespaceData(getAreaSeriesPlotRow),\n    Baseline: wrapWhitespaceData(getBaselineSeriesPlotRow),\n    Histogram: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n    Line: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n    Custom: wrapWhitespaceData(getCustomSeriesPlotRow)\n  };\n  return seriesPlotRowFnMap[seriesType];\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction createEmptyTimePointData(timePoint) {\n  return {\n    _internal_index: 0,\n    _internal_mapping: new Map(),\n    _internal_timePoint: timePoint\n  };\n}\nfunction seriesRowsFirstAndLastTime(seriesRows, bh) {\n  if (seriesRows === undefined || seriesRows.length === 0) {\n    return undefined;\n  }\n  return {\n    _internal_firstTime: bh.key(seriesRows[0]._internal_time),\n    _internal_lastTime: bh.key(seriesRows[seriesRows.length - 1]._internal_time)\n  };\n}\nfunction seriesUpdateInfo(seriesRows, prevSeriesRows, bh) {\n  const firstAndLastTime = seriesRowsFirstAndLastTime(seriesRows, bh);\n  const prevFirstAndLastTime = seriesRowsFirstAndLastTime(prevSeriesRows, bh);\n  if (firstAndLastTime !== undefined && prevFirstAndLastTime !== undefined) {\n    return {\n      _internal_lastBarUpdatedOrNewBarsAddedToTheRight: firstAndLastTime._internal_lastTime >= prevFirstAndLastTime._internal_lastTime && firstAndLastTime._internal_firstTime >= prevFirstAndLastTime._internal_firstTime\n    };\n  }\n  return undefined;\n}\nfunction timeScalePointTime(mergedPointData) {\n  let result;\n  mergedPointData.forEach(v => {\n    if (result === undefined) {\n      result = v._internal_originalTime;\n    }\n  });\n  return ensureDefined(result);\n}\nfunction saveOriginalTime(data) {\n  if (data._internal_originalTime === undefined) {\n    data._internal_originalTime = data.time;\n  }\n}\nclass DataLayer {\n  constructor(horzScaleBehavior) {\n    // note that _pointDataByTimePoint and _seriesRowsBySeries shares THE SAME objects in their values between each other\n    // it's just different kind of maps to make usages/perf better\n    this._private__pointDataByTimePoint = new Map();\n    this._private__seriesRowsBySeries = new Map();\n    this._private__seriesLastTimePoint = new Map();\n    // this is kind of \"dest\" values (in opposite to \"source\" ones) - we don't need to modify it manually, the only by calling _updateTimeScalePoints or updateSeriesData methods\n    this._private__sortedTimePoints = [];\n    this._private__horzScaleBehavior = horzScaleBehavior;\n  }\n  _internal_destroy() {\n    this._private__pointDataByTimePoint.clear();\n    this._private__seriesRowsBySeries.clear();\n    this._private__seriesLastTimePoint.clear();\n    this._private__sortedTimePoints = [];\n  }\n  _internal_setSeriesData(series, data) {\n    let needCleanupPoints = this._private__pointDataByTimePoint.size !== 0;\n    let isTimeScaleAffected = false;\n    // save previous series rows data before it's replaced inside this._setRowsToSeries\n    const prevSeriesRows = this._private__seriesRowsBySeries.get(series);\n    if (prevSeriesRows !== undefined) {\n      if (this._private__seriesRowsBySeries.size === 1) {\n        needCleanupPoints = false;\n        isTimeScaleAffected = true;\n        // perf optimization - if there is only 1 series, then we can just clear and fill everything from scratch\n        this._private__pointDataByTimePoint.clear();\n      } else {\n        // perf optimization - actually we have to use this._pointDataByTimePoint for going through here\n        // but as soon as this._sortedTimePoints is just a different form of _pointDataByTimePoint we can use it as well\n        for (const point of this._private__sortedTimePoints) {\n          if (point.pointData._internal_mapping.delete(series)) {\n            isTimeScaleAffected = true;\n          }\n        }\n      }\n    }\n    let seriesRows = [];\n    if (data.length !== 0) {\n      const originalTimes = data.map(d => d.time);\n      const timeConverter = this._private__horzScaleBehavior.createConverterToInternalObj(data);\n      const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n      const dataToPlotRow = series._internal_customSeriesPlotValuesBuilder();\n      const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n      seriesRows = data.map((item, index) => {\n        const time = timeConverter(item.time);\n        const horzItemKey = this._private__horzScaleBehavior.key(time);\n        let timePointData = this._private__pointDataByTimePoint.get(horzItemKey);\n        if (timePointData === undefined) {\n          // the indexes will be sync later\n          timePointData = createEmptyTimePointData(time);\n          this._private__pointDataByTimePoint.set(horzItemKey, timePointData);\n          isTimeScaleAffected = true;\n        }\n        const row = createPlotRow(time, timePointData._internal_index, item, originalTimes[index], dataToPlotRow, customWhitespaceChecker);\n        timePointData._internal_mapping.set(series, row);\n        return row;\n      });\n    }\n    if (needCleanupPoints) {\n      // we deleted the old data from mapping and added the new ones\n      // so there might be empty points now, let's remove them first\n      this._private__cleanupPointsData();\n    }\n    this._private__setRowsToSeries(series, seriesRows);\n    let firstChangedPointIndex = -1;\n    if (isTimeScaleAffected) {\n      // then generate the time scale points\n      // timeWeight will be updates in _updateTimeScalePoints later\n      const newTimeScalePoints = [];\n      this._private__pointDataByTimePoint.forEach(pointData => {\n        newTimeScalePoints.push({\n          timeWeight: 0,\n          time: pointData._internal_timePoint,\n          pointData,\n          originalTime: timeScalePointTime(pointData._internal_mapping)\n        });\n      });\n      newTimeScalePoints.sort((t1, t2) => this._private__horzScaleBehavior.key(t1.time) - this._private__horzScaleBehavior.key(t2.time));\n      firstChangedPointIndex = this._private__replaceTimeScalePoints(newTimeScalePoints);\n    }\n    return this._private__getUpdateResponse(series, firstChangedPointIndex, seriesUpdateInfo(this._private__seriesRowsBySeries.get(series), prevSeriesRows, this._private__horzScaleBehavior));\n  }\n  _internal_removeSeries(series) {\n    return this._internal_setSeriesData(series, []);\n  }\n  _internal_updateSeriesData(series, data) {\n    const extendedData = data;\n    saveOriginalTime(extendedData);\n    // convertStringToBusinessDay(data);\n    this._private__horzScaleBehavior.preprocessData(data);\n    const timeConverter = this._private__horzScaleBehavior.createConverterToInternalObj([data]);\n    const time = timeConverter(data.time);\n    const lastSeriesTime = this._private__seriesLastTimePoint.get(series);\n    if (lastSeriesTime !== undefined && this._private__horzScaleBehavior.key(time) < this._private__horzScaleBehavior.key(lastSeriesTime)) {\n      throw new Error(`Cannot update oldest data, last time=${lastSeriesTime}, new time=${time}`);\n    }\n    let pointDataAtTime = this._private__pointDataByTimePoint.get(this._private__horzScaleBehavior.key(time));\n    // if no point data found for the new data item\n    // that means that we need to update scale\n    const affectsTimeScale = pointDataAtTime === undefined;\n    if (pointDataAtTime === undefined) {\n      // the indexes will be sync later\n      pointDataAtTime = createEmptyTimePointData(time);\n      this._private__pointDataByTimePoint.set(this._private__horzScaleBehavior.key(time), pointDataAtTime);\n    }\n    const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n    const dataToPlotRow = series._internal_customSeriesPlotValuesBuilder();\n    const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n    const plotRow = createPlotRow(time, pointDataAtTime._internal_index, data, extendedData._internal_originalTime, dataToPlotRow, customWhitespaceChecker);\n    pointDataAtTime._internal_mapping.set(series, plotRow);\n    this._private__updateLastSeriesRow(series, plotRow);\n    const info = {\n      _internal_lastBarUpdatedOrNewBarsAddedToTheRight: isSeriesPlotRow(plotRow)\n    };\n    // if point already exist on the time scale - we don't need to make a full update and just make an incremental one\n    if (!affectsTimeScale) {\n      return this._private__getUpdateResponse(series, -1, info);\n    }\n    const newPoint = {\n      timeWeight: 0,\n      time: pointDataAtTime._internal_timePoint,\n      pointData: pointDataAtTime,\n      originalTime: timeScalePointTime(pointDataAtTime._internal_mapping)\n    };\n    const insertIndex = lowerBound(this._private__sortedTimePoints, this._private__horzScaleBehavior.key(newPoint.time), (a, b) => this._private__horzScaleBehavior.key(a.time) < b);\n    // yes, I know that this array is readonly and this change is intended to make it performative\n    // we marked _sortedTimePoints array as readonly to avoid modifying this array anywhere else\n    // but this place is exceptional case due performance reasons, sorry\n    this._private__sortedTimePoints.splice(insertIndex, 0, newPoint);\n    for (let index = insertIndex; index < this._private__sortedTimePoints.length; ++index) {\n      assignIndexToPointData(this._private__sortedTimePoints[index].pointData, index);\n    }\n    this._private__horzScaleBehavior.fillWeightsForPoints(this._private__sortedTimePoints, insertIndex);\n    return this._private__getUpdateResponse(series, insertIndex, info);\n  }\n  _private__updateLastSeriesRow(series, plotRow) {\n    let seriesData = this._private__seriesRowsBySeries.get(series);\n    if (seriesData === undefined) {\n      seriesData = [];\n      this._private__seriesRowsBySeries.set(series, seriesData);\n    }\n    const lastSeriesRow = seriesData.length !== 0 ? seriesData[seriesData.length - 1] : null;\n    if (lastSeriesRow === null || this._private__horzScaleBehavior.key(plotRow._internal_time) > this._private__horzScaleBehavior.key(lastSeriesRow._internal_time)) {\n      if (isSeriesPlotRow(plotRow)) {\n        seriesData.push(plotRow);\n      }\n    } else {\n      if (isSeriesPlotRow(plotRow)) {\n        seriesData[seriesData.length - 1] = plotRow;\n      } else {\n        seriesData.splice(-1, 1);\n      }\n    }\n    this._private__seriesLastTimePoint.set(series, plotRow._internal_time);\n  }\n  _private__setRowsToSeries(series, seriesRows) {\n    if (seriesRows.length !== 0) {\n      this._private__seriesRowsBySeries.set(series, seriesRows.filter(isSeriesPlotRow));\n      this._private__seriesLastTimePoint.set(series, seriesRows[seriesRows.length - 1]._internal_time);\n    } else {\n      this._private__seriesRowsBySeries.delete(series);\n      this._private__seriesLastTimePoint.delete(series);\n    }\n  }\n  _private__cleanupPointsData() {\n    // let's treat all current points as \"potentially removed\"\n    // we could create an array with actually potentially removed points\n    // but most likely this array will be similar to _sortedTimePoints so let's avoid using additional memory\n    // note that we can use _sortedTimePoints here since a point might be removed only it was here previously\n    for (const point of this._private__sortedTimePoints) {\n      if (point.pointData._internal_mapping.size === 0) {\n        this._private__pointDataByTimePoint.delete(this._private__horzScaleBehavior.key(point.time));\n      }\n    }\n  }\n  /**\n   * Sets new time scale and make indexes valid for all series\n   *\n   * @returns The index of the first changed point or `-1` if there is no change.\n   */\n  _private__replaceTimeScalePoints(newTimePoints) {\n    let firstChangedPointIndex = -1;\n    // search the first different point and \"syncing\" time weight by the way\n    for (let index = 0; index < this._private__sortedTimePoints.length && index < newTimePoints.length; ++index) {\n      const oldPoint = this._private__sortedTimePoints[index];\n      const newPoint = newTimePoints[index];\n      if (this._private__horzScaleBehavior.key(oldPoint.time) !== this._private__horzScaleBehavior.key(newPoint.time)) {\n        firstChangedPointIndex = index;\n        break;\n      }\n      // re-assign point's time weight for points if time is the same (and all prior times was the same)\n      newPoint.timeWeight = oldPoint.timeWeight;\n      assignIndexToPointData(newPoint.pointData, index);\n    }\n    if (firstChangedPointIndex === -1 && this._private__sortedTimePoints.length !== newTimePoints.length) {\n      // the common part of the prev and the new points are the same\n      // so the first changed point is the next after the common part\n      firstChangedPointIndex = Math.min(this._private__sortedTimePoints.length, newTimePoints.length);\n    }\n    if (firstChangedPointIndex === -1) {\n      // if no time scale changed, then do nothing\n      return -1;\n    }\n    // if time scale points are changed that means that we need to make full update to all series (with clearing points)\n    // but first we need to synchronize indexes and re-fill time weights\n    for (let index = firstChangedPointIndex; index < newTimePoints.length; ++index) {\n      assignIndexToPointData(newTimePoints[index].pointData, index);\n    }\n    // re-fill time weights for point after the first changed one\n    this._private__horzScaleBehavior.fillWeightsForPoints(newTimePoints, firstChangedPointIndex);\n    this._private__sortedTimePoints = newTimePoints;\n    return firstChangedPointIndex;\n  }\n  _private__getBaseIndex() {\n    if (this._private__seriesRowsBySeries.size === 0) {\n      // if we have no data then 'reset' the base index to null\n      return null;\n    }\n    let baseIndex = 0;\n    this._private__seriesRowsBySeries.forEach(data => {\n      if (data.length !== 0) {\n        baseIndex = Math.max(baseIndex, data[data.length - 1]._internal_index);\n      }\n    });\n    return baseIndex;\n  }\n  _private__getUpdateResponse(updatedSeries, firstChangedPointIndex, info) {\n    const dataUpdateResponse = {\n      _internal_series: new Map(),\n      _internal_timeScale: {\n        _internal_baseIndex: this._private__getBaseIndex()\n      }\n    };\n    if (firstChangedPointIndex !== -1) {\n      // TODO: it's possible to make perf improvements by checking what series has data after firstChangedPointIndex\n      // but let's skip for now\n      this._private__seriesRowsBySeries.forEach((data, s) => {\n        dataUpdateResponse._internal_series.set(s, {\n          _internal_data: data,\n          _internal_info: s === updatedSeries ? info : undefined\n        });\n      });\n      // if the series data was set to [] it will have already been removed from _seriesRowBySeries\n      // meaning the forEach above won't add the series to the data update response\n      // so we handle that case here\n      if (!this._private__seriesRowsBySeries.has(updatedSeries)) {\n        dataUpdateResponse._internal_series.set(updatedSeries, {\n          _internal_data: [],\n          _internal_info: info\n        });\n      }\n      dataUpdateResponse._internal_timeScale._internal_points = this._private__sortedTimePoints;\n      dataUpdateResponse._internal_timeScale._internal_firstChangedPointIndex = firstChangedPointIndex;\n    } else {\n      const seriesData = this._private__seriesRowsBySeries.get(updatedSeries);\n      // if no seriesData found that means that we just removed the series\n      dataUpdateResponse._internal_series.set(updatedSeries, {\n        _internal_data: seriesData || [],\n        _internal_info: info\n      });\n    }\n    return dataUpdateResponse;\n  }\n}\nfunction assignIndexToPointData(pointData, index) {\n  // first, nevertheless update index of point data (\"make it valid\")\n  pointData._internal_index = index;\n  // and then we need to sync indexes for all series\n  pointData._internal_mapping.forEach(seriesRow => {\n    seriesRow._internal_index = index;\n  });\n}\nfunction singleValueData(plotRow) {\n  const data = {\n    value: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n    time: plotRow._internal_originalTime\n  };\n  if (plotRow._internal_customValues !== undefined) {\n    data.customValues = plotRow._internal_customValues;\n  }\n  return data;\n}\nfunction lineData(plotRow) {\n  const result = singleValueData(plotRow);\n  if (plotRow._internal_color !== undefined) {\n    result.color = plotRow._internal_color;\n  }\n  return result;\n}\nfunction areaData(plotRow) {\n  const result = singleValueData(plotRow);\n  if (plotRow._internal_lineColor !== undefined) {\n    result.lineColor = plotRow._internal_lineColor;\n  }\n  if (plotRow._internal_topColor !== undefined) {\n    result.topColor = plotRow._internal_topColor;\n  }\n  if (plotRow._internal_bottomColor !== undefined) {\n    result.bottomColor = plotRow._internal_bottomColor;\n  }\n  return result;\n}\nfunction baselineData(plotRow) {\n  const result = singleValueData(plotRow);\n  if (plotRow._internal_topLineColor !== undefined) {\n    result.topLineColor = plotRow._internal_topLineColor;\n  }\n  if (plotRow._internal_bottomLineColor !== undefined) {\n    result.bottomLineColor = plotRow._internal_bottomLineColor;\n  }\n  if (plotRow._internal_topFillColor1 !== undefined) {\n    result.topFillColor1 = plotRow._internal_topFillColor1;\n  }\n  if (plotRow._internal_topFillColor2 !== undefined) {\n    result.topFillColor2 = plotRow._internal_topFillColor2;\n  }\n  if (plotRow._internal_bottomFillColor1 !== undefined) {\n    result.bottomFillColor1 = plotRow._internal_bottomFillColor1;\n  }\n  if (plotRow._internal_bottomFillColor2 !== undefined) {\n    result.bottomFillColor2 = plotRow._internal_bottomFillColor2;\n  }\n  return result;\n}\nfunction ohlcData(plotRow) {\n  const data = {\n    open: plotRow._internal_value[0 /* PlotRowValueIndex.Open */],\n    high: plotRow._internal_value[1 /* PlotRowValueIndex.High */],\n    low: plotRow._internal_value[2 /* PlotRowValueIndex.Low */],\n    close: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n    time: plotRow._internal_originalTime\n  };\n  if (plotRow._internal_customValues !== undefined) {\n    data.customValues = plotRow._internal_customValues;\n  }\n  return data;\n}\nfunction barData(plotRow) {\n  const result = ohlcData(plotRow);\n  if (plotRow._internal_color !== undefined) {\n    result.color = plotRow._internal_color;\n  }\n  return result;\n}\nfunction candlestickData(plotRow) {\n  const result = ohlcData(plotRow);\n  const {\n    _internal_color: color,\n    _internal_borderColor: borderColor,\n    _internal_wickColor: wickColor\n  } = plotRow;\n  if (color !== undefined) {\n    result.color = color;\n  }\n  if (borderColor !== undefined) {\n    result.borderColor = borderColor;\n  }\n  if (wickColor !== undefined) {\n    result.wickColor = wickColor;\n  }\n  return result;\n}\nfunction getSeriesDataCreator(seriesType) {\n  const seriesPlotRowToDataMap = {\n    Area: areaData,\n    Line: lineData,\n    Baseline: baselineData,\n    Histogram: lineData,\n    Bar: barData,\n    Candlestick: candlestickData,\n    Custom: customData\n  };\n  return seriesPlotRowToDataMap[seriesType];\n}\nfunction customData(plotRow) {\n  const time = plotRow._internal_originalTime;\n  return Object.assign(Object.assign({}, plotRow._internal_data), {\n    time\n  });\n}\nconst crosshairOptionsDefaults = {\n  vertLine: {\n    color: '#9598A1',\n    width: 1,\n    style: 3 /* LineStyle.LargeDashed */,\n    visible: true,\n    labelVisible: true,\n    labelBackgroundColor: '#131722'\n  },\n  horzLine: {\n    color: '#9598A1',\n    width: 1,\n    style: 3 /* LineStyle.LargeDashed */,\n    visible: true,\n    labelVisible: true,\n    labelBackgroundColor: '#131722'\n  },\n  mode: 1 /* CrosshairMode.Magnet */\n};\nconst gridOptionsDefaults = {\n  vertLines: {\n    color: '#D6DCDE',\n    style: 0 /* LineStyle.Solid */,\n    visible: true\n  },\n  horzLines: {\n    color: '#D6DCDE',\n    style: 0 /* LineStyle.Solid */,\n    visible: true\n  }\n};\nconst layoutOptionsDefaults = {\n  background: {\n    type: \"solid\" /* ColorType.Solid */,\n    color: '#FFFFFF'\n  },\n  textColor: '#191919',\n  fontSize: 12,\n  fontFamily: defaultFontFamily,\n  attributionLogo: true\n};\nconst priceScaleOptionsDefaults = {\n  autoScale: true,\n  mode: 0 /* PriceScaleMode.Normal */,\n  invertScale: false,\n  alignLabels: true,\n  borderVisible: true,\n  borderColor: '#2B2B43',\n  entireTextOnly: false,\n  visible: false,\n  ticksVisible: false,\n  scaleMargins: {\n    bottom: 0.1,\n    top: 0.2\n  },\n  minimumWidth: 0\n};\nconst timeScaleOptionsDefaults = {\n  rightOffset: 0,\n  barSpacing: 6,\n  minBarSpacing: 0.5,\n  fixLeftEdge: false,\n  fixRightEdge: false,\n  lockVisibleTimeRangeOnResize: false,\n  rightBarStaysOnScroll: false,\n  borderVisible: true,\n  borderColor: '#2B2B43',\n  visible: true,\n  timeVisible: false,\n  secondsVisible: true,\n  shiftVisibleRangeOnNewBar: true,\n  allowShiftVisibleRangeOnWhitespaceReplacement: false,\n  ticksVisible: false,\n  uniformDistribution: false,\n  minimumHeight: 0,\n  allowBoldLabels: true\n};\nconst watermarkOptionsDefaults = {\n  color: 'rgba(0, 0, 0, 0)',\n  visible: false,\n  fontSize: 48,\n  fontFamily: defaultFontFamily,\n  fontStyle: '',\n  text: '',\n  horzAlign: 'center',\n  vertAlign: 'center'\n};\nfunction chartOptionsDefaults() {\n  return {\n    width: 0,\n    height: 0,\n    autoSize: false,\n    layout: layoutOptionsDefaults,\n    crosshair: crosshairOptionsDefaults,\n    grid: gridOptionsDefaults,\n    overlayPriceScales: Object.assign({}, priceScaleOptionsDefaults),\n    leftPriceScale: Object.assign(Object.assign({}, priceScaleOptionsDefaults), {\n      visible: false\n    }),\n    rightPriceScale: Object.assign(Object.assign({}, priceScaleOptionsDefaults), {\n      visible: true\n    }),\n    timeScale: timeScaleOptionsDefaults,\n    watermark: watermarkOptionsDefaults,\n    localization: {\n      locale: isRunningOnClientSide ? navigator.language : '',\n      dateFormat: 'dd MMM \\'yy'\n    },\n    handleScroll: {\n      mouseWheel: true,\n      pressedMouseMove: true,\n      horzTouchDrag: true,\n      vertTouchDrag: true\n    },\n    handleScale: {\n      axisPressedMouseMove: {\n        time: true,\n        price: true\n      },\n      axisDoubleClickReset: {\n        time: true,\n        price: true\n      },\n      mouseWheel: true,\n      pinch: true\n    },\n    kineticScroll: {\n      mouse: false,\n      touch: true\n    },\n    trackingMode: {\n      exitMode: 1 /* TrackingModeExitMode.OnNextTap */\n    }\n  };\n}\nclass PriceScaleApi {\n  constructor(chartWidget, priceScaleId) {\n    this._private__chartWidget = chartWidget;\n    this._private__priceScaleId = priceScaleId;\n  }\n  applyOptions(options) {\n    this._private__chartWidget._internal_model()._internal_applyPriceScaleOptions(this._private__priceScaleId, options);\n  }\n  options() {\n    return this._private__priceScale()._internal_options();\n  }\n  width() {\n    if (!isDefaultPriceScale(this._private__priceScaleId)) {\n      return 0;\n    }\n    return this._private__chartWidget._internal_getPriceAxisWidth(this._private__priceScaleId);\n  }\n  _private__priceScale() {\n    return ensureNotNull(this._private__chartWidget._internal_model()._internal_findPriceScale(this._private__priceScaleId))._internal_priceScale;\n  }\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction checkPriceLineOptions(options) {\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  assert(typeof options.price === 'number', `the type of 'price' price line's property must be a number, got '${typeof options.price}'`);\n}\nfunction checkItemsAreOrdered(data, bh, allowDuplicates = false) {\n  if (data.length === 0) {\n    return;\n  }\n  let prevTime = bh.key(data[0].time);\n  for (let i = 1; i < data.length; ++i) {\n    const currentTime = bh.key(data[i].time);\n    const checkResult = allowDuplicates ? prevTime <= currentTime : prevTime < currentTime;\n    assert(checkResult, `data must be asc ordered by time, index=${i}, time=${currentTime}, prev time=${prevTime}`);\n    prevTime = currentTime;\n  }\n}\nfunction checkSeriesValuesType(type, data) {\n  data.forEach(getChecker(type));\n}\nfunction getChecker(type) {\n  switch (type) {\n    case 'Bar':\n    case 'Candlestick':\n      return checkBarItem.bind(null, type);\n    case 'Area':\n    case 'Baseline':\n    case 'Line':\n    case 'Histogram':\n      return checkLineItem.bind(null, type);\n    case 'Custom':\n      return checkCustomItem.bind(null, type);\n  }\n}\nfunction checkBarItem(type, barItem) {\n  if (!isFulfilledBarData(barItem)) {\n    return;\n  }\n  assert(\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  typeof barItem.open === 'number', `${type} series item data value of open must be a number, got=${typeof barItem.open}, value=${barItem.open}`);\n  assert(\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  typeof barItem.high === 'number', `${type} series item data value of high must be a number, got=${typeof barItem.high}, value=${barItem.high}`);\n  assert(\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  typeof barItem.low === 'number', `${type} series item data value of low must be a number, got=${typeof barItem.low}, value=${barItem.low}`);\n  assert(\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  typeof barItem.close === 'number', `${type} series item data value of close must be a number, got=${typeof barItem.close}, value=${barItem.close}`);\n}\nfunction checkLineItem(type, lineItem) {\n  if (!isFulfilledLineData(lineItem)) {\n    return;\n  }\n  assert(\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  typeof lineItem.value === 'number', `${type} series item data value must be a number, got=${typeof lineItem.value}, value=${lineItem.value}`);\n}\nfunction checkCustomItem(\n  // type: 'Custom',\n  // customItem: SeriesDataItemTypeMap[typeof type]\n) {\n  // Nothing to check yet...\n  return;\n}\nfunction convertSeriesMarker(sm, newTime, originalTime) {\n  const values = __rest(sm, [\"time\", \"originalTime\"]);\n  /* eslint-disable @typescript-eslint/consistent-type-assertions */\n  const res = Object.assign({\n    time: newTime\n  }, values);\n  /* eslint-enable @typescript-eslint/consistent-type-assertions */\n  if (originalTime !== undefined) {\n    res.originalTime = originalTime;\n  }\n  return res;\n}\nconst priceLineOptionsDefaults = {\n  color: '#FF0000',\n  price: 0,\n  lineStyle: 2 /* LineStyle.Dashed */,\n  lineWidth: 1,\n  lineVisible: true,\n  axisLabelVisible: true,\n  title: '',\n  axisLabelColor: '',\n  axisLabelTextColor: ''\n};\nclass PriceLine {\n  constructor(priceLine) {\n    this._private__priceLine = priceLine;\n  }\n  applyOptions(options) {\n    this._private__priceLine._internal_applyOptions(options);\n  }\n  options() {\n    return this._private__priceLine._internal_options();\n  }\n  _internal_priceLine() {\n    return this._private__priceLine;\n  }\n}\nclass SeriesApi {\n  constructor(series, dataUpdatesConsumer, priceScaleApiProvider, chartApi, horzScaleBehavior) {\n    this._private__dataChangedDelegate = new Delegate();\n    this._internal__series = series;\n    this._internal__dataUpdatesConsumer = dataUpdatesConsumer;\n    this._private__priceScaleApiProvider = priceScaleApiProvider;\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._internal__chartApi = chartApi;\n  }\n  _internal_destroy() {\n    this._private__dataChangedDelegate._internal_destroy();\n  }\n  priceFormatter() {\n    return this._internal__series._internal_formatter();\n  }\n  priceToCoordinate(price) {\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return null;\n    }\n    return this._internal__series._internal_priceScale()._internal_priceToCoordinate(price, firstValue._internal_value);\n  }\n  coordinateToPrice(coordinate) {\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return null;\n    }\n    return this._internal__series._internal_priceScale()._internal_coordinateToPrice(coordinate, firstValue._internal_value);\n  }\n  barsInLogicalRange(range) {\n    if (range === null) {\n      return null;\n    }\n    // we use TimeScaleVisibleRange here to convert LogicalRange to strict range properly\n    const correctedRange = new TimeScaleVisibleRange(new RangeImpl(range.from, range.to))._internal_strictRange();\n    const bars = this._internal__series._internal_bars();\n    if (bars._internal_isEmpty()) {\n      return null;\n    }\n    const dataFirstBarInRange = bars._internal_search(correctedRange._internal_left(), 1 /* MismatchDirection.NearestRight */);\n    const dataLastBarInRange = bars._internal_search(correctedRange._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n    const dataFirstIndex = ensureNotNull(bars._internal_firstIndex());\n    const dataLastIndex = ensureNotNull(bars._internal_lastIndex());\n    // this means that we request data in the data gap\n    // e.g. let's say we have series with data [0..10, 30..60]\n    // and we request bars info in range [15, 25]\n    // thus, dataFirstBarInRange will be with index 30 and dataLastBarInRange with 10\n    if (dataFirstBarInRange !== null && dataLastBarInRange !== null && dataFirstBarInRange._internal_index > dataLastBarInRange._internal_index) {\n      return {\n        barsBefore: range.from - dataFirstIndex,\n        barsAfter: dataLastIndex - range.to\n      };\n    }\n    const barsBefore = dataFirstBarInRange === null || dataFirstBarInRange._internal_index === dataFirstIndex ? range.from - dataFirstIndex : dataFirstBarInRange._internal_index - dataFirstIndex;\n    const barsAfter = dataLastBarInRange === null || dataLastBarInRange._internal_index === dataLastIndex ? dataLastIndex - range.to : dataLastIndex - dataLastBarInRange._internal_index;\n    const result = {\n      barsBefore,\n      barsAfter\n    };\n    // actually they can't exist separately\n    if (dataFirstBarInRange !== null && dataLastBarInRange !== null) {\n      result.from = dataFirstBarInRange._internal_originalTime;\n      result.to = dataLastBarInRange._internal_originalTime;\n    }\n    return result;\n  }\n  setData(data) {\n    checkItemsAreOrdered(data, this._private__horzScaleBehavior);\n    checkSeriesValuesType(this._internal__series._internal_seriesType(), data);\n    this._internal__dataUpdatesConsumer._internal_applyNewData(this._internal__series, data);\n    this._private__onDataChanged('full');\n  }\n  update(bar) {\n    checkSeriesValuesType(this._internal__series._internal_seriesType(), [bar]);\n    this._internal__dataUpdatesConsumer._internal_updateData(this._internal__series, bar);\n    this._private__onDataChanged('update');\n  }\n  dataByIndex(logicalIndex, mismatchDirection) {\n    const data = this._internal__series._internal_bars()._internal_search(logicalIndex, mismatchDirection);\n    if (data === null) {\n      // actually it can be a whitespace\n      return null;\n    }\n    const creator = getSeriesDataCreator(this.seriesType());\n    return creator(data);\n  }\n  data() {\n    const seriesCreator = getSeriesDataCreator(this.seriesType());\n    const rows = this._internal__series._internal_bars()._internal_rows();\n    return rows.map(row => seriesCreator(row));\n  }\n  subscribeDataChanged(handler) {\n    this._private__dataChangedDelegate._internal_subscribe(handler);\n  }\n  unsubscribeDataChanged(handler) {\n    this._private__dataChangedDelegate._internal_unsubscribe(handler);\n  }\n  setMarkers(data) {\n    checkItemsAreOrdered(data, this._private__horzScaleBehavior, true);\n    const convertedMarkers = data.map(marker => convertSeriesMarker(marker, this._private__horzScaleBehavior.convertHorzItemToInternal(marker.time), marker.time));\n    this._internal__series._internal_setMarkers(convertedMarkers);\n  }\n  markers() {\n    return this._internal__series._internal_markers().map(internalItem => {\n      return convertSeriesMarker(internalItem, internalItem.originalTime, undefined);\n    });\n  }\n  applyOptions(options) {\n    this._internal__series._internal_applyOptions(options);\n  }\n  options() {\n    return clone(this._internal__series._internal_options());\n  }\n  priceScale() {\n    return this._private__priceScaleApiProvider.priceScale(this._internal__series._internal_priceScale()._internal_id());\n  }\n  createPriceLine(options) {\n    checkPriceLineOptions(options);\n    const strictOptions = merge(clone(priceLineOptionsDefaults), options);\n    const priceLine = this._internal__series._internal_createPriceLine(strictOptions);\n    return new PriceLine(priceLine);\n  }\n  removePriceLine(line) {\n    this._internal__series._internal_removePriceLine(line._internal_priceLine());\n  }\n  seriesType() {\n    return this._internal__series._internal_seriesType();\n  }\n  attachPrimitive(primitive) {\n    // at this point we cast the generic to unknown because we\n    // don't want the model to know the types of the API (â—‘_â—‘)\n    this._internal__series._internal_attachPrimitive(primitive);\n    if (primitive.attached) {\n      primitive.attached({\n        chart: this._internal__chartApi,\n        series: this,\n        requestUpdate: () => this._internal__series._internal_model()._internal_fullUpdate()\n      });\n    }\n  }\n  detachPrimitive(primitive) {\n    this._internal__series._internal_detachPrimitive(primitive);\n    if (primitive.detached) {\n      primitive.detached();\n    }\n  }\n  _private__onDataChanged(scope) {\n    if (this._private__dataChangedDelegate._internal_hasListeners()) {\n      this._private__dataChangedDelegate._internal_fire(scope);\n    }\n  }\n}\nclass TimeScaleApi {\n  constructor(model, timeAxisWidget, horzScaleBehavior) {\n    this._private__timeRangeChanged = new Delegate();\n    this._private__logicalRangeChanged = new Delegate();\n    this._private__sizeChanged = new Delegate();\n    this._private__model = model;\n    this._private__timeScale = model._internal_timeScale();\n    this._private__timeAxisWidget = timeAxisWidget;\n    this._private__timeScale._internal_visibleBarsChanged()._internal_subscribe(this._private__onVisibleBarsChanged.bind(this));\n    this._private__timeScale._internal_logicalRangeChanged()._internal_subscribe(this._private__onVisibleLogicalRangeChanged.bind(this));\n    this._private__timeAxisWidget._internal_sizeChanged()._internal_subscribe(this._private__onSizeChanged.bind(this));\n    this._private__horzScaleBehavior = horzScaleBehavior;\n  }\n  _internal_destroy() {\n    this._private__timeScale._internal_visibleBarsChanged()._internal_unsubscribeAll(this);\n    this._private__timeScale._internal_logicalRangeChanged()._internal_unsubscribeAll(this);\n    this._private__timeAxisWidget._internal_sizeChanged()._internal_unsubscribeAll(this);\n    this._private__timeRangeChanged._internal_destroy();\n    this._private__logicalRangeChanged._internal_destroy();\n    this._private__sizeChanged._internal_destroy();\n  }\n  scrollPosition() {\n    return this._private__timeScale._internal_rightOffset();\n  }\n  scrollToPosition(position, animated) {\n    if (!animated) {\n      this._private__model._internal_setRightOffset(position);\n      return;\n    }\n    this._private__timeScale._internal_scrollToOffsetAnimated(position, 1000 /* Constants.AnimationDurationMs */);\n  }\n  scrollToRealTime() {\n    this._private__timeScale._internal_scrollToRealTime();\n  }\n  getVisibleRange() {\n    const timeRange = this._private__timeScale._internal_visibleTimeRange();\n    if (timeRange === null) {\n      return null;\n    }\n    return {\n      from: timeRange.from.originalTime,\n      to: timeRange.to.originalTime\n    };\n  }\n  setVisibleRange(range) {\n    const convertedRange = {\n      from: this._private__horzScaleBehavior.convertHorzItemToInternal(range.from),\n      to: this._private__horzScaleBehavior.convertHorzItemToInternal(range.to)\n    };\n    const logicalRange = this._private__timeScale._internal_logicalRangeForTimeRange(convertedRange);\n    this._private__model._internal_setTargetLogicalRange(logicalRange);\n  }\n  getVisibleLogicalRange() {\n    const logicalRange = this._private__timeScale._internal_visibleLogicalRange();\n    if (logicalRange === null) {\n      return null;\n    }\n    return {\n      from: logicalRange._internal_left(),\n      to: logicalRange._internal_right()\n    };\n  }\n  setVisibleLogicalRange(range) {\n    assert(range.from <= range.to, 'The from index cannot be after the to index.');\n    this._private__model._internal_setTargetLogicalRange(range);\n  }\n  resetTimeScale() {\n    this._private__model._internal_resetTimeScale();\n  }\n  fitContent() {\n    this._private__model._internal_fitContent();\n  }\n  logicalToCoordinate(logical) {\n    const timeScale = this._private__model._internal_timeScale();\n    if (timeScale._internal_isEmpty()) {\n      return null;\n    } else {\n      return timeScale._internal_indexToCoordinate(logical);\n    }\n  }\n  coordinateToLogical(x) {\n    if (this._private__timeScale._internal_isEmpty()) {\n      return null;\n    } else {\n      return this._private__timeScale._internal_coordinateToIndex(x);\n    }\n  }\n  timeToCoordinate(time) {\n    const timePoint = this._private__horzScaleBehavior.convertHorzItemToInternal(time);\n    const timePointIndex = this._private__timeScale._internal_timeToIndex(timePoint, false);\n    if (timePointIndex === null) {\n      return null;\n    }\n    return this._private__timeScale._internal_indexToCoordinate(timePointIndex);\n  }\n  coordinateToTime(x) {\n    const timeScale = this._private__model._internal_timeScale();\n    const timePointIndex = timeScale._internal_coordinateToIndex(x);\n    const timePoint = timeScale._internal_indexToTimeScalePoint(timePointIndex);\n    if (timePoint === null) {\n      return null;\n    }\n    return timePoint.originalTime;\n  }\n  width() {\n    return this._private__timeAxisWidget._internal_getSize().width;\n  }\n  height() {\n    return this._private__timeAxisWidget._internal_getSize().height;\n  }\n  subscribeVisibleTimeRangeChange(handler) {\n    this._private__timeRangeChanged._internal_subscribe(handler);\n  }\n  unsubscribeVisibleTimeRangeChange(handler) {\n    this._private__timeRangeChanged._internal_unsubscribe(handler);\n  }\n  subscribeVisibleLogicalRangeChange(handler) {\n    this._private__logicalRangeChanged._internal_subscribe(handler);\n  }\n  unsubscribeVisibleLogicalRangeChange(handler) {\n    this._private__logicalRangeChanged._internal_unsubscribe(handler);\n  }\n  subscribeSizeChange(handler) {\n    this._private__sizeChanged._internal_subscribe(handler);\n  }\n  unsubscribeSizeChange(handler) {\n    this._private__sizeChanged._internal_unsubscribe(handler);\n  }\n  applyOptions(options) {\n    this._private__timeScale._internal_applyOptions(options);\n  }\n  options() {\n    return Object.assign(Object.assign({}, clone(this._private__timeScale._internal_options())), {\n      barSpacing: this._private__timeScale._internal_barSpacing()\n    });\n  }\n  _private__onVisibleBarsChanged() {\n    if (this._private__timeRangeChanged._internal_hasListeners()) {\n      this._private__timeRangeChanged._internal_fire(this.getVisibleRange());\n    }\n  }\n  _private__onVisibleLogicalRangeChanged() {\n    if (this._private__logicalRangeChanged._internal_hasListeners()) {\n      this._private__logicalRangeChanged._internal_fire(this.getVisibleLogicalRange());\n    }\n  }\n  _private__onSizeChanged(size) {\n    this._private__sizeChanged._internal_fire(size.width, size.height);\n  }\n}\nfunction patchPriceFormat(priceFormat) {\n  if (priceFormat === undefined || priceFormat.type === 'custom') {\n    return;\n  }\n  const priceFormatBuiltIn = priceFormat;\n  if (priceFormatBuiltIn.minMove !== undefined && priceFormatBuiltIn.precision === undefined) {\n    priceFormatBuiltIn.precision = precisionByMinMove(priceFormatBuiltIn.minMove);\n  }\n}\nfunction migrateHandleScaleScrollOptions(options) {\n  if (isBoolean(options.handleScale)) {\n    const handleScale = options.handleScale;\n    options.handleScale = {\n      axisDoubleClickReset: {\n        time: handleScale,\n        price: handleScale\n      },\n      axisPressedMouseMove: {\n        time: handleScale,\n        price: handleScale\n      },\n      mouseWheel: handleScale,\n      pinch: handleScale\n    };\n  } else if (options.handleScale !== undefined) {\n    const {\n      axisPressedMouseMove,\n      axisDoubleClickReset\n    } = options.handleScale;\n    if (isBoolean(axisPressedMouseMove)) {\n      options.handleScale.axisPressedMouseMove = {\n        time: axisPressedMouseMove,\n        price: axisPressedMouseMove\n      };\n    }\n    if (isBoolean(axisDoubleClickReset)) {\n      options.handleScale.axisDoubleClickReset = {\n        time: axisDoubleClickReset,\n        price: axisDoubleClickReset\n      };\n    }\n  }\n  const handleScroll = options.handleScroll;\n  if (isBoolean(handleScroll)) {\n    options.handleScroll = {\n      horzTouchDrag: handleScroll,\n      vertTouchDrag: handleScroll,\n      mouseWheel: handleScroll,\n      pressedMouseMove: handleScroll\n    };\n  }\n}\nfunction toInternalOptions(options) {\n  migrateHandleScaleScrollOptions(options);\n  return options;\n}\nclass ChartApi {\n  constructor(container, horzScaleBehavior, options) {\n    this._private__seriesMap = new Map();\n    this._private__seriesMapReversed = new Map();\n    this._private__clickedDelegate = new Delegate();\n    this._private__dblClickedDelegate = new Delegate();\n    this._private__crosshairMovedDelegate = new Delegate();\n    this._private__dataLayer = new DataLayer(horzScaleBehavior);\n    const internalOptions = options === undefined ? clone(chartOptionsDefaults()) : merge(clone(chartOptionsDefaults()), toInternalOptions(options));\n    this._private__horzScaleBehavior = horzScaleBehavior;\n    this._private__chartWidget = new ChartWidget(container, internalOptions, horzScaleBehavior);\n    this._private__chartWidget._internal_clicked()._internal_subscribe(paramSupplier => {\n      if (this._private__clickedDelegate._internal_hasListeners()) {\n        this._private__clickedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n      }\n    }, this);\n    this._private__chartWidget._internal_dblClicked()._internal_subscribe(paramSupplier => {\n      if (this._private__dblClickedDelegate._internal_hasListeners()) {\n        this._private__dblClickedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n      }\n    }, this);\n    this._private__chartWidget._internal_crosshairMoved()._internal_subscribe(paramSupplier => {\n      if (this._private__crosshairMovedDelegate._internal_hasListeners()) {\n        this._private__crosshairMovedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n      }\n    }, this);\n    const model = this._private__chartWidget._internal_model();\n    this._private__timeScaleApi = new TimeScaleApi(model, this._private__chartWidget._internal_timeAxisWidget(), this._private__horzScaleBehavior);\n  }\n  remove() {\n    this._private__chartWidget._internal_clicked()._internal_unsubscribeAll(this);\n    this._private__chartWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n    this._private__chartWidget._internal_crosshairMoved()._internal_unsubscribeAll(this);\n    this._private__timeScaleApi._internal_destroy();\n    this._private__chartWidget._internal_destroy();\n    this._private__seriesMap.clear();\n    this._private__seriesMapReversed.clear();\n    this._private__clickedDelegate._internal_destroy();\n    this._private__dblClickedDelegate._internal_destroy();\n    this._private__crosshairMovedDelegate._internal_destroy();\n    this._private__dataLayer._internal_destroy();\n  }\n  resize(width, height, forceRepaint) {\n    if (this.autoSizeActive()) {\n      // We return early here instead of checking this within the actual _chartWidget.resize method\n      // because this should only apply to external resize requests.\n      warn(`Height and width values ignored because 'autoSize' option is enabled.`);\n      return;\n    }\n    this._private__chartWidget._internal_resize(width, height, forceRepaint);\n  }\n  addCustomSeries(customPaneView, options) {\n    const paneView = ensure(customPaneView);\n    const defaults = Object.assign(Object.assign({}, customStyleDefaults), paneView.defaultOptions());\n    return this._private__addSeriesImpl('Custom', defaults, options, paneView);\n  }\n  addAreaSeries(options) {\n    return this._private__addSeriesImpl('Area', areaStyleDefaults, options);\n  }\n  addBaselineSeries(options) {\n    return this._private__addSeriesImpl('Baseline', baselineStyleDefaults, options);\n  }\n  addBarSeries(options) {\n    return this._private__addSeriesImpl('Bar', barStyleDefaults, options);\n  }\n  addCandlestickSeries(options = {}) {\n    fillUpDownCandlesticksColors(options);\n    return this._private__addSeriesImpl('Candlestick', candlestickStyleDefaults, options);\n  }\n  addHistogramSeries(options) {\n    return this._private__addSeriesImpl('Histogram', histogramStyleDefaults, options);\n  }\n  addLineSeries(options) {\n    return this._private__addSeriesImpl('Line', lineStyleDefaults, options);\n  }\n  removeSeries(seriesApi) {\n    const series = ensureDefined(this._private__seriesMap.get(seriesApi));\n    const update = this._private__dataLayer._internal_removeSeries(series);\n    const model = this._private__chartWidget._internal_model();\n    model._internal_removeSeries(series);\n    this._private__sendUpdateToChart(update);\n    this._private__seriesMap.delete(seriesApi);\n    this._private__seriesMapReversed.delete(series);\n  }\n  _internal_applyNewData(series, data) {\n    this._private__sendUpdateToChart(this._private__dataLayer._internal_setSeriesData(series, data));\n  }\n  _internal_updateData(series, data) {\n    this._private__sendUpdateToChart(this._private__dataLayer._internal_updateSeriesData(series, data));\n  }\n  subscribeClick(handler) {\n    this._private__clickedDelegate._internal_subscribe(handler);\n  }\n  unsubscribeClick(handler) {\n    this._private__clickedDelegate._internal_unsubscribe(handler);\n  }\n  subscribeCrosshairMove(handler) {\n    this._private__crosshairMovedDelegate._internal_subscribe(handler);\n  }\n  unsubscribeCrosshairMove(handler) {\n    this._private__crosshairMovedDelegate._internal_unsubscribe(handler);\n  }\n  subscribeDblClick(handler) {\n    this._private__dblClickedDelegate._internal_subscribe(handler);\n  }\n  unsubscribeDblClick(handler) {\n    this._private__dblClickedDelegate._internal_unsubscribe(handler);\n  }\n  priceScale(priceScaleId) {\n    return new PriceScaleApi(this._private__chartWidget, priceScaleId);\n  }\n  timeScale() {\n    return this._private__timeScaleApi;\n  }\n  applyOptions(options) {\n    this._private__chartWidget._internal_applyOptions(toInternalOptions(options));\n  }\n  options() {\n    return this._private__chartWidget._internal_options();\n  }\n  takeScreenshot() {\n    return this._private__chartWidget._internal_takeScreenshot();\n  }\n  autoSizeActive() {\n    return this._private__chartWidget._internal_autoSizeActive();\n  }\n  chartElement() {\n    return this._private__chartWidget._internal_element();\n  }\n  paneSize() {\n    const size = this._private__chartWidget._internal_paneSize();\n    return {\n      height: size.height,\n      width: size.width\n    };\n  }\n  setCrosshairPosition(price, horizontalPosition, seriesApi) {\n    const series = this._private__seriesMap.get(seriesApi);\n    if (series === undefined) {\n      return;\n    }\n    const pane = this._private__chartWidget._internal_model()._internal_paneForSource(series);\n    if (pane === null) {\n      return;\n    }\n    this._private__chartWidget._internal_model()._internal_setAndSaveSyntheticPosition(price, horizontalPosition, pane);\n  }\n  clearCrosshairPosition() {\n    this._private__chartWidget._internal_model()._internal_clearCurrentPosition(true);\n  }\n  _private__addSeriesImpl(type, styleDefaults, options = {}, customPaneView) {\n    patchPriceFormat(options.priceFormat);\n    const strictOptions = merge(clone(seriesOptionsDefaults), clone(styleDefaults), options);\n    const series = this._private__chartWidget._internal_model()._internal_createSeries(type, strictOptions, customPaneView);\n    const res = new SeriesApi(series, this, this, this, this._private__horzScaleBehavior);\n    this._private__seriesMap.set(res, series);\n    this._private__seriesMapReversed.set(series, res);\n    return res;\n  }\n  _private__sendUpdateToChart(update) {\n    const model = this._private__chartWidget._internal_model();\n    model._internal_updateTimeScale(update._internal_timeScale._internal_baseIndex, update._internal_timeScale._internal_points, update._internal_timeScale._internal_firstChangedPointIndex);\n    update._internal_series.forEach((value, series) => series._internal_setData(value._internal_data, value._internal_info));\n    model._internal_recalculateAllPanes();\n  }\n  _private__mapSeriesToApi(series) {\n    return ensureDefined(this._private__seriesMapReversed.get(series));\n  }\n  _private__convertMouseParams(param) {\n    const seriesData = new Map();\n    param._internal_seriesData.forEach((plotRow, series) => {\n      const seriesType = series._internal_seriesType();\n      const data = getSeriesDataCreator(seriesType)(plotRow);\n      if (seriesType !== 'Custom') {\n        assert(isFulfilledData(data));\n      } else {\n        const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n        assert(!customWhitespaceChecker || customWhitespaceChecker(data) === false);\n      }\n      seriesData.set(this._private__mapSeriesToApi(series), data);\n    });\n    const hoveredSeries = param._internal_hoveredSeries === undefined || !this._private__seriesMapReversed.has(param._internal_hoveredSeries) ? undefined : this._private__mapSeriesToApi(param._internal_hoveredSeries);\n    return {\n      time: param._internal_originalTime,\n      logical: param._internal_index,\n      point: param._internal_point,\n      hoveredSeries,\n      hoveredObjectId: param._internal_hoveredObject,\n      seriesData,\n      sourceEvent: param._internal_touchMouseEventData\n    };\n  }\n}\n\n/**\n * This function is the main entry point of the Lightweight Charting Library. If you are using time values\n * for the horizontal scale then it is recommended that you rather use the {@link createChart} function.\n *\n * @template HorzScaleItem - type of points on the horizontal scale\n * @template THorzScaleBehavior - type of horizontal axis strategy that encapsulate all the specific behaviors of the horizontal scale type\n *\n * @param container - ID of HTML element or element itself\n * @param horzScaleBehavior - Horizontal scale behavior\n * @param options - Any subset of options to be applied at start.\n * @returns An interface to the created chart\n */\nfunction createChartEx(container, horzScaleBehavior, options) {\n  let htmlElement;\n  if (isString(container)) {\n    const element = document.getElementById(container);\n    assert(element !== null, `Cannot find element in DOM with id=${container}`);\n    htmlElement = element;\n  } else {\n    htmlElement = container;\n  }\n  const res = new ChartApi(htmlElement, horzScaleBehavior, options);\n  horzScaleBehavior.setOptions(res.options());\n  return res;\n}\n/**\n * This function is the simplified main entry point of the Lightweight Charting Library with time points for the horizontal scale.\n *\n * @param container - ID of HTML element or element itself\n * @param options - Any subset of options to be applied at start.\n * @returns An interface to the created chart\n */\nfunction createChart(container, options) {\n  return createChartEx(container, new HorzScaleBehaviorTime(), HorzScaleBehaviorTime._internal_applyDefaults(options));\n}\n/**\n * Provides the default implementation of the horizontal scale (time-based) that can be used as a base for extending the horizontal scale with custom behavior.\n * This allows for the introduction of custom functionality without re-implementing the entire {@link IHorzScaleBehavior}&lt;{@link Time}&gt; interface.\n *\n * For further details, refer to the {@link createChartEx} chart constructor method.\n *\n * @returns An uninitialized class implementing the {@link IHorzScaleBehavior}&lt;{@link Time}&gt; interface\n */\nfunction defaultHorzScaleBehavior() {\n  return HorzScaleBehaviorTime;\n}\n\n/// <reference types=\"_build-time-constants\" />\nconst customSeriesDefaultOptions = Object.assign(Object.assign({}, seriesOptionsDefaults), customStyleDefaults);\n/**\n * Returns the current version as a string. For example `'3.3.0'`.\n */\nfunction version() {\n  return \"4.2.0\";\n}\nexport { ColorType, CrosshairMode, LastPriceAnimationMode, LineStyle, LineType, MismatchDirection, PriceLineSource, PriceScaleMode, TickMarkType, TrackingModeExitMode, createChart, createChartEx, customSeriesDefaultOptions, defaultHorzScaleBehavior, isBusinessDay, isUTCTimestamp, version };","map":{"version":3,"names":["size","size$1","bindCanvasElementBitmapSizeTo","equalSizes","tryCreateCanvasRenderingTarget2D","candlestickStyleDefaults","upColor","downColor","wickVisible","borderVisible","borderColor","borderUpColor","borderDownColor","wickColor","wickUpColor","wickDownColor","barStyleDefaults","openVisible","thinBars","lineStyleDefaults","color","lineStyle","lineWidth","lineType","lineVisible","crosshairMarkerVisible","crosshairMarkerRadius","crosshairMarkerBorderColor","crosshairMarkerBorderWidth","crosshairMarkerBackgroundColor","lastPriceAnimation","pointMarkersVisible","areaStyleDefaults","topColor","bottomColor","invertFilledArea","lineColor","baselineStyleDefaults","baseValue","type","price","topFillColor1","topFillColor2","topLineColor","bottomFillColor1","bottomFillColor2","bottomLineColor","histogramStyleDefaults","base","customStyleDefaults","seriesOptionsDefaults","title","visible","lastValueVisible","priceLineVisible","priceLineSource","priceLineWidth","priceLineColor","priceLineStyle","baseLineVisible","baseLineWidth","baseLineColor","baseLineStyle","priceFormat","precision","minMove","LineType","LineStyle","setLineStyle","ctx","style","dashPatterns","dashPattern","setLineDash","drawHorizontalLine","y","left","right","beginPath","correction","moveTo","lineTo","stroke","drawVerticalLine","x","top","bottom","strokeInPixel","drawFunction","save","translate","restore","assert","condition","message","Error","ensureDefined","value","undefined","ensureNotNull","ensure","ensureNever","namedColorRgbHexStrings","khaki","azure","aliceblue","ghostwhite","gold","goldenrod","gainsboro","gray","green","honeydew","floralwhite","lightblue","lightcoral","lemonchiffon","hotpink","lightyellow","greenyellow","lightgoldenrodyellow","limegreen","linen","lightcyan","magenta","maroon","olive","orange","oldlace","mediumblue","transparent","lime","lightpink","mistyrose","moccasin","midnightblue","orchid","mediumorchid","mediumturquoise","orangered","royalblue","powderblue","red","coral","turquoise","white","whitesmoke","wheat","teal","steelblue","bisque","aquamarine","aqua","sienna","silver","springgreen","antiquewhite","burlywood","brown","beige","chocolate","chartreuse","cornflowerblue","cornsilk","crimson","cadetblue","tomato","fuchsia","blue","salmon","blanchedalmond","slateblue","slategray","thistle","tan","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","blueviolet","black","darkmagenta","darkslateblue","darkkhaki","darkorchid","darkorange","darkgreen","darkred","dodgerblue","darkslategray","dimgray","deepskyblue","firebrick","forestgreen","indigo","ivory","lavenderblush","feldspar","indianred","lightgreen","lightgrey","lightskyblue","lightslategray","lightslateblue","snow","lightseagreen","lightsalmon","darksalmon","darkviolet","mediumpurple","mediumaquamarine","skyblue","lavender","lightsteelblue","mediumvioletred","mintcream","navajowhite","navy","olivedrab","palevioletred","violetred","yellow","yellowgreen","lawngreen","pink","paleturquoise","palegoldenrod","darkolivegreen","darkseagreen","darkturquoise","peachpuff","deeppink","violet","palegreen","mediumseagreen","peru","saddlebrown","sandybrown","rosybrown","purple","seagreen","seashell","papayawhip","mediumslateblue","plum","mediumspringgreen","normalizeRgbComponent","component","Math","round","normalizeAlphaComponent","min","max","shortHexRe","hexRe","rgbRe","rgbaRe","colorStringToRgba","colorString","toLowerCase","matches","exec","parseInt","length","parseFloat","rgbaToGrayscale","rgbValue","redComponentGrayscaleWeight","greenComponentGrayscaleWeight","blueComponentGrayscaleWeight","applyAlpha","alpha","originRgba","originAlpha","generateContrastColors","backgroundColor","rgb","_internal_background","_internal_foreground","colorStringToGrayscale","gradientColorAtPercent","percent","topR","topG","topB","topA","bottomR","bottomG","bottomB","bottomA","resultRgba","Delegate","constructor","_private__listeners","_internal_subscribe","callback","linkedObject","singleshot","listener","_internal_callback","_internal_linkedObject","_internal_singleshot","push","_internal_unsubscribe","index","findIndex","splice","_internal_unsubscribeAll","filter","_internal_fire","param1","param2","param3","listenersSnapshot","forEach","_internal_hasListeners","_internal_destroy","merge","dst","sources","src","i","Array","isArray","isNumber","isFinite","isInteger","isString","isBoolean","clone","object","o","c","p","v","hasOwnProperty","notNull","t","undefinedIfNull","defaultFontFamily","makeFont","family","PriceAxisRendererOptionsProvider","chartModel","_private__rendererOptions","_internal_borderSize","_internal_tickLength","_internal_fontSize","NaN","_internal_font","_internal_fontFamily","_internal_color","_internal_paneBackgroundColor","_internal_paddingBottom","_internal_paddingInner","_internal_paddingOuter","_internal_paddingTop","_internal_baselineOffset","_private__chartModel","_internal_options","rendererOptions","currentFontSize","_private__fontSize","currentFontFamily","_private__fontFamily","_private__textColor","_private__paneBackgroundColor","layout","textColor","_internal_backgroundTopColor","fontSize","fontFamily","CompositeRenderer","_private__renderers","_internal_setRenderers","renderers","_internal_draw","target","isHovered","hitTestData","r","BitmapCoordinatesPaneRenderer","useBitmapCoordinateSpace","scope","_internal__drawImpl","PaneRendererMarks","arguments","_internal__data","_internal_setData","data","context","horizontalPixelRatio","verticalPixelRatio","_internal_visibleRange","visibleRange","tickWidth","floor","draw","radiusMedia","to","from","point","_internal_items","centerX","_internal_x","centerY","_internal_y","radius","arc","PI","fill","_internal_lineWidth","fillStyle","_internal_backColor","_internal_radius","_internal_lineColor","createEmptyMarkerData","_internal_time","_internal_price","rangeForSinglePoint","CrosshairMarksPaneView","crosshair","_private__compositeRenderer","_private__markersRenderers","_private__markersData","_private__invalidated","_private__crosshair","_internal_update","updateType","serieses","_internal_serieses","map","res","_internal_renderer","_private__updateImpl","forceHidden","mode","timePointIndex","_internal_appliedIndex","timeScale","_internal_timeScale","s","_a","seriesData","_internal_markerDataAtIndex","_internal_visible","firstValue","_internal_firstValue","_internal_backgroundColor","_internal_borderWidth","_internal_priceScale","_internal_priceToCoordinate","_internal_value","_internal_borderColor","_internal_backgroundColorAtYPercentFromTop","_internal_height","_internal_indexToCoordinate","CrosshairRenderer","_private__data","bitmapSize","vertLinesVisible","_internal_vertLine","horzLinesVisible","_internal_horzLine","lineCap","strokeStyle","_internal_lineStyle","height","width","CrosshairPaneView","source","_private__rendererData","_private__renderer","_private__source","pane","_internal_pane","crosshairOptions","_internal_model","_internal_horzLineVisible","_internal_vertLineVisible","horzLine","vertLine","_internal_appliedX","_internal_appliedY","fillRectInnerBorder","borderWidth","fillRect","clearRect","w","h","clearColor","globalCompositeOperation","changeBorderRadius","borderRadius","offset","drawRoundRect","radii","roundRect","arcTo","drawRoundRectWithBorder","outerBorderRadius","halfBorderWidth","closePath","clearRectWithGradient","gradient","createLinearGradient","addColorStop","PriceAxisViewRenderer","commonData","_private__commonData","useSecondLine","textWidthCache","align","_internal_text","geometry","font","geom","_private__calculateGeometry","gb","_internal_bitmap","drawLabelBody","labelBackgroundColor","labelBorderColor","_internal_alignRight","_internal_xOutside","_internal_yTop","_internal_totalWidth","_internal_totalHeight","_internal_horzBorder","_internal_xInside","_internal_tickVisible","_internal_yMid","_internal_xTick","_internal_tickHeight","_internal_borderVisible","_internal_right","_internal_yBottom","useMediaCoordinateSpace","gm","_internal_media","textAlign","textBaseline","fillText","_internal_xText","_internal_textMidCorrection","mediaSize","tickSize","_internal_moveTextToInvisibleTick","horzBorder","_internal_separatorVisible","paddingTop","_internal_additionalPaddingTop","paddingBottom","_internal_additionalPaddingBottom","paddingInner","paddingOuter","text","actualTextHeight","textMidCorrection","_internal_yMidCorrection","textWidth","ceil","_internal_measureText","totalHeight","totalWidth","tickHeightBitmap","totalHeightBitmap","horzBorderBitmap","totalWidthBitmap","tickSizeBitmap","yMid","_internal_fixedCoordinate","_internal_coordinate","yMidBitmap","yTopBitmap","yBottomBitmap","alignRight","xInside","xInsideBitmap","xOutsideBitmap","xTickBitmap","xText","PriceAxisView","ctor","_private__commonRendererData","_private__axisRendererData","_private__paneRendererData","_private__axisRenderer","_private__paneRenderer","_private__updateRendererDataIfNeeded","_internal_getFixedCoordinate","_internal_setFixedCoordinate","_internal_isVisible","_internal_isAxisLabelVisible","priceScale","ticksVisible","_internal_paneRenderer","_internal__updateRendererData","CrosshairPriceAxisView","valueProvider","_private__priceScale","_private__valueProvider","axisRendererData","paneRendererData","commonRendererData","options","labelVisible","_internal_isEmpty","colors","additionalPadding","_internal_formatPrice","optimizationReplacementRe","radius$1","TimeAxisViewRenderer","_internal_widthCache","horzMargin","_internal_paddingHorizontal","labelWidth","labelWidthHalf","timeScaleWidth","_internal_width","coordinate","x1","abs","x2","y1","y2","x1scaled","y1scaled","x2scaled","y2scaled","radiusScaled","tickX","tickTop","tickBottom","tickOffset","yText","textYCorrection","CrosshairTimeAxisView","model","_private__model","currentTime","_internal_indexToTimeScalePoint","_internal_formatDateTime","DataSource","_internal__priceScale","_private__zorder","_internal_zorder","_internal_setZorder","zorder","_internal_setPriceScale","_internal_labelPaneViews","_internal_timeAxisViews","CrosshairMode","Crosshair","_private__pane","_private__price","_private__index","_private__visible","_private__priceAxisViews","Map","_private__subscribed","_private__x","_private__y","_private__originX","_private__originY","_private__options","_private__markersPaneView","valuePriceProvider","rawPriceProvider","rawCoordinateProvider","rawPrice","_internal_defaultPriceScale","_internal_coordinateToPrice","valueTimeProvider","rawIndexProvider","time","_internal_indexToTime","Number","_private__currentPosPriceProvider","currentPosTimeProvider","_private__timeAxisView","_private__paneView","_internal_saveOriginCoord","_internal_clearOriginCoord","_internal_originCoordX","_internal_originCoordY","_internal_setPosition","_private__tryToUpdateViews","_internal_clearPosition","_private__setIndexToLastSeriesBarIndex","_internal_paneViews","_internal_priceAxisViews","clear","views","_private__createPriceAxisViewOnDemand","_internal_updateAllViews","_private__priceScaleByPane","_private__tryToUpdateData","newIndex","newPrice","newPane","oldX","oldY","oldPrice","oldIndex","oldPane","isNaN","lastIndexes","_internal_bars","_internal_lastIndex","lastBarIndex","view","get","set","isDefaultPriceScale","priceScaleId","mergePaneInvalidation","beforeValue","newValue","level","_internal_level","autoScale","_internal_autoScale","InvalidateMask","globalLevel","_private__invalidatedPanes","_private__timeScaleInvalidations","_private__globalLevel","_internal_invalidatePane","paneIndex","invalidation","prevValue","_internal_fullInvalidation","_internal_invalidateForPane","paneInvalidation","_internal_setFitContent","_internal_stopTimeScaleAnimation","_internal_type","_internal_applyRange","range","_internal_setTimeScaleAnimation","animation","_private__removeTimeScaleAnimation","_internal_resetTimeScale","_internal_setBarSpacing","barSpacing","_internal_setRightOffset","_internal_timeScaleInvalidations","_internal_merge","other","tsInvalidation","_private__applyTimeScaleInvalidation","_internal_light","_internal_full","inv","formatterOptions","_internal_decimalSign","_internal_decimalSignFractional","numberToStringWithLeadingZero","TypeError","toString","dummyString","slice","PriceFormatter","_private__minMove","_private__calculateDecimal","format","sign","_private__formatAsDecimal","_internal__fractionalLength","intPart","fracString","fracLength","fracPart","toFixed","PercentageFormatter","VolumeFormatter","_private__precision","vol","_private__formatNumber","pow","replace","String","e","p1","walkLine","renderingScope","items","barWidth","styleGetter","finishStyledArea","firstItem","currentStyle","currentStyleFirstItem","halfBarWidth","item1","item2","changeStyle","newStyle","currentItem","itemStyle","cp1","cp2","getControlPoints","bezierCurveTo","curveTension","subtract","p2","add","divide","n","points","fromPointIndex","toPointIndex","beforeFromPointIndex","afterToPointIndex","finishStyledArea$1","baseLevelCoordinate","areaFirstItem","newAreaFirstItem","PaneRendererAreaBase","_internal_barWidth","_internal_lineType","_internal_baseLevelCoordinate","_internal_invertFilledArea","lineJoin","_internal__fillStyle","bind","clamp","minVal","maxVal","isBaseDecimal","current","greaterOrEqual","epsilon","equal","arr","ceiledEven","ceiled","ceiledOdd","GradientStyleCache","_internal_get","params","cachedParams","_private__params","_internal_topColor1","topColor1","_internal_topColor2","topColor2","_internal_bottomColor1","bottomColor1","_internal_bottomColor2","bottomColor2","_internal_bottom","_private__cachedValue","baselinePercent","PaneRendererArea","_private__fillCache","item","_internal_topColor","_internal_bottomColor","drawSeriesPointMarkers","pointMarkersRadius","prevStyle","PaneRendererLineBase","_internal_pointMarkersRadius","_internal__strokeStyle","PaneRendererLine","boundCompare","lower","compare","start","count","count2","mid","lowerBound","upperBound","lowerBoundItemsCompare","upperBoundItemsCompare","visibleTimedValues","extendedRange","firstBar","_internal_left","lastBar","extendedFrom","extendedTo","SeriesPaneViewBase","series","extendedVisibleRange","_internal__invalidated","_internal__dataInvalidated","_internal__optionsInvalidated","_internal__items","_internal__itemsVisibleRange","_internal__series","_internal__model","_private__extendedVisibleRange","_private__makeValid","_internal__renderer","_internal__updateOptions","Object","assign","_internal_barColorer","_internal_barStyle","_internal__clearVisibleRange","_internal__fillRawPoints","_private__makeValidImpl","visibleBars","_internal_visibleStrictRange","_internal_size","_internal__convertToCoordinates","_internal__prepareRendererData","LinePaneViewBase","_internal_indexesToCoordinates","_internal_pointsArrayToCoordinates","_internal__createRawItemBase","colorer","_internal_rows","row","_internal__createRawItem","_internal_index","SeriesAreaPaneView","_private__areaRenderer","_private__lineRenderer","_internal_barSpacing","optimalBarWidth","pixelRatio","optimalCandlestickWidth","barSpacingSpecialCaseFrom","barSpacingSpecialCaseTo","barSpacingSpecialCaseCoeff","barSpacingReducingCoeff","coeff","atan","scaledBarSpacing","optimal","PaneRendererBars","_private__barWidth","_private__barLineWidth","_private__calcBarWidth","_internal_thinBars","prevColor","drawOpenClose","bar","_internal_barColor","bodyWidthHalf","bodyCenter","bodyLeft","bodyWidth","bodyRight","high","_internal_highY","_internal_lowY","low","bodyTop","bodyBottom","bodyHeight","sideWidth","_internal_openVisible","openLeft","openTop","_internal_openY","openBottom","closeRight","closeTop","_internal_closeY","closeBottom","limit","BarsPaneViewBase","_internal_barPricesToCoordinates","_internal__createDefaultItem","_internal_open","_internal_high","_internal_low","_internal_close","SeriesBarsPaneView","barStyleProps","PaneRendererBaselineArea","_internal_topFillColor1","_internal_topFillColor2","_internal_bottomFillColor1","_internal_bottomFillColor2","PaneRendererBaselineLine","_private__strokeCache","_internal_topLineColor","_internal_bottomLineColor","SeriesBaselinePaneView","_private__baselineAreaRenderer","_private__baselineLineRenderer","PaneRendererCandlesticks","wickWidth","bars","_internal_wickVisible","_private__drawWicks","_private__drawBorder","_private__calculateBorderWidth","_private__drawCandles","prevWickColor","wickOffset","prevEdge","_internal_barWickColor","scaledX","prevBorderColor","_internal_barBorderColor","prevBarColor","barColor","SeriesCandlesticksPaneView","candlestickStyleProps","CustomSeriesPaneRendererWrapper","sourceRenderer","_private__sourceRenderer","SeriesCustomPaneView","paneView","renderer","_internal_priceValueBuilder","plotRow","priceValueBuilder","_internal_isWhitespace","isWhitespace","_internal_originalData","_internal_data","update","unwrapItemData","originalData","showSpacingMinimalBarWidth","alignToMinimalWidthLimit","PaneRendererHistogram","_private__precalculatedCache","_private__fillPrecalculatedCache","histogramBase","_internal_histogramBase","topHistogramBase","bottomHistogramBase","spacing","columnWidth","halfWidth","_internal_roundedCenter","_internal_center","prev","minWidth","SeriesHistogramPaneView","SeriesLinePaneView","defaultReplacementRe","TextWidthCache","_private__actualSize","_private__usageTick","_private__oldestTick","_private__tick2Labels","_private__cache","_private__maxSize","_internal_reset","_private__getMetrics","metrics","actualBoundingBoxAscent","actualBoundingBoxDescent","re","cacheString","has","_internal_metrics","oldestValue","delete","measureText","_internal_tick","PanePriceAxisViewRenderer","_private__priceAxisViewRenderer","_private__align","_private__textWidthCache","_internal_setParams","priceAxisViewRenderer","PanePriceAxisView","priceAxisView","dataSource","_private__priceAxisView","_private__dataSource","_internal_paneForSource","_internal_isOverlay","_internal_defaultVisiblePriceScale","position","_internal_priceScalePosition","_internal_priceAxisRendererOptions","HorizontalLineRenderer","_internal_hitTest","itemY","_internal_externalId","externalId","_internal_hitTestData","SeriesHorizontalLinePaneView","_internal__lineRendererData","_internal__lineRenderer","_internal__updateImpl","SeriesHorizontalBaseLinePaneView","_internal_mode","seriesOptions","SeriesLastPriceAnimationRenderer","_internal_seriesLineColor","centerPointRadius","_internal_seriesLineWidth","_internal_fillColor","_internal_strokeColor","animationStagesData","_internal_start","_internal_end","_internal_startRadius","_internal_endRadius","_internal_startFillAlpha","_internal_endFillAlpha","_internal_startStrokeAlpha","_internal_endStrokeAlpha","seriesLineColor","stage","startAlpha","endAlpha","startRadius","endRadius","animationData","durationSinceStart","globalStage","currentStageData","stageData","subStage","SeriesLastPriceAnimationPaneView","_private__stageInvalidated","_private__startTime","performance","now","_private__endTime","_private__series","_internal_onDataCleared","_internal_onNewRealtimeDataReceived","timeToAnimationEnd","_internal_invalidateStage","_internal_animationActive","_private__updateRendererDataStage","lastValue","_internal_lastValueData","_internal_noData","_internal_contains","lastValuePoint","seriesLineWidth","_private__duration","rendererData","result","shapeSize","shape","originalSize","calculateShapeHeight","shapeMargin","calculateAdjustedMargin","margin","hasSide","hasInBar","drawSquare","coords","squareSize","halfSize","_internal_pixelRatio","hitTestSquare","drawArrow","up","arrowSize","halfArrowSize","baseSize","halfBaseSize","hitTestArrow","drawCircle","circleSize","hitTestCircle","tolerance","xOffset","yOffset","dist","sqrt","drawText","scale","hitTestText","textX","textY","textHeight","halfHeight","SeriesMarkersRenderer","_private__font","hitTestItem","_internal_internalId","_internal_content","drawItem","bitmapShapeItemCoordinates","drawShape","coordinates","_internal_shape","hitTestShape","fillSizeAndY","rendererItem","marker","offsets","inBarPrice","highPrice","lowPrice","sizeMultiplier","_internal_aboveBar","_internal_belowBar","SeriesMarkersPaneView","_private__dataInvalidated","_private__autoScaleMarginsInvalidated","_private__autoScaleMargins","_private__markersPositions","addAnchors","_internal__makeValid","_internal_autoScaleMargins","_internal_indexedMarkers","shapeMargin$1","marginValue","positions","_internal__getMarkerPositions","above","aboveBar","inBar","below","belowBar","reduce","acc","seriesMarkers","id","layoutOptions","prevTimeIndex","dataAt","_internal_dataAt","SeriesPriceLinePaneView","lastValueData","_internal_priceLineColor","SeriesPriceAxisView","showSeriesLastValue","showSymbolLabel","_internal_title","showPriceAndPercentage","seriesLastValueMode","_internal__axisText","_internal__paneText","lastValueColor","_internal_isPercentage","_internal_formattedPriceAbsolute","_internal_formattedPricePercentage","trim","computeFiniteResult","method","valueOne","valueTwo","fallback","firstFinite","secondFinite","PriceRangeImpl","minValue","maxValue","_private__minValue","_private__maxValue","_internal_equals","pr","_internal_clone","_internal_minValue","_internal_maxValue","_internal_length","anotherRange","Infinity","_internal_scaleAroundCenter","delta","center","maxDelta","minDelta","_internal_shift","_internal_toRaw","_internal_fromRaw","raw","AutoscaleInfoImpl","priceRange","margins","_private__priceRange","_private__margins","_internal_priceRange","_internal_margins","CustomPriceLinePaneView","priceLine","_private__priceLine","lineOptions","_internal_yCoord","CustomPriceLinePriceAxisView","axisLabelVisible","showPaneLabel","_private__formatPrice","axisLabelColor","axisLabelTextColor","CustomPriceLine","_private__priceLineView","_private__panePriceAxisView","_internal_applyOptions","_internal_lightUpdate","_internal_paneView","_internal_labelPaneView","_internal_priceAxisView","PriceDataSource","barStyleFnMap","Bar","findBar","barStyle","barIndex","precomputedBars","currentBar","isUp","Candlestick","candlestickStyle","_b","_c","_internal_wickColor","Custom","customStyle","Area","areaStyle","_d","Baseline","baselineStyle","_e","_f","isAboveBaseline","Line","Histogram","histogramStyle","SeriesBarColorer","_private__findBar","_internal_valueAt","_private__styleGetter","_internal_seriesType","MismatchDirection","CHUNK_SIZE","PlotList","_private__items","_private__minMaxCache","_private__rowSearchCache","_internal_last","_internal_firstIndex","_private__indexAt","_private__search","_internal_search","searchMode","pos","_private__valueAt","_internal_minMaxOnRangeCached","end","plots","plot","plotMinMax","_private__minMaxOnRangeCachedImpl","mergeMinMax","plotRows","exactPos","_private__bsearch","_private__searchNearestLeft","_private__searchNearestRight","nearestLeftPos","_private__lowerbound","nearestRightPos","_private__upperbound","a","b","_private__plotMinMax","startIndex","endIndexExclusive","plotIndex","values","_internal_min","_internal_max","firstIndex","lastIndex","cachedLow","cachedHigh","endIndex","minMaxCache","chunkIndex","chunkMinMax","chunkStart","chunkEnd","first","second","createSeriesPlotList","SeriesPrimitiveRendererWrapper","baseRenderer","_private__baseRenderer","_internal_drawBackground","drawBackground","call","SeriesPrimitivePaneViewWrapper","_internal_base","_internal_wrapper","wrapper","_internal_zOrder","zOrder","getAxisViewData","baseView","fixedCoordinate","backColor","tickVisible","SeriesPrimitiveTimeAxisViewWrapper","_private__baseView","_private__timeScale","SeriesPrimitivePriceAxisViewWrapper","SeriesPrimitiveWrapper","primitive","_private__paneViewsCache","_private__timeAxisViewsCache","_private__priceAxisViewsCache","_private__priceAxisPaneViewsCache","_private__timeAxisPaneViewsCache","_private__primitive","_internal_primitive","updateAllViews","paneViews","pw","timeAxisViews","aw","priceAxisViews","_internal_priceAxisPaneViews","priceAxisPaneViews","_internal_timeAxisPaneViews","timeAxisPaneViews","_internal_autoscaleInfo","startTimePoint","endTimePoint","autoscaleInfo","hitTest","extractPrimitivePaneViews","primitives","extractor","destination","primitivePaneViewsExtractor","primitivePricePaneViewsExtractor","primitiveTimePaneViewsExtractor","Series","seriesType","customPaneView","_private__customPriceLines","_private__baseHorizontalLineView","_private__lastPriceAnimationPaneView","_private__barColorerCache","_private__markers","_private__indexedMarkers","_private__animationTimeoutId","_private__primitives","_private__seriesType","_private__recreateFormatter","_private__recreatePaneViews","clearTimeout","lastBarColor","globalLast","noDataRes","endBar","barColorer","_internal_formatPriceAbsolute","_internal_formatPricePercentage","targetPriceScaleId","_internal_moveSeriesToScale","_internal_fullUpdate","_internal_updateSource","_internal_updateCrosshair","updateInfo","_private__recalculateMarkers","_internal_lastBarUpdatedOrNewBarsAddedToTheRight","sourcePane","_internal_recalculatePane","_internal_setMarkers","_internal_markers","_internal_createPriceLine","_internal_removePriceLine","line","indexOf","_internal_firstBar","_internal_timePoint","prices","_internal_topPaneViews","animationPaneView","setTimeout","_internal_cursorUpdate","unshift","_private__isOverlay","priceLineViews","_internal_bottomPaneViews","_private__extractPaneViews","_internal_pricePaneViews","_internal_timePaneViews","_internal_primitiveHitTest","customPriceLine","autoscaleInfoProvider","_private__autoscaleInfoImpl","_internal_minMove","_internal_formatter","_private__formatter","getValue","_private__markerRadius","_private__markerBorderColor","_private__markerBorderWidth","_private__markerBackgroundColor","_internal_attachPrimitive","_internal_detachPrimitive","_internal_customSeriesPlotValuesBuilder","_internal_customSeriesWhitespaceCheck","_internal_id","barsMinMax","rangeWithBase","primitiveAutoscale","primitiveRange","mergeMargins","formatter","_internal_updateFormatter","_internal_hasPoints","firstDataIndex","_internal_timeToIndex","seriesDataIndex","originalTime","additionalMargin","Magnet","_internal_align","defaultPriceScale","_internal_dataSources","ds","candidates","ps","firstPrice","concat","sort","nearest","GridRenderer","_internal_vertLinesVisible","_internal_vertLinesColor","_internal_vertLineStyle","timeMark","_internal_timeMarks","_internal_coord","_internal_horzLinesVisible","_internal_horzLinesColor","_internal_horzLineStyle","priceMark","_internal_priceMarks","GridPaneView","gridOptions","grid","horzLines","vertLines","_internal_marks","tm","coord","Grid","defLogFormula","_internal_logicalOffset","_internal_coordOffset","fromPercent","toPercent","toPercentRange","minPercent","maxPercent","fromIndexedTo100","toIndexedTo100","toIndexedTo100Range","toLog","logFormula","m","log10","fromLog","logical","convertPriceRangeToLog","canConvertPriceRangeFromLog","convertPriceRangeFromLog","logFormulaForPriceRange","diff","digits","logicalOffset","coordOffset","logFormulasAreSame","f1","f2","PriceTickSpanCalculator","integralDividers","_private__base","_private__integralDividers","_private__fractionalDividers","baseRest","_internal_tickSpan","maxTickSpan","minMovement","resultTickSpan","resultTickSpanLargerMinMovement","resultTickSpanLargerMaxTickSpan","resultTickSpanLarger1","haveToContinue","TICK_DENSITY","PriceTickMarkBuilder","coordinateToLogicalFunc","logicalToCoordinateFunc","_private__marks","_private__coordinateToLogicalFunc","_private__logicalToCoordinateFunc","scaleHeight","markHeight","_private__tickMarkHeight","spanCalculator1","spanCalculator2","spanCalculator3","spans","_internal_rebuildTickMarks","extraTopBottomMargin","entireTextOnly","_private__fontHeight","minCoord","maxCoord","span","mod","prevCoord","targetIndex","_internal_label","_internal_formatLogical","_internal_isLog","sortSources","s1","s2","PriceScaleMode","percentageFormatter","defaultPriceFormatter","PriceScale","localizationOptions","_private__height","_private__internalHeightCache","_private__priceRangeSnapshot","_private__invalidatedForRange","_internal_isValid","_internal_visibleBars","_private__marginAbove","_private__marginBelow","_private__onMarksChanged","_private__modeChanged","_private__dataSources","_private__cachedOrderedSources","_private__marksCache","_private__scaleStartPoint","_private__scrollStartPoint","_private__logFormula","_private__id","_private__layoutOptions","_private__localizationOptions","_private__markBuilder","_private__coordinateToLogical","_private__logicalToCoordinate","_internal_setMode","scaleMargins","_private__invalidateInternalHeightCache","_internal_isAutoScale","_internal_isIndexedTo100","_internal_isInverted","invertScale","newMode","oldMode","_internal_setPriceRange","modeChanged","_private__onIsInvertedChanged","_internal_modeChanged","_internal_setHeight","_internal_internalHeight","_private__topMarginPx","_private__bottomMarginPx","_private__makeSureItIsValid","newPriceRange","isForceSetValue","oldPriceRange","_internal_invertedCoordinate","bh","ih","isInverted","hmm","fromIndex","toIndex","transformFn","_private__getCoordinateTransformer","invCoordinate","pricesList","openLogical","highLogical","lowLogical","closeLogical","_internal_logicalToPrice","_internal_orderedSources","_internal_addDataSource","_internal_invalidateSourcesCache","_internal_removeDataSource","firstValueIsNull","_internal_firstValueIsNull","marks","_internal_onMarksChanged","_internal_startScale","_internal_scaleTo","scaleCoeff","_internal_endScale","_internal_startScroll","_internal_scrollTo","priceUnitsPerPixel","pixelDelta","priceDelta","_internal_endScroll","_private__formatPercentage","_private__formatterSource","_internal_sourcesForAutoScale","_internal_recalculatePriceRange","formatterSource","_private__recalculatePriceRangeImpl","marginAbove","marginBelow","autoScaleInfo","sourceRange","extendValue","rawRange","newLogFormula","rawSnapshot","_private__formatValue","fallbackFormatter","priceFormatter","percentage","DEFAULT_STRETCH_FACTOR","Pane","_private__overlaySourcesByScaleId","_private__width","_private__stretchFactor","_private__destroyed","_private__grid","_private__leftPriceScale","_private__createPriceScale","leftPriceScale","_private__rightPriceScale","rightPriceScale","_private__onPriceScaleModeChanged","_internal_applyScaleOptions","localization","overlayPriceScales","sourceArrays","_internal_priceScaleById","_internal_priceScalesOptionsChanged","_internal_stretchFactor","_internal_setStretchFactor","factor","_internal_setWidth","_internal_updateAllSources","targetScaleId","targetZOrder","_private__getZOrderMinMax","_internal_maxZOrder","_private__insertDataSource","overlaySources","overlayIndex","_internal_recalculatePriceScale","_internal_leftPriceScale","_internal_rightPriceScale","_internal_startScalePrice","_internal_scalePriceTo","_internal_endScalePrice","_internal_startScrollPrice","_internal_scrollPriceTo","_internal_endScrollPrice","_private__recalculatePriceScaleImpl","_internal_resetPriceScale","_internal_momentaryAutoScale","_internal_recalculate","_internal_onDestroyed","_internal_grid","sourceForAutoScale","_internal_minZOrder","minZOrder","maxZOrder","j","actualOptions","FormattedLabelsCache","horzScaleBehavior","_private__format","_private__horzScaleBehavior","_internal_format","tickMark","cacheKey","tick","_internal_string","str","RangeImpl","_private__left","_private__right","_internal_count","areRangesEqual","TickMarks","_private__marksByWeight","_private__uniformDistribution","_internal_setUniformDistribution","val","_internal_setTimeScalePoints","newPoints","firstChangedPointIndex","_private__removeMarksSinceIndex","marksForWeight","timeWeight","weight","_internal_build","maxWidth","maxIndexesPerMark","_internal_maxIndexesPerMark","_private__buildMarksImpl","sinceIndex","weightsToClear","keys","prevMarks","prevMarksLength","prevMarksPointer","currentWeight","currentWeightLength","rightIndex","leftIndex","mark","currentIndex","lastMark","TimeScaleVisibleRange","logicalRange","_private__logicalRange","_internal_strictRange","_internal_logicalRange","_internal_invalid","defaultTickMarkMaxCharacterLength","markWithGreaterWeight","TimeScale","_private__baseIndexOrNull","_private__points","_private__tickMarks","_private__formattedByWeight","_private__visibleRange","_private__visibleRangeInvalidated","_private__visibleBarsChanged","_private__logicalRangeChanged","_private__optionsApplied","_private__commonTransitionStartState","_private__timeMarksCache","_private__labels","_private__rightOffset","rightOffset","_private__barSpacing","_private__updateDateTimeFormatter","uniformDistribution","_internal_applyLocalizationOptions","_private__invalidateTickMarks","fixLeftEdge","_private__doFixLeftEdge","fixRightEdge","_private__doFixRightEdge","minBarSpacing","findNearest","key","_private__updateVisibleRange","_internal_visibleLogicalRange","_internal_visibleTimeRange","_internal_timeRangeForLogicalRange","_private__firstIndex","_private__lastIndex","_internal_logicalRangeForTimeRange","newWidth","previousVisibleRange","oldWidth","lockVisibleTimeRangeOnResize","newBarSpacing","_private__correctBarSpacing","_private__correctOffset","baseIndex","_internal_baseIndex","deltaFromRight","indexFrom","indexTo","_internal_coordinateToIndex","_private__coordinateToFloatIndex","_internal_recalculateAllPanes","_private__setBarSpacing","_internal_rightOffset","pixelsPer8Characters","pixelsPerCharacter","maxLabelWidth","tickMarkMaxCharacterLength","indexPerLabel","earliestIndexOfSecondLabel","indexOfSecondLastLabel","isAllScalingAndScrollingDisabled","_private__isAllScalingAndScrollingDisabled","isLeftEdgeFixed","isRightEdgeFixed","label","_private__formatLabel","needAlignCoordinate","_internal_restoreDefault","_internal_setBaseIndex","_internal_zoom","zoomPoint","floatIndexAtZoomPoint","rightBarStaysOnScroll","_private__saveCommonTransitionsStartState","startLengthFromRight","currentLengthFromRight","_private__clearCommonTransitionsStartState","shiftInLogical","_internal_scrollToRealTime","_internal_scrollToOffsetAnimated","animationDuration","RangeError","animationStart","_internal_finished","_internal_getPosition","animationProgress","finishAnimation","_internal_visibleBarsChanged","_internal_logicalRangeChanged","_internal_optionsApplied","_internal_setVisibleRange","_internal_fitContent","last","_internal_setLogicalRange","barRange","timeScalePoint","timeFormatter","formatHorzItem","handleScroll","handleScale","horzTouchDrag","mouseWheel","pressedMouseMove","vertTouchDrag","axisDoubleClickReset","axisPressedMouseMove","pinch","_private__rightOffsetForCoordinate","oldBarSpacing","_private__resetTimeMarksCache","_private__setVisibleRange","newBarsLength","rightBorder","leftBorder","_private__minBarSpacing","maxBarSpacing","maxRightOffset","_private__maxRightOffset","minRightOffset","_private__minRightOffset","barsEstimation","_private__formatLabelImpl","formatTickmark","newVisibleRange","oldVisibleRange","updateFormatter","leftEdgeOffset","MediaCoordinatesPaneRenderer","_internal__drawBackgroundImpl","WatermarkRenderer","_private__metricsCache","_internal_lines","_private__metrics","_internal_lineHeight","vertOffset","_internal_vertAlign","horzOffset","_internal_horzAlign","_internal_vertOffset","fontCache","_private__fontCache","WatermarkPaneView","horzAlign","vertAlign","fontStyle","Watermark","TrackingModeExitMode","ChartModel","invalidateHandler","_private__panes","_private__serieses","_private__hoveredSource","_private__priceScalesOptionsChanged","_private__crosshairMoved","_private__gradientColorsCache","_private__invalidateHandler","_private__rendererOptionsProvider","_private__magnet","_private__watermark","watermark","_internal_createPane","_private__backgroundTopColor","_private__getBackgroundColor","_private__backgroundBottomColor","_private__invalidate","_private__invalidationMaskForSource","_internal_hoveredSource","_internal_setHoveredSource","prevSource","_internal_source","_internal_applyPriceScaleOptions","_internal_findPriceScale","_internal_panes","_internal_watermarkSource","_internal_crosshairSource","_internal_crosshairMoved","_internal_setPaneHeight","actualIndex","mask","_private__paneInvalidationMask","_internal_startScaleTime","_internal_zoomTime","pointX","_internal_scrollChart","_internal_startScrollTime","_internal_scrollTimeTo","_internal_endScrollTime","_internal_scaleTimeTo","_internal_endScaleTime","_internal_setAndSaveCurrentPosition","event","skipEvent","_internal_setAndSaveSyntheticPosition","horizontalPosition","_internal_clearCurrentPosition","_internal_updateTimeScale","newBaseIndex","oldFirstTime","newFirstTime","currentBaseIndex","isLastSeriesBarVisible","isLeftBarShiftToLeft","isSeriesPointsAdded","isSeriesPointsAddedToRight","allowShiftWhenReplacingWhitespace","allowShiftVisibleRangeOnWhitespaceReplacement","replacedExistingWhitespace","needShiftVisibleRangeOnNewBar","shiftVisibleRangeOnNewBar","compensationShift","find","includes","_internal_rendererOptionsProvider","_internal_createSeries","_private__createSeries","_internal_removeSeries","seriesIndex","_internal_setTargetLogicalRange","_internal_defaultVisiblePriceScaleId","_internal_backgroundBottomColor","_internal_colors","cachedValue","invalidateType","side","background","fillUpDownCandlesticksColors","LastPriceAnimationMode","precisionByMinMove","fractPart","PriceLineSource","ColorType","isBusinessDay","isUTCTimestamp","TickMarkType","getMonth","date","getUTCMonth","getDay","getUTCDate","getYear","getUTCFullYear","dd","MMMM","locale","Date","toLocaleString","month","MMM","MM","yy","yyyy","formatDate","DateFormatter","dateFormat","_private__dateFormat","_private__locale","TimeFormatter","_private__formatStr","getUTCHours","getUTCMinutes","getUTCSeconds","defaultParams","_internal_dateFormat","_internal_timeFormat","_internal_dateTimeSeparator","_internal_locale","DateTimeFormatter","formatterParams","_private__dateFormatter","_private__timeFormatter","_private__separator","dateTime","defaultTickMarkFormatter","timePoint","tickMarkType","formatOptions","year","day","hour12","hour","minute","_internal_businessDay","_internal_timestamp","UTC","localDateFromUtc","getUTCMilliseconds","hours","minutes","seconds","intradayWeightDivisors","_internal_divisor","_internal_weight","weightByTime","currentDate","prevDate","getTime","cast","fillWeightsForPoints","sortedTimePoints","prevTime","totalTimeDiff","currentPoint","averageTimeDiff","approxPrevDate","businessDayConverter","businessDay","stringToBusinessDay","timestampConverter","selectTimeConverter","validDateRegex","convertTime","test","d","convertStringToBusinessDay","convertStringsToBusinessDays","weightToTickMarkType","timeVisible","secondsVisible","HorzScaleBehaviorTime","setOptions","preprocessData","createConverterToInternalObj","convertHorzItemToInternal","_private__dateTimeFormatter","tp","tickMarkFormatter","tickMarkString","maxTickMarkWeight","tickMarks","maxWeight","_internal_applyDefaults","isRunningOnClientSide","window","isFF","navigator","userAgent","isIOS","platform","isChrome","chrome","isWindows","userAgentData","isChromiumBased","brands","some","brand","warn","msg","console","suggestChartSize","integerWidth","integerHeight","suggestTimeScaleHeight","originalHeight","suggestPriceScaleWidth","originalWidth","distanceBetweenPoints","pos1","pos2","_internal_position","speedPxPerMSec","maxSpeed","speed","durationMSec","dumpingCoeff","lnDumpingCoeff","log","KineticAnimation","minSpeed","_private__position1","_private__position2","_private__position3","_private__position4","_private__animationStartPosition","_private__durationMsecs","_private__speedPxPerMsec","_private__minSpeed","_private__maxSpeed","_private__dumpingCoeff","_internal_addPosition","totalDistance","speed1","distance1","speedItems","distanceItems","speed2","distance2","speed3","distance3","resultSpeed","startPosition","durationMsecs","_private__progressDuration","progress","svg","css","AttributionLogoWidget","container","chart","_private__element","_private__cssElement","_private__theme","_private__container","_private__chart","_private__render","_internal_removeElement","removeChild","_private__shouldUpdate","_private__shouldBeVisible","_private__themeToUse","attributionLogo","_private__getUTMSource","url","URL","location","href","hostname","pathname","document","createElement","innerText","innerHTML","toggleAttribute","appendChild","createBoundCanvas","parentElement","doc","ownerDocument","canvas","binding","allowResizeObserver","transform","canvasElementClientSize","resizeCanvasElement","releaseCanvas","getContext","drawForeground","drawSourcePaneViews","paneViewsGetter","drawRendererFn","preventScrollByWheelClick","el","addEventListener","button","preventDefault","MouseEventHandler","handler","_private__clickCount","_private__clickTimeoutId","_private__clickPosition","NEGATIVE_INFINITY","POSITIVE_INFINITY","_private__tapCount","_private__tapTimeoutId","_private__tapPosition","_private__longTapTimeoutId","_private__longTapActive","_private__mouseMoveStartPosition","_private__touchMoveStartPosition","_private__touchMoveExceededManhattanDistance","_private__cancelClick","_private__cancelTap","_private__unsubscribeOutsideMouseEvents","_private__unsubscribeOutsideTouchEvents","_private__unsubscribeMobileSafariEvents","_private__unsubscribeMousemove","_private__unsubscribeRootMouseEvents","_private__unsubscribeRootTouchEvents","_private__startPinchMiddlePoint","_private__startPinchDistance","_private__pinchPrevented","_private__preventTouchDragProcess","_private__mousePressed","_private__lastTouchEventTimeStamp","_private__activeTouchId","_private__acceptMouseLeave","_private__onFirefoxOutsideMouseUp","mouseUpEvent","_private__mouseUpHandler","_private__onMobileSafariDoubleClick","dblClickEvent","_private__firesTouchEvents","compatEvent","_private__makeCompatEvent","_internal_manhattanDistance","manhattanDistance","_private__touchMouseMoveWithDownInfo","getPosition","_private__processTouchEvent","_private__handler","_internal_doubleTapEvent","_private__resetTapTimeout","_private__processMouseEvent","_internal_mouseDoubleClickEvent","_private__resetClickTimeout","_private__target","_private__init","_private__clearLongTapTimeout","_private__mouseEnterHandler","enterEvent","boundMouseMoveHandler","_private__mouseMoveHandler","removeEventListener","_internal_mouseEnterEvent","moveEvent","_internal_mouseMoveEvent","_private__touchMoveHandler","touch","touchWithId","changedTouches","eventTimeStamp","moveInfo","_internal_xOffset","_internal_yOffset","correctedXOffset","isVertDrag","_internal_treatVertTouchDragAsPageScroll","isHorzDrag","_internal_treatHorzTouchDragAsPageScroll","_internal_touchMoveEvent","_private__mouseMoveWithDownHandler","_internal_pressedMouseMoveEvent","currentPosition","_private__touchEndHandler","touchEndEvent","touches","_internal_touchEndEvent","_internal_tapEvent","rootElement","documentElement","_internal_mouseUpEvent","_internal_mouseClickEvent","_private__touchStartHandler","downEvent","identifier","boundTouchMoveWithDownHandler","boundTouchEndHandler","passive","_private__longTapHandler","_internal_touchStartEvent","_private__mouseDownHandler","boundMouseMoveWithDownHandler","boundMouseUpHandler","_internal_mouseDownEvent","outsideHandler","_internal_mouseDownOutsideEvent","composed","contains","composedPath","_private__mouseLeaveHandler","_private__initPinch","_internal_pinchStartEvent","_internal_pinchEvent","_internal_pinchEndEvent","_private__checkPinchState","currentDistance","getDistance","_private__stopPinch","_private__startPinch","box","getBoundingClientRect","clientX","clientY","_internal_mouseLeaveEvent","_internal_longTapEvent","sourceCapabilities","firesTouchEvents","eventLike","pageX","pageY","screenX","screenY","localX","localY","ctrlKey","altKey","shiftKey","metaKey","_internal_isTouch","startsWith","_internal_srcType","_internal_target","_internal_view","_internal_preventDefault","element","xDiff","yDiff","cancelable","timeStamp","comparePrimitiveZOrder","reference","findBestPrimitiveHitTest","bestPrimitiveHit","bestHitSource","primitiveHitResults","hitResult","_internal_hit","convertPrimitiveHitResult","primitiveHit","_internal_object","_internal_cursorStyle","cursorStyle","hitTestPaneView","hitTestPane","isBackground","sourceResult","buildPriceAxisViewsGetter","psId","recalculateOverlapping","direction","currentGroupStart","initLabelHeight","spaceBeforeCurrentGroup","prevFixedCoordinate","overlap","edgePoint","outOfViewport","desiredGroupShift","possibleShift","k","PriceAxisWidget","rendererOptionsProvider","_private__size","_private__mousedown","_private__widthCache","_private__prevOptimalWidth","_private__isSettingSize","_private__canvasSuggestedBitmapSizeChangedHandler","_internal_chart","_private__topCanvasSuggestedBitmapSizeChangedHandler","_private__isLeft","_private__sourcePaneViews","_private__sourceTopPaneViews","_private__sourceBottomPaneViews","_private__cell","overflow","_private__canvasBinding","subscribeSuggestedBitmapSizeChanged","canvasElement","zIndex","_private__topCanvasBinding","topCanvas","_private__mouseDownEvent","_private__pressedMouseMoveEvent","_private__mouseDownOutsideEvent","_private__mouseUpEvent","_private__mouseDoubleClickEvent","_private__mouseEnterEvent","_private__mouseLeaveEvent","_private__mouseEventHandler","unsubscribeSuggestedBitmapSizeChanged","dispose","_internal_getElement","_internal_rendererOptions","isFontChanged","_internal_optimalWidth","tickMarkMaxWidth","_private__baseFont","_private__backLabels","topValue","bottomValue","resultTickMarksMaxWidth","_internal_setSize","newSize","_internal_getWidth","_internal_state","_internal_paint","_private__alignLabels","applySuggestedBitmapSize","_private__drawBackground","_internal_drawAdditionalSources","_private__drawTickMarks","_private__drawBackLabels","topTarget","_private__drawCrosshairLabel","_internal_getBitmapSize","_internal_drawBitmap","drawImage","_private__setCursor","addViewsForSources","borderSize","priceScaleOptions","tickMarkLeftX","tickHeight","tickLength","rect","textLeftX","yMidCorrections","orderedSources","paneState","isDefault","updateForSources","sourceViews","alignLabels","_private__fixLabelOverlap","l","ro","cursor","sourceBottomPaneViews$1","sourcePaneViews$1","sourceLabelPaneViews","sourceTopPaneViews$1","PaneWidget","state","_private__leftPriceAxisWidget","_private__rightPriceAxisWidget","_private__attributionLogoWidget","_private__startScrollingPos","_private__isScrolling","_private__clicked","_private__dblClicked","_private__prevPinchScale","_private__longTap","_private__startTrackPoint","_private__exitTrackingModeOnNextTry","_private__initCrosshairPosition","_private__scrollXAnimation","_private__state","_private__onStateDestroyed","_private__paneCell","padding","paneWrapper","_private__leftAxisCell","_private__rightAxisCell","_private__rowElement","_internal_updatePriceAxisWidgetsStates","_internal_setState","prototype","_internal_paneWidgets","_private__recreatePriceAxisWidgets","_internal_updatePriceAxisWidgets","stretchFactor","_private__onMouseEvent","_private__setCrosshairPosition","_private__mouseTouchDownEvent","_internal_setCursorStyle","_private__fireClickedDelegate","_private__fireMouseClickDelegate","_private__pressedMouseTouchMoveEvent","_private__endScroll","_private__startTrackingMode","_private__clearCrosshairPosition","_internal_clicked","_internal_dblClicked","middlePoint","zoomScale","origPoint","newX","newY","trackingMode","exitMode","_private__tryExitTrackingMode","_internal_setPriceAxisSize","priceAxisWidget","_internal_getSize","_internal_recalculatePriceScales","_private__drawSources","_private__drawGrid","_private__drawWatermark","_private__drawCrosshair","_internal_leftPriceAxisWidget","_internal_rightPriceAxisWidget","delegate","_private__drawSourceImpl","drawFn","hoveredSource","objecId","leftAxisVisible","rightAxisVisible","_private__preventScroll","_private__correctXCoord","_private__correctYCoord","startTrackPoint","crossHairPosition","startAnimationTime","activeElement","body","blur","selection","getSelection","removeAllRanges","chartOptions","scrollOptions","kineticScrollOptions","kineticScroll","_internal_localX","_internal_localY","mouse","PriceAxisStub","_private__borderVisible","_private__bottomColor","horzBorderSize","vertBorderSize","buildTimeAxisViewsGetter","sourcePaneViews","sourceTopPaneViews","sourceBottomPaneViews","TimeAxisWidget","chartWidget","_private__leftStub","_private__rightStub","_private__mouseDown","_private__sizeChanged","_private__leftStubCell","_private__rightStubCell","_private__dv","_private__recreateStubs","_internal_leftStub","_internal_rightStub","_internal_sizeChanged","_internal_setSizes","timeAxisSize","leftStubWidth","rightStubWidth","_internal_optimalHeight","_private__getRendererOptions","_internal_labelBottomOffset","_private__drawAdditionalSources","_private__drawLabels","axisViewsGetter","_private__lineColor","tickLen","_private__alignTickMarkLabelCoordinate","allowBoldLabels","_private__baseBoldFont","labelText","leftTextCoordinate","newFont","borderVisibleGetter","bottomColorGetter","windowsChrome","ChartWidget","_private__paneWidgets","_private__drawRafId","_private__leftPriceAxisWidth","_private__rightPriceAxisWidth","_private__invalidateMask","_private__drawPlanned","_private__observer","_private__cursorStyleOverride","classList","disableSelection","_private__tableElement","setAttribute","_private__onWheelBound","_private__onMousewheel","shouldSubscribeMouseWheel","_private__setMouseWheelEventListener","_private__onPaneWidgetCrosshairMoved","_private__timeAxisWidget","usedObserver","autoSize","_private__installObserver","containerRect","_internal_resize","_private__syncGuiWithModel","_private__updateTimeAxisVisibility","_internal_timeAxisWidget","cancelAnimationFrame","paneWidget","_private__uninstallObserver","forceRepaint","sizeHint","heightStr","widthStr","_private__drawImpl","invalidateMask","currentlyHasMouseWheelListener","shouldHaveMouseWheelListener","_private__applyAutoSizeOptions","_internal_takeScreenshot","screeshotBitmapSize","_private__traverseLayout","screenshotCanvas","_internal_getPriceAxisWidth","_private__isLeftAxisVisible","_private__isRightAxisVisible","_internal_autoSizeActive","_internal_element","setProperty","removeProperty","_internal_getCursorOverrideStyle","_internal_paneSize","firstPane","drawPriceAxises","targetX","targetY","leftAxisBitmapWidth","firstPaneBitmapWidth","rightAxisBitmapWidth","drawStub","stub","timeAxisBitmapSize","_private__adjustSizeImpl","totalStretch","leftPriceAxisWidth","rightPriceAxisWidth","minimumWidth","paneWidth","separatorsHeight","timeAxisVisible","timeAxisHeight","minimumHeight","otherWidgetHeight","totalPaneHeight","stretchPixels","accumulatedHeight","paneHeight","calculatePaneHeight","_private__determineWheelSpeedAdjustment","deltaMode","DOM_DELTA_PAGE","DOM_DELTA_LINE","devicePixelRatio","deltaX","deltaY","scrollSpeedAdjustment","scrollPosition","invalidationType","_private__updateGui","_private__applyMomentaryAutoScale","_private__applyTimeScaleInvalidations","panes","requestAnimationFrame","targetPaneWidgetsCount","actualPaneWidgetsCount","pop","_private__onPaneWidgetClicked","_private__onPaneWidgetDblClicked","insertBefore","_private__getMouseEventParamsImpl","clientTime","hoveredSeries","hoveredObject","_internal_originalTime","_internal_point","_internal_hoveredSeries","_internal_seriesData","_internal_hoveredObject","_internal_touchMouseEventData","display","ResizeObserver","entries","containerEntry","entry","contentRect","observe","disconnect","userSelect","webkitUserSelect","msUserSelect","MozUserSelect","webkitTapHighlightColor","Boolean","isWhitespaceData","open","isFulfilledData","isFulfilledBarData","isFulfilledLineData","__rest","getOwnPropertySymbols","propertyIsEnumerable","getColoredLineBasedSeriesPlotRow","getAreaSeriesPlotRow","getBaselineSeriesPlotRow","getBarSeriesPlotRow","close","getCandlestickSeriesPlotRow","getCustomSeriesPlotRow","dataToPlotRow","excludedTime","isSeriesPlotRow","wrapCustomValues","customValues","_internal_customValues","isWhitespaceDataWithCustomCheck","customIsWhitespace","wrapWhitespaceData","createPlotRowFn","getSeriesPlotRowCreator","seriesPlotRowFnMap","createEmptyTimePointData","_internal_mapping","seriesRowsFirstAndLastTime","seriesRows","_internal_firstTime","_internal_lastTime","seriesUpdateInfo","prevSeriesRows","firstAndLastTime","prevFirstAndLastTime","timeScalePointTime","mergedPointData","saveOriginalTime","DataLayer","_private__pointDataByTimePoint","_private__seriesRowsBySeries","_private__seriesLastTimePoint","_private__sortedTimePoints","_internal_setSeriesData","needCleanupPoints","isTimeScaleAffected","pointData","originalTimes","timeConverter","createPlotRow","customWhitespaceChecker","horzItemKey","timePointData","_private__cleanupPointsData","_private__setRowsToSeries","newTimeScalePoints","t1","t2","_private__replaceTimeScalePoints","_private__getUpdateResponse","_internal_updateSeriesData","extendedData","lastSeriesTime","pointDataAtTime","affectsTimeScale","_private__updateLastSeriesRow","info","newPoint","insertIndex","assignIndexToPointData","lastSeriesRow","newTimePoints","oldPoint","_private__getBaseIndex","updatedSeries","dataUpdateResponse","_internal_series","_internal_info","_internal_points","_internal_firstChangedPointIndex","seriesRow","singleValueData","lineData","areaData","baselineData","ohlcData","barData","candlestickData","getSeriesDataCreator","seriesPlotRowToDataMap","customData","crosshairOptionsDefaults","gridOptionsDefaults","layoutOptionsDefaults","priceScaleOptionsDefaults","timeScaleOptionsDefaults","watermarkOptionsDefaults","chartOptionsDefaults","language","PriceScaleApi","_private__chartWidget","_private__priceScaleId","applyOptions","checkPriceLineOptions","checkItemsAreOrdered","allowDuplicates","checkResult","checkSeriesValuesType","getChecker","checkBarItem","checkLineItem","checkCustomItem","barItem","lineItem","convertSeriesMarker","sm","newTime","priceLineOptionsDefaults","PriceLine","_internal_priceLine","SeriesApi","dataUpdatesConsumer","priceScaleApiProvider","chartApi","_private__dataChangedDelegate","_internal__dataUpdatesConsumer","_private__priceScaleApiProvider","_internal__chartApi","priceToCoordinate","coordinateToPrice","barsInLogicalRange","correctedRange","dataFirstBarInRange","dataLastBarInRange","dataFirstIndex","dataLastIndex","barsBefore","barsAfter","setData","_internal_applyNewData","_private__onDataChanged","_internal_updateData","dataByIndex","logicalIndex","mismatchDirection","creator","seriesCreator","rows","subscribeDataChanged","unsubscribeDataChanged","setMarkers","convertedMarkers","markers","internalItem","createPriceLine","strictOptions","removePriceLine","attachPrimitive","attached","requestUpdate","detachPrimitive","detached","TimeScaleApi","timeAxisWidget","_private__timeRangeChanged","_private__onVisibleBarsChanged","_private__onVisibleLogicalRangeChanged","_private__onSizeChanged","scrollToPosition","animated","scrollToRealTime","getVisibleRange","timeRange","setVisibleRange","convertedRange","getVisibleLogicalRange","setVisibleLogicalRange","resetTimeScale","fitContent","logicalToCoordinate","coordinateToLogical","timeToCoordinate","coordinateToTime","subscribeVisibleTimeRangeChange","unsubscribeVisibleTimeRangeChange","subscribeVisibleLogicalRangeChange","unsubscribeVisibleLogicalRangeChange","subscribeSizeChange","unsubscribeSizeChange","patchPriceFormat","priceFormatBuiltIn","migrateHandleScaleScrollOptions","toInternalOptions","ChartApi","_private__seriesMap","_private__seriesMapReversed","_private__clickedDelegate","_private__dblClickedDelegate","_private__crosshairMovedDelegate","_private__dataLayer","internalOptions","paramSupplier","_private__convertMouseParams","_private__timeScaleApi","remove","resize","autoSizeActive","addCustomSeries","defaults","defaultOptions","_private__addSeriesImpl","addAreaSeries","addBaselineSeries","addBarSeries","addCandlestickSeries","addHistogramSeries","addLineSeries","removeSeries","seriesApi","_private__sendUpdateToChart","subscribeClick","unsubscribeClick","subscribeCrosshairMove","unsubscribeCrosshairMove","subscribeDblClick","unsubscribeDblClick","takeScreenshot","chartElement","paneSize","setCrosshairPosition","clearCrosshairPosition","styleDefaults","_private__mapSeriesToApi","param","hoveredObjectId","sourceEvent","createChartEx","htmlElement","getElementById","createChart","defaultHorzScaleBehavior","customSeriesDefaultOptions","version"],"sources":["/Users/home/Desktop/33/duck/node_modules/lightweight-charts/dist/lightweight-charts.development.mjs"],"sourcesContent":["/*!\n * @license\n * TradingView Lightweight Chartsâ„¢ v4.2.0\n * Copyright (c) 2024 TradingView, Inc.\n * Licensed under Apache License 2.0 https://www.apache.org/licenses/LICENSE-2.0\n */\nimport { size as size$1, bindCanvasElementBitmapSizeTo, equalSizes, tryCreateCanvasRenderingTarget2D } from 'fancy-canvas';\n\nconst candlestickStyleDefaults = {\n    upColor: '#26a69a',\n    downColor: '#ef5350',\n    wickVisible: true,\n    borderVisible: true,\n    borderColor: '#378658',\n    borderUpColor: '#26a69a',\n    borderDownColor: '#ef5350',\n    wickColor: '#737375',\n    wickUpColor: '#26a69a',\n    wickDownColor: '#ef5350',\n};\nconst barStyleDefaults = {\n    upColor: '#26a69a',\n    downColor: '#ef5350',\n    openVisible: true,\n    thinBars: true,\n};\nconst lineStyleDefaults = {\n    color: '#2196f3',\n    lineStyle: 0 /* LineStyle.Solid */,\n    lineWidth: 3,\n    lineType: 0 /* LineType.Simple */,\n    lineVisible: true,\n    crosshairMarkerVisible: true,\n    crosshairMarkerRadius: 4,\n    crosshairMarkerBorderColor: '',\n    crosshairMarkerBorderWidth: 2,\n    crosshairMarkerBackgroundColor: '',\n    lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n    pointMarkersVisible: false,\n};\nconst areaStyleDefaults = {\n    topColor: 'rgba( 46, 220, 135, 0.4)',\n    bottomColor: 'rgba( 40, 221, 100, 0)',\n    invertFilledArea: false,\n    lineColor: '#33D778',\n    lineStyle: 0 /* LineStyle.Solid */,\n    lineWidth: 3,\n    lineType: 0 /* LineType.Simple */,\n    lineVisible: true,\n    crosshairMarkerVisible: true,\n    crosshairMarkerRadius: 4,\n    crosshairMarkerBorderColor: '',\n    crosshairMarkerBorderWidth: 2,\n    crosshairMarkerBackgroundColor: '',\n    lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n    pointMarkersVisible: false,\n};\nconst baselineStyleDefaults = {\n    baseValue: {\n        type: 'price',\n        price: 0,\n    },\n    topFillColor1: 'rgba(38, 166, 154, 0.28)',\n    topFillColor2: 'rgba(38, 166, 154, 0.05)',\n    topLineColor: 'rgba(38, 166, 154, 1)',\n    bottomFillColor1: 'rgba(239, 83, 80, 0.05)',\n    bottomFillColor2: 'rgba(239, 83, 80, 0.28)',\n    bottomLineColor: 'rgba(239, 83, 80, 1)',\n    lineWidth: 3,\n    lineStyle: 0 /* LineStyle.Solid */,\n    lineType: 0 /* LineType.Simple */,\n    lineVisible: true,\n    crosshairMarkerVisible: true,\n    crosshairMarkerRadius: 4,\n    crosshairMarkerBorderColor: '',\n    crosshairMarkerBorderWidth: 2,\n    crosshairMarkerBackgroundColor: '',\n    lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n    pointMarkersVisible: false,\n};\nconst histogramStyleDefaults = {\n    color: '#26a69a',\n    base: 0,\n};\nconst customStyleDefaults = {\n    color: '#2196f3',\n};\nconst seriesOptionsDefaults = {\n    title: '',\n    visible: true,\n    lastValueVisible: true,\n    priceLineVisible: true,\n    priceLineSource: 0 /* PriceLineSource.LastBar */,\n    priceLineWidth: 1,\n    priceLineColor: '',\n    priceLineStyle: 2 /* LineStyle.Dashed */,\n    baseLineVisible: true,\n    baseLineWidth: 1,\n    baseLineColor: '#B2B5BE',\n    baseLineStyle: 0 /* LineStyle.Solid */,\n    priceFormat: {\n        type: 'price',\n        precision: 2,\n        minMove: 0.01,\n    },\n};\n\n/**\n * Represents the possible line types.\n */\nvar LineType;\n(function (LineType) {\n    /**\n     * A line.\n     */\n    LineType[LineType[\"Simple\"] = 0] = \"Simple\";\n    /**\n     * A stepped line.\n     */\n    LineType[LineType[\"WithSteps\"] = 1] = \"WithSteps\";\n    /**\n     * A curved line.\n     */\n    LineType[LineType[\"Curved\"] = 2] = \"Curved\";\n})(LineType || (LineType = {}));\n/**\n * Represents the possible line styles.\n */\nvar LineStyle;\n(function (LineStyle) {\n    /**\n     * A solid line.\n     */\n    LineStyle[LineStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * A dotted line.\n     */\n    LineStyle[LineStyle[\"Dotted\"] = 1] = \"Dotted\";\n    /**\n     * A dashed line.\n     */\n    LineStyle[LineStyle[\"Dashed\"] = 2] = \"Dashed\";\n    /**\n     * A dashed line with bigger dashes.\n     */\n    LineStyle[LineStyle[\"LargeDashed\"] = 3] = \"LargeDashed\";\n    /**\n     * A dotted line with more space between dots.\n     */\n    LineStyle[LineStyle[\"SparseDotted\"] = 4] = \"SparseDotted\";\n})(LineStyle || (LineStyle = {}));\nfunction setLineStyle(ctx, style) {\n    const dashPatterns = {\n        [0 /* LineStyle.Solid */]: [],\n        [1 /* LineStyle.Dotted */]: [ctx.lineWidth, ctx.lineWidth],\n        [2 /* LineStyle.Dashed */]: [2 * ctx.lineWidth, 2 * ctx.lineWidth],\n        [3 /* LineStyle.LargeDashed */]: [6 * ctx.lineWidth, 6 * ctx.lineWidth],\n        [4 /* LineStyle.SparseDotted */]: [ctx.lineWidth, 4 * ctx.lineWidth],\n    };\n    const dashPattern = dashPatterns[style];\n    ctx.setLineDash(dashPattern);\n}\nfunction drawHorizontalLine(ctx, y, left, right) {\n    ctx.beginPath();\n    const correction = (ctx.lineWidth % 2) ? 0.5 : 0;\n    ctx.moveTo(left, y + correction);\n    ctx.lineTo(right, y + correction);\n    ctx.stroke();\n}\nfunction drawVerticalLine(ctx, x, top, bottom) {\n    ctx.beginPath();\n    const correction = (ctx.lineWidth % 2) ? 0.5 : 0;\n    ctx.moveTo(x + correction, top);\n    ctx.lineTo(x + correction, bottom);\n    ctx.stroke();\n}\nfunction strokeInPixel(ctx, drawFunction) {\n    ctx.save();\n    if (ctx.lineWidth % 2) {\n        ctx.translate(0.5, 0.5);\n    }\n    drawFunction();\n    ctx.restore();\n}\n\n/**\n * Checks an assertion. Throws if the assertion is failed.\n *\n * @param condition - Result of the assertion evaluation\n * @param message - Text to include in the exception message\n */\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error('Assertion failed' + (message ? ': ' + message : ''));\n    }\n}\nfunction ensureDefined(value) {\n    if (value === undefined) {\n        throw new Error('Value is undefined');\n    }\n    return value;\n}\nfunction ensureNotNull(value) {\n    if (value === null) {\n        throw new Error('Value is null');\n    }\n    return value;\n}\nfunction ensure(value) {\n    return ensureNotNull(ensureDefined(value));\n}\n/**\n * Compile time check for never\n */\nfunction ensureNever(value) { }\n\n/**\n * Note this object should be explicitly marked as public so that dts-bundle-generator does not mangle the property names.\n *\n * @public\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\n */\nconst namedColorRgbHexStrings = {\n    // The order of properties in this Record is not important for the internal logic.\n    // It's just GZIPped better when props follows this order.\n    // Please add new colors to the end of the record.\n    khaki: '#f0e68c',\n    azure: '#f0ffff',\n    aliceblue: '#f0f8ff',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gainsboro: '#dcdcdc',\n    gray: '#808080',\n    green: '#008000',\n    honeydew: '#f0fff0',\n    floralwhite: '#fffaf0',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lemonchiffon: '#fffacd',\n    hotpink: '#ff69b4',\n    lightyellow: '#ffffe0',\n    greenyellow: '#adff2f',\n    lightgoldenrodyellow: '#fafad2',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    lightcyan: '#e0ffff',\n    magenta: '#f0f',\n    maroon: '#800000',\n    olive: '#808000',\n    orange: '#ffa500',\n    oldlace: '#fdf5e6',\n    mediumblue: '#0000cd',\n    transparent: '#0000',\n    lime: '#0f0',\n    lightpink: '#ffb6c1',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    midnightblue: '#191970',\n    orchid: '#da70d6',\n    mediumorchid: '#ba55d3',\n    mediumturquoise: '#48d1cc',\n    orangered: '#ff4500',\n    royalblue: '#4169e1',\n    powderblue: '#b0e0e6',\n    red: '#f00',\n    coral: '#ff7f50',\n    turquoise: '#40e0d0',\n    white: '#fff',\n    whitesmoke: '#f5f5f5',\n    wheat: '#f5deb3',\n    teal: '#008080',\n    steelblue: '#4682b4',\n    bisque: '#ffe4c4',\n    aquamarine: '#7fffd4',\n    aqua: '#0ff',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    springgreen: '#00ff7f',\n    antiquewhite: '#faebd7',\n    burlywood: '#deb887',\n    brown: '#a52a2a',\n    beige: '#f5f5dc',\n    chocolate: '#d2691e',\n    chartreuse: '#7fff00',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cadetblue: '#5f9ea0',\n    tomato: '#ff6347',\n    fuchsia: '#f0f',\n    blue: '#00f',\n    salmon: '#fa8072',\n    blanchedalmond: '#ffebcd',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    thistle: '#d8bfd8',\n    tan: '#d2b48c',\n    cyan: '#0ff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    blueviolet: '#8a2be2',\n    black: '#000',\n    darkmagenta: '#8b008b',\n    darkslateblue: '#483d8b',\n    darkkhaki: '#bdb76b',\n    darkorchid: '#9932cc',\n    darkorange: '#ff8c00',\n    darkgreen: '#006400',\n    darkred: '#8b0000',\n    dodgerblue: '#1e90ff',\n    darkslategray: '#2f4f4f',\n    dimgray: '#696969',\n    deepskyblue: '#00bfff',\n    firebrick: '#b22222',\n    forestgreen: '#228b22',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    lavenderblush: '#fff0f5',\n    feldspar: '#d19275',\n    indianred: '#cd5c5c',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightskyblue: '#87cefa',\n    lightslategray: '#789',\n    lightslateblue: '#8470ff',\n    snow: '#fffafa',\n    lightseagreen: '#20b2aa',\n    lightsalmon: '#ffa07a',\n    darksalmon: '#e9967a',\n    darkviolet: '#9400d3',\n    mediumpurple: '#9370d8',\n    mediumaquamarine: '#66cdaa',\n    skyblue: '#87ceeb',\n    lavender: '#e6e6fa',\n    lightsteelblue: '#b0c4de',\n    mediumvioletred: '#c71585',\n    mintcream: '#f5fffa',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    olivedrab: '#6b8e23',\n    palevioletred: '#d87093',\n    violetred: '#d02090',\n    yellow: '#ff0',\n    yellowgreen: '#9acd32',\n    lawngreen: '#7cfc00',\n    pink: '#ffc0cb',\n    paleturquoise: '#afeeee',\n    palegoldenrod: '#eee8aa',\n    darkolivegreen: '#556b2f',\n    darkseagreen: '#8fbc8f',\n    darkturquoise: '#00ced1',\n    peachpuff: '#ffdab9',\n    deeppink: '#ff1493',\n    violet: '#ee82ee',\n    palegreen: '#98fb98',\n    mediumseagreen: '#3cb371',\n    peru: '#cd853f',\n    saddlebrown: '#8b4513',\n    sandybrown: '#f4a460',\n    rosybrown: '#bc8f8f',\n    purple: '#800080',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    papayawhip: '#ffefd5',\n    mediumslateblue: '#7b68ee',\n    plum: '#dda0dd',\n    mediumspringgreen: '#00fa9a',\n};\nfunction normalizeRgbComponent(component) {\n    if (component < 0) {\n        return 0;\n    }\n    if (component > 255) {\n        return 255;\n    }\n    // NaN values are treated as 0\n    return (Math.round(component) || 0);\n}\nfunction normalizeAlphaComponent(component) {\n    if (component <= 0 || component > 1) {\n        return Math.min(Math.max(component, 0), 1);\n    }\n    // limit the precision of all numbers to at most 4 digits in fractional part\n    return Math.round(component * 10000) / 10000;\n}\n/**\n * @example\n * #fb0\n * @example\n * #f0f\n * @example\n * #f0fa\n */\nconst shortHexRe = /^#([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])?$/i;\n/**\n * @example\n * #00ff00\n * @example\n * #336699\n * @example\n * #336699FA\n */\nconst hexRe = /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})?$/i;\n/**\n * @example\n * rgb(123, 234, 45)\n * @example\n * rgb(255,234,245)\n */\nconst rgbRe = /^rgb\\(\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*\\)$/;\n/**\n * @example\n * rgba(123, 234, 45, 1)\n * @example\n * rgba(255,234,245,0.1)\n */\nconst rgbaRe = /^rgba\\(\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d*\\.?\\d+)\\s*\\)$/;\nfunction colorStringToRgba(colorString) {\n    colorString = colorString.toLowerCase();\n    // eslint-disable-next-line no-restricted-syntax\n    if (colorString in namedColorRgbHexStrings) {\n        colorString = namedColorRgbHexStrings[colorString];\n    }\n    {\n        const matches = rgbaRe.exec(colorString) || rgbRe.exec(colorString);\n        if (matches) {\n            return [\n                normalizeRgbComponent(parseInt(matches[1], 10)),\n                normalizeRgbComponent(parseInt(matches[2], 10)),\n                normalizeRgbComponent(parseInt(matches[3], 10)),\n                normalizeAlphaComponent((matches.length < 5 ? 1 : parseFloat(matches[4]))),\n            ];\n        }\n    }\n    {\n        const matches = hexRe.exec(colorString);\n        if (matches) {\n            return [\n                normalizeRgbComponent(parseInt(matches[1], 16)),\n                normalizeRgbComponent(parseInt(matches[2], 16)),\n                normalizeRgbComponent(parseInt(matches[3], 16)),\n                1,\n            ];\n        }\n    }\n    {\n        const matches = shortHexRe.exec(colorString);\n        if (matches) {\n            return [\n                normalizeRgbComponent(parseInt(matches[1], 16) * 0x11),\n                normalizeRgbComponent(parseInt(matches[2], 16) * 0x11),\n                normalizeRgbComponent(parseInt(matches[3], 16) * 0x11),\n                1,\n            ];\n        }\n    }\n    throw new Error(`Cannot parse color: ${colorString}`);\n}\nfunction rgbaToGrayscale(rgbValue) {\n    // Originally, the NTSC RGB to YUV formula\n    // perfected by @eugene-korobko's black magic\n    const redComponentGrayscaleWeight = 0.199;\n    const greenComponentGrayscaleWeight = 0.687;\n    const blueComponentGrayscaleWeight = 0.114;\n    return (redComponentGrayscaleWeight * rgbValue[0] +\n        greenComponentGrayscaleWeight * rgbValue[1] +\n        blueComponentGrayscaleWeight * rgbValue[2]);\n}\nfunction applyAlpha(color, alpha) {\n    // special case optimization\n    if (color === 'transparent') {\n        return color;\n    }\n    const originRgba = colorStringToRgba(color);\n    const originAlpha = originRgba[3];\n    return `rgba(${originRgba[0]}, ${originRgba[1]}, ${originRgba[2]}, ${alpha * originAlpha})`;\n}\nfunction generateContrastColors(backgroundColor) {\n    const rgb = colorStringToRgba(backgroundColor);\n    return {\n        _internal_background: `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`,\n        _internal_foreground: rgbaToGrayscale(rgb) > 160 ? 'black' : 'white',\n    };\n}\nfunction colorStringToGrayscale(backgroundColor) {\n    return rgbaToGrayscale(colorStringToRgba(backgroundColor));\n}\nfunction gradientColorAtPercent(topColor, bottomColor, percent) {\n    const [topR, topG, topB, topA] = colorStringToRgba(topColor);\n    const [bottomR, bottomG, bottomB, bottomA] = colorStringToRgba(bottomColor);\n    const resultRgba = [\n        normalizeRgbComponent(topR + percent * (bottomR - topR)),\n        normalizeRgbComponent(topG + percent * (bottomG - topG)),\n        normalizeRgbComponent(topB + percent * (bottomB - topB)),\n        normalizeAlphaComponent(topA + percent * (bottomA - topA)),\n    ];\n    return `rgba(${resultRgba[0]}, ${resultRgba[1]}, ${resultRgba[2]}, ${resultRgba[3]})`;\n}\n\nclass Delegate {\n    constructor() {\n        this._private__listeners = [];\n    }\n    _internal_subscribe(callback, linkedObject, singleshot) {\n        const listener = {\n            _internal_callback: callback,\n            _internal_linkedObject: linkedObject,\n            _internal_singleshot: singleshot === true,\n        };\n        this._private__listeners.push(listener);\n    }\n    _internal_unsubscribe(callback) {\n        const index = this._private__listeners.findIndex((listener) => callback === listener._internal_callback);\n        if (index > -1) {\n            this._private__listeners.splice(index, 1);\n        }\n    }\n    _internal_unsubscribeAll(linkedObject) {\n        this._private__listeners = this._private__listeners.filter((listener) => listener._internal_linkedObject !== linkedObject);\n    }\n    _internal_fire(param1, param2, param3) {\n        const listenersSnapshot = [...this._private__listeners];\n        this._private__listeners = this._private__listeners.filter((listener) => !listener._internal_singleshot);\n        listenersSnapshot.forEach((listener) => listener._internal_callback(param1, param2, param3));\n    }\n    _internal_hasListeners() {\n        return this._private__listeners.length > 0;\n    }\n    _internal_destroy() {\n        this._private__listeners = [];\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction merge(dst, ...sources) {\n    for (const src of sources) {\n        // eslint-disable-next-line no-restricted-syntax\n        for (const i in src) {\n            if (src[i] === undefined) {\n                continue;\n            }\n            if ('object' !== typeof src[i] || dst[i] === undefined || Array.isArray(src[i])) {\n                dst[i] = src[i];\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                merge(dst[i], src[i]);\n            }\n        }\n    }\n    return dst;\n}\nfunction isNumber(value) {\n    return (typeof value === 'number') && (isFinite(value));\n}\nfunction isInteger(value) {\n    return (typeof value === 'number') && ((value % 1) === 0);\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isBoolean(value) {\n    return typeof value === 'boolean';\n}\nfunction clone(object) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const o = object;\n    if (!o || 'object' !== typeof o) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return o;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let c;\n    if (Array.isArray(o)) {\n        c = [];\n    }\n    else {\n        c = {};\n    }\n    let p;\n    let v;\n    // eslint-disable-next-line no-restricted-syntax\n    for (p in o) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,no-prototype-builtins\n        if (o.hasOwnProperty(p)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            v = o[p];\n            if (v && 'object' === typeof v) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                c[p] = clone(v);\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                c[p] = v;\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return c;\n}\nfunction notNull(t) {\n    return t !== null;\n}\nfunction undefinedIfNull(t) {\n    return (t === null) ? undefined : t;\n}\n\n/**\n * Default font family.\n * Must be used to generate font string when font is not specified.\n */\nconst defaultFontFamily = `-apple-system, BlinkMacSystemFont, 'Trebuchet MS', Roboto, Ubuntu, sans-serif`;\n/**\n * Generates a font string, which can be used to set in canvas' font property.\n * If no family provided, {@link defaultFontFamily} will be used.\n *\n * @param size - Font size in pixels.\n * @param family - Optional font family.\n * @param style - Optional font style.\n * @returns The font string.\n */\nfunction makeFont(size, family, style) {\n    if (style !== undefined) {\n        style = `${style} `;\n    }\n    else {\n        style = '';\n    }\n    if (family === undefined) {\n        family = defaultFontFamily;\n    }\n    return `${style}${size}px ${family}`;\n}\n\nclass PriceAxisRendererOptionsProvider {\n    constructor(chartModel) {\n        this._private__rendererOptions = {\n            _internal_borderSize: 1 /* RendererConstants.BorderSize */,\n            _internal_tickLength: 5 /* RendererConstants.TickLength */,\n            _internal_fontSize: NaN,\n            _internal_font: '',\n            _internal_fontFamily: '',\n            _internal_color: '',\n            _internal_paneBackgroundColor: '',\n            _internal_paddingBottom: 0,\n            _internal_paddingInner: 0,\n            _internal_paddingOuter: 0,\n            _internal_paddingTop: 0,\n            _internal_baselineOffset: 0,\n        };\n        this._private__chartModel = chartModel;\n    }\n    _internal_options() {\n        const rendererOptions = this._private__rendererOptions;\n        const currentFontSize = this._private__fontSize();\n        const currentFontFamily = this._private__fontFamily();\n        if (rendererOptions._internal_fontSize !== currentFontSize || rendererOptions._internal_fontFamily !== currentFontFamily) {\n            rendererOptions._internal_fontSize = currentFontSize;\n            rendererOptions._internal_fontFamily = currentFontFamily;\n            rendererOptions._internal_font = makeFont(currentFontSize, currentFontFamily);\n            rendererOptions._internal_paddingTop = 2.5 / 12 * currentFontSize; // 2.5 px for 12px font\n            rendererOptions._internal_paddingBottom = rendererOptions._internal_paddingTop;\n            rendererOptions._internal_paddingInner = currentFontSize / 12 * rendererOptions._internal_tickLength;\n            rendererOptions._internal_paddingOuter = currentFontSize / 12 * rendererOptions._internal_tickLength;\n            rendererOptions._internal_baselineOffset = 0;\n        }\n        rendererOptions._internal_color = this._private__textColor();\n        rendererOptions._internal_paneBackgroundColor = this._private__paneBackgroundColor();\n        return this._private__rendererOptions;\n    }\n    _private__textColor() {\n        return this._private__chartModel._internal_options().layout.textColor;\n    }\n    _private__paneBackgroundColor() {\n        return this._private__chartModel._internal_backgroundTopColor();\n    }\n    _private__fontSize() {\n        return this._private__chartModel._internal_options().layout.fontSize;\n    }\n    _private__fontFamily() {\n        return this._private__chartModel._internal_options().layout.fontFamily;\n    }\n}\n\nclass CompositeRenderer {\n    constructor() {\n        this._private__renderers = [];\n    }\n    _internal_setRenderers(renderers) {\n        this._private__renderers = renderers;\n    }\n    _internal_draw(target, isHovered, hitTestData) {\n        this._private__renderers.forEach((r) => {\n            r._internal_draw(target, isHovered, hitTestData);\n        });\n    }\n}\n\nclass BitmapCoordinatesPaneRenderer {\n    _internal_draw(target, isHovered, hitTestData) {\n        target.useBitmapCoordinateSpace((scope) => this._internal__drawImpl(scope, isHovered, hitTestData));\n    }\n}\n\nclass PaneRendererMarks extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._internal__data = null;\n    }\n    _internal_setData(data) {\n        this._internal__data = data;\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._internal__data === null || this._internal__data._internal_visibleRange === null) {\n            return;\n        }\n        const visibleRange = this._internal__data._internal_visibleRange;\n        const data = this._internal__data;\n        const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        const correction = (tickWidth % 2) / 2;\n        const draw = (radiusMedia) => {\n            ctx.beginPath();\n            for (let i = visibleRange.to - 1; i >= visibleRange.from; --i) {\n                const point = data._internal_items[i];\n                const centerX = Math.round(point._internal_x * horizontalPixelRatio) + correction; // correct x coordinate only\n                const centerY = point._internal_y * verticalPixelRatio;\n                const radius = radiusMedia * verticalPixelRatio + correction;\n                ctx.moveTo(centerX, centerY);\n                ctx.arc(centerX, centerY, radius, 0, Math.PI * 2);\n            }\n            ctx.fill();\n        };\n        if (data._internal_lineWidth > 0) {\n            ctx.fillStyle = data._internal_backColor;\n            draw(data._internal_radius + data._internal_lineWidth);\n        }\n        ctx.fillStyle = data._internal_lineColor;\n        draw(data._internal_radius);\n    }\n}\n\nfunction createEmptyMarkerData() {\n    return {\n        _internal_items: [{\n                _internal_x: 0,\n                _internal_y: 0,\n                _internal_time: 0,\n                _internal_price: 0,\n            }],\n        _internal_lineColor: '',\n        _internal_backColor: '',\n        _internal_radius: 0,\n        _internal_lineWidth: 0,\n        _internal_visibleRange: null,\n    };\n}\nconst rangeForSinglePoint = { from: 0, to: 1 };\nclass CrosshairMarksPaneView {\n    constructor(chartModel, crosshair) {\n        this._private__compositeRenderer = new CompositeRenderer();\n        this._private__markersRenderers = [];\n        this._private__markersData = [];\n        this._private__invalidated = true;\n        this._private__chartModel = chartModel;\n        this._private__crosshair = crosshair;\n        this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n    }\n    _internal_update(updateType) {\n        const serieses = this._private__chartModel._internal_serieses();\n        if (serieses.length !== this._private__markersRenderers.length) {\n            this._private__markersData = serieses.map(createEmptyMarkerData);\n            this._private__markersRenderers = this._private__markersData.map((data) => {\n                const res = new PaneRendererMarks();\n                res._internal_setData(data);\n                return res;\n            });\n            this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n        }\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._private__compositeRenderer;\n    }\n    _private__updateImpl() {\n        const forceHidden = this._private__crosshair._internal_options().mode === 2 /* CrosshairMode.Hidden */;\n        const serieses = this._private__chartModel._internal_serieses();\n        const timePointIndex = this._private__crosshair._internal_appliedIndex();\n        const timeScale = this._private__chartModel._internal_timeScale();\n        serieses.forEach((s, index) => {\n            var _a;\n            const data = this._private__markersData[index];\n            const seriesData = s._internal_markerDataAtIndex(timePointIndex);\n            if (forceHidden || seriesData === null || !s._internal_visible()) {\n                data._internal_visibleRange = null;\n                return;\n            }\n            const firstValue = ensureNotNull(s._internal_firstValue());\n            data._internal_lineColor = seriesData._internal_backgroundColor;\n            data._internal_radius = seriesData._internal_radius;\n            data._internal_lineWidth = seriesData._internal_borderWidth;\n            data._internal_items[0]._internal_price = seriesData._internal_price;\n            data._internal_items[0]._internal_y = s._internal_priceScale()._internal_priceToCoordinate(seriesData._internal_price, firstValue._internal_value);\n            data._internal_backColor = (_a = seriesData._internal_borderColor) !== null && _a !== void 0 ? _a : this._private__chartModel._internal_backgroundColorAtYPercentFromTop(data._internal_items[0]._internal_y / s._internal_priceScale()._internal_height());\n            data._internal_items[0]._internal_time = timePointIndex;\n            data._internal_items[0]._internal_x = timeScale._internal_indexToCoordinate(timePointIndex);\n            data._internal_visibleRange = rangeForSinglePoint;\n        });\n    }\n}\n\nclass CrosshairRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor(data) {\n        super();\n        this._private__data = data;\n    }\n    _internal__drawImpl({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null) {\n            return;\n        }\n        const vertLinesVisible = this._private__data._internal_vertLine._internal_visible;\n        const horzLinesVisible = this._private__data._internal_horzLine._internal_visible;\n        if (!vertLinesVisible && !horzLinesVisible) {\n            return;\n        }\n        const x = Math.round(this._private__data._internal_x * horizontalPixelRatio);\n        const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n        ctx.lineCap = 'butt';\n        if (vertLinesVisible && x >= 0) {\n            ctx.lineWidth = Math.floor(this._private__data._internal_vertLine._internal_lineWidth * horizontalPixelRatio);\n            ctx.strokeStyle = this._private__data._internal_vertLine._internal_color;\n            ctx.fillStyle = this._private__data._internal_vertLine._internal_color;\n            setLineStyle(ctx, this._private__data._internal_vertLine._internal_lineStyle);\n            drawVerticalLine(ctx, x, 0, bitmapSize.height);\n        }\n        if (horzLinesVisible && y >= 0) {\n            ctx.lineWidth = Math.floor(this._private__data._internal_horzLine._internal_lineWidth * verticalPixelRatio);\n            ctx.strokeStyle = this._private__data._internal_horzLine._internal_color;\n            ctx.fillStyle = this._private__data._internal_horzLine._internal_color;\n            setLineStyle(ctx, this._private__data._internal_horzLine._internal_lineStyle);\n            drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n        }\n    }\n}\n\nclass CrosshairPaneView {\n    constructor(source) {\n        this._private__invalidated = true;\n        this._private__rendererData = {\n            _internal_vertLine: {\n                _internal_lineWidth: 1,\n                _internal_lineStyle: 0,\n                _internal_color: '',\n                _internal_visible: false,\n            },\n            _internal_horzLine: {\n                _internal_lineWidth: 1,\n                _internal_lineStyle: 0,\n                _internal_color: '',\n                _internal_visible: false,\n            },\n            _internal_x: 0,\n            _internal_y: 0,\n        };\n        this._private__renderer = new CrosshairRenderer(this._private__rendererData);\n        this._private__source = source;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        const visible = this._private__source._internal_visible();\n        const pane = ensureNotNull(this._private__source._internal_pane());\n        const crosshairOptions = pane._internal_model()._internal_options().crosshair;\n        const data = this._private__rendererData;\n        if (crosshairOptions.mode === 2 /* CrosshairMode.Hidden */) {\n            data._internal_horzLine._internal_visible = false;\n            data._internal_vertLine._internal_visible = false;\n            return;\n        }\n        data._internal_horzLine._internal_visible = visible && this._private__source._internal_horzLineVisible(pane);\n        data._internal_vertLine._internal_visible = visible && this._private__source._internal_vertLineVisible();\n        data._internal_horzLine._internal_lineWidth = crosshairOptions.horzLine.width;\n        data._internal_horzLine._internal_lineStyle = crosshairOptions.horzLine.style;\n        data._internal_horzLine._internal_color = crosshairOptions.horzLine.color;\n        data._internal_vertLine._internal_lineWidth = crosshairOptions.vertLine.width;\n        data._internal_vertLine._internal_lineStyle = crosshairOptions.vertLine.style;\n        data._internal_vertLine._internal_color = crosshairOptions.vertLine.color;\n        data._internal_x = this._private__source._internal_appliedX();\n        data._internal_y = this._private__source._internal_appliedY();\n    }\n}\n\n/**\n * Fills rectangle's inner border (so, all the filled area is limited by the [x, x + width]*[y, y + height] region)\n * ```\n * (x, y)\n * O***********************|*****\n * |        border         |  ^\n * |   *****************   |  |\n * |   |               |   |  |\n * | b |               | b |  h\n * | o |               | o |  e\n * | r |               | r |  i\n * | d |               | d |  g\n * | e |               | e |  h\n * | r |               | r |  t\n * |   |               |   |  |\n * |   *****************   |  |\n * |        border         |  v\n * |***********************|*****\n * |                       |\n * |<------- width ------->|\n * ```\n *\n * @param ctx - Context to draw on\n * @param x - Left side of the target rectangle\n * @param y - Top side of the target rectangle\n * @param width - Width of the target rectangle\n * @param height - Height of the target rectangle\n * @param borderWidth - Width of border to fill, must be less than width and height of the target rectangle\n */\nfunction fillRectInnerBorder(ctx, x, y, width, height, borderWidth) {\n    // horizontal (top and bottom) edges\n    ctx.fillRect(x + borderWidth, y, width - borderWidth * 2, borderWidth);\n    ctx.fillRect(x + borderWidth, y + height - borderWidth, width - borderWidth * 2, borderWidth);\n    // vertical (left and right) edges\n    ctx.fillRect(x, y, borderWidth, height);\n    ctx.fillRect(x + width - borderWidth, y, borderWidth, height);\n}\nfunction clearRect(ctx, x, y, w, h, clearColor) {\n    ctx.save();\n    ctx.globalCompositeOperation = 'copy';\n    ctx.fillStyle = clearColor;\n    ctx.fillRect(x, y, w, h);\n    ctx.restore();\n}\nfunction changeBorderRadius(borderRadius, offset) {\n    return borderRadius.map((x) => x === 0 ? x : x + offset);\n}\nfunction drawRoundRect(\n// eslint:disable-next-line:max-params\nctx, x, y, w, h, radii) {\n    /**\n     * As of May 2023, all of the major browsers now support ctx.roundRect() so we should\n     * be able to switch to the native version soon.\n     */\n    ctx.beginPath();\n    if (ctx.roundRect) {\n        ctx.roundRect(x, y, w, h, radii);\n        return;\n    }\n    /*\n     * Deprecate the rest in v5.\n     */\n    ctx.lineTo(x + w - radii[1], y);\n    if (radii[1] !== 0) {\n        ctx.arcTo(x + w, y, x + w, y + radii[1], radii[1]);\n    }\n    ctx.lineTo(x + w, y + h - radii[2]);\n    if (radii[2] !== 0) {\n        ctx.arcTo(x + w, y + h, x + w - radii[2], y + h, radii[2]);\n    }\n    ctx.lineTo(x + radii[3], y + h);\n    if (radii[3] !== 0) {\n        ctx.arcTo(x, y + h, x, y + h - radii[3], radii[3]);\n    }\n    ctx.lineTo(x, y + radii[0]);\n    if (radii[0] !== 0) {\n        ctx.arcTo(x, y, x + radii[0], y, radii[0]);\n    }\n}\n/**\n * Draws a rounded rect with a border.\n *\n * This function assumes that the colors will be solid, without\n * any alpha. (This allows us to fix a rendering artefact.)\n *\n * @param outerBorderRadius - The radius of the border (outer edge)\n */\n// eslint-disable-next-line max-params\nfunction drawRoundRectWithBorder(ctx, left, top, width, height, backgroundColor, borderWidth = 0, outerBorderRadius = [0, 0, 0, 0], borderColor = '') {\n    ctx.save();\n    if (!borderWidth || !borderColor || borderColor === backgroundColor) {\n        drawRoundRect(ctx, left, top, width, height, outerBorderRadius);\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n        return;\n    }\n    const halfBorderWidth = borderWidth / 2;\n    const radii = changeBorderRadius(outerBorderRadius, -halfBorderWidth);\n    drawRoundRect(ctx, left + halfBorderWidth, top + halfBorderWidth, width - borderWidth, height - borderWidth, radii);\n    if (backgroundColor !== 'transparent') {\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n    }\n    if (borderColor !== 'transparent') {\n        ctx.lineWidth = borderWidth;\n        ctx.strokeStyle = borderColor;\n        ctx.closePath();\n        ctx.stroke();\n    }\n    ctx.restore();\n}\n// eslint-disable-next-line max-params\nfunction clearRectWithGradient(ctx, x, y, w, h, topColor, bottomColor) {\n    ctx.save();\n    ctx.globalCompositeOperation = 'copy';\n    const gradient = ctx.createLinearGradient(0, 0, 0, h);\n    gradient.addColorStop(0, topColor);\n    gradient.addColorStop(1, bottomColor);\n    ctx.fillStyle = gradient;\n    ctx.fillRect(x, y, w, h);\n    ctx.restore();\n}\n\nclass PriceAxisViewRenderer {\n    constructor(data, commonData) {\n        this._internal_setData(data, commonData);\n    }\n    _internal_setData(data, commonData) {\n        this._private__data = data;\n        this._private__commonData = commonData;\n    }\n    _internal_height(rendererOptions, useSecondLine) {\n        if (!this._private__data._internal_visible) {\n            return 0;\n        }\n        return rendererOptions._internal_fontSize + rendererOptions._internal_paddingTop + rendererOptions._internal_paddingBottom;\n    }\n    _internal_draw(target, rendererOptions, textWidthCache, align) {\n        if (!this._private__data._internal_visible || this._private__data._internal_text.length === 0) {\n            return;\n        }\n        const textColor = this._private__data._internal_color;\n        const backgroundColor = this._private__commonData._internal_background;\n        const geometry = target.useBitmapCoordinateSpace((scope) => {\n            const ctx = scope.context;\n            ctx.font = rendererOptions._internal_font;\n            const geom = this._private__calculateGeometry(scope, rendererOptions, textWidthCache, align);\n            const gb = geom._internal_bitmap;\n            const drawLabelBody = (labelBackgroundColor, labelBorderColor) => {\n                /*\n                 labelBackgroundColor (and labelBorderColor) will always be a solid color (no alpha) [see generateContrastColors in color.ts].\n                 Therefore we can draw the rounded label using simplified code (drawRoundRectWithBorder) that doesn't need to ensure the background and the border don't overlap.\n                */\n                if (geom._internal_alignRight) {\n                    drawRoundRectWithBorder(ctx, gb._internal_xOutside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, labelBackgroundColor, gb._internal_horzBorder, [gb._internal_radius, 0, 0, gb._internal_radius], labelBorderColor);\n                }\n                else {\n                    drawRoundRectWithBorder(ctx, gb._internal_xInside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, labelBackgroundColor, gb._internal_horzBorder, [0, gb._internal_radius, gb._internal_radius, 0], labelBorderColor);\n                }\n            };\n            // draw border\n            // draw label background\n            drawLabelBody(backgroundColor, 'transparent');\n            // draw tick\n            if (this._private__data._internal_tickVisible) {\n                ctx.fillStyle = textColor;\n                ctx.fillRect(gb._internal_xInside, gb._internal_yMid, gb._internal_xTick - gb._internal_xInside, gb._internal_tickHeight);\n            }\n            // draw label border above the tick\n            drawLabelBody('transparent', backgroundColor);\n            // draw separator\n            if (this._private__data._internal_borderVisible) {\n                ctx.fillStyle = rendererOptions._internal_paneBackgroundColor;\n                ctx.fillRect(geom._internal_alignRight ? gb._internal_right - gb._internal_horzBorder : 0, gb._internal_yTop, gb._internal_horzBorder, gb._internal_yBottom - gb._internal_yTop);\n            }\n            return geom;\n        });\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            const gm = geometry._internal_media;\n            ctx.font = rendererOptions._internal_font;\n            ctx.textAlign = geometry._internal_alignRight ? 'right' : 'left';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = textColor;\n            ctx.fillText(this._private__data._internal_text, gm._internal_xText, (gm._internal_yTop + gm._internal_yBottom) / 2 + gm._internal_textMidCorrection);\n        });\n    }\n    _private__calculateGeometry(scope, rendererOptions, textWidthCache, align) {\n        var _a;\n        const { context: ctx, bitmapSize, mediaSize, horizontalPixelRatio, verticalPixelRatio } = scope;\n        const tickSize = (this._private__data._internal_tickVisible || !this._private__data._internal_moveTextToInvisibleTick) ? rendererOptions._internal_tickLength : 0;\n        const horzBorder = this._private__data._internal_separatorVisible ? rendererOptions._internal_borderSize : 0;\n        const paddingTop = rendererOptions._internal_paddingTop + this._private__commonData._internal_additionalPaddingTop;\n        const paddingBottom = rendererOptions._internal_paddingBottom + this._private__commonData._internal_additionalPaddingBottom;\n        const paddingInner = rendererOptions._internal_paddingInner;\n        const paddingOuter = rendererOptions._internal_paddingOuter;\n        const text = this._private__data._internal_text;\n        const actualTextHeight = rendererOptions._internal_fontSize;\n        const textMidCorrection = textWidthCache._internal_yMidCorrection(ctx, text);\n        const textWidth = Math.ceil(textWidthCache._internal_measureText(ctx, text));\n        const totalHeight = actualTextHeight + paddingTop + paddingBottom;\n        const totalWidth = rendererOptions._internal_borderSize + paddingInner + paddingOuter + textWidth + tickSize;\n        const tickHeightBitmap = Math.max(1, Math.floor(verticalPixelRatio));\n        let totalHeightBitmap = Math.round(totalHeight * verticalPixelRatio);\n        if (totalHeightBitmap % 2 !== tickHeightBitmap % 2) {\n            totalHeightBitmap += 1;\n        }\n        const horzBorderBitmap = horzBorder > 0 ? Math.max(1, Math.floor(horzBorder * horizontalPixelRatio)) : 0;\n        const totalWidthBitmap = Math.round(totalWidth * horizontalPixelRatio);\n        // tick overlaps scale border\n        const tickSizeBitmap = Math.round(tickSize * horizontalPixelRatio);\n        const yMid = (_a = this._private__commonData._internal_fixedCoordinate) !== null && _a !== void 0 ? _a : this._private__commonData._internal_coordinate;\n        const yMidBitmap = Math.round(yMid * verticalPixelRatio) - Math.floor(verticalPixelRatio * 0.5);\n        const yTopBitmap = Math.floor(yMidBitmap + tickHeightBitmap / 2 - totalHeightBitmap / 2);\n        const yBottomBitmap = yTopBitmap + totalHeightBitmap;\n        const alignRight = align === 'right';\n        const xInside = alignRight ? mediaSize.width - horzBorder : horzBorder;\n        const xInsideBitmap = alignRight ? bitmapSize.width - horzBorderBitmap : horzBorderBitmap;\n        let xOutsideBitmap;\n        let xTickBitmap;\n        let xText;\n        if (alignRight) {\n            // 2               1\n            //\n            //              6  5\n            //\n            // 3               4\n            xOutsideBitmap = xInsideBitmap - totalWidthBitmap;\n            xTickBitmap = xInsideBitmap - tickSizeBitmap;\n            xText = xInside - tickSize - paddingInner - horzBorder;\n        }\n        else {\n            // 1               2\n            //\n            // 6  5\n            //\n            // 4               3\n            xOutsideBitmap = xInsideBitmap + totalWidthBitmap;\n            xTickBitmap = xInsideBitmap + tickSizeBitmap;\n            xText = xInside + tickSize + paddingInner;\n        }\n        return {\n            _internal_alignRight: alignRight,\n            _internal_bitmap: {\n                _internal_yTop: yTopBitmap,\n                _internal_yMid: yMidBitmap,\n                _internal_yBottom: yBottomBitmap,\n                _internal_totalWidth: totalWidthBitmap,\n                _internal_totalHeight: totalHeightBitmap,\n                // TODO: it is better to have different horizontal and vertical radii\n                _internal_radius: 2 * horizontalPixelRatio,\n                _internal_horzBorder: horzBorderBitmap,\n                _internal_xOutside: xOutsideBitmap,\n                _internal_xInside: xInsideBitmap,\n                _internal_xTick: xTickBitmap,\n                _internal_tickHeight: tickHeightBitmap,\n                _internal_right: bitmapSize.width,\n            },\n            _internal_media: {\n                _internal_yTop: yTopBitmap / verticalPixelRatio,\n                _internal_yBottom: yBottomBitmap / verticalPixelRatio,\n                _internal_xText: xText,\n                _internal_textMidCorrection: textMidCorrection,\n            },\n        };\n    }\n}\n\nclass PriceAxisView {\n    constructor(ctor) {\n        this._private__commonRendererData = {\n            _internal_coordinate: 0,\n            _internal_background: '#000',\n            _internal_additionalPaddingBottom: 0,\n            _internal_additionalPaddingTop: 0,\n        };\n        this._private__axisRendererData = {\n            _internal_text: '',\n            _internal_visible: false,\n            _internal_tickVisible: true,\n            _internal_moveTextToInvisibleTick: false,\n            _internal_borderColor: '',\n            _internal_color: '#FFF',\n            _internal_borderVisible: false,\n            _internal_separatorVisible: false,\n        };\n        this._private__paneRendererData = {\n            _internal_text: '',\n            _internal_visible: false,\n            _internal_tickVisible: false,\n            _internal_moveTextToInvisibleTick: true,\n            _internal_borderColor: '',\n            _internal_color: '#FFF',\n            _internal_borderVisible: true,\n            _internal_separatorVisible: true,\n        };\n        this._private__invalidated = true;\n        this._private__axisRenderer = new (ctor || PriceAxisViewRenderer)(this._private__axisRendererData, this._private__commonRendererData);\n        this._private__paneRenderer = new (ctor || PriceAxisViewRenderer)(this._private__paneRendererData, this._private__commonRendererData);\n    }\n    _internal_text() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__axisRendererData._internal_text;\n    }\n    _internal_coordinate() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__commonRendererData._internal_coordinate;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_height(rendererOptions, useSecondLine = false) {\n        return Math.max(this._private__axisRenderer._internal_height(rendererOptions, useSecondLine), this._private__paneRenderer._internal_height(rendererOptions, useSecondLine));\n    }\n    _internal_getFixedCoordinate() {\n        return this._private__commonRendererData._internal_fixedCoordinate || 0;\n    }\n    _internal_setFixedCoordinate(value) {\n        this._private__commonRendererData._internal_fixedCoordinate = value;\n    }\n    _internal_isVisible() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__axisRendererData._internal_visible || this._private__paneRendererData._internal_visible;\n    }\n    _internal_isAxisLabelVisible() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__axisRendererData._internal_visible;\n    }\n    _internal_renderer(priceScale) {\n        this._private__updateRendererDataIfNeeded();\n        // force update tickVisible state from price scale options\n        // because we don't have and we can't have price axis in other methods\n        // (like paneRenderer or any other who call _updateRendererDataIfNeeded)\n        this._private__axisRendererData._internal_tickVisible = this._private__axisRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n        this._private__paneRendererData._internal_tickVisible = this._private__paneRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n        this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n        this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n        return this._private__axisRenderer;\n    }\n    _internal_paneRenderer() {\n        this._private__updateRendererDataIfNeeded();\n        this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n        this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n        return this._private__paneRenderer;\n    }\n    _private__updateRendererDataIfNeeded() {\n        if (this._private__invalidated) {\n            this._private__axisRendererData._internal_tickVisible = true;\n            this._private__paneRendererData._internal_tickVisible = false;\n            this._internal__updateRendererData(this._private__axisRendererData, this._private__paneRendererData, this._private__commonRendererData);\n        }\n    }\n}\n\nclass CrosshairPriceAxisView extends PriceAxisView {\n    constructor(source, priceScale, valueProvider) {\n        super();\n        this._private__source = source;\n        this._private__priceScale = priceScale;\n        this._private__valueProvider = valueProvider;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n        axisRendererData._internal_visible = false;\n        if (this._private__source._internal_options().mode === 2 /* CrosshairMode.Hidden */) {\n            return;\n        }\n        const options = this._private__source._internal_options().horzLine;\n        if (!options.labelVisible) {\n            return;\n        }\n        const firstValue = this._private__priceScale._internal_firstValue();\n        if (!this._private__source._internal_visible() || this._private__priceScale._internal_isEmpty() || (firstValue === null)) {\n            return;\n        }\n        const colors = generateContrastColors(options.labelBackgroundColor);\n        commonRendererData._internal_background = colors._internal_background;\n        axisRendererData._internal_color = colors._internal_foreground;\n        const additionalPadding = 2 / 12 * this._private__priceScale._internal_fontSize();\n        commonRendererData._internal_additionalPaddingTop = additionalPadding;\n        commonRendererData._internal_additionalPaddingBottom = additionalPadding;\n        const value = this._private__valueProvider(this._private__priceScale);\n        commonRendererData._internal_coordinate = value._internal_coordinate;\n        axisRendererData._internal_text = this._private__priceScale._internal_formatPrice(value._internal_price, firstValue);\n        axisRendererData._internal_visible = true;\n    }\n}\n\nconst optimizationReplacementRe = /[1-9]/g;\nconst radius$1 = 2;\nclass TimeAxisViewRenderer {\n    constructor() {\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_draw(target, rendererOptions) {\n        if (this._private__data === null || this._private__data._internal_visible === false || this._private__data._internal_text.length === 0) {\n            return;\n        }\n        const textWidth = target.useMediaCoordinateSpace(({ context: ctx }) => {\n            ctx.font = rendererOptions._internal_font;\n            return Math.round(rendererOptions._internal_widthCache._internal_measureText(ctx, ensureNotNull(this._private__data)._internal_text, optimizationReplacementRe));\n        });\n        if (textWidth <= 0) {\n            return;\n        }\n        const horzMargin = rendererOptions._internal_paddingHorizontal;\n        const labelWidth = textWidth + 2 * horzMargin;\n        const labelWidthHalf = labelWidth / 2;\n        const timeScaleWidth = this._private__data._internal_width;\n        let coordinate = this._private__data._internal_coordinate;\n        let x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        if (x1 < 0) {\n            coordinate = coordinate + Math.abs(0 - x1);\n            x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        }\n        else if (x1 + labelWidth > timeScaleWidth) {\n            coordinate = coordinate - Math.abs(timeScaleWidth - (x1 + labelWidth));\n            x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        }\n        const x2 = x1 + labelWidth;\n        const y1 = 0;\n        const y2 = Math.ceil(y1 +\n            rendererOptions._internal_borderSize +\n            rendererOptions._internal_tickLength +\n            rendererOptions._internal_paddingTop +\n            rendererOptions._internal_fontSize +\n            rendererOptions._internal_paddingBottom);\n        target.useBitmapCoordinateSpace(({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) => {\n            const data = ensureNotNull(this._private__data);\n            ctx.fillStyle = data._internal_background;\n            const x1scaled = Math.round(x1 * horizontalPixelRatio);\n            const y1scaled = Math.round(y1 * verticalPixelRatio);\n            const x2scaled = Math.round(x2 * horizontalPixelRatio);\n            const y2scaled = Math.round(y2 * verticalPixelRatio);\n            const radiusScaled = Math.round(radius$1 * horizontalPixelRatio);\n            ctx.beginPath();\n            ctx.moveTo(x1scaled, y1scaled);\n            ctx.lineTo(x1scaled, y2scaled - radiusScaled);\n            ctx.arcTo(x1scaled, y2scaled, x1scaled + radiusScaled, y2scaled, radiusScaled);\n            ctx.lineTo(x2scaled - radiusScaled, y2scaled);\n            ctx.arcTo(x2scaled, y2scaled, x2scaled, y2scaled - radiusScaled, radiusScaled);\n            ctx.lineTo(x2scaled, y1scaled);\n            ctx.fill();\n            if (data._internal_tickVisible) {\n                const tickX = Math.round(data._internal_coordinate * horizontalPixelRatio);\n                const tickTop = y1scaled;\n                const tickBottom = Math.round((tickTop + rendererOptions._internal_tickLength) * verticalPixelRatio);\n                ctx.fillStyle = data._internal_color;\n                const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n                const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n                ctx.fillRect(tickX - tickOffset, tickTop, tickWidth, tickBottom - tickTop);\n            }\n        });\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            const data = ensureNotNull(this._private__data);\n            const yText = y1 +\n                rendererOptions._internal_borderSize +\n                rendererOptions._internal_tickLength +\n                rendererOptions._internal_paddingTop +\n                rendererOptions._internal_fontSize / 2;\n            ctx.font = rendererOptions._internal_font;\n            ctx.textAlign = 'left';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = data._internal_color;\n            const textYCorrection = rendererOptions._internal_widthCache._internal_yMidCorrection(ctx, 'Apr0');\n            ctx.translate(x1 + horzMargin, yText + textYCorrection);\n            ctx.fillText(data._internal_text, 0, 0);\n        });\n    }\n}\n\nclass CrosshairTimeAxisView {\n    constructor(crosshair, model, valueProvider) {\n        this._private__invalidated = true;\n        this._private__renderer = new TimeAxisViewRenderer();\n        this._private__rendererData = {\n            _internal_visible: false,\n            _internal_background: '#4c525e',\n            _internal_color: 'white',\n            _internal_text: '',\n            _internal_width: 0,\n            _internal_coordinate: NaN,\n            _internal_tickVisible: true,\n        };\n        this._private__crosshair = crosshair;\n        this._private__model = model;\n        this._private__valueProvider = valueProvider;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        this._private__renderer._internal_setData(this._private__rendererData);\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        const data = this._private__rendererData;\n        data._internal_visible = false;\n        if (this._private__crosshair._internal_options().mode === 2 /* CrosshairMode.Hidden */) {\n            return;\n        }\n        const options = this._private__crosshair._internal_options().vertLine;\n        if (!options.labelVisible) {\n            return;\n        }\n        const timeScale = this._private__model._internal_timeScale();\n        if (timeScale._internal_isEmpty()) {\n            return;\n        }\n        data._internal_width = timeScale._internal_width();\n        const value = this._private__valueProvider();\n        if (value === null) {\n            return;\n        }\n        data._internal_coordinate = value._internal_coordinate;\n        const currentTime = timeScale._internal_indexToTimeScalePoint(this._private__crosshair._internal_appliedIndex());\n        data._internal_text = timeScale._internal_formatDateTime(ensureNotNull(currentTime));\n        data._internal_visible = true;\n        const colors = generateContrastColors(options.labelBackgroundColor);\n        data._internal_background = colors._internal_background;\n        data._internal_color = colors._internal_foreground;\n        data._internal_tickVisible = timeScale._internal_options().ticksVisible;\n    }\n}\n\nclass DataSource {\n    constructor() {\n        this._internal__priceScale = null;\n        this._private__zorder = 0;\n    }\n    _internal_zorder() {\n        return this._private__zorder;\n    }\n    _internal_setZorder(zorder) {\n        this._private__zorder = zorder;\n    }\n    _internal_priceScale() {\n        return this._internal__priceScale;\n    }\n    _internal_setPriceScale(priceScale) {\n        this._internal__priceScale = priceScale;\n    }\n    _internal_labelPaneViews(pane) {\n        return [];\n    }\n    _internal_timeAxisViews() {\n        return [];\n    }\n    _internal_visible() {\n        return true;\n    }\n}\n\n/**\n * Represents the crosshair mode.\n */\nvar CrosshairMode;\n(function (CrosshairMode) {\n    /**\n     * This mode allows crosshair to move freely on the chart.\n     */\n    CrosshairMode[CrosshairMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * This mode sticks crosshair's horizontal line to the price value of a single-value series or to the close price of OHLC-based series.\n     */\n    CrosshairMode[CrosshairMode[\"Magnet\"] = 1] = \"Magnet\";\n    /**\n     * This mode disables rendering of the crosshair.\n     */\n    CrosshairMode[CrosshairMode[\"Hidden\"] = 2] = \"Hidden\";\n})(CrosshairMode || (CrosshairMode = {}));\nclass Crosshair extends DataSource {\n    constructor(model, options) {\n        super();\n        this._private__pane = null;\n        this._private__price = NaN;\n        this._private__index = 0;\n        this._private__visible = true;\n        this._private__priceAxisViews = new Map();\n        this._private__subscribed = false;\n        this._private__x = NaN;\n        this._private__y = NaN;\n        this._private__originX = NaN;\n        this._private__originY = NaN;\n        this._private__model = model;\n        this._private__options = options;\n        this._private__markersPaneView = new CrosshairMarksPaneView(model, this);\n        const valuePriceProvider = (rawPriceProvider, rawCoordinateProvider) => {\n            return (priceScale) => {\n                const coordinate = rawCoordinateProvider();\n                const rawPrice = rawPriceProvider();\n                if (priceScale === ensureNotNull(this._private__pane)._internal_defaultPriceScale()) {\n                    // price must be defined\n                    return { _internal_price: rawPrice, _internal_coordinate: coordinate };\n                }\n                else {\n                    // always convert from coordinate\n                    const firstValue = ensureNotNull(priceScale._internal_firstValue());\n                    const price = priceScale._internal_coordinateToPrice(coordinate, firstValue);\n                    return { _internal_price: price, _internal_coordinate: coordinate };\n                }\n            };\n        };\n        const valueTimeProvider = (rawIndexProvider, rawCoordinateProvider) => {\n            return () => {\n                const time = this._private__model._internal_timeScale()._internal_indexToTime(rawIndexProvider());\n                const coordinate = rawCoordinateProvider();\n                if (!time || !Number.isFinite(coordinate)) {\n                    return null;\n                }\n                return {\n                    _internal_time: time,\n                    _internal_coordinate: coordinate,\n                };\n            };\n        };\n        // for current position always return both price and coordinate\n        this._private__currentPosPriceProvider = valuePriceProvider(() => this._private__price, () => this._private__y);\n        const currentPosTimeProvider = valueTimeProvider(() => this._private__index, () => this._internal_appliedX());\n        this._private__timeAxisView = new CrosshairTimeAxisView(this, model, currentPosTimeProvider);\n        this._private__paneView = new CrosshairPaneView(this);\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_saveOriginCoord(x, y) {\n        this._private__originX = x;\n        this._private__originY = y;\n    }\n    _internal_clearOriginCoord() {\n        this._private__originX = NaN;\n        this._private__originY = NaN;\n    }\n    _internal_originCoordX() {\n        return this._private__originX;\n    }\n    _internal_originCoordY() {\n        return this._private__originY;\n    }\n    _internal_setPosition(index, price, pane) {\n        if (!this._private__subscribed) {\n            this._private__subscribed = true;\n        }\n        this._private__visible = true;\n        this._private__tryToUpdateViews(index, price, pane);\n    }\n    _internal_appliedIndex() {\n        return this._private__index;\n    }\n    _internal_appliedX() {\n        return this._private__x;\n    }\n    _internal_appliedY() {\n        return this._private__y;\n    }\n    _internal_visible() {\n        return this._private__visible;\n    }\n    _internal_clearPosition() {\n        this._private__visible = false;\n        this._private__setIndexToLastSeriesBarIndex();\n        this._private__price = NaN;\n        this._private__x = NaN;\n        this._private__y = NaN;\n        this._private__pane = null;\n        this._internal_clearOriginCoord();\n    }\n    _internal_paneViews(pane) {\n        return this._private__pane !== null ? [this._private__paneView, this._private__markersPaneView] : [];\n    }\n    _internal_horzLineVisible(pane) {\n        return pane === this._private__pane && this._private__options.horzLine.visible;\n    }\n    _internal_vertLineVisible() {\n        return this._private__options.vertLine.visible;\n    }\n    _internal_priceAxisViews(pane, priceScale) {\n        if (!this._private__visible || this._private__pane !== pane) {\n            this._private__priceAxisViews.clear();\n        }\n        const views = [];\n        if (this._private__pane === pane) {\n            views.push(this._private__createPriceAxisViewOnDemand(this._private__priceAxisViews, priceScale, this._private__currentPosPriceProvider));\n        }\n        return views;\n    }\n    _internal_timeAxisViews() {\n        return this._private__visible ? [this._private__timeAxisView] : [];\n    }\n    _internal_pane() {\n        return this._private__pane;\n    }\n    _internal_updateAllViews() {\n        this._private__paneView._internal_update();\n        this._private__priceAxisViews.forEach((value) => value._internal_update());\n        this._private__timeAxisView._internal_update();\n        this._private__markersPaneView._internal_update();\n    }\n    _private__priceScaleByPane(pane) {\n        if (pane && !pane._internal_defaultPriceScale()._internal_isEmpty()) {\n            return pane._internal_defaultPriceScale();\n        }\n        return null;\n    }\n    _private__tryToUpdateViews(index, price, pane) {\n        if (this._private__tryToUpdateData(index, price, pane)) {\n            this._internal_updateAllViews();\n        }\n    }\n    _private__tryToUpdateData(newIndex, newPrice, newPane) {\n        const oldX = this._private__x;\n        const oldY = this._private__y;\n        const oldPrice = this._private__price;\n        const oldIndex = this._private__index;\n        const oldPane = this._private__pane;\n        const priceScale = this._private__priceScaleByPane(newPane);\n        this._private__index = newIndex;\n        this._private__x = isNaN(newIndex) ? NaN : this._private__model._internal_timeScale()._internal_indexToCoordinate(newIndex);\n        this._private__pane = newPane;\n        const firstValue = priceScale !== null ? priceScale._internal_firstValue() : null;\n        if (priceScale !== null && firstValue !== null) {\n            this._private__price = newPrice;\n            this._private__y = priceScale._internal_priceToCoordinate(newPrice, firstValue);\n        }\n        else {\n            this._private__price = NaN;\n            this._private__y = NaN;\n        }\n        return (oldX !== this._private__x || oldY !== this._private__y || oldIndex !== this._private__index ||\n            oldPrice !== this._private__price || oldPane !== this._private__pane);\n    }\n    _private__setIndexToLastSeriesBarIndex() {\n        const lastIndexes = this._private__model._internal_serieses()\n            .map((s) => s._internal_bars()._internal_lastIndex())\n            .filter(notNull);\n        const lastBarIndex = (lastIndexes.length === 0) ? null : Math.max(...lastIndexes);\n        this._private__index = lastBarIndex !== null ? lastBarIndex : NaN;\n    }\n    _private__createPriceAxisViewOnDemand(map, priceScale, valueProvider) {\n        let view = map.get(priceScale);\n        if (view === undefined) {\n            view = new CrosshairPriceAxisView(this, priceScale, valueProvider);\n            map.set(priceScale, view);\n        }\n        return view;\n    }\n}\n\nfunction isDefaultPriceScale(priceScaleId) {\n    return priceScaleId === \"left\" /* DefaultPriceScaleId.Left */ || priceScaleId === \"right\" /* DefaultPriceScaleId.Right */;\n}\n\nfunction mergePaneInvalidation(beforeValue, newValue) {\n    if (beforeValue === undefined) {\n        return newValue;\n    }\n    const level = Math.max(beforeValue._internal_level, newValue._internal_level);\n    const autoScale = beforeValue._internal_autoScale || newValue._internal_autoScale;\n    return { _internal_level: level, _internal_autoScale: autoScale };\n}\nclass InvalidateMask {\n    constructor(globalLevel) {\n        this._private__invalidatedPanes = new Map();\n        this._private__timeScaleInvalidations = [];\n        this._private__globalLevel = globalLevel;\n    }\n    _internal_invalidatePane(paneIndex, invalidation) {\n        const prevValue = this._private__invalidatedPanes.get(paneIndex);\n        const newValue = mergePaneInvalidation(prevValue, invalidation);\n        this._private__invalidatedPanes.set(paneIndex, newValue);\n    }\n    _internal_fullInvalidation() {\n        return this._private__globalLevel;\n    }\n    _internal_invalidateForPane(paneIndex) {\n        const paneInvalidation = this._private__invalidatedPanes.get(paneIndex);\n        if (paneInvalidation === undefined) {\n            return {\n                _internal_level: this._private__globalLevel,\n            };\n        }\n        return {\n            _internal_level: Math.max(this._private__globalLevel, paneInvalidation._internal_level),\n            _internal_autoScale: paneInvalidation._internal_autoScale,\n        };\n    }\n    _internal_setFitContent() {\n        this._internal_stopTimeScaleAnimation();\n        // modifies both bar spacing and right offset\n        this._private__timeScaleInvalidations = [{ _internal_type: 0 /* TimeScaleInvalidationType.FitContent */ }];\n    }\n    _internal_applyRange(range) {\n        this._internal_stopTimeScaleAnimation();\n        // modifies both bar spacing and right offset\n        this._private__timeScaleInvalidations = [{ _internal_type: 1 /* TimeScaleInvalidationType.ApplyRange */, _internal_value: range }];\n    }\n    _internal_setTimeScaleAnimation(animation) {\n        this._private__removeTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 5 /* TimeScaleInvalidationType.Animation */, _internal_value: animation });\n    }\n    _internal_stopTimeScaleAnimation() {\n        this._private__removeTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 6 /* TimeScaleInvalidationType.StopAnimation */ });\n    }\n    _internal_resetTimeScale() {\n        this._internal_stopTimeScaleAnimation();\n        // modifies both bar spacing and right offset\n        this._private__timeScaleInvalidations = [{ _internal_type: 4 /* TimeScaleInvalidationType.Reset */ }];\n    }\n    _internal_setBarSpacing(barSpacing) {\n        this._internal_stopTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 2 /* TimeScaleInvalidationType.ApplyBarSpacing */, _internal_value: barSpacing });\n    }\n    _internal_setRightOffset(offset) {\n        this._internal_stopTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 3 /* TimeScaleInvalidationType.ApplyRightOffset */, _internal_value: offset });\n    }\n    _internal_timeScaleInvalidations() {\n        return this._private__timeScaleInvalidations;\n    }\n    _internal_merge(other) {\n        for (const tsInvalidation of other._private__timeScaleInvalidations) {\n            this._private__applyTimeScaleInvalidation(tsInvalidation);\n        }\n        this._private__globalLevel = Math.max(this._private__globalLevel, other._private__globalLevel);\n        other._private__invalidatedPanes.forEach((invalidation, index) => {\n            this._internal_invalidatePane(index, invalidation);\n        });\n    }\n    static _internal_light() {\n        return new InvalidateMask(2 /* InvalidationLevel.Light */);\n    }\n    static _internal_full() {\n        return new InvalidateMask(3 /* InvalidationLevel.Full */);\n    }\n    _private__applyTimeScaleInvalidation(invalidation) {\n        switch (invalidation._internal_type) {\n            case 0 /* TimeScaleInvalidationType.FitContent */:\n                this._internal_setFitContent();\n                break;\n            case 1 /* TimeScaleInvalidationType.ApplyRange */:\n                this._internal_applyRange(invalidation._internal_value);\n                break;\n            case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n                this._internal_setBarSpacing(invalidation._internal_value);\n                break;\n            case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n                this._internal_setRightOffset(invalidation._internal_value);\n                break;\n            case 4 /* TimeScaleInvalidationType.Reset */:\n                this._internal_resetTimeScale();\n                break;\n            case 5 /* TimeScaleInvalidationType.Animation */:\n                this._internal_setTimeScaleAnimation(invalidation._internal_value);\n                break;\n            case 6 /* TimeScaleInvalidationType.StopAnimation */:\n                this._private__removeTimeScaleAnimation();\n        }\n    }\n    _private__removeTimeScaleAnimation() {\n        const index = this._private__timeScaleInvalidations.findIndex((inv) => inv._internal_type === 5 /* TimeScaleInvalidationType.Animation */);\n        if (index !== -1) {\n            this._private__timeScaleInvalidations.splice(index, 1);\n        }\n    }\n}\n\nconst formatterOptions = {\n    _internal_decimalSign: '.',\n    _internal_decimalSignFractional: '\\'',\n};\n/**\n * @param value - The number of convert.\n * @param length - The length. Must be between 0 and 16 inclusive.\n */\nfunction numberToStringWithLeadingZero(value, length) {\n    if (!isNumber(value)) {\n        return 'n/a';\n    }\n    if (!isInteger(length)) {\n        throw new TypeError('invalid length');\n    }\n    if (length < 0 || length > 16) {\n        throw new TypeError('invalid length');\n    }\n    if (length === 0) {\n        return value.toString();\n    }\n    const dummyString = '0000000000000000';\n    return (dummyString + value.toString()).slice(-length);\n}\nclass PriceFormatter {\n    constructor(priceScale, minMove) {\n        if (!minMove) {\n            minMove = 1;\n        }\n        if (!isNumber(priceScale) || !isInteger(priceScale)) {\n            priceScale = 100;\n        }\n        if (priceScale < 0) {\n            throw new TypeError('invalid base');\n        }\n        this._private__priceScale = priceScale;\n        this._private__minMove = minMove;\n        this._private__calculateDecimal();\n    }\n    format(price) {\n        // \\u2212 is unicode's minus sign https://www.fileformat.info/info/unicode/char/2212/index.htm\n        // we should use it because it has the same width as plus sign +\n        const sign = price < 0 ? '\\u2212' : '';\n        price = Math.abs(price);\n        return sign + this._private__formatAsDecimal(price);\n    }\n    _private__calculateDecimal() {\n        // check if this._base is power of 10\n        // for double fractional _fractionalLength if for the main fractional only\n        this._internal__fractionalLength = 0;\n        if (this._private__priceScale > 0 && this._private__minMove > 0) {\n            let base = this._private__priceScale;\n            while (base > 1) {\n                base /= 10;\n                this._internal__fractionalLength++;\n            }\n        }\n    }\n    _private__formatAsDecimal(price) {\n        const base = this._private__priceScale / this._private__minMove;\n        let intPart = Math.floor(price);\n        let fracString = '';\n        const fracLength = this._internal__fractionalLength !== undefined ? this._internal__fractionalLength : NaN;\n        if (base > 1) {\n            let fracPart = +(Math.round(price * base) - intPart * base).toFixed(this._internal__fractionalLength);\n            if (fracPart >= base) {\n                fracPart -= base;\n                intPart += 1;\n            }\n            fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(+fracPart.toFixed(this._internal__fractionalLength) * this._private__minMove, fracLength);\n        }\n        else {\n            // should round int part to min move\n            intPart = Math.round(intPart * base) / base;\n            // if min move > 1, fractional part is always = 0\n            if (fracLength > 0) {\n                fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(0, fracLength);\n            }\n        }\n        return intPart.toFixed(0) + fracString;\n    }\n}\n\nclass PercentageFormatter extends PriceFormatter {\n    constructor(priceScale = 100) {\n        super(priceScale);\n    }\n    format(price) {\n        return `${super.format(price)}%`;\n    }\n}\n\nclass VolumeFormatter {\n    constructor(precision) {\n        this._private__precision = precision;\n    }\n    format(vol) {\n        let sign = '';\n        if (vol < 0) {\n            sign = '-';\n            vol = -vol;\n        }\n        if (vol < 995) {\n            return sign + this._private__formatNumber(vol);\n        }\n        else if (vol < 999995) {\n            return sign + this._private__formatNumber(vol / 1000) + 'K';\n        }\n        else if (vol < 999999995) {\n            vol = 1000 * Math.round(vol / 1000);\n            return sign + this._private__formatNumber(vol / 1000000) + 'M';\n        }\n        else {\n            vol = 1000000 * Math.round(vol / 1000000);\n            return sign + this._private__formatNumber(vol / 1000000000) + 'B';\n        }\n    }\n    _private__formatNumber(value) {\n        let res;\n        const priceScale = Math.pow(10, this._private__precision);\n        value = Math.round(value * priceScale) / priceScale;\n        if (value >= 1e-15 && value < 1) {\n            res = value.toFixed(this._private__precision).replace(/\\.?0+$/, ''); // regex removes trailing zeroes\n        }\n        else {\n            res = String(value);\n        }\n        return res.replace(/(\\.[1-9]*)0+$/, (e, p1) => p1);\n    }\n}\n\n// eslint-disable-next-line max-params, complexity\nfunction walkLine(renderingScope, items, lineType, visibleRange, barWidth, \n// the values returned by styleGetter are compared using the operator !==,\n// so if styleGetter returns objects, then styleGetter should return the same object for equal styles\nstyleGetter, finishStyledArea) {\n    if (items.length === 0 || visibleRange.from >= items.length || visibleRange.to <= 0) {\n        return;\n    }\n    const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n    const firstItem = items[visibleRange.from];\n    let currentStyle = styleGetter(renderingScope, firstItem);\n    let currentStyleFirstItem = firstItem;\n    if (visibleRange.to - visibleRange.from < 2) {\n        const halfBarWidth = barWidth / 2;\n        ctx.beginPath();\n        const item1 = { _internal_x: firstItem._internal_x - halfBarWidth, _internal_y: firstItem._internal_y };\n        const item2 = { _internal_x: firstItem._internal_x + halfBarWidth, _internal_y: firstItem._internal_y };\n        ctx.moveTo(item1._internal_x * horizontalPixelRatio, item1._internal_y * verticalPixelRatio);\n        ctx.lineTo(item2._internal_x * horizontalPixelRatio, item2._internal_y * verticalPixelRatio);\n        finishStyledArea(renderingScope, currentStyle, item1, item2);\n    }\n    else {\n        const changeStyle = (newStyle, currentItem) => {\n            finishStyledArea(renderingScope, currentStyle, currentStyleFirstItem, currentItem);\n            ctx.beginPath();\n            currentStyle = newStyle;\n            currentStyleFirstItem = currentItem;\n        };\n        let currentItem = currentStyleFirstItem;\n        ctx.beginPath();\n        ctx.moveTo(firstItem._internal_x * horizontalPixelRatio, firstItem._internal_y * verticalPixelRatio);\n        for (let i = visibleRange.from + 1; i < visibleRange.to; ++i) {\n            currentItem = items[i];\n            const itemStyle = styleGetter(renderingScope, currentItem);\n            switch (lineType) {\n                case 0 /* LineType.Simple */:\n                    ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n                    break;\n                case 1 /* LineType.WithSteps */:\n                    ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, items[i - 1]._internal_y * verticalPixelRatio);\n                    if (itemStyle !== currentStyle) {\n                        changeStyle(itemStyle, currentItem);\n                        ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, items[i - 1]._internal_y * verticalPixelRatio);\n                    }\n                    ctx.lineTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n                    break;\n                case 2 /* LineType.Curved */: {\n                    const [cp1, cp2] = getControlPoints(items, i - 1, i);\n                    ctx.bezierCurveTo(cp1._internal_x * horizontalPixelRatio, cp1._internal_y * verticalPixelRatio, cp2._internal_x * horizontalPixelRatio, cp2._internal_y * verticalPixelRatio, currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n                    break;\n                }\n            }\n            if (lineType !== 1 /* LineType.WithSteps */ && itemStyle !== currentStyle) {\n                changeStyle(itemStyle, currentItem);\n                ctx.moveTo(currentItem._internal_x * horizontalPixelRatio, currentItem._internal_y * verticalPixelRatio);\n            }\n        }\n        if (currentStyleFirstItem !== currentItem || currentStyleFirstItem === currentItem && lineType === 1 /* LineType.WithSteps */) {\n            finishStyledArea(renderingScope, currentStyle, currentStyleFirstItem, currentItem);\n        }\n    }\n}\nconst curveTension = 6;\nfunction subtract(p1, p2) {\n    return { _internal_x: p1._internal_x - p2._internal_x, _internal_y: p1._internal_y - p2._internal_y };\n}\nfunction add(p1, p2) {\n    return { _internal_x: p1._internal_x + p2._internal_x, _internal_y: p1._internal_y + p2._internal_y };\n}\nfunction divide(p1, n) {\n    return { _internal_x: p1._internal_x / n, _internal_y: p1._internal_y / n };\n}\n/**\n * @returns Two control points that can be used as arguments to {@link CanvasRenderingContext2D.bezierCurveTo} to draw a curved line between `points[fromPointIndex]` and `points[toPointIndex]`.\n */\nfunction getControlPoints(points, fromPointIndex, toPointIndex) {\n    const beforeFromPointIndex = Math.max(0, fromPointIndex - 1);\n    const afterToPointIndex = Math.min(points.length - 1, toPointIndex + 1);\n    const cp1 = add(points[fromPointIndex], divide(subtract(points[toPointIndex], points[beforeFromPointIndex]), curveTension));\n    const cp2 = subtract(points[toPointIndex], divide(subtract(points[afterToPointIndex], points[fromPointIndex]), curveTension));\n    return [cp1, cp2];\n}\n\nfunction finishStyledArea$1(baseLevelCoordinate, scope, style, areaFirstItem, newAreaFirstItem) {\n    const { context, horizontalPixelRatio, verticalPixelRatio } = scope;\n    context.lineTo(newAreaFirstItem._internal_x * horizontalPixelRatio, baseLevelCoordinate * verticalPixelRatio);\n    context.lineTo(areaFirstItem._internal_x * horizontalPixelRatio, baseLevelCoordinate * verticalPixelRatio);\n    context.closePath();\n    context.fillStyle = style;\n    context.fill();\n}\nclass PaneRendererAreaBase extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._internal__data = null;\n    }\n    _internal_setData(data) {\n        this._internal__data = data;\n    }\n    _internal__drawImpl(renderingScope) {\n        var _a;\n        if (this._internal__data === null) {\n            return;\n        }\n        const { _internal_items: items, _internal_visibleRange: visibleRange, _internal_barWidth: barWidth, _internal_lineWidth: lineWidth, _internal_lineStyle: lineStyle, _internal_lineType: lineType } = this._internal__data;\n        const baseLevelCoordinate = (_a = this._internal__data._internal_baseLevelCoordinate) !== null && _a !== void 0 ? _a : (this._internal__data._internal_invertFilledArea ? 0 : renderingScope.mediaSize.height);\n        if (visibleRange === null) {\n            return;\n        }\n        const ctx = renderingScope.context;\n        ctx.lineCap = 'butt';\n        ctx.lineJoin = 'round';\n        ctx.lineWidth = lineWidth;\n        setLineStyle(ctx, lineStyle);\n        // walk lines with width=1 to have more accurate gradient's filling\n        ctx.lineWidth = 1;\n        walkLine(renderingScope, items, lineType, visibleRange, barWidth, this._internal__fillStyle.bind(this), finishStyledArea$1.bind(null, baseLevelCoordinate));\n    }\n}\n\nfunction clamp(value, minVal, maxVal) {\n    return Math.min(Math.max(value, minVal), maxVal);\n}\nfunction isBaseDecimal(value) {\n    if (value < 0) {\n        return false;\n    }\n    for (let current = value; current > 1; current /= 10) {\n        if ((current % 10) !== 0) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction greaterOrEqual(x1, x2, epsilon) {\n    return (x2 - x1) <= epsilon;\n}\nfunction equal(x1, x2, epsilon) {\n    return Math.abs(x1 - x2) < epsilon;\n}\n// We can't use Math.min(...arr) because that would only support arrays shorter than 65536 items.\nfunction min(arr) {\n    if (arr.length < 1) {\n        throw Error('array is empty');\n    }\n    let minVal = arr[0];\n    for (let i = 1; i < arr.length; ++i) {\n        if (arr[i] < minVal) {\n            minVal = arr[i];\n        }\n    }\n    return minVal;\n}\nfunction ceiledEven(x) {\n    const ceiled = Math.ceil(x);\n    return (ceiled % 2 !== 0) ? ceiled - 1 : ceiled;\n}\nfunction ceiledOdd(x) {\n    const ceiled = Math.ceil(x);\n    return (ceiled % 2 === 0) ? ceiled - 1 : ceiled;\n}\n\nclass GradientStyleCache {\n    _internal_get(scope, params) {\n        const cachedParams = this._private__params;\n        const { _internal_topColor1: topColor1, _internal_topColor2: topColor2, _internal_bottomColor1: bottomColor1, _internal_bottomColor2: bottomColor2, _internal_bottom: bottom, _internal_baseLevelCoordinate: baseLevelCoordinate } = params;\n        if (this._private__cachedValue === undefined ||\n            cachedParams === undefined ||\n            cachedParams._internal_topColor1 !== topColor1 ||\n            cachedParams._internal_topColor2 !== topColor2 ||\n            cachedParams._internal_bottomColor1 !== bottomColor1 ||\n            cachedParams._internal_bottomColor2 !== bottomColor2 ||\n            cachedParams._internal_baseLevelCoordinate !== baseLevelCoordinate ||\n            cachedParams._internal_bottom !== bottom) {\n            const gradient = scope.context.createLinearGradient(0, 0, 0, bottom);\n            gradient.addColorStop(0, topColor1);\n            if (baseLevelCoordinate != null) {\n                const baselinePercent = clamp(baseLevelCoordinate * scope.verticalPixelRatio / bottom, 0, 1);\n                gradient.addColorStop(baselinePercent, topColor2);\n                gradient.addColorStop(baselinePercent, bottomColor1);\n            }\n            gradient.addColorStop(1, bottomColor2);\n            this._private__cachedValue = gradient;\n            this._private__params = params;\n        }\n        return this._private__cachedValue;\n    }\n}\n\nclass PaneRendererArea extends PaneRendererAreaBase {\n    constructor() {\n        super(...arguments);\n        this._private__fillCache = new GradientStyleCache();\n    }\n    _internal__fillStyle(renderingScope, item) {\n        return this._private__fillCache._internal_get(renderingScope, {\n            _internal_topColor1: item._internal_topColor,\n            _internal_topColor2: '',\n            _internal_bottomColor1: '',\n            _internal_bottomColor2: item._internal_bottomColor,\n            _internal_bottom: renderingScope.bitmapSize.height,\n        });\n    }\n}\n\nfunction drawSeriesPointMarkers(renderingScope, items, pointMarkersRadius, visibleRange, \n// the values returned by styleGetter are compared using the operator !==,\n// so if styleGetter returns objects, then styleGetter should return the same object for equal styles\nstyleGetter) {\n    const { horizontalPixelRatio, verticalPixelRatio, context } = renderingScope;\n    let prevStyle = null;\n    const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    const correction = (tickWidth % 2) / 2;\n    const radius = pointMarkersRadius * verticalPixelRatio + correction;\n    for (let i = visibleRange.to - 1; i >= visibleRange.from; --i) {\n        const point = items[i];\n        if (point) {\n            const style = styleGetter(renderingScope, point);\n            if (style !== prevStyle) {\n                context.beginPath();\n                if (prevStyle !== null) {\n                    context.fill();\n                }\n                context.fillStyle = style;\n                prevStyle = style;\n            }\n            const centerX = Math.round(point._internal_x * horizontalPixelRatio) + correction; // correct x coordinate only\n            const centerY = point._internal_y * verticalPixelRatio;\n            context.moveTo(centerX, centerY);\n            context.arc(centerX, centerY, radius, 0, Math.PI * 2);\n        }\n    }\n    context.fill();\n}\n\nfunction finishStyledArea(scope, style) {\n    const ctx = scope.context;\n    ctx.strokeStyle = style;\n    ctx.stroke();\n}\nclass PaneRendererLineBase extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._internal__data = null;\n    }\n    _internal_setData(data) {\n        this._internal__data = data;\n    }\n    _internal__drawImpl(renderingScope) {\n        if (this._internal__data === null) {\n            return;\n        }\n        const { _internal_items: items, _internal_visibleRange: visibleRange, _internal_barWidth: barWidth, _internal_lineType: lineType, _internal_lineWidth: lineWidth, _internal_lineStyle: lineStyle, _internal_pointMarkersRadius: pointMarkersRadius } = this._internal__data;\n        if (visibleRange === null) {\n            return;\n        }\n        const ctx = renderingScope.context;\n        ctx.lineCap = 'butt';\n        ctx.lineWidth = lineWidth * renderingScope.verticalPixelRatio;\n        setLineStyle(ctx, lineStyle);\n        ctx.lineJoin = 'round';\n        const styleGetter = this._internal__strokeStyle.bind(this);\n        if (lineType !== undefined) {\n            walkLine(renderingScope, items, lineType, visibleRange, barWidth, styleGetter, finishStyledArea);\n        }\n        if (pointMarkersRadius) {\n            drawSeriesPointMarkers(renderingScope, items, pointMarkersRadius, visibleRange, styleGetter);\n        }\n    }\n}\n\nclass PaneRendererLine extends PaneRendererLineBase {\n    _internal__strokeStyle(renderingScope, item) {\n        return item._internal_lineColor;\n    }\n}\n\n/**\n * Binary function that accepts two arguments (the first of the type of array elements, and the second is always val), and returns a value convertible to bool.\n * The value returned indicates whether the first argument is considered to go before the second.\n * The function shall not modify any of its arguments.\n */\nfunction boundCompare(lower, arr, value, compare, start = 0, to = arr.length) {\n    let count = to - start;\n    while (0 < count) {\n        const count2 = (count >> 1);\n        const mid = start + count2;\n        if (compare(arr[mid], value) === lower) {\n            start = mid + 1;\n            count -= count2 + 1;\n        }\n        else {\n            count = count2;\n        }\n    }\n    return start;\n}\nconst lowerBound = boundCompare.bind(null, true);\nconst upperBound = boundCompare.bind(null, false);\n\nfunction lowerBoundItemsCompare(item, time) {\n    return item._internal_time < time;\n}\nfunction upperBoundItemsCompare(item, time) {\n    return time < item._internal_time;\n}\nfunction visibleTimedValues(items, range, extendedRange) {\n    const firstBar = range._internal_left();\n    const lastBar = range._internal_right();\n    const from = lowerBound(items, firstBar, lowerBoundItemsCompare);\n    const to = upperBound(items, lastBar, upperBoundItemsCompare);\n    if (!extendedRange) {\n        return { from, to };\n    }\n    let extendedFrom = from;\n    let extendedTo = to;\n    if (from > 0 && from < items.length && items[from]._internal_time >= firstBar) {\n        extendedFrom = from - 1;\n    }\n    if (to > 0 && to < items.length && items[to - 1]._internal_time <= lastBar) {\n        extendedTo = to + 1;\n    }\n    return { from: extendedFrom, to: extendedTo };\n}\n\nclass SeriesPaneViewBase {\n    constructor(series, model, extendedVisibleRange) {\n        this._internal__invalidated = true;\n        this._internal__dataInvalidated = true;\n        this._internal__optionsInvalidated = true;\n        this._internal__items = [];\n        this._internal__itemsVisibleRange = null;\n        this._internal__series = series;\n        this._internal__model = model;\n        this._private__extendedVisibleRange = extendedVisibleRange;\n    }\n    _internal_update(updateType) {\n        this._internal__invalidated = true;\n        if (updateType === 'data') {\n            this._internal__dataInvalidated = true;\n        }\n        if (updateType === 'options') {\n            this._internal__optionsInvalidated = true;\n        }\n    }\n    _internal_renderer() {\n        if (!this._internal__series._internal_visible()) {\n            return null;\n        }\n        this._private__makeValid();\n        return this._internal__itemsVisibleRange === null ? null : this._internal__renderer;\n    }\n    _internal__updateOptions() {\n        this._internal__items = this._internal__items.map((item) => (Object.assign(Object.assign({}, item), this._internal__series._internal_barColorer()._internal_barStyle(item._internal_time))));\n    }\n    _internal__clearVisibleRange() {\n        this._internal__itemsVisibleRange = null;\n    }\n    _private__makeValid() {\n        if (this._internal__dataInvalidated) {\n            this._internal__fillRawPoints();\n            this._internal__dataInvalidated = false;\n        }\n        if (this._internal__optionsInvalidated) {\n            this._internal__updateOptions();\n            this._internal__optionsInvalidated = false;\n        }\n        if (this._internal__invalidated) {\n            this._private__makeValidImpl();\n            this._internal__invalidated = false;\n        }\n    }\n    _private__makeValidImpl() {\n        const priceScale = this._internal__series._internal_priceScale();\n        const timeScale = this._internal__model._internal_timeScale();\n        this._internal__clearVisibleRange();\n        if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n            return;\n        }\n        const visibleBars = timeScale._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return;\n        }\n        if (this._internal__series._internal_bars()._internal_size() === 0) {\n            return;\n        }\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        this._internal__itemsVisibleRange = visibleTimedValues(this._internal__items, visibleBars, this._private__extendedVisibleRange);\n        this._internal__convertToCoordinates(priceScale, timeScale, firstValue._internal_value);\n        this._internal__prepareRendererData();\n    }\n}\n\nclass LinePaneViewBase extends SeriesPaneViewBase {\n    constructor(series, model) {\n        super(series, model, true);\n    }\n    _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n        timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n        priceScale._internal_pointsArrayToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n    }\n    _internal__createRawItemBase(time, price) {\n        return {\n            _internal_time: time,\n            _internal_price: price,\n            _internal_x: NaN,\n            _internal_y: NaN,\n        };\n    }\n    _internal__fillRawPoints() {\n        const colorer = this._internal__series._internal_barColorer();\n        this._internal__items = this._internal__series._internal_bars()._internal_rows().map((row) => {\n            const value = row._internal_value[3 /* PlotRowValueIndex.Close */];\n            return this._internal__createRawItem(row._internal_index, value, colorer);\n        });\n    }\n}\n\nclass SeriesAreaPaneView extends LinePaneViewBase {\n    constructor(series, model) {\n        super(series, model);\n        this._internal__renderer = new CompositeRenderer();\n        this._private__areaRenderer = new PaneRendererArea();\n        this._private__lineRenderer = new PaneRendererLine();\n        this._internal__renderer._internal_setRenderers([this._private__areaRenderer, this._private__lineRenderer]);\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const options = this._internal__series._internal_options();\n        this._private__areaRenderer._internal_setData({\n            _internal_lineType: options.lineType,\n            _internal_items: this._internal__items,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineWidth: options.lineWidth,\n            _internal_baseLevelCoordinate: null,\n            _internal_invertFilledArea: options.invertFilledArea,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n        });\n        this._private__lineRenderer._internal_setData({\n            _internal_lineType: options.lineVisible ? options.lineType : undefined,\n            _internal_items: this._internal__items,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineWidth: options.lineWidth,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_pointMarkersRadius: options.pointMarkersVisible ? (options.pointMarkersRadius || options.lineWidth / 2 + 2) : undefined,\n        });\n    }\n}\n\nfunction optimalBarWidth(barSpacing, pixelRatio) {\n    return Math.floor(barSpacing * 0.3 * pixelRatio);\n}\nfunction optimalCandlestickWidth(barSpacing, pixelRatio) {\n    const barSpacingSpecialCaseFrom = 2.5;\n    const barSpacingSpecialCaseTo = 4;\n    const barSpacingSpecialCaseCoeff = 3;\n    if (barSpacing >= barSpacingSpecialCaseFrom && barSpacing <= barSpacingSpecialCaseTo) {\n        return Math.floor(barSpacingSpecialCaseCoeff * pixelRatio);\n    }\n    // coeff should be 1 on small barspacing and go to 0.8 while groing bar spacing\n    const barSpacingReducingCoeff = 0.2;\n    const coeff = 1 - barSpacingReducingCoeff * Math.atan(Math.max(barSpacingSpecialCaseTo, barSpacing) - barSpacingSpecialCaseTo) / (Math.PI * 0.5);\n    const res = Math.floor(barSpacing * coeff * pixelRatio);\n    const scaledBarSpacing = Math.floor(barSpacing * pixelRatio);\n    const optimal = Math.min(res, scaledBarSpacing);\n    return Math.max(Math.floor(pixelRatio), optimal);\n}\n\nclass PaneRendererBars extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        this._private__barWidth = 0;\n        this._private__barLineWidth = 0;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    // eslint-disable-next-line complexity\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        this._private__barWidth = this._private__calcBarWidth(horizontalPixelRatio);\n        // grid and crosshair have line width = Math.floor(pixelRatio)\n        // if this value is odd, we have to make bars' width odd\n        // if this value is even, we have to make bars' width even\n        // in order of keeping crosshair-over-bar drawing symmetric\n        if (this._private__barWidth >= 2) {\n            const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n            if ((lineWidth % 2) !== (this._private__barWidth % 2)) {\n                this._private__barWidth--;\n            }\n        }\n        // if scale is compressed, bar could become less than 1 CSS pixel\n        this._private__barLineWidth = this._private__data._internal_thinBars ? Math.min(this._private__barWidth, Math.floor(horizontalPixelRatio)) : this._private__barWidth;\n        let prevColor = null;\n        const drawOpenClose = this._private__barLineWidth <= this._private__barWidth && this._private__data._internal_barSpacing >= Math.floor(1.5 * horizontalPixelRatio);\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; ++i) {\n            const bar = this._private__data._internal_bars[i];\n            if (prevColor !== bar._internal_barColor) {\n                ctx.fillStyle = bar._internal_barColor;\n                prevColor = bar._internal_barColor;\n            }\n            const bodyWidthHalf = Math.floor(this._private__barLineWidth * 0.5);\n            const bodyCenter = Math.round(bar._internal_x * horizontalPixelRatio);\n            const bodyLeft = bodyCenter - bodyWidthHalf;\n            const bodyWidth = this._private__barLineWidth;\n            const bodyRight = bodyLeft + bodyWidth - 1;\n            const high = Math.min(bar._internal_highY, bar._internal_lowY);\n            const low = Math.max(bar._internal_highY, bar._internal_lowY);\n            const bodyTop = Math.round(high * verticalPixelRatio) - bodyWidthHalf;\n            const bodyBottom = Math.round(low * verticalPixelRatio) + bodyWidthHalf;\n            const bodyHeight = Math.max((bodyBottom - bodyTop), this._private__barLineWidth);\n            ctx.fillRect(bodyLeft, bodyTop, bodyWidth, bodyHeight);\n            const sideWidth = Math.ceil(this._private__barWidth * 1.5);\n            if (drawOpenClose) {\n                if (this._private__data._internal_openVisible) {\n                    const openLeft = bodyCenter - sideWidth;\n                    let openTop = Math.max(bodyTop, Math.round(bar._internal_openY * verticalPixelRatio) - bodyWidthHalf);\n                    let openBottom = openTop + bodyWidth - 1;\n                    if (openBottom > bodyTop + bodyHeight - 1) {\n                        openBottom = bodyTop + bodyHeight - 1;\n                        openTop = openBottom - bodyWidth + 1;\n                    }\n                    ctx.fillRect(openLeft, openTop, bodyLeft - openLeft, openBottom - openTop + 1);\n                }\n                const closeRight = bodyCenter + sideWidth;\n                let closeTop = Math.max(bodyTop, Math.round(bar._internal_closeY * verticalPixelRatio) - bodyWidthHalf);\n                let closeBottom = closeTop + bodyWidth - 1;\n                if (closeBottom > bodyTop + bodyHeight - 1) {\n                    closeBottom = bodyTop + bodyHeight - 1;\n                    closeTop = closeBottom - bodyWidth + 1;\n                }\n                ctx.fillRect(bodyRight + 1, closeTop, closeRight - bodyRight, closeBottom - closeTop + 1);\n            }\n        }\n    }\n    _private__calcBarWidth(pixelRatio) {\n        const limit = Math.floor(pixelRatio);\n        return Math.max(limit, Math.floor(optimalBarWidth(ensureNotNull(this._private__data)._internal_barSpacing, pixelRatio)));\n    }\n}\n\nclass BarsPaneViewBase extends SeriesPaneViewBase {\n    constructor(series, model) {\n        super(series, model, false);\n    }\n    _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n        timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n        priceScale._internal_barPricesToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n    }\n    _internal__createDefaultItem(time, bar, colorer) {\n        return {\n            _internal_time: time,\n            _internal_open: bar._internal_value[0 /* PlotRowValueIndex.Open */],\n            _internal_high: bar._internal_value[1 /* PlotRowValueIndex.High */],\n            _internal_low: bar._internal_value[2 /* PlotRowValueIndex.Low */],\n            _internal_close: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n            _internal_x: NaN,\n            _internal_openY: NaN,\n            _internal_highY: NaN,\n            _internal_lowY: NaN,\n            _internal_closeY: NaN,\n        };\n    }\n    _internal__fillRawPoints() {\n        const colorer = this._internal__series._internal_barColorer();\n        this._internal__items = this._internal__series._internal_bars()._internal_rows().map((row) => this._internal__createRawItem(row._internal_index, row, colorer));\n    }\n}\n\nclass SeriesBarsPaneView extends BarsPaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererBars();\n    }\n    _internal__createRawItem(time, bar, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createDefaultItem(time, bar, colorer)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const barStyleProps = this._internal__series._internal_options();\n        this._internal__renderer._internal_setData({\n            _internal_bars: this._internal__items,\n            _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_openVisible: barStyleProps.openVisible,\n            _internal_thinBars: barStyleProps.thinBars,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n        });\n    }\n}\n\nclass PaneRendererBaselineArea extends PaneRendererAreaBase {\n    constructor() {\n        super(...arguments);\n        this._private__fillCache = new GradientStyleCache();\n    }\n    _internal__fillStyle(renderingScope, item) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const data = this._internal__data;\n        return this._private__fillCache._internal_get(renderingScope, {\n            _internal_topColor1: item._internal_topFillColor1,\n            _internal_topColor2: item._internal_topFillColor2,\n            _internal_bottomColor1: item._internal_bottomFillColor1,\n            _internal_bottomColor2: item._internal_bottomFillColor2,\n            _internal_bottom: renderingScope.bitmapSize.height,\n            _internal_baseLevelCoordinate: data._internal_baseLevelCoordinate,\n        });\n    }\n}\n\nclass PaneRendererBaselineLine extends PaneRendererLineBase {\n    constructor() {\n        super(...arguments);\n        this._private__strokeCache = new GradientStyleCache();\n    }\n    _internal__strokeStyle(renderingScope, item) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const data = this._internal__data;\n        return this._private__strokeCache._internal_get(renderingScope, {\n            _internal_topColor1: item._internal_topLineColor,\n            _internal_topColor2: item._internal_topLineColor,\n            _internal_bottomColor1: item._internal_bottomLineColor,\n            _internal_bottomColor2: item._internal_bottomLineColor,\n            _internal_bottom: renderingScope.bitmapSize.height,\n            _internal_baseLevelCoordinate: data._internal_baseLevelCoordinate,\n        });\n    }\n}\n\nclass SeriesBaselinePaneView extends LinePaneViewBase {\n    constructor(series, model) {\n        super(series, model);\n        this._internal__renderer = new CompositeRenderer();\n        this._private__baselineAreaRenderer = new PaneRendererBaselineArea();\n        this._private__baselineLineRenderer = new PaneRendererBaselineLine();\n        this._internal__renderer._internal_setRenderers([this._private__baselineAreaRenderer, this._private__baselineLineRenderer]);\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        const options = this._internal__series._internal_options();\n        const baseLevelCoordinate = this._internal__series._internal_priceScale()._internal_priceToCoordinate(options.baseValue.price, firstValue._internal_value);\n        const barWidth = this._internal__model._internal_timeScale()._internal_barSpacing();\n        this._private__baselineAreaRenderer._internal_setData({\n            _internal_items: this._internal__items,\n            _internal_lineWidth: options.lineWidth,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineType: options.lineType,\n            _internal_baseLevelCoordinate: baseLevelCoordinate,\n            _internal_invertFilledArea: false,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: barWidth,\n        });\n        this._private__baselineLineRenderer._internal_setData({\n            _internal_items: this._internal__items,\n            _internal_lineWidth: options.lineWidth,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineType: options.lineVisible ? options.lineType : undefined,\n            _internal_pointMarkersRadius: options.pointMarkersVisible ? (options.pointMarkersRadius || options.lineWidth / 2 + 2) : undefined,\n            _internal_baseLevelCoordinate: baseLevelCoordinate,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: barWidth,\n        });\n    }\n}\n\nclass PaneRendererCandlesticks extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        // scaled with pixelRatio\n        this._private__barWidth = 0;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal__drawImpl(renderingScope) {\n        if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        const { horizontalPixelRatio } = renderingScope;\n        // now we know pixelRatio and we could calculate barWidth effectively\n        this._private__barWidth = optimalCandlestickWidth(this._private__data._internal_barSpacing, horizontalPixelRatio);\n        // grid and crosshair have line width = Math.floor(pixelRatio)\n        // if this value is odd, we have to make candlesticks' width odd\n        // if this value is even, we have to make candlesticks' width even\n        // in order of keeping crosshair-over-candlesticks drawing symmetric\n        if (this._private__barWidth >= 2) {\n            const wickWidth = Math.floor(horizontalPixelRatio);\n            if ((wickWidth % 2) !== (this._private__barWidth % 2)) {\n                this._private__barWidth--;\n            }\n        }\n        const bars = this._private__data._internal_bars;\n        if (this._private__data._internal_wickVisible) {\n            this._private__drawWicks(renderingScope, bars, this._private__data._internal_visibleRange);\n        }\n        if (this._private__data._internal_borderVisible) {\n            this._private__drawBorder(renderingScope, bars, this._private__data._internal_visibleRange);\n        }\n        const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n        if (!this._private__data._internal_borderVisible || this._private__barWidth > borderWidth * 2) {\n            this._private__drawCandles(renderingScope, bars, this._private__data._internal_visibleRange);\n        }\n    }\n    _private__drawWicks(renderingScope, bars, visibleRange) {\n        if (this._private__data === null) {\n            return;\n        }\n        const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n        let prevWickColor = '';\n        let wickWidth = Math.min(Math.floor(horizontalPixelRatio), Math.floor(this._private__data._internal_barSpacing * horizontalPixelRatio));\n        wickWidth = Math.max(Math.floor(horizontalPixelRatio), Math.min(wickWidth, this._private__barWidth));\n        const wickOffset = Math.floor(wickWidth * 0.5);\n        let prevEdge = null;\n        for (let i = visibleRange.from; i < visibleRange.to; i++) {\n            const bar = bars[i];\n            if (bar._internal_barWickColor !== prevWickColor) {\n                ctx.fillStyle = bar._internal_barWickColor;\n                prevWickColor = bar._internal_barWickColor;\n            }\n            const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            const high = Math.round(bar._internal_highY * verticalPixelRatio);\n            const low = Math.round(bar._internal_lowY * verticalPixelRatio);\n            const scaledX = Math.round(horizontalPixelRatio * bar._internal_x);\n            let left = scaledX - wickOffset;\n            const right = left + wickWidth - 1;\n            if (prevEdge !== null) {\n                left = Math.max(prevEdge + 1, left);\n                left = Math.min(left, right);\n            }\n            const width = right - left + 1;\n            ctx.fillRect(left, high, width, top - high);\n            ctx.fillRect(left, bottom + 1, width, low - bottom);\n            prevEdge = right;\n        }\n    }\n    _private__calculateBorderWidth(pixelRatio) {\n        let borderWidth = Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio);\n        if (this._private__barWidth <= 2 * borderWidth) {\n            borderWidth = Math.floor((this._private__barWidth - 1) * 0.5);\n        }\n        const res = Math.max(Math.floor(pixelRatio), borderWidth);\n        if (this._private__barWidth <= res * 2) {\n            // do not draw bodies, restore original value\n            return Math.max(Math.floor(pixelRatio), Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio));\n        }\n        return res;\n    }\n    _private__drawBorder(renderingScope, bars, visibleRange) {\n        if (this._private__data === null) {\n            return;\n        }\n        const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n        let prevBorderColor = '';\n        const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n        let prevEdge = null;\n        for (let i = visibleRange.from; i < visibleRange.to; i++) {\n            const bar = bars[i];\n            if (bar._internal_barBorderColor !== prevBorderColor) {\n                ctx.fillStyle = bar._internal_barBorderColor;\n                prevBorderColor = bar._internal_barBorderColor;\n            }\n            let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n            // this is important to calculate right before patching left\n            const right = left + this._private__barWidth - 1;\n            const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            if (prevEdge !== null) {\n                left = Math.max(prevEdge + 1, left);\n                left = Math.min(left, right);\n            }\n            if (this._private__data._internal_barSpacing * horizontalPixelRatio > 2 * borderWidth) {\n                fillRectInnerBorder(ctx, left, top, right - left + 1, bottom - top + 1, borderWidth);\n            }\n            else {\n                const width = right - left + 1;\n                ctx.fillRect(left, top, width, bottom - top + 1);\n            }\n            prevEdge = right;\n        }\n    }\n    _private__drawCandles(renderingScope, bars, visibleRange) {\n        if (this._private__data === null) {\n            return;\n        }\n        const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n        let prevBarColor = '';\n        const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n        for (let i = visibleRange.from; i < visibleRange.to; i++) {\n            const bar = bars[i];\n            let top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            let bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n            let right = left + this._private__barWidth - 1;\n            if (bar._internal_barColor !== prevBarColor) {\n                const barColor = bar._internal_barColor;\n                ctx.fillStyle = barColor;\n                prevBarColor = barColor;\n            }\n            if (this._private__data._internal_borderVisible) {\n                left += borderWidth;\n                top += borderWidth;\n                right -= borderWidth;\n                bottom -= borderWidth;\n            }\n            if (top > bottom) {\n                continue;\n            }\n            ctx.fillRect(left, top, right - left + 1, bottom - top + 1);\n        }\n    }\n}\n\nclass SeriesCandlesticksPaneView extends BarsPaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererCandlesticks();\n    }\n    _internal__createRawItem(time, bar, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createDefaultItem(time, bar, colorer)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const candlestickStyleProps = this._internal__series._internal_options();\n        this._internal__renderer._internal_setData({\n            _internal_bars: this._internal__items,\n            _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_wickVisible: candlestickStyleProps.wickVisible,\n            _internal_borderVisible: candlestickStyleProps.borderVisible,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n        });\n    }\n}\n\nclass CustomSeriesPaneRendererWrapper {\n    constructor(sourceRenderer, priceScale) {\n        this._private__sourceRenderer = sourceRenderer;\n        this._private__priceScale = priceScale;\n    }\n    _internal_draw(target, isHovered, hitTestData) {\n        this._private__sourceRenderer.draw(target, this._private__priceScale, isHovered, hitTestData);\n    }\n}\nclass SeriesCustomPaneView extends SeriesPaneViewBase {\n    constructor(series, model, paneView) {\n        super(series, model, false);\n        this._private__paneView = paneView;\n        this._internal__renderer = new CustomSeriesPaneRendererWrapper(this._private__paneView.renderer(), (price) => {\n            const firstValue = series._internal_firstValue();\n            if (firstValue === null) {\n                return null;\n            }\n            return series._internal_priceScale()._internal_priceToCoordinate(price, firstValue._internal_value);\n        });\n    }\n    _internal_priceValueBuilder(plotRow) {\n        return this._private__paneView.priceValueBuilder(plotRow);\n    }\n    _internal_isWhitespace(data) {\n        return this._private__paneView.isWhitespace(data);\n    }\n    _internal__fillRawPoints() {\n        const colorer = this._internal__series._internal_barColorer();\n        this._internal__items = this._internal__series._internal_bars()._internal_rows()\n            .map((row) => {\n            return Object.assign(Object.assign({ _internal_time: row._internal_index, _internal_x: NaN }, colorer._internal_barStyle(row._internal_index)), { _internal_originalData: row._internal_data });\n        });\n    }\n    _internal__convertToCoordinates(priceScale, timeScale) {\n        timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n    }\n    _internal__prepareRendererData() {\n        this._private__paneView.update({\n            bars: this._internal__items.map(unwrapItemData),\n            barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            visibleRange: this._internal__itemsVisibleRange,\n        }, this._internal__series._internal_options());\n    }\n}\nfunction unwrapItemData(item) {\n    return {\n        x: item._internal_x,\n        time: item._internal_time,\n        originalData: item._internal_originalData,\n        barColor: item._internal_barColor,\n    };\n}\n\nconst showSpacingMinimalBarWidth = 1;\nconst alignToMinimalWidthLimit = 4;\nclass PaneRendererHistogram extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        this._private__precalculatedCache = [];\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n        this._private__precalculatedCache = [];\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        if (!this._private__precalculatedCache.length) {\n            this._private__fillPrecalculatedCache(horizontalPixelRatio);\n        }\n        const tickWidth = Math.max(1, Math.floor(verticalPixelRatio));\n        const histogramBase = Math.round((this._private__data._internal_histogramBase) * verticalPixelRatio);\n        const topHistogramBase = histogramBase - Math.floor(tickWidth / 2);\n        const bottomHistogramBase = topHistogramBase + tickWidth;\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n            const y = Math.round(item._internal_y * verticalPixelRatio);\n            ctx.fillStyle = item._internal_barColor;\n            let top;\n            let bottom;\n            if (y <= topHistogramBase) {\n                top = y;\n                bottom = bottomHistogramBase;\n            }\n            else {\n                top = topHistogramBase;\n                bottom = y - Math.floor(tickWidth / 2) + tickWidth;\n            }\n            ctx.fillRect(current._internal_left, top, current._internal_right - current._internal_left + 1, bottom - top);\n        }\n    }\n    // eslint-disable-next-line complexity\n    _private__fillPrecalculatedCache(pixelRatio) {\n        if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n            this._private__precalculatedCache = [];\n            return;\n        }\n        const spacing = Math.ceil(this._private__data._internal_barSpacing * pixelRatio) <= showSpacingMinimalBarWidth ? 0 : Math.max(1, Math.floor(pixelRatio));\n        const columnWidth = Math.round(this._private__data._internal_barSpacing * pixelRatio) - spacing;\n        this._private__precalculatedCache = new Array(this._private__data._internal_visibleRange.to - this._private__data._internal_visibleRange.from);\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            // force cast to avoid ensureDefined call\n            const x = Math.round(item._internal_x * pixelRatio);\n            let left;\n            let right;\n            if (columnWidth % 2) {\n                const halfWidth = (columnWidth - 1) / 2;\n                left = x - halfWidth;\n                right = x + halfWidth;\n            }\n            else {\n                // shift pixel to left\n                const halfWidth = columnWidth / 2;\n                left = x - halfWidth;\n                right = x + halfWidth - 1;\n            }\n            this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from] = {\n                _internal_left: left,\n                _internal_right: right,\n                _internal_roundedCenter: x,\n                _internal_center: (item._internal_x * pixelRatio),\n                _internal_time: item._internal_time,\n            };\n        }\n        // correct positions\n        for (let i = this._private__data._internal_visibleRange.from + 1; i < this._private__data._internal_visibleRange.to; i++) {\n            const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n            const prev = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from - 1];\n            if (current._internal_time !== prev._internal_time + 1) {\n                continue;\n            }\n            if (current._internal_left - prev._internal_right !== (spacing + 1)) {\n                // have to align\n                if (prev._internal_roundedCenter > prev._internal_center) {\n                    // prev wasshifted to left, so add pixel to right\n                    prev._internal_right = current._internal_left - spacing - 1;\n                }\n                else {\n                    // extend current to left\n                    current._internal_left = prev._internal_right + spacing + 1;\n                }\n            }\n        }\n        let minWidth = Math.ceil(this._private__data._internal_barSpacing * pixelRatio);\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n            // this could happen if barspacing < 1\n            if (current._internal_right < current._internal_left) {\n                current._internal_right = current._internal_left;\n            }\n            const width = current._internal_right - current._internal_left + 1;\n            minWidth = Math.min(width, minWidth);\n        }\n        if (spacing > 0 && minWidth < alignToMinimalWidthLimit) {\n            for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n                const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n                const width = current._internal_right - current._internal_left + 1;\n                if (width > minWidth) {\n                    if (current._internal_roundedCenter > current._internal_center) {\n                        current._internal_right -= 1;\n                    }\n                    else {\n                        current._internal_left += 1;\n                    }\n                }\n            }\n        }\n    }\n}\n\nclass SeriesHistogramPaneView extends LinePaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererHistogram();\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const data = {\n            _internal_items: this._internal__items,\n            _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_histogramBase: this._internal__series._internal_priceScale()._internal_priceToCoordinate(this._internal__series._internal_options().base, ensureNotNull(this._internal__series._internal_firstValue())._internal_value),\n        };\n        this._internal__renderer._internal_setData(data);\n    }\n}\n\nclass SeriesLinePaneView extends LinePaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererLine();\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const options = this._internal__series._internal_options();\n        const data = {\n            _internal_items: this._internal__items,\n            _internal_lineStyle: options.lineStyle,\n            _internal_lineType: options.lineVisible ? options.lineType : undefined,\n            _internal_lineWidth: options.lineWidth,\n            _internal_pointMarkersRadius: options.pointMarkersVisible ? (options.pointMarkersRadius || options.lineWidth / 2 + 2) : undefined,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n        };\n        this._internal__renderer._internal_setData(data);\n    }\n}\n\nconst defaultReplacementRe = /[2-9]/g;\nclass TextWidthCache {\n    constructor(size = 50) {\n        this._private__actualSize = 0;\n        this._private__usageTick = 1;\n        this._private__oldestTick = 1;\n        this._private__tick2Labels = {};\n        this._private__cache = new Map();\n        this._private__maxSize = size;\n    }\n    _internal_reset() {\n        this._private__actualSize = 0;\n        this._private__cache.clear();\n        this._private__usageTick = 1;\n        this._private__oldestTick = 1;\n        this._private__tick2Labels = {};\n    }\n    _internal_measureText(ctx, text, optimizationReplacementRe) {\n        return this._private__getMetrics(ctx, text, optimizationReplacementRe).width;\n    }\n    _internal_yMidCorrection(ctx, text, optimizationReplacementRe) {\n        const metrics = this._private__getMetrics(ctx, text, optimizationReplacementRe);\n        // if actualBoundingBoxAscent/actualBoundingBoxDescent are not supported we use 0 as a fallback\n        return ((metrics.actualBoundingBoxAscent || 0) - (metrics.actualBoundingBoxDescent || 0)) / 2;\n    }\n    _private__getMetrics(ctx, text, optimizationReplacementRe) {\n        const re = optimizationReplacementRe || defaultReplacementRe;\n        const cacheString = String(text).replace(re, '0');\n        if (this._private__cache.has(cacheString)) {\n            return ensureDefined(this._private__cache.get(cacheString))._internal_metrics;\n        }\n        if (this._private__actualSize === this._private__maxSize) {\n            const oldestValue = this._private__tick2Labels[this._private__oldestTick];\n            delete this._private__tick2Labels[this._private__oldestTick];\n            this._private__cache.delete(oldestValue);\n            this._private__oldestTick++;\n            this._private__actualSize--;\n        }\n        ctx.save();\n        ctx.textBaseline = 'middle';\n        const metrics = ctx.measureText(cacheString);\n        ctx.restore();\n        if (metrics.width === 0 && !!text.length) {\n            // measureText can return 0 in FF depending on a canvas size, don't cache it\n            return metrics;\n        }\n        this._private__cache.set(cacheString, { _internal_metrics: metrics, _internal_tick: this._private__usageTick });\n        this._private__tick2Labels[this._private__usageTick] = cacheString;\n        this._private__actualSize++;\n        this._private__usageTick++;\n        return metrics;\n    }\n}\n\nclass PanePriceAxisViewRenderer {\n    constructor(textWidthCache) {\n        this._private__priceAxisViewRenderer = null;\n        this._private__rendererOptions = null;\n        this._private__align = 'right';\n        this._private__textWidthCache = textWidthCache;\n    }\n    _internal_setParams(priceAxisViewRenderer, rendererOptions, align) {\n        this._private__priceAxisViewRenderer = priceAxisViewRenderer;\n        this._private__rendererOptions = rendererOptions;\n        this._private__align = align;\n    }\n    _internal_draw(target) {\n        if (this._private__rendererOptions === null || this._private__priceAxisViewRenderer === null) {\n            return;\n        }\n        this._private__priceAxisViewRenderer._internal_draw(target, this._private__rendererOptions, this._private__textWidthCache, this._private__align);\n    }\n}\nclass PanePriceAxisView {\n    constructor(priceAxisView, dataSource, chartModel) {\n        this._private__priceAxisView = priceAxisView;\n        this._private__textWidthCache = new TextWidthCache(50); // when should we clear cache?\n        this._private__dataSource = dataSource;\n        this._private__chartModel = chartModel;\n        this._private__fontSize = -1;\n        this._private__renderer = new PanePriceAxisViewRenderer(this._private__textWidthCache);\n    }\n    _internal_renderer() {\n        const pane = this._private__chartModel._internal_paneForSource(this._private__dataSource);\n        if (pane === null) {\n            return null;\n        }\n        // this price scale will be used to find label placement only (left, right, none)\n        const priceScale = pane._internal_isOverlay(this._private__dataSource) ? pane._internal_defaultVisiblePriceScale() : this._private__dataSource._internal_priceScale();\n        if (priceScale === null) {\n            return null;\n        }\n        const position = pane._internal_priceScalePosition(priceScale);\n        if (position === 'overlay') {\n            return null;\n        }\n        const options = this._private__chartModel._internal_priceAxisRendererOptions();\n        if (options._internal_fontSize !== this._private__fontSize) {\n            this._private__fontSize = options._internal_fontSize;\n            this._private__textWidthCache._internal_reset();\n        }\n        this._private__renderer._internal_setParams(this._private__priceAxisView._internal_paneRenderer(), options, position);\n        return this._private__renderer;\n    }\n}\n\nclass HorizontalLineRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_hitTest(x, y) {\n        var _a;\n        if (!((_a = this._private__data) === null || _a === void 0 ? void 0 : _a._internal_visible)) {\n            return null;\n        }\n        const { _internal_y: itemY, _internal_lineWidth: lineWidth, _internal_externalId: externalId } = this._private__data;\n        // add a fixed area threshold around line (Y + width) for hit test\n        if (y >= itemY - lineWidth - 7 /* Constants.HitTestThreshold */ && y <= itemY + lineWidth + 7 /* Constants.HitTestThreshold */) {\n            return {\n                _internal_hitTestData: this._private__data,\n                _internal_externalId: externalId,\n            };\n        }\n        return null;\n    }\n    _internal__drawImpl({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null) {\n            return;\n        }\n        if (this._private__data._internal_visible === false) {\n            return;\n        }\n        const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n        if (y < 0 || y > bitmapSize.height) {\n            return;\n        }\n        ctx.lineCap = 'butt';\n        ctx.strokeStyle = this._private__data._internal_color;\n        ctx.lineWidth = Math.floor(this._private__data._internal_lineWidth * horizontalPixelRatio);\n        setLineStyle(ctx, this._private__data._internal_lineStyle);\n        drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n    }\n}\n\nclass SeriesHorizontalLinePaneView {\n    constructor(series) {\n        this._internal__lineRendererData = {\n            _internal_y: 0,\n            _internal_color: 'rgba(0, 0, 0, 0)',\n            _internal_lineWidth: 1,\n            _internal_lineStyle: 0 /* LineStyle.Solid */,\n            _internal_visible: false,\n        };\n        this._internal__lineRenderer = new HorizontalLineRenderer();\n        this._private__invalidated = true;\n        this._internal__series = series;\n        this._internal__model = series._internal_model();\n        this._internal__lineRenderer._internal_setData(this._internal__lineRendererData);\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (!this._internal__series._internal_visible()) {\n            return null;\n        }\n        if (this._private__invalidated) {\n            this._internal__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._internal__lineRenderer;\n    }\n}\n\nclass SeriesHorizontalBaseLinePaneView extends SeriesHorizontalLinePaneView {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(series) {\n        super(series);\n    }\n    _internal__updateImpl() {\n        this._internal__lineRendererData._internal_visible = false;\n        const priceScale = this._internal__series._internal_priceScale();\n        const mode = priceScale._internal_mode()._internal_mode;\n        if (mode !== 2 /* PriceScaleMode.Percentage */ && mode !== 3 /* PriceScaleMode.IndexedTo100 */) {\n            return;\n        }\n        const seriesOptions = this._internal__series._internal_options();\n        if (!seriesOptions.baseLineVisible || !this._internal__series._internal_visible()) {\n            return;\n        }\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        this._internal__lineRendererData._internal_visible = true;\n        this._internal__lineRendererData._internal_y = priceScale._internal_priceToCoordinate(firstValue._internal_value, firstValue._internal_value);\n        this._internal__lineRendererData._internal_color = seriesOptions.baseLineColor;\n        this._internal__lineRendererData._internal_lineWidth = seriesOptions.baseLineWidth;\n        this._internal__lineRendererData._internal_lineStyle = seriesOptions.baseLineStyle;\n    }\n}\n\nclass SeriesLastPriceAnimationRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_data() {\n        return this._private__data;\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        const data = this._private__data;\n        if (data === null) {\n            return;\n        }\n        const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        const correction = (tickWidth % 2) / 2;\n        const centerX = Math.round(data._internal_center.x * horizontalPixelRatio) + correction; // correct x coordinate only\n        const centerY = data._internal_center.y * verticalPixelRatio;\n        ctx.fillStyle = data._internal_seriesLineColor;\n        ctx.beginPath();\n        // TODO: it is better to have different horizontal and vertical radii\n        const centerPointRadius = Math.max(2, data._internal_seriesLineWidth * 1.5) * horizontalPixelRatio;\n        ctx.arc(centerX, centerY, centerPointRadius, 0, 2 * Math.PI, false);\n        ctx.fill();\n        ctx.fillStyle = data._internal_fillColor;\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio, 0, 2 * Math.PI, false);\n        ctx.fill();\n        ctx.lineWidth = tickWidth;\n        ctx.strokeStyle = data._internal_strokeColor;\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio + tickWidth / 2, 0, 2 * Math.PI, false);\n        ctx.stroke();\n    }\n}\n\nconst animationStagesData = [\n    {\n        _internal_start: 0,\n        _internal_end: 0.25 /* Constants.Stage1Period */,\n        _internal_startRadius: 4 /* Constants.Stage1StartCircleRadius */,\n        _internal_endRadius: 10 /* Constants.Stage1EndCircleRadius */,\n        _internal_startFillAlpha: 0.25 /* Constants.Stage1StartFillAlpha */,\n        _internal_endFillAlpha: 0 /* Constants.Stage1EndFillAlpha */,\n        _internal_startStrokeAlpha: 0.4 /* Constants.Stage1StartStrokeAlpha */,\n        _internal_endStrokeAlpha: 0.8 /* Constants.Stage1EndStrokeAlpha */,\n    },\n    {\n        _internal_start: 0.25 /* Constants.Stage1Period */,\n        _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n        _internal_startRadius: 10 /* Constants.Stage2StartCircleRadius */,\n        _internal_endRadius: 14 /* Constants.Stage2EndCircleRadius */,\n        _internal_startFillAlpha: 0 /* Constants.Stage2StartFillAlpha */,\n        _internal_endFillAlpha: 0 /* Constants.Stage2EndFillAlpha */,\n        _internal_startStrokeAlpha: 0.8 /* Constants.Stage2StartStrokeAlpha */,\n        _internal_endStrokeAlpha: 0 /* Constants.Stage2EndStrokeAlpha */,\n    },\n    {\n        _internal_start: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n        _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */ + 0.475 /* Constants.Stage3Period */,\n        _internal_startRadius: 14 /* Constants.Stage3StartCircleRadius */,\n        _internal_endRadius: 14 /* Constants.Stage3EndCircleRadius */,\n        _internal_startFillAlpha: 0 /* Constants.Stage3StartFillAlpha */,\n        _internal_endFillAlpha: 0 /* Constants.Stage3EndFillAlpha */,\n        _internal_startStrokeAlpha: 0 /* Constants.Stage3StartStrokeAlpha */,\n        _internal_endStrokeAlpha: 0 /* Constants.Stage3EndStrokeAlpha */,\n    },\n];\nfunction color(seriesLineColor, stage, startAlpha, endAlpha) {\n    const alpha = startAlpha + (endAlpha - startAlpha) * stage;\n    return applyAlpha(seriesLineColor, alpha);\n}\nfunction radius(stage, startRadius, endRadius) {\n    return startRadius + (endRadius - startRadius) * stage;\n}\nfunction animationData(durationSinceStart, lineColor) {\n    const globalStage = (durationSinceStart % 2600 /* Constants.AnimationPeriod */) / 2600 /* Constants.AnimationPeriod */;\n    let currentStageData;\n    for (const stageData of animationStagesData) {\n        if (globalStage >= stageData._internal_start && globalStage <= stageData._internal_end) {\n            currentStageData = stageData;\n            break;\n        }\n    }\n    assert(currentStageData !== undefined, 'Last price animation internal logic error');\n    const subStage = (globalStage - currentStageData._internal_start) / (currentStageData._internal_end - currentStageData._internal_start);\n    return {\n        _internal_fillColor: color(lineColor, subStage, currentStageData._internal_startFillAlpha, currentStageData._internal_endFillAlpha),\n        _internal_strokeColor: color(lineColor, subStage, currentStageData._internal_startStrokeAlpha, currentStageData._internal_endStrokeAlpha),\n        _internal_radius: radius(subStage, currentStageData._internal_startRadius, currentStageData._internal_endRadius),\n    };\n}\nclass SeriesLastPriceAnimationPaneView {\n    constructor(series) {\n        this._private__renderer = new SeriesLastPriceAnimationRenderer();\n        this._private__invalidated = true;\n        this._private__stageInvalidated = true;\n        this._private__startTime = performance.now();\n        this._private__endTime = this._private__startTime - 1;\n        this._private__series = series;\n    }\n    _internal_onDataCleared() {\n        this._private__endTime = this._private__startTime - 1;\n        this._internal_update();\n    }\n    _internal_onNewRealtimeDataReceived() {\n        this._internal_update();\n        if (this._private__series._internal_options().lastPriceAnimation === 2 /* LastPriceAnimationMode.OnDataUpdate */) {\n            const now = performance.now();\n            const timeToAnimationEnd = this._private__endTime - now;\n            if (timeToAnimationEnd > 0) {\n                if (timeToAnimationEnd < 2600 /* Constants.AnimationPeriod */ / 4) {\n                    this._private__endTime += 2600 /* Constants.AnimationPeriod */;\n                }\n                return;\n            }\n            this._private__startTime = now;\n            this._private__endTime = now + 2600 /* Constants.AnimationPeriod */;\n        }\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_invalidateStage() {\n        this._private__stageInvalidated = true;\n    }\n    _internal_visible() {\n        // center point is always visible if lastPriceAnimation is not LastPriceAnimationMode.Disabled\n        return this._private__series._internal_options().lastPriceAnimation !== 0 /* LastPriceAnimationMode.Disabled */;\n    }\n    _internal_animationActive() {\n        switch (this._private__series._internal_options().lastPriceAnimation) {\n            case 0 /* LastPriceAnimationMode.Disabled */:\n                return false;\n            case 1 /* LastPriceAnimationMode.Continuous */:\n                return true;\n            case 2 /* LastPriceAnimationMode.OnDataUpdate */:\n                return performance.now() <= this._private__endTime;\n        }\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n            this._private__stageInvalidated = false;\n        }\n        else if (this._private__stageInvalidated) {\n            this._private__updateRendererDataStage();\n            this._private__stageInvalidated = false;\n        }\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        this._private__renderer._internal_setData(null);\n        const timeScale = this._private__series._internal_model()._internal_timeScale();\n        const visibleRange = timeScale._internal_visibleStrictRange();\n        const firstValue = this._private__series._internal_firstValue();\n        if (visibleRange === null || firstValue === null) {\n            return;\n        }\n        const lastValue = this._private__series._internal_lastValueData(true);\n        if (lastValue._internal_noData || !visibleRange._internal_contains(lastValue._internal_index)) {\n            return;\n        }\n        const lastValuePoint = {\n            x: timeScale._internal_indexToCoordinate(lastValue._internal_index),\n            y: this._private__series._internal_priceScale()._internal_priceToCoordinate(lastValue._internal_price, firstValue._internal_value),\n        };\n        const seriesLineColor = lastValue._internal_color;\n        const seriesLineWidth = this._private__series._internal_options().lineWidth;\n        const data = animationData(this._private__duration(), seriesLineColor);\n        this._private__renderer._internal_setData({\n            _internal_seriesLineColor: seriesLineColor,\n            _internal_seriesLineWidth: seriesLineWidth,\n            _internal_fillColor: data._internal_fillColor,\n            _internal_strokeColor: data._internal_strokeColor,\n            _internal_radius: data._internal_radius,\n            _internal_center: lastValuePoint,\n        });\n    }\n    _private__updateRendererDataStage() {\n        const rendererData = this._private__renderer._internal_data();\n        if (rendererData !== null) {\n            const data = animationData(this._private__duration(), rendererData._internal_seriesLineColor);\n            rendererData._internal_fillColor = data._internal_fillColor;\n            rendererData._internal_strokeColor = data._internal_strokeColor;\n            rendererData._internal_radius = data._internal_radius;\n        }\n    }\n    _private__duration() {\n        return this._internal_animationActive() ? performance.now() - this._private__startTime : 2600 /* Constants.AnimationPeriod */ - 1;\n    }\n}\n\nfunction size(barSpacing, coeff) {\n    const result = Math.min(Math.max(barSpacing, 12 /* Constants.MinShapeSize */), 30 /* Constants.MaxShapeSize */) * coeff;\n    return ceiledOdd(result);\n}\nfunction shapeSize(shape, originalSize) {\n    switch (shape) {\n        case 'arrowDown':\n        case 'arrowUp':\n            return size(originalSize, 1);\n        case 'circle':\n            return size(originalSize, 0.8);\n        case 'square':\n            return size(originalSize, 0.7);\n    }\n}\nfunction calculateShapeHeight(barSpacing) {\n    return ceiledEven(size(barSpacing, 1));\n}\nfunction shapeMargin(barSpacing) {\n    return Math.max(size(barSpacing, 0.1), 3 /* Constants.MinShapeMargin */);\n}\nfunction calculateAdjustedMargin(margin, hasSide, hasInBar) {\n    if (hasSide) {\n        return margin;\n    }\n    else if (hasInBar) {\n        return Math.ceil(margin / 2);\n    }\n    return 0;\n}\n\nfunction drawSquare(ctx, coords, size) {\n    const squareSize = shapeSize('square', size);\n    const halfSize = ((squareSize - 1) * coords._internal_pixelRatio) / 2;\n    const left = coords._internal_x - halfSize;\n    const top = coords._internal_y - halfSize;\n    ctx.fillRect(left, top, squareSize * coords._internal_pixelRatio, squareSize * coords._internal_pixelRatio);\n}\nfunction hitTestSquare(centerX, centerY, size, x, y) {\n    const squareSize = shapeSize('square', size);\n    const halfSize = (squareSize - 1) / 2;\n    const left = centerX - halfSize;\n    const top = centerY - halfSize;\n    return x >= left && x <= left + squareSize &&\n        y >= top && y <= top + squareSize;\n}\n\nfunction drawArrow(up, ctx, coords, size) {\n    const arrowSize = shapeSize('arrowUp', size);\n    const halfArrowSize = ((arrowSize - 1) / 2) * coords._internal_pixelRatio;\n    const baseSize = ceiledOdd(size / 2);\n    const halfBaseSize = ((baseSize - 1) / 2) * coords._internal_pixelRatio;\n    ctx.beginPath();\n    if (up) {\n        ctx.moveTo(coords._internal_x - halfArrowSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x, coords._internal_y - halfArrowSize);\n        ctx.lineTo(coords._internal_x + halfArrowSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y + halfArrowSize);\n        ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y + halfArrowSize);\n        ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y);\n    }\n    else {\n        ctx.moveTo(coords._internal_x - halfArrowSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x, coords._internal_y + halfArrowSize);\n        ctx.lineTo(coords._internal_x + halfArrowSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y);\n        ctx.lineTo(coords._internal_x + halfBaseSize, coords._internal_y - halfArrowSize);\n        ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y - halfArrowSize);\n        ctx.lineTo(coords._internal_x - halfBaseSize, coords._internal_y);\n    }\n    ctx.fill();\n}\nfunction hitTestArrow(up, centerX, centerY, size, x, y) {\n    // TODO: implement arrow hit test\n    return hitTestSquare(centerX, centerY, size, x, y);\n}\n\nfunction drawCircle(ctx, coords, size) {\n    const circleSize = shapeSize('circle', size);\n    const halfSize = (circleSize - 1) / 2;\n    ctx.beginPath();\n    ctx.arc(coords._internal_x, coords._internal_y, halfSize * coords._internal_pixelRatio, 0, 2 * Math.PI, false);\n    ctx.fill();\n}\nfunction hitTestCircle(centerX, centerY, size, x, y) {\n    const circleSize = shapeSize('circle', size);\n    const tolerance = 2 + circleSize / 2;\n    const xOffset = centerX - x;\n    const yOffset = centerY - y;\n    const dist = Math.sqrt(xOffset * xOffset + yOffset * yOffset);\n    return dist <= tolerance;\n}\n\nfunction drawText(ctx, text, x, y, horizontalPixelRatio, verticalPixelRatio) {\n    ctx.save();\n    ctx.scale(horizontalPixelRatio, verticalPixelRatio);\n    ctx.fillText(text, x, y);\n    ctx.restore();\n}\nfunction hitTestText(textX, textY, textWidth, textHeight, x, y) {\n    const halfHeight = textHeight / 2;\n    return x >= textX && x <= textX + textWidth &&\n        y >= textY - halfHeight && y <= textY + halfHeight;\n}\n\nclass SeriesMarkersRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        this._private__textWidthCache = new TextWidthCache();\n        this._private__fontSize = -1;\n        this._private__fontFamily = '';\n        this._private__font = '';\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_setParams(fontSize, fontFamily) {\n        if (this._private__fontSize !== fontSize || this._private__fontFamily !== fontFamily) {\n            this._private__fontSize = fontSize;\n            this._private__fontFamily = fontFamily;\n            this._private__font = makeFont(fontSize, fontFamily);\n            this._private__textWidthCache._internal_reset();\n        }\n    }\n    _internal_hitTest(x, y) {\n        if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n            return null;\n        }\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            if (hitTestItem(item, x, y)) {\n                return {\n                    _internal_hitTestData: item._internal_internalId,\n                    _internal_externalId: item._internal_externalId,\n                };\n            }\n        }\n        return null;\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }, isHovered, hitTestData) {\n        if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        ctx.textBaseline = 'middle';\n        ctx.font = this._private__font;\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            if (item._internal_text !== undefined) {\n                item._internal_text._internal_width = this._private__textWidthCache._internal_measureText(ctx, item._internal_text._internal_content);\n                item._internal_text._internal_height = this._private__fontSize;\n                item._internal_text._internal_x = item._internal_x - item._internal_text._internal_width / 2;\n            }\n            drawItem(item, ctx, horizontalPixelRatio, verticalPixelRatio);\n        }\n    }\n}\nfunction bitmapShapeItemCoordinates(item, horizontalPixelRatio, verticalPixelRatio) {\n    const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    const correction = (tickWidth % 2) / 2;\n    return {\n        _internal_x: Math.round(item._internal_x * horizontalPixelRatio) + correction,\n        _internal_y: item._internal_y * verticalPixelRatio,\n        _internal_pixelRatio: horizontalPixelRatio,\n    };\n}\nfunction drawItem(item, ctx, horizontalPixelRatio, verticalPixelRatio) {\n    ctx.fillStyle = item._internal_color;\n    if (item._internal_text !== undefined) {\n        drawText(ctx, item._internal_text._internal_content, item._internal_text._internal_x, item._internal_text._internal_y, horizontalPixelRatio, verticalPixelRatio);\n    }\n    drawShape(item, ctx, bitmapShapeItemCoordinates(item, horizontalPixelRatio, verticalPixelRatio));\n}\nfunction drawShape(item, ctx, coordinates) {\n    if (item._internal_size === 0) {\n        return;\n    }\n    switch (item._internal_shape) {\n        case 'arrowDown':\n            drawArrow(false, ctx, coordinates, item._internal_size);\n            return;\n        case 'arrowUp':\n            drawArrow(true, ctx, coordinates, item._internal_size);\n            return;\n        case 'circle':\n            drawCircle(ctx, coordinates, item._internal_size);\n            return;\n        case 'square':\n            drawSquare(ctx, coordinates, item._internal_size);\n            return;\n    }\n    ensureNever(item._internal_shape);\n}\nfunction hitTestItem(item, x, y) {\n    if (item._internal_text !== undefined && hitTestText(item._internal_text._internal_x, item._internal_text._internal_y, item._internal_text._internal_width, item._internal_text._internal_height, x, y)) {\n        return true;\n    }\n    return hitTestShape(item, x, y);\n}\nfunction hitTestShape(item, x, y) {\n    if (item._internal_size === 0) {\n        return false;\n    }\n    switch (item._internal_shape) {\n        case 'arrowDown':\n            return hitTestArrow(true, item._internal_x, item._internal_y, item._internal_size, x, y);\n        case 'arrowUp':\n            return hitTestArrow(false, item._internal_x, item._internal_y, item._internal_size, x, y);\n        case 'circle':\n            return hitTestCircle(item._internal_x, item._internal_y, item._internal_size, x, y);\n        case 'square':\n            return hitTestSquare(item._internal_x, item._internal_y, item._internal_size, x, y);\n    }\n}\n\n// eslint-disable-next-line max-params\nfunction fillSizeAndY(rendererItem, marker, seriesData, offsets, textHeight, shapeMargin, priceScale, timeScale, firstValue) {\n    const inBarPrice = isNumber(seriesData) ? seriesData : seriesData._internal_close;\n    const highPrice = isNumber(seriesData) ? seriesData : seriesData._internal_high;\n    const lowPrice = isNumber(seriesData) ? seriesData : seriesData._internal_low;\n    const sizeMultiplier = isNumber(marker.size) ? Math.max(marker.size, 0) : 1;\n    const shapeSize = calculateShapeHeight(timeScale._internal_barSpacing()) * sizeMultiplier;\n    const halfSize = shapeSize / 2;\n    rendererItem._internal_size = shapeSize;\n    switch (marker.position) {\n        case 'inBar': {\n            rendererItem._internal_y = priceScale._internal_priceToCoordinate(inBarPrice, firstValue);\n            if (rendererItem._internal_text !== undefined) {\n                rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n            }\n            return;\n        }\n        case 'aboveBar': {\n            rendererItem._internal_y = (priceScale._internal_priceToCoordinate(highPrice, firstValue) - halfSize - offsets._internal_aboveBar);\n            if (rendererItem._internal_text !== undefined) {\n                rendererItem._internal_text._internal_y = rendererItem._internal_y - halfSize - textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n                offsets._internal_aboveBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n            }\n            offsets._internal_aboveBar += shapeSize + shapeMargin;\n            return;\n        }\n        case 'belowBar': {\n            rendererItem._internal_y = (priceScale._internal_priceToCoordinate(lowPrice, firstValue) + halfSize + offsets._internal_belowBar);\n            if (rendererItem._internal_text !== undefined) {\n                rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n                offsets._internal_belowBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n            }\n            offsets._internal_belowBar += shapeSize + shapeMargin;\n            return;\n        }\n    }\n    ensureNever(marker.position);\n}\nclass SeriesMarkersPaneView {\n    constructor(series, model) {\n        this._private__invalidated = true;\n        this._private__dataInvalidated = true;\n        this._private__autoScaleMarginsInvalidated = true;\n        this._private__autoScaleMargins = null;\n        this._private__markersPositions = null;\n        this._private__renderer = new SeriesMarkersRenderer();\n        this._private__series = series;\n        this._private__model = model;\n        this._private__data = {\n            _internal_items: [],\n            _internal_visibleRange: null,\n        };\n    }\n    _internal_update(updateType) {\n        this._private__invalidated = true;\n        this._private__autoScaleMarginsInvalidated = true;\n        if (updateType === 'data') {\n            this._private__dataInvalidated = true;\n            this._private__markersPositions = null;\n        }\n    }\n    _internal_renderer(addAnchors) {\n        if (!this._private__series._internal_visible()) {\n            return null;\n        }\n        if (this._private__invalidated) {\n            this._internal__makeValid();\n        }\n        const layout = this._private__model._internal_options().layout;\n        this._private__renderer._internal_setParams(layout.fontSize, layout.fontFamily);\n        this._private__renderer._internal_setData(this._private__data);\n        return this._private__renderer;\n    }\n    _internal_autoScaleMargins() {\n        if (this._private__autoScaleMarginsInvalidated) {\n            if (this._private__series._internal_indexedMarkers().length > 0) {\n                const barSpacing = this._private__model._internal_timeScale()._internal_barSpacing();\n                const shapeMargin$1 = shapeMargin(barSpacing);\n                const marginValue = calculateShapeHeight(barSpacing) * 1.5 + shapeMargin$1 * 2;\n                const positions = this._internal__getMarkerPositions();\n                this._private__autoScaleMargins = {\n                    above: calculateAdjustedMargin(marginValue, positions.aboveBar, positions.inBar),\n                    below: calculateAdjustedMargin(marginValue, positions.belowBar, positions.inBar),\n                };\n            }\n            else {\n                this._private__autoScaleMargins = null;\n            }\n            this._private__autoScaleMarginsInvalidated = false;\n        }\n        return this._private__autoScaleMargins;\n    }\n    _internal__getMarkerPositions() {\n        if (this._private__markersPositions === null) {\n            this._private__markersPositions = this._private__series._internal_indexedMarkers().reduce((acc, marker) => {\n                if (!acc[marker.position]) {\n                    acc[marker.position] = true;\n                }\n                return acc;\n            }, {\n                inBar: false,\n                aboveBar: false,\n                belowBar: false,\n            });\n        }\n        return this._private__markersPositions;\n    }\n    _internal__makeValid() {\n        const priceScale = this._private__series._internal_priceScale();\n        const timeScale = this._private__model._internal_timeScale();\n        const seriesMarkers = this._private__series._internal_indexedMarkers();\n        if (this._private__dataInvalidated) {\n            this._private__data._internal_items = seriesMarkers.map((marker) => ({\n                _internal_time: marker.time,\n                _internal_x: 0,\n                _internal_y: 0,\n                _internal_size: 0,\n                _internal_shape: marker.shape,\n                _internal_color: marker.color,\n                _internal_internalId: marker._internal_internalId,\n                _internal_externalId: marker.id,\n                _internal_text: undefined,\n            }));\n            this._private__dataInvalidated = false;\n        }\n        const layoutOptions = this._private__model._internal_options().layout;\n        this._private__data._internal_visibleRange = null;\n        const visibleBars = timeScale._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return;\n        }\n        const firstValue = this._private__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        if (this._private__data._internal_items.length === 0) {\n            return;\n        }\n        let prevTimeIndex = NaN;\n        const shapeMargin$1 = shapeMargin(timeScale._internal_barSpacing());\n        const offsets = {\n            _internal_aboveBar: shapeMargin$1,\n            _internal_belowBar: shapeMargin$1,\n        };\n        this._private__data._internal_visibleRange = visibleTimedValues(this._private__data._internal_items, visibleBars, true);\n        for (let index = this._private__data._internal_visibleRange.from; index < this._private__data._internal_visibleRange.to; index++) {\n            const marker = seriesMarkers[index];\n            if (marker.time !== prevTimeIndex) {\n                // new bar, reset stack counter\n                offsets._internal_aboveBar = shapeMargin$1;\n                offsets._internal_belowBar = shapeMargin$1;\n                prevTimeIndex = marker.time;\n            }\n            const rendererItem = this._private__data._internal_items[index];\n            rendererItem._internal_x = timeScale._internal_indexToCoordinate(marker.time);\n            if (marker.text !== undefined && marker.text.length > 0) {\n                rendererItem._internal_text = {\n                    _internal_content: marker.text,\n                    _internal_x: 0,\n                    _internal_y: 0,\n                    _internal_width: 0,\n                    _internal_height: 0,\n                };\n            }\n            const dataAt = this._private__series._internal_dataAt(marker.time);\n            if (dataAt === null) {\n                continue;\n            }\n            fillSizeAndY(rendererItem, marker, dataAt, offsets, layoutOptions.fontSize, shapeMargin$1, priceScale, timeScale, firstValue._internal_value);\n        }\n        this._private__invalidated = false;\n    }\n}\n\nclass SeriesPriceLinePaneView extends SeriesHorizontalLinePaneView {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(series) {\n        super(series);\n    }\n    _internal__updateImpl() {\n        const data = this._internal__lineRendererData;\n        data._internal_visible = false;\n        const seriesOptions = this._internal__series._internal_options();\n        if (!seriesOptions.priceLineVisible || !this._internal__series._internal_visible()) {\n            return;\n        }\n        const lastValueData = this._internal__series._internal_lastValueData(seriesOptions.priceLineSource === 0 /* PriceLineSource.LastBar */);\n        if (lastValueData._internal_noData) {\n            return;\n        }\n        data._internal_visible = true;\n        data._internal_y = lastValueData._internal_coordinate;\n        data._internal_color = this._internal__series._internal_priceLineColor(lastValueData._internal_color);\n        data._internal_lineWidth = seriesOptions.priceLineWidth;\n        data._internal_lineStyle = seriesOptions.priceLineStyle;\n    }\n}\n\nclass SeriesPriceAxisView extends PriceAxisView {\n    constructor(source) {\n        super();\n        this._private__source = source;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n        axisRendererData._internal_visible = false;\n        paneRendererData._internal_visible = false;\n        const source = this._private__source;\n        if (!source._internal_visible()) {\n            return;\n        }\n        const seriesOptions = source._internal_options();\n        const showSeriesLastValue = seriesOptions.lastValueVisible;\n        const showSymbolLabel = source._internal_title() !== '';\n        const showPriceAndPercentage = seriesOptions.seriesLastValueMode === 0 /* PriceAxisLastValueMode.LastPriceAndPercentageValue */;\n        const lastValueData = source._internal_lastValueData(false);\n        if (lastValueData._internal_noData) {\n            return;\n        }\n        if (showSeriesLastValue) {\n            axisRendererData._internal_text = this._internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage);\n            axisRendererData._internal_visible = axisRendererData._internal_text.length !== 0;\n        }\n        if (showSymbolLabel || showPriceAndPercentage) {\n            paneRendererData._internal_text = this._internal__paneText(lastValueData, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage);\n            paneRendererData._internal_visible = paneRendererData._internal_text.length > 0;\n        }\n        const lastValueColor = source._internal_priceLineColor(lastValueData._internal_color);\n        const colors = generateContrastColors(lastValueColor);\n        commonRendererData._internal_background = colors._internal_background;\n        commonRendererData._internal_coordinate = lastValueData._internal_coordinate;\n        paneRendererData._internal_borderColor = source._internal_model()._internal_backgroundColorAtYPercentFromTop(lastValueData._internal_coordinate / source._internal_priceScale()._internal_height());\n        axisRendererData._internal_borderColor = lastValueColor;\n        axisRendererData._internal_color = colors._internal_foreground;\n        paneRendererData._internal_color = colors._internal_foreground;\n    }\n    _internal__paneText(lastValue, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage) {\n        let result = '';\n        const title = this._private__source._internal_title();\n        if (showSymbolLabel && title.length !== 0) {\n            result += `${title} `;\n        }\n        if (showSeriesLastValue && showPriceAndPercentage) {\n            result += this._private__source._internal_priceScale()._internal_isPercentage() ?\n                lastValue._internal_formattedPriceAbsolute : lastValue._internal_formattedPricePercentage;\n        }\n        return result.trim();\n    }\n    _internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage) {\n        if (!showSeriesLastValue) {\n            return '';\n        }\n        if (!showPriceAndPercentage) {\n            return lastValueData._internal_text;\n        }\n        return this._private__source._internal_priceScale()._internal_isPercentage() ?\n            lastValueData._internal_formattedPricePercentage : lastValueData._internal_formattedPriceAbsolute;\n    }\n}\n\nfunction computeFiniteResult(method, valueOne, valueTwo, fallback) {\n    const firstFinite = Number.isFinite(valueOne);\n    const secondFinite = Number.isFinite(valueTwo);\n    if (firstFinite && secondFinite) {\n        return method(valueOne, valueTwo);\n    }\n    return !firstFinite && !secondFinite ? fallback : (firstFinite ? valueOne : valueTwo);\n}\nclass PriceRangeImpl {\n    constructor(minValue, maxValue) {\n        this._private__minValue = minValue;\n        this._private__maxValue = maxValue;\n    }\n    _internal_equals(pr) {\n        if (pr === null) {\n            return false;\n        }\n        return this._private__minValue === pr._private__minValue && this._private__maxValue === pr._private__maxValue;\n    }\n    _internal_clone() {\n        return new PriceRangeImpl(this._private__minValue, this._private__maxValue);\n    }\n    _internal_minValue() {\n        return this._private__minValue;\n    }\n    _internal_maxValue() {\n        return this._private__maxValue;\n    }\n    _internal_length() {\n        return this._private__maxValue - this._private__minValue;\n    }\n    _internal_isEmpty() {\n        return this._private__maxValue === this._private__minValue || Number.isNaN(this._private__maxValue) || Number.isNaN(this._private__minValue);\n    }\n    _internal_merge(anotherRange) {\n        if (anotherRange === null) {\n            return this;\n        }\n        return new PriceRangeImpl(computeFiniteResult(Math.min, this._internal_minValue(), anotherRange._internal_minValue(), -Infinity), computeFiniteResult(Math.max, this._internal_maxValue(), anotherRange._internal_maxValue(), Infinity));\n    }\n    _internal_scaleAroundCenter(coeff) {\n        if (!isNumber(coeff)) {\n            return;\n        }\n        const delta = this._private__maxValue - this._private__minValue;\n        if (delta === 0) {\n            return;\n        }\n        const center = (this._private__maxValue + this._private__minValue) * 0.5;\n        let maxDelta = this._private__maxValue - center;\n        let minDelta = this._private__minValue - center;\n        maxDelta *= coeff;\n        minDelta *= coeff;\n        this._private__maxValue = center + maxDelta;\n        this._private__minValue = center + minDelta;\n    }\n    _internal_shift(delta) {\n        if (!isNumber(delta)) {\n            return;\n        }\n        this._private__maxValue += delta;\n        this._private__minValue += delta;\n    }\n    _internal_toRaw() {\n        return {\n            minValue: this._private__minValue,\n            maxValue: this._private__maxValue,\n        };\n    }\n    static _internal_fromRaw(raw) {\n        return (raw === null) ? null : new PriceRangeImpl(raw.minValue, raw.maxValue);\n    }\n}\n\nclass AutoscaleInfoImpl {\n    constructor(priceRange, margins) {\n        this._private__priceRange = priceRange;\n        this._private__margins = margins || null;\n    }\n    _internal_priceRange() {\n        return this._private__priceRange;\n    }\n    _internal_margins() {\n        return this._private__margins;\n    }\n    _internal_toRaw() {\n        if (this._private__priceRange === null) {\n            return null;\n        }\n        return {\n            priceRange: this._private__priceRange._internal_toRaw(),\n            margins: this._private__margins || undefined,\n        };\n    }\n    static _internal_fromRaw(raw) {\n        return (raw === null) ? null : new AutoscaleInfoImpl(PriceRangeImpl._internal_fromRaw(raw.priceRange), raw.margins);\n    }\n}\n\nclass CustomPriceLinePaneView extends SeriesHorizontalLinePaneView {\n    constructor(series, priceLine) {\n        super(series);\n        this._private__priceLine = priceLine;\n    }\n    _internal__updateImpl() {\n        const data = this._internal__lineRendererData;\n        data._internal_visible = false;\n        const lineOptions = this._private__priceLine._internal_options();\n        if (!this._internal__series._internal_visible() || !lineOptions.lineVisible) {\n            return;\n        }\n        const y = this._private__priceLine._internal_yCoord();\n        if (y === null) {\n            return;\n        }\n        data._internal_visible = true;\n        data._internal_y = y;\n        data._internal_color = lineOptions.color;\n        data._internal_lineWidth = lineOptions.lineWidth;\n        data._internal_lineStyle = lineOptions.lineStyle;\n        data._internal_externalId = this._private__priceLine._internal_options().id;\n    }\n}\n\nclass CustomPriceLinePriceAxisView extends PriceAxisView {\n    constructor(series, priceLine) {\n        super();\n        this._private__series = series;\n        this._private__priceLine = priceLine;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonData) {\n        axisRendererData._internal_visible = false;\n        paneRendererData._internal_visible = false;\n        const options = this._private__priceLine._internal_options();\n        const labelVisible = options.axisLabelVisible;\n        const showPaneLabel = options.title !== '';\n        const series = this._private__series;\n        if (!labelVisible || !series._internal_visible()) {\n            return;\n        }\n        const y = this._private__priceLine._internal_yCoord();\n        if (y === null) {\n            return;\n        }\n        if (showPaneLabel) {\n            paneRendererData._internal_text = options.title;\n            paneRendererData._internal_visible = true;\n        }\n        paneRendererData._internal_borderColor = series._internal_model()._internal_backgroundColorAtYPercentFromTop(y / series._internal_priceScale()._internal_height());\n        axisRendererData._internal_text = this._private__formatPrice(options.price);\n        axisRendererData._internal_visible = true;\n        const colors = generateContrastColors(options.axisLabelColor || options.color);\n        commonData._internal_background = colors._internal_background;\n        const textColor = options.axisLabelTextColor || colors._internal_foreground;\n        axisRendererData._internal_color = textColor; // price text\n        paneRendererData._internal_color = textColor; // title text\n        commonData._internal_coordinate = y;\n    }\n    _private__formatPrice(price) {\n        const firstValue = this._private__series._internal_firstValue();\n        if (firstValue === null) {\n            return '';\n        }\n        return this._private__series._internal_priceScale()._internal_formatPrice(price, firstValue._internal_value);\n    }\n}\n\nclass CustomPriceLine {\n    constructor(series, options) {\n        this._private__series = series;\n        this._private__options = options;\n        this._private__priceLineView = new CustomPriceLinePaneView(series, this);\n        this._private__priceAxisView = new CustomPriceLinePriceAxisView(series, this);\n        this._private__panePriceAxisView = new PanePriceAxisView(this._private__priceAxisView, series, series._internal_model());\n    }\n    _internal_applyOptions(options) {\n        merge(this._private__options, options);\n        this._internal_update();\n        this._private__series._internal_model()._internal_lightUpdate();\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_paneView() {\n        return this._private__priceLineView;\n    }\n    _internal_labelPaneView() {\n        return this._private__panePriceAxisView;\n    }\n    _internal_priceAxisView() {\n        return this._private__priceAxisView;\n    }\n    _internal_update() {\n        this._private__priceLineView._internal_update();\n        this._private__priceAxisView._internal_update();\n    }\n    _internal_yCoord() {\n        const series = this._private__series;\n        const priceScale = series._internal_priceScale();\n        const timeScale = series._internal_model()._internal_timeScale();\n        if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n            return null;\n        }\n        const firstValue = series._internal_firstValue();\n        if (firstValue === null) {\n            return null;\n        }\n        return priceScale._internal_priceToCoordinate(this._private__options.price, firstValue._internal_value);\n    }\n}\n\nclass PriceDataSource extends DataSource {\n    constructor(model) {\n        super();\n        this._private__model = model;\n    }\n    _internal_model() {\n        return this._private__model;\n    }\n}\n\nconst barStyleFnMap = {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Bar: (findBar, barStyle, barIndex, precomputedBars) => {\n        var _a;\n        const upColor = barStyle.upColor;\n        const downColor = barStyle.downColor;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : (isUp ? upColor : downColor),\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Candlestick: (findBar, candlestickStyle, barIndex, precomputedBars) => {\n        var _a, _b, _c;\n        const upColor = candlestickStyle.upColor;\n        const downColor = candlestickStyle.downColor;\n        const borderUpColor = candlestickStyle.borderUpColor;\n        const borderDownColor = candlestickStyle.borderDownColor;\n        const wickUpColor = candlestickStyle.wickUpColor;\n        const wickDownColor = candlestickStyle.wickDownColor;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : (isUp ? upColor : downColor),\n            _internal_barBorderColor: (_b = currentBar._internal_borderColor) !== null && _b !== void 0 ? _b : (isUp ? borderUpColor : borderDownColor),\n            _internal_barWickColor: (_c = currentBar._internal_wickColor) !== null && _c !== void 0 ? _c : (isUp ? wickUpColor : wickDownColor),\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Custom: (findBar, customStyle, barIndex, precomputedBars) => {\n        var _a;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : customStyle.color,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Area: (findBar, areaStyle, barIndex, precomputedBars) => {\n        var _a, _b, _c, _d;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: (_a = currentBar._internal_lineColor) !== null && _a !== void 0 ? _a : areaStyle.lineColor,\n            _internal_lineColor: (_b = currentBar._internal_lineColor) !== null && _b !== void 0 ? _b : areaStyle.lineColor,\n            _internal_topColor: (_c = currentBar._internal_topColor) !== null && _c !== void 0 ? _c : areaStyle.topColor,\n            _internal_bottomColor: (_d = currentBar._internal_bottomColor) !== null && _d !== void 0 ? _d : areaStyle.bottomColor,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Baseline: (findBar, baselineStyle, barIndex, precomputedBars) => {\n        var _a, _b, _c, _d, _e, _f;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        const isAboveBaseline = currentBar._internal_value[3 /* PlotRowValueIndex.Close */] >= baselineStyle.baseValue.price;\n        return {\n            _internal_barColor: isAboveBaseline ? baselineStyle.topLineColor : baselineStyle.bottomLineColor,\n            _internal_topLineColor: (_a = currentBar._internal_topLineColor) !== null && _a !== void 0 ? _a : baselineStyle.topLineColor,\n            _internal_bottomLineColor: (_b = currentBar._internal_bottomLineColor) !== null && _b !== void 0 ? _b : baselineStyle.bottomLineColor,\n            _internal_topFillColor1: (_c = currentBar._internal_topFillColor1) !== null && _c !== void 0 ? _c : baselineStyle.topFillColor1,\n            _internal_topFillColor2: (_d = currentBar._internal_topFillColor2) !== null && _d !== void 0 ? _d : baselineStyle.topFillColor2,\n            _internal_bottomFillColor1: (_e = currentBar._internal_bottomFillColor1) !== null && _e !== void 0 ? _e : baselineStyle.bottomFillColor1,\n            _internal_bottomFillColor2: (_f = currentBar._internal_bottomFillColor2) !== null && _f !== void 0 ? _f : baselineStyle.bottomFillColor2,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Line: (findBar, lineStyle, barIndex, precomputedBars) => {\n        var _a, _b;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : lineStyle.color,\n            _internal_lineColor: (_b = currentBar._internal_color) !== null && _b !== void 0 ? _b : lineStyle.color,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Histogram: (findBar, histogramStyle, barIndex, precomputedBars) => {\n        var _a;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : histogramStyle.color,\n        };\n    },\n};\nclass SeriesBarColorer {\n    constructor(series) {\n        this._private__findBar = (barIndex, precomputedBars) => {\n            if (precomputedBars !== undefined) {\n                return precomputedBars._internal_value;\n            }\n            return this._private__series._internal_bars()._internal_valueAt(barIndex);\n        };\n        this._private__series = series;\n        this._private__styleGetter = barStyleFnMap[series._internal_seriesType()];\n    }\n    _internal_barStyle(barIndex, precomputedBars) {\n        // precomputedBars: {value: [Array BarValues], previousValue: [Array BarValues] | undefined}\n        // Used to avoid binary search if bars are already known\n        return this._private__styleGetter(this._private__findBar, this._private__series._internal_options(), barIndex, precomputedBars);\n    }\n}\n\n/**\n * Search direction if no data found at provided index\n */\nvar MismatchDirection;\n(function (MismatchDirection) {\n    /**\n     * Search the nearest left item\n     */\n    MismatchDirection[MismatchDirection[\"NearestLeft\"] = -1] = \"NearestLeft\";\n    /**\n     * Do not search\n     */\n    MismatchDirection[MismatchDirection[\"None\"] = 0] = \"None\";\n    /**\n     * Search the nearest right item\n     */\n    MismatchDirection[MismatchDirection[\"NearestRight\"] = 1] = \"NearestRight\";\n})(MismatchDirection || (MismatchDirection = {}));\n// TODO: think about changing it dynamically\nconst CHUNK_SIZE = 30;\n/**\n * PlotList is an array of plot rows\n * each plot row consists of key (index in timescale) and plot value map\n */\nclass PlotList {\n    constructor() {\n        this._private__items = [];\n        this._private__minMaxCache = new Map();\n        this._private__rowSearchCache = new Map();\n    }\n    // @returns Last row\n    _internal_last() {\n        return this._internal_size() > 0 ? this._private__items[this._private__items.length - 1] : null;\n    }\n    _internal_firstIndex() {\n        return this._internal_size() > 0 ? this._private__indexAt(0) : null;\n    }\n    _internal_lastIndex() {\n        return this._internal_size() > 0 ? this._private__indexAt((this._private__items.length - 1)) : null;\n    }\n    _internal_size() {\n        return this._private__items.length;\n    }\n    _internal_isEmpty() {\n        return this._internal_size() === 0;\n    }\n    _internal_contains(index) {\n        return this._private__search(index, 0 /* MismatchDirection.None */) !== null;\n    }\n    _internal_valueAt(index) {\n        return this._internal_search(index);\n    }\n    _internal_search(index, searchMode = 0 /* MismatchDirection.None */) {\n        const pos = this._private__search(index, searchMode);\n        if (pos === null) {\n            return null;\n        }\n        return Object.assign(Object.assign({}, this._private__valueAt(pos)), { _internal_index: this._private__indexAt(pos) });\n    }\n    _internal_rows() {\n        return this._private__items;\n    }\n    _internal_minMaxOnRangeCached(start, end, plots) {\n        // this code works for single series only\n        // could fail after whitespaces implementation\n        if (this._internal_isEmpty()) {\n            return null;\n        }\n        let result = null;\n        for (const plot of plots) {\n            const plotMinMax = this._private__minMaxOnRangeCachedImpl(start, end, plot);\n            result = mergeMinMax(result, plotMinMax);\n        }\n        return result;\n    }\n    _internal_setData(plotRows) {\n        this._private__rowSearchCache.clear();\n        this._private__minMaxCache.clear();\n        this._private__items = plotRows;\n    }\n    _private__indexAt(offset) {\n        return this._private__items[offset]._internal_index;\n    }\n    _private__valueAt(offset) {\n        return this._private__items[offset];\n    }\n    _private__search(index, searchMode) {\n        const exactPos = this._private__bsearch(index);\n        if (exactPos === null && searchMode !== 0 /* MismatchDirection.None */) {\n            switch (searchMode) {\n                case -1 /* MismatchDirection.NearestLeft */:\n                    return this._private__searchNearestLeft(index);\n                case 1 /* MismatchDirection.NearestRight */:\n                    return this._private__searchNearestRight(index);\n                default:\n                    throw new TypeError('Unknown search mode');\n            }\n        }\n        return exactPos;\n    }\n    _private__searchNearestLeft(index) {\n        let nearestLeftPos = this._private__lowerbound(index);\n        if (nearestLeftPos > 0) {\n            nearestLeftPos = nearestLeftPos - 1;\n        }\n        return (nearestLeftPos !== this._private__items.length && this._private__indexAt(nearestLeftPos) < index) ? nearestLeftPos : null;\n    }\n    _private__searchNearestRight(index) {\n        const nearestRightPos = this._private__upperbound(index);\n        return (nearestRightPos !== this._private__items.length && index < this._private__indexAt(nearestRightPos)) ? nearestRightPos : null;\n    }\n    _private__bsearch(index) {\n        const start = this._private__lowerbound(index);\n        if (start !== this._private__items.length && !(index < this._private__items[start]._internal_index)) {\n            return start;\n        }\n        return null;\n    }\n    _private__lowerbound(index) {\n        return lowerBound(this._private__items, index, (a, b) => a._internal_index < b);\n    }\n    _private__upperbound(index) {\n        return upperBound(this._private__items, index, (a, b) => a._internal_index > b);\n    }\n    _private__plotMinMax(startIndex, endIndexExclusive, plotIndex) {\n        let result = null;\n        for (let i = startIndex; i < endIndexExclusive; i++) {\n            const values = this._private__items[i]._internal_value;\n            const v = values[plotIndex];\n            if (Number.isNaN(v)) {\n                continue;\n            }\n            if (result === null) {\n                result = { _internal_min: v, _internal_max: v };\n            }\n            else {\n                if (v < result._internal_min) {\n                    result._internal_min = v;\n                }\n                if (v > result._internal_max) {\n                    result._internal_max = v;\n                }\n            }\n        }\n        return result;\n    }\n    _private__minMaxOnRangeCachedImpl(start, end, plotIndex) {\n        // this code works for single series only\n        // could fail after whitespaces implementation\n        if (this._internal_isEmpty()) {\n            return null;\n        }\n        let result = null;\n        // assume that bar indexes only increase\n        const firstIndex = ensureNotNull(this._internal_firstIndex());\n        const lastIndex = ensureNotNull(this._internal_lastIndex());\n        const s = Math.max(start, firstIndex);\n        const e = Math.min(end, lastIndex);\n        const cachedLow = Math.ceil(s / CHUNK_SIZE) * CHUNK_SIZE;\n        const cachedHigh = Math.max(cachedLow, Math.floor(e / CHUNK_SIZE) * CHUNK_SIZE);\n        {\n            const startIndex = this._private__lowerbound(s);\n            const endIndex = this._private__upperbound(Math.min(e, cachedLow, end)); // non-inclusive end\n            const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n            result = mergeMinMax(result, plotMinMax);\n        }\n        let minMaxCache = this._private__minMaxCache.get(plotIndex);\n        if (minMaxCache === undefined) {\n            minMaxCache = new Map();\n            this._private__minMaxCache.set(plotIndex, minMaxCache);\n        }\n        // now go cached\n        for (let c = Math.max(cachedLow + 1, s); c < cachedHigh; c += CHUNK_SIZE) {\n            const chunkIndex = Math.floor(c / CHUNK_SIZE);\n            let chunkMinMax = minMaxCache.get(chunkIndex);\n            if (chunkMinMax === undefined) {\n                const chunkStart = this._private__lowerbound(chunkIndex * CHUNK_SIZE);\n                const chunkEnd = this._private__upperbound((chunkIndex + 1) * CHUNK_SIZE - 1);\n                chunkMinMax = this._private__plotMinMax(chunkStart, chunkEnd, plotIndex);\n                minMaxCache.set(chunkIndex, chunkMinMax);\n            }\n            result = mergeMinMax(result, chunkMinMax);\n        }\n        // tail\n        {\n            const startIndex = this._private__lowerbound(cachedHigh);\n            const endIndex = this._private__upperbound(e); // non-inclusive end\n            const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n            result = mergeMinMax(result, plotMinMax);\n        }\n        return result;\n    }\n}\nfunction mergeMinMax(first, second) {\n    if (first === null) {\n        return second;\n    }\n    else {\n        if (second === null) {\n            return first;\n        }\n        else {\n            // merge MinMax values\n            const min = Math.min(first._internal_min, second._internal_min);\n            const max = Math.max(first._internal_max, second._internal_max);\n            return { _internal_min: min, _internal_max: max };\n        }\n    }\n}\n\nfunction createSeriesPlotList() {\n    return new PlotList();\n}\n\nclass SeriesPrimitiveRendererWrapper {\n    constructor(baseRenderer) {\n        this._private__baseRenderer = baseRenderer;\n    }\n    _internal_draw(target, isHovered, hitTestData) {\n        this._private__baseRenderer.draw(target);\n    }\n    _internal_drawBackground(target, isHovered, hitTestData) {\n        var _a, _b;\n        (_b = (_a = this._private__baseRenderer).drawBackground) === null || _b === void 0 ? void 0 : _b.call(_a, target);\n    }\n}\nclass SeriesPrimitivePaneViewWrapper {\n    constructor(paneView) {\n        this._private__cache = null;\n        this._private__paneView = paneView;\n    }\n    _internal_renderer() {\n        var _a;\n        const baseRenderer = this._private__paneView.renderer();\n        if (baseRenderer === null) {\n            return null;\n        }\n        if (((_a = this._private__cache) === null || _a === void 0 ? void 0 : _a._internal_base) === baseRenderer) {\n            return this._private__cache._internal_wrapper;\n        }\n        const wrapper = new SeriesPrimitiveRendererWrapper(baseRenderer);\n        this._private__cache = {\n            _internal_base: baseRenderer,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_zOrder() {\n        var _a, _b, _c;\n        return (_c = (_b = (_a = this._private__paneView).zOrder) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : 'normal';\n    }\n}\nfunction getAxisViewData(baseView) {\n    var _a, _b, _c, _d, _e;\n    return {\n        _internal_text: baseView.text(),\n        _internal_coordinate: baseView.coordinate(),\n        _internal_fixedCoordinate: (_a = baseView.fixedCoordinate) === null || _a === void 0 ? void 0 : _a.call(baseView),\n        _internal_color: baseView.textColor(),\n        _internal_background: baseView.backColor(),\n        _internal_visible: (_c = (_b = baseView.visible) === null || _b === void 0 ? void 0 : _b.call(baseView)) !== null && _c !== void 0 ? _c : true,\n        _internal_tickVisible: (_e = (_d = baseView.tickVisible) === null || _d === void 0 ? void 0 : _d.call(baseView)) !== null && _e !== void 0 ? _e : true,\n    };\n}\nclass SeriesPrimitiveTimeAxisViewWrapper {\n    constructor(baseView, timeScale) {\n        this._private__renderer = new TimeAxisViewRenderer();\n        this._private__baseView = baseView;\n        this._private__timeScale = timeScale;\n    }\n    _internal_renderer() {\n        this._private__renderer._internal_setData(Object.assign({ _internal_width: this._private__timeScale._internal_width() }, getAxisViewData(this._private__baseView)));\n        return this._private__renderer;\n    }\n}\nclass SeriesPrimitivePriceAxisViewWrapper extends PriceAxisView {\n    constructor(baseView, priceScale) {\n        super();\n        this._private__baseView = baseView;\n        this._private__priceScale = priceScale;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n        const data = getAxisViewData(this._private__baseView);\n        commonRendererData._internal_background = data._internal_background;\n        axisRendererData._internal_color = data._internal_color;\n        const additionalPadding = 2 / 12 * this._private__priceScale._internal_fontSize();\n        commonRendererData._internal_additionalPaddingTop = additionalPadding;\n        commonRendererData._internal_additionalPaddingBottom = additionalPadding;\n        commonRendererData._internal_coordinate = data._internal_coordinate;\n        commonRendererData._internal_fixedCoordinate = data._internal_fixedCoordinate;\n        axisRendererData._internal_text = data._internal_text;\n        axisRendererData._internal_visible = data._internal_visible;\n        axisRendererData._internal_tickVisible = data._internal_tickVisible;\n    }\n}\nclass SeriesPrimitiveWrapper {\n    constructor(primitive, series) {\n        this._private__paneViewsCache = null;\n        this._private__timeAxisViewsCache = null;\n        this._private__priceAxisViewsCache = null;\n        this._private__priceAxisPaneViewsCache = null;\n        this._private__timeAxisPaneViewsCache = null;\n        this._private__primitive = primitive;\n        this._private__series = series;\n    }\n    _internal_primitive() {\n        return this._private__primitive;\n    }\n    _internal_updateAllViews() {\n        var _a, _b;\n        (_b = (_a = this._private__primitive).updateAllViews) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _internal_paneViews() {\n        var _a, _b, _c, _d;\n        const base = (_c = (_b = (_a = this._private__primitive).paneViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n        if (((_d = this._private__paneViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n            return this._private__paneViewsCache._internal_wrapper;\n        }\n        const wrapper = base.map((pw) => new SeriesPrimitivePaneViewWrapper(pw));\n        this._private__paneViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_timeAxisViews() {\n        var _a, _b, _c, _d;\n        const base = (_c = (_b = (_a = this._private__primitive).timeAxisViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n        if (((_d = this._private__timeAxisViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n            return this._private__timeAxisViewsCache._internal_wrapper;\n        }\n        const timeScale = this._private__series._internal_model()._internal_timeScale();\n        const wrapper = base.map((aw) => new SeriesPrimitiveTimeAxisViewWrapper(aw, timeScale));\n        this._private__timeAxisViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_priceAxisViews() {\n        var _a, _b, _c, _d;\n        const base = (_c = (_b = (_a = this._private__primitive).priceAxisViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n        if (((_d = this._private__priceAxisViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n            return this._private__priceAxisViewsCache._internal_wrapper;\n        }\n        const priceScale = this._private__series._internal_priceScale();\n        const wrapper = base.map((aw) => new SeriesPrimitivePriceAxisViewWrapper(aw, priceScale));\n        this._private__priceAxisViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_priceAxisPaneViews() {\n        var _a, _b, _c, _d;\n        const base = (_c = (_b = (_a = this._private__primitive).priceAxisPaneViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n        if (((_d = this._private__priceAxisPaneViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n            return this._private__priceAxisPaneViewsCache._internal_wrapper;\n        }\n        const wrapper = base.map((pw) => new SeriesPrimitivePaneViewWrapper(pw));\n        this._private__priceAxisPaneViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_timeAxisPaneViews() {\n        var _a, _b, _c, _d;\n        const base = (_c = (_b = (_a = this._private__primitive).timeAxisPaneViews) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : [];\n        if (((_d = this._private__timeAxisPaneViewsCache) === null || _d === void 0 ? void 0 : _d._internal_base) === base) {\n            return this._private__timeAxisPaneViewsCache._internal_wrapper;\n        }\n        const wrapper = base.map((pw) => new SeriesPrimitivePaneViewWrapper(pw));\n        this._private__timeAxisPaneViewsCache = {\n            _internal_base: base,\n            _internal_wrapper: wrapper,\n        };\n        return wrapper;\n    }\n    _internal_autoscaleInfo(startTimePoint, endTimePoint) {\n        var _a, _b, _c;\n        return ((_c = (_b = (_a = this._private__primitive).autoscaleInfo) === null || _b === void 0 ? void 0 : _b.call(_a, startTimePoint, endTimePoint)) !== null && _c !== void 0 ? _c : null);\n    }\n    _internal_hitTest(x, y) {\n        var _a, _b, _c;\n        return (_c = (_b = (_a = this._private__primitive).hitTest) === null || _b === void 0 ? void 0 : _b.call(_a, x, y)) !== null && _c !== void 0 ? _c : null;\n    }\n}\n\nfunction extractPrimitivePaneViews(primitives, extractor, zOrder, destination) {\n    primitives.forEach((wrapper) => {\n        extractor(wrapper).forEach((paneView) => {\n            if (paneView._internal_zOrder() !== zOrder) {\n                return;\n            }\n            destination.push(paneView);\n        });\n    });\n}\nfunction primitivePaneViewsExtractor(wrapper) {\n    return wrapper._internal_paneViews();\n}\nfunction primitivePricePaneViewsExtractor(wrapper) {\n    return wrapper._internal_priceAxisPaneViews();\n}\nfunction primitiveTimePaneViewsExtractor(wrapper) {\n    return wrapper._internal_timeAxisPaneViews();\n}\nclass Series extends PriceDataSource {\n    constructor(model, options, seriesType, pane, customPaneView) {\n        super(model);\n        this._private__data = createSeriesPlotList();\n        this._private__priceLineView = new SeriesPriceLinePaneView(this);\n        this._private__customPriceLines = [];\n        this._private__baseHorizontalLineView = new SeriesHorizontalBaseLinePaneView(this);\n        this._private__lastPriceAnimationPaneView = null;\n        this._private__barColorerCache = null;\n        this._private__markers = [];\n        this._private__indexedMarkers = [];\n        this._private__animationTimeoutId = null;\n        this._private__primitives = [];\n        this._private__options = options;\n        this._private__seriesType = seriesType;\n        const priceAxisView = new SeriesPriceAxisView(this);\n        this._private__priceAxisViews = [priceAxisView];\n        this._private__panePriceAxisView = new PanePriceAxisView(priceAxisView, this, model);\n        if (seriesType === 'Area' || seriesType === 'Line' || seriesType === 'Baseline') {\n            this._private__lastPriceAnimationPaneView = new SeriesLastPriceAnimationPaneView(this);\n        }\n        this._private__recreateFormatter();\n        this._private__recreatePaneViews(customPaneView);\n    }\n    _internal_destroy() {\n        if (this._private__animationTimeoutId !== null) {\n            clearTimeout(this._private__animationTimeoutId);\n        }\n    }\n    _internal_priceLineColor(lastBarColor) {\n        return this._private__options.priceLineColor || lastBarColor;\n    }\n    _internal_lastValueData(globalLast) {\n        const noDataRes = { _internal_noData: true };\n        const priceScale = this._internal_priceScale();\n        if (this._internal_model()._internal_timeScale()._internal_isEmpty() || priceScale._internal_isEmpty() || this._private__data._internal_isEmpty()) {\n            return noDataRes;\n        }\n        const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n        const firstValue = this._internal_firstValue();\n        if (visibleBars === null || firstValue === null) {\n            return noDataRes;\n        }\n        // find range of bars inside range\n        // TODO: make it more optimal\n        let bar;\n        let lastIndex;\n        if (globalLast) {\n            const lastBar = this._private__data._internal_last();\n            if (lastBar === null) {\n                return noDataRes;\n            }\n            bar = lastBar;\n            lastIndex = lastBar._internal_index;\n        }\n        else {\n            const endBar = this._private__data._internal_search(visibleBars._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n            if (endBar === null) {\n                return noDataRes;\n            }\n            bar = this._private__data._internal_valueAt(endBar._internal_index);\n            if (bar === null) {\n                return noDataRes;\n            }\n            lastIndex = endBar._internal_index;\n        }\n        const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n        const barColorer = this._internal_barColorer();\n        const style = barColorer._internal_barStyle(lastIndex, { _internal_value: bar });\n        const coordinate = priceScale._internal_priceToCoordinate(price, firstValue._internal_value);\n        return {\n            _internal_noData: false,\n            _internal_price: price,\n            _internal_text: priceScale._internal_formatPrice(price, firstValue._internal_value),\n            _internal_formattedPriceAbsolute: priceScale._internal_formatPriceAbsolute(price),\n            _internal_formattedPricePercentage: priceScale._internal_formatPricePercentage(price, firstValue._internal_value),\n            _internal_color: style._internal_barColor,\n            _internal_coordinate: coordinate,\n            _internal_index: lastIndex,\n        };\n    }\n    _internal_barColorer() {\n        if (this._private__barColorerCache !== null) {\n            return this._private__barColorerCache;\n        }\n        this._private__barColorerCache = new SeriesBarColorer(this);\n        return this._private__barColorerCache;\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyOptions(options) {\n        const targetPriceScaleId = options.priceScaleId;\n        if (targetPriceScaleId !== undefined && targetPriceScaleId !== this._private__options.priceScaleId) {\n            // series cannot do it itself, ask model\n            this._internal_model()._internal_moveSeriesToScale(this, targetPriceScaleId);\n        }\n        merge(this._private__options, options);\n        if (options.priceFormat !== undefined) {\n            this._private__recreateFormatter();\n            // updated formatter might affect rendering  and as a consequence of this the width of price axis might be changed\n            // thus we need to force the chart to do a full update to apply changes correctly\n            // full update is quite heavy operation in terms of performance\n            // but updating formatter looks like quite rare so forcing a full update here shouldn't affect the performance a lot\n            this._internal_model()._internal_fullUpdate();\n        }\n        this._internal_model()._internal_updateSource(this);\n        // a series might affect crosshair by some options (like crosshair markers)\n        // that's why we need to update crosshair as well\n        this._internal_model()._internal_updateCrosshair();\n        this._private__paneView._internal_update('options');\n    }\n    _internal_setData(data, updateInfo) {\n        this._private__data._internal_setData(data);\n        this._private__recalculateMarkers();\n        this._private__paneView._internal_update('data');\n        this._private__markersPaneView._internal_update('data');\n        if (this._private__lastPriceAnimationPaneView !== null) {\n            if (updateInfo && updateInfo._internal_lastBarUpdatedOrNewBarsAddedToTheRight) {\n                this._private__lastPriceAnimationPaneView._internal_onNewRealtimeDataReceived();\n            }\n            else if (data.length === 0) {\n                this._private__lastPriceAnimationPaneView._internal_onDataCleared();\n            }\n        }\n        const sourcePane = this._internal_model()._internal_paneForSource(this);\n        this._internal_model()._internal_recalculatePane(sourcePane);\n        this._internal_model()._internal_updateSource(this);\n        this._internal_model()._internal_updateCrosshair();\n        this._internal_model()._internal_lightUpdate();\n    }\n    _internal_setMarkers(data) {\n        this._private__markers = data;\n        this._private__recalculateMarkers();\n        const sourcePane = this._internal_model()._internal_paneForSource(this);\n        this._private__markersPaneView._internal_update('data');\n        this._internal_model()._internal_recalculatePane(sourcePane);\n        this._internal_model()._internal_updateSource(this);\n        this._internal_model()._internal_updateCrosshair();\n        this._internal_model()._internal_lightUpdate();\n    }\n    _internal_markers() {\n        return this._private__markers;\n    }\n    _internal_indexedMarkers() {\n        return this._private__indexedMarkers;\n    }\n    _internal_createPriceLine(options) {\n        const result = new CustomPriceLine(this, options);\n        this._private__customPriceLines.push(result);\n        this._internal_model()._internal_updateSource(this);\n        return result;\n    }\n    _internal_removePriceLine(line) {\n        const index = this._private__customPriceLines.indexOf(line);\n        if (index !== -1) {\n            this._private__customPriceLines.splice(index, 1);\n        }\n        this._internal_model()._internal_updateSource(this);\n    }\n    _internal_seriesType() {\n        return this._private__seriesType;\n    }\n    _internal_firstValue() {\n        const bar = this._internal_firstBar();\n        if (bar === null) {\n            return null;\n        }\n        return {\n            _internal_value: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n            _internal_timePoint: bar._internal_time,\n        };\n    }\n    _internal_firstBar() {\n        const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return null;\n        }\n        const startTimePoint = visibleBars._internal_left();\n        return this._private__data._internal_search(startTimePoint, 1 /* MismatchDirection.NearestRight */);\n    }\n    _internal_bars() {\n        return this._private__data;\n    }\n    _internal_dataAt(time) {\n        const prices = this._private__data._internal_valueAt(time);\n        if (prices === null) {\n            return null;\n        }\n        if (this._private__seriesType === 'Bar' || this._private__seriesType === 'Candlestick' || this._private__seriesType === 'Custom') {\n            return {\n                _internal_open: prices._internal_value[0 /* PlotRowValueIndex.Open */],\n                _internal_high: prices._internal_value[1 /* PlotRowValueIndex.High */],\n                _internal_low: prices._internal_value[2 /* PlotRowValueIndex.Low */],\n                _internal_close: prices._internal_value[3 /* PlotRowValueIndex.Close */],\n            };\n        }\n        else {\n            return prices._internal_value[3 /* PlotRowValueIndex.Close */];\n        }\n    }\n    _internal_topPaneViews(pane) {\n        const res = [];\n        extractPrimitivePaneViews(this._private__primitives, primitivePaneViewsExtractor, 'top', res);\n        const animationPaneView = this._private__lastPriceAnimationPaneView;\n        if (animationPaneView === null || !animationPaneView._internal_visible()) {\n            return res;\n        }\n        if (this._private__animationTimeoutId === null && animationPaneView._internal_animationActive()) {\n            this._private__animationTimeoutId = setTimeout(() => {\n                this._private__animationTimeoutId = null;\n                this._internal_model()._internal_cursorUpdate();\n            }, 0);\n        }\n        animationPaneView._internal_invalidateStage();\n        res.unshift(animationPaneView);\n        return res;\n    }\n    _internal_paneViews() {\n        const res = [];\n        if (!this._private__isOverlay()) {\n            res.push(this._private__baseHorizontalLineView);\n        }\n        res.push(this._private__paneView, this._private__priceLineView, this._private__markersPaneView);\n        const priceLineViews = this._private__customPriceLines.map((line) => line._internal_paneView());\n        res.push(...priceLineViews);\n        extractPrimitivePaneViews(this._private__primitives, primitivePaneViewsExtractor, 'normal', res);\n        return res;\n    }\n    _internal_bottomPaneViews() {\n        return this._private__extractPaneViews(primitivePaneViewsExtractor, 'bottom');\n    }\n    _internal_pricePaneViews(zOrder) {\n        return this._private__extractPaneViews(primitivePricePaneViewsExtractor, zOrder);\n    }\n    _internal_timePaneViews(zOrder) {\n        return this._private__extractPaneViews(primitiveTimePaneViewsExtractor, zOrder);\n    }\n    _internal_primitiveHitTest(x, y) {\n        return this._private__primitives\n            .map((primitive) => primitive._internal_hitTest(x, y))\n            .filter((result) => result !== null);\n    }\n    _internal_labelPaneViews(pane) {\n        return [\n            this._private__panePriceAxisView,\n            ...this._private__customPriceLines.map((line) => line._internal_labelPaneView()),\n        ];\n    }\n    _internal_priceAxisViews(pane, priceScale) {\n        if (priceScale !== this._internal__priceScale && !this._private__isOverlay()) {\n            return [];\n        }\n        const result = [...this._private__priceAxisViews];\n        for (const customPriceLine of this._private__customPriceLines) {\n            result.push(customPriceLine._internal_priceAxisView());\n        }\n        this._private__primitives.forEach((wrapper) => {\n            result.push(...wrapper._internal_priceAxisViews());\n        });\n        return result;\n    }\n    _internal_timeAxisViews() {\n        const res = [];\n        this._private__primitives.forEach((wrapper) => {\n            res.push(...wrapper._internal_timeAxisViews());\n        });\n        return res;\n    }\n    _internal_autoscaleInfo(startTimePoint, endTimePoint) {\n        if (this._private__options.autoscaleInfoProvider !== undefined) {\n            const autoscaleInfo = this._private__options.autoscaleInfoProvider(() => {\n                const res = this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n                return (res === null) ? null : res._internal_toRaw();\n            });\n            return AutoscaleInfoImpl._internal_fromRaw(autoscaleInfo);\n        }\n        return this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n    }\n    _internal_minMove() {\n        return this._private__options.priceFormat.minMove;\n    }\n    _internal_formatter() {\n        return this._private__formatter;\n    }\n    _internal_updateAllViews() {\n        var _a;\n        this._private__paneView._internal_update();\n        this._private__markersPaneView._internal_update();\n        for (const priceAxisView of this._private__priceAxisViews) {\n            priceAxisView._internal_update();\n        }\n        for (const customPriceLine of this._private__customPriceLines) {\n            customPriceLine._internal_update();\n        }\n        this._private__priceLineView._internal_update();\n        this._private__baseHorizontalLineView._internal_update();\n        (_a = this._private__lastPriceAnimationPaneView) === null || _a === void 0 ? void 0 : _a._internal_update();\n        this._private__primitives.forEach((wrapper) => wrapper._internal_updateAllViews());\n    }\n    _internal_priceScale() {\n        return ensureNotNull(super._internal_priceScale());\n    }\n    _internal_markerDataAtIndex(index) {\n        const getValue = (this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline') &&\n            this._private__options.crosshairMarkerVisible;\n        if (!getValue) {\n            return null;\n        }\n        const bar = this._private__data._internal_valueAt(index);\n        if (bar === null) {\n            return null;\n        }\n        const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n        const radius = this._private__markerRadius();\n        const borderColor = this._private__markerBorderColor();\n        const borderWidth = this._private__markerBorderWidth();\n        const backgroundColor = this._private__markerBackgroundColor(index);\n        return { _internal_price: price, _internal_radius: radius, _internal_borderColor: borderColor, _internal_borderWidth: borderWidth, _internal_backgroundColor: backgroundColor };\n    }\n    _internal_title() {\n        return this._private__options.title;\n    }\n    _internal_visible() {\n        return this._private__options.visible;\n    }\n    _internal_attachPrimitive(primitive) {\n        this._private__primitives.push(new SeriesPrimitiveWrapper(primitive, this));\n    }\n    _internal_detachPrimitive(source) {\n        this._private__primitives = this._private__primitives.filter((wrapper) => wrapper._internal_primitive() !== source);\n    }\n    _internal_customSeriesPlotValuesBuilder() {\n        if (this._private__paneView instanceof SeriesCustomPaneView === false) {\n            return undefined;\n        }\n        return (data) => {\n            return this._private__paneView._internal_priceValueBuilder(data);\n        };\n    }\n    _internal_customSeriesWhitespaceCheck() {\n        if (this._private__paneView instanceof SeriesCustomPaneView === false) {\n            return undefined;\n        }\n        return (data) => {\n            return this._private__paneView._internal_isWhitespace(data);\n        };\n    }\n    _private__isOverlay() {\n        const priceScale = this._internal_priceScale();\n        return !isDefaultPriceScale(priceScale._internal_id());\n    }\n    _private__autoscaleInfoImpl(startTimePoint, endTimePoint) {\n        if (!isInteger(startTimePoint) || !isInteger(endTimePoint) || this._private__data._internal_isEmpty()) {\n            return null;\n        }\n        // TODO: refactor this\n        // series data is strongly hardcoded to keep bars\n        const plots = this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline' || this._private__seriesType === 'Histogram'\n            ? [3 /* PlotRowValueIndex.Close */]\n            : [2 /* PlotRowValueIndex.Low */, 1 /* PlotRowValueIndex.High */];\n        const barsMinMax = this._private__data._internal_minMaxOnRangeCached(startTimePoint, endTimePoint, plots);\n        let range = barsMinMax !== null ? new PriceRangeImpl(barsMinMax._internal_min, barsMinMax._internal_max) : null;\n        if (this._internal_seriesType() === 'Histogram') {\n            const base = this._private__options.base;\n            const rangeWithBase = new PriceRangeImpl(base, base);\n            range = range !== null ? range._internal_merge(rangeWithBase) : rangeWithBase;\n        }\n        let margins = this._private__markersPaneView._internal_autoScaleMargins();\n        this._private__primitives.forEach((primitive) => {\n            const primitiveAutoscale = primitive._internal_autoscaleInfo(startTimePoint, endTimePoint);\n            if (primitiveAutoscale === null || primitiveAutoscale === void 0 ? void 0 : primitiveAutoscale.priceRange) {\n                const primitiveRange = new PriceRangeImpl(primitiveAutoscale.priceRange.minValue, primitiveAutoscale.priceRange.maxValue);\n                range = range !== null ? range._internal_merge(primitiveRange) : primitiveRange;\n            }\n            if (primitiveAutoscale === null || primitiveAutoscale === void 0 ? void 0 : primitiveAutoscale.margins) {\n                margins = mergeMargins(margins, primitiveAutoscale.margins);\n            }\n        });\n        return new AutoscaleInfoImpl(range, margins);\n    }\n    _private__markerRadius() {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline':\n                return this._private__options.crosshairMarkerRadius;\n        }\n        return 0;\n    }\n    _private__markerBorderColor() {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline': {\n                const crosshairMarkerBorderColor = this._private__options.crosshairMarkerBorderColor;\n                if (crosshairMarkerBorderColor.length !== 0) {\n                    return crosshairMarkerBorderColor;\n                }\n            }\n        }\n        return null;\n    }\n    _private__markerBorderWidth() {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline':\n                return this._private__options.crosshairMarkerBorderWidth;\n        }\n        return 0;\n    }\n    _private__markerBackgroundColor(index) {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline': {\n                const crosshairMarkerBackgroundColor = this._private__options.crosshairMarkerBackgroundColor;\n                if (crosshairMarkerBackgroundColor.length !== 0) {\n                    return crosshairMarkerBackgroundColor;\n                }\n            }\n        }\n        return this._internal_barColorer()._internal_barStyle(index)._internal_barColor;\n    }\n    _private__recreateFormatter() {\n        switch (this._private__options.priceFormat.type) {\n            case 'custom': {\n                this._private__formatter = { format: this._private__options.priceFormat.formatter };\n                break;\n            }\n            case 'volume': {\n                this._private__formatter = new VolumeFormatter(this._private__options.priceFormat.precision);\n                break;\n            }\n            case 'percent': {\n                this._private__formatter = new PercentageFormatter(this._private__options.priceFormat.precision);\n                break;\n            }\n            default: {\n                const priceScale = Math.pow(10, this._private__options.priceFormat.precision);\n                this._private__formatter = new PriceFormatter(priceScale, this._private__options.priceFormat.minMove * priceScale);\n            }\n        }\n        if (this._internal__priceScale !== null) {\n            this._internal__priceScale._internal_updateFormatter();\n        }\n    }\n    _private__recalculateMarkers() {\n        const timeScale = this._internal_model()._internal_timeScale();\n        if (!timeScale._internal_hasPoints() || this._private__data._internal_isEmpty()) {\n            this._private__indexedMarkers = [];\n            return;\n        }\n        const firstDataIndex = ensureNotNull(this._private__data._internal_firstIndex());\n        this._private__indexedMarkers = this._private__markers.map((marker, index) => {\n            // the first find index on the time scale (across all series)\n            const timePointIndex = ensureNotNull(timeScale._internal_timeToIndex(marker.time, true));\n            // and then search that index inside the series data\n            const searchMode = timePointIndex < firstDataIndex ? 1 /* MismatchDirection.NearestRight */ : -1 /* MismatchDirection.NearestLeft */;\n            const seriesDataIndex = ensureNotNull(this._private__data._internal_search(timePointIndex, searchMode))._internal_index;\n            return {\n                time: seriesDataIndex,\n                position: marker.position,\n                shape: marker.shape,\n                color: marker.color,\n                id: marker.id,\n                _internal_internalId: index,\n                text: marker.text,\n                size: marker.size,\n                originalTime: marker.originalTime,\n            };\n        });\n    }\n    _private__recreatePaneViews(customPaneView) {\n        this._private__markersPaneView = new SeriesMarkersPaneView(this, this._internal_model());\n        switch (this._private__seriesType) {\n            case 'Bar': {\n                this._private__paneView = new SeriesBarsPaneView(this, this._internal_model());\n                break;\n            }\n            case 'Candlestick': {\n                this._private__paneView = new SeriesCandlesticksPaneView(this, this._internal_model());\n                break;\n            }\n            case 'Line': {\n                this._private__paneView = new SeriesLinePaneView(this, this._internal_model());\n                break;\n            }\n            case 'Custom': {\n                this._private__paneView = new SeriesCustomPaneView(this, this._internal_model(), ensureDefined(customPaneView));\n                break;\n            }\n            case 'Area': {\n                this._private__paneView = new SeriesAreaPaneView(this, this._internal_model());\n                break;\n            }\n            case 'Baseline': {\n                this._private__paneView = new SeriesBaselinePaneView(this, this._internal_model());\n                break;\n            }\n            case 'Histogram': {\n                this._private__paneView = new SeriesHistogramPaneView(this, this._internal_model());\n                break;\n            }\n            default: throw Error('Unknown chart style assigned: ' + this._private__seriesType);\n        }\n    }\n    _private__extractPaneViews(extractor, zOrder) {\n        const res = [];\n        extractPrimitivePaneViews(this._private__primitives, extractor, zOrder, res);\n        return res;\n    }\n}\nfunction mergeMargins(source, additionalMargin) {\n    var _a, _b;\n    return {\n        above: Math.max((_a = source === null || source === void 0 ? void 0 : source.above) !== null && _a !== void 0 ? _a : 0, additionalMargin.above),\n        below: Math.max((_b = source === null || source === void 0 ? void 0 : source.below) !== null && _b !== void 0 ? _b : 0, additionalMargin.below),\n    };\n}\n\nclass Magnet {\n    constructor(options) {\n        this._private__options = options;\n    }\n    _internal_align(price, index, pane) {\n        let res = price;\n        if (this._private__options.mode === 0 /* CrosshairMode.Normal */) {\n            return res;\n        }\n        const defaultPriceScale = pane._internal_defaultPriceScale();\n        const firstValue = defaultPriceScale._internal_firstValue();\n        if (firstValue === null) {\n            return res;\n        }\n        const y = defaultPriceScale._internal_priceToCoordinate(price, firstValue);\n        // get all serieses from the pane\n        const serieses = pane._internal_dataSources().filter(((ds) => (ds instanceof (Series))));\n        const candidates = serieses.reduce((acc, series) => {\n            if (pane._internal_isOverlay(series) || !series._internal_visible()) {\n                return acc;\n            }\n            const ps = series._internal_priceScale();\n            const bars = series._internal_bars();\n            if (ps._internal_isEmpty() || !bars._internal_contains(index)) {\n                return acc;\n            }\n            const bar = bars._internal_valueAt(index);\n            if (bar === null) {\n                return acc;\n            }\n            // convert bar to pixels\n            const firstPrice = ensure(series._internal_firstValue());\n            return acc.concat([ps._internal_priceToCoordinate(bar._internal_value[3 /* PlotRowValueIndex.Close */], firstPrice._internal_value)]);\n        }, []);\n        if (candidates.length === 0) {\n            return res;\n        }\n        candidates.sort((y1, y2) => Math.abs(y1 - y) - Math.abs(y2 - y));\n        const nearest = candidates[0];\n        res = defaultPriceScale._internal_coordinateToPrice(nearest, firstValue);\n        return res;\n    }\n}\n\nclass GridRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal__drawImpl({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null) {\n            return;\n        }\n        const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        ctx.lineWidth = lineWidth;\n        strokeInPixel(ctx, () => {\n            const data = ensureNotNull(this._private__data);\n            if (data._internal_vertLinesVisible) {\n                ctx.strokeStyle = data._internal_vertLinesColor;\n                setLineStyle(ctx, data._internal_vertLineStyle);\n                ctx.beginPath();\n                for (const timeMark of data._internal_timeMarks) {\n                    const x = Math.round(timeMark._internal_coord * horizontalPixelRatio);\n                    ctx.moveTo(x, -lineWidth);\n                    ctx.lineTo(x, bitmapSize.height + lineWidth);\n                }\n                ctx.stroke();\n            }\n            if (data._internal_horzLinesVisible) {\n                ctx.strokeStyle = data._internal_horzLinesColor;\n                setLineStyle(ctx, data._internal_horzLineStyle);\n                ctx.beginPath();\n                for (const priceMark of data._internal_priceMarks) {\n                    const y = Math.round(priceMark._internal_coord * verticalPixelRatio);\n                    ctx.moveTo(-lineWidth, y);\n                    ctx.lineTo(bitmapSize.width + lineWidth, y);\n                }\n                ctx.stroke();\n            }\n        });\n    }\n}\n\nclass GridPaneView {\n    constructor(pane) {\n        this._private__renderer = new GridRenderer();\n        this._private__invalidated = true;\n        this._private__pane = pane;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            const gridOptions = this._private__pane._internal_model()._internal_options().grid;\n            const data = {\n                _internal_horzLinesVisible: gridOptions.horzLines.visible,\n                _internal_vertLinesVisible: gridOptions.vertLines.visible,\n                _internal_horzLinesColor: gridOptions.horzLines.color,\n                _internal_vertLinesColor: gridOptions.vertLines.color,\n                _internal_horzLineStyle: gridOptions.horzLines.style,\n                _internal_vertLineStyle: gridOptions.vertLines.style,\n                _internal_priceMarks: this._private__pane._internal_defaultPriceScale()._internal_marks(),\n                // need this conversiom because TimeMark is a part of external interface\n                // and fields inside TimeMark are not minified\n                _internal_timeMarks: (this._private__pane._internal_model()._internal_timeScale()._internal_marks() || []).map((tm) => {\n                    return { _internal_coord: tm.coord };\n                }),\n            };\n            this._private__renderer._internal_setData(data);\n            this._private__invalidated = false;\n        }\n        return this._private__renderer;\n    }\n}\n\nclass Grid {\n    constructor(pane) {\n        this._private__paneView = new GridPaneView(pane);\n    }\n    _internal_paneView() {\n        return this._private__paneView;\n    }\n}\n\nconst defLogFormula = {\n    _internal_logicalOffset: 4,\n    _internal_coordOffset: 0.0001,\n};\nfunction fromPercent(value, baseValue) {\n    if (baseValue < 0) {\n        value = -value;\n    }\n    return (value / 100) * baseValue + baseValue;\n}\nfunction toPercent(value, baseValue) {\n    const result = 100 * (value - baseValue) / baseValue;\n    return (baseValue < 0 ? -result : result);\n}\nfunction toPercentRange(priceRange, baseValue) {\n    const minPercent = toPercent(priceRange._internal_minValue(), baseValue);\n    const maxPercent = toPercent(priceRange._internal_maxValue(), baseValue);\n    return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction fromIndexedTo100(value, baseValue) {\n    value -= 100;\n    if (baseValue < 0) {\n        value = -value;\n    }\n    return (value / 100) * baseValue + baseValue;\n}\nfunction toIndexedTo100(value, baseValue) {\n    const result = 100 * (value - baseValue) / baseValue + 100;\n    return (baseValue < 0 ? -result : result);\n}\nfunction toIndexedTo100Range(priceRange, baseValue) {\n    const minPercent = toIndexedTo100(priceRange._internal_minValue(), baseValue);\n    const maxPercent = toIndexedTo100(priceRange._internal_maxValue(), baseValue);\n    return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction toLog(price, logFormula) {\n    const m = Math.abs(price);\n    if (m < 1e-15) {\n        return 0;\n    }\n    const res = Math.log10(m + logFormula._internal_coordOffset) + logFormula._internal_logicalOffset;\n    return ((price < 0) ? -res : res);\n}\nfunction fromLog(logical, logFormula) {\n    const m = Math.abs(logical);\n    if (m < 1e-15) {\n        return 0;\n    }\n    const res = Math.pow(10, m - logFormula._internal_logicalOffset) - logFormula._internal_coordOffset;\n    return (logical < 0) ? -res : res;\n}\nfunction convertPriceRangeToLog(priceRange, logFormula) {\n    if (priceRange === null) {\n        return null;\n    }\n    const min = toLog(priceRange._internal_minValue(), logFormula);\n    const max = toLog(priceRange._internal_maxValue(), logFormula);\n    return new PriceRangeImpl(min, max);\n}\nfunction canConvertPriceRangeFromLog(priceRange, logFormula) {\n    if (priceRange === null) {\n        return false;\n    }\n    const min = fromLog(priceRange._internal_minValue(), logFormula);\n    const max = fromLog(priceRange._internal_maxValue(), logFormula);\n    return isFinite(min) && isFinite(max);\n}\nfunction convertPriceRangeFromLog(priceRange, logFormula) {\n    if (priceRange === null) {\n        return null;\n    }\n    const min = fromLog(priceRange._internal_minValue(), logFormula);\n    const max = fromLog(priceRange._internal_maxValue(), logFormula);\n    return new PriceRangeImpl(min, max);\n}\nfunction logFormulaForPriceRange(range) {\n    if (range === null) {\n        return defLogFormula;\n    }\n    const diff = Math.abs(range._internal_maxValue() - range._internal_minValue());\n    if (diff >= 1 || diff < 1e-15) {\n        return defLogFormula;\n    }\n    const digits = Math.ceil(Math.abs(Math.log10(diff)));\n    const logicalOffset = defLogFormula._internal_logicalOffset + digits;\n    const coordOffset = 1 / Math.pow(10, logicalOffset);\n    return {\n        _internal_logicalOffset: logicalOffset,\n        _internal_coordOffset: coordOffset,\n    };\n}\nfunction logFormulasAreSame(f1, f2) {\n    return f1._internal_logicalOffset === f2._internal_logicalOffset && f1._internal_coordOffset === f2._internal_coordOffset;\n}\n\nclass PriceTickSpanCalculator {\n    constructor(base, integralDividers) {\n        this._private__base = base;\n        this._private__integralDividers = integralDividers;\n        if (isBaseDecimal(this._private__base)) {\n            this._private__fractionalDividers = [2, 2.5, 2];\n        }\n        else {\n            this._private__fractionalDividers = [];\n            for (let baseRest = this._private__base; baseRest !== 1;) {\n                if ((baseRest % 2) === 0) {\n                    this._private__fractionalDividers.push(2);\n                    baseRest /= 2;\n                }\n                else if ((baseRest % 5) === 0) {\n                    this._private__fractionalDividers.push(2, 2.5);\n                    baseRest /= 5;\n                }\n                else {\n                    throw new Error('unexpected base');\n                }\n                if (this._private__fractionalDividers.length > 100) {\n                    throw new Error('something wrong with base');\n                }\n            }\n        }\n    }\n    _internal_tickSpan(high, low, maxTickSpan) {\n        const minMovement = (this._private__base === 0) ? (0) : (1 / this._private__base);\n        let resultTickSpan = Math.pow(10, Math.max(0, Math.ceil(Math.log10(high - low))));\n        let index = 0;\n        let c = this._private__integralDividers[0];\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            // the second part is actual for small with very small values like 1e-10\n            // greaterOrEqual fails for such values\n            const resultTickSpanLargerMinMovement = greaterOrEqual(resultTickSpan, minMovement, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > (minMovement + 1e-14 /* Constants.TickSpanEpsilon */);\n            const resultTickSpanLargerMaxTickSpan = greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */);\n            const resultTickSpanLarger1 = greaterOrEqual(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */);\n            const haveToContinue = resultTickSpanLargerMinMovement && resultTickSpanLargerMaxTickSpan && resultTickSpanLarger1;\n            if (!haveToContinue) {\n                break;\n            }\n            resultTickSpan /= c;\n            c = this._private__integralDividers[++index % this._private__integralDividers.length];\n        }\n        if (resultTickSpan <= (minMovement + 1e-14 /* Constants.TickSpanEpsilon */)) {\n            resultTickSpan = minMovement;\n        }\n        resultTickSpan = Math.max(1, resultTickSpan);\n        if ((this._private__fractionalDividers.length > 0) && equal(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */)) {\n            index = 0;\n            c = this._private__fractionalDividers[0];\n            while (greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > (minMovement + 1e-14 /* Constants.TickSpanEpsilon */)) {\n                resultTickSpan /= c;\n                c = this._private__fractionalDividers[++index % this._private__fractionalDividers.length];\n            }\n        }\n        return resultTickSpan;\n    }\n}\n\nconst TICK_DENSITY = 2.5;\nclass PriceTickMarkBuilder {\n    constructor(priceScale, base, coordinateToLogicalFunc, logicalToCoordinateFunc) {\n        this._private__marks = [];\n        this._private__priceScale = priceScale;\n        this._private__base = base;\n        this._private__coordinateToLogicalFunc = coordinateToLogicalFunc;\n        this._private__logicalToCoordinateFunc = logicalToCoordinateFunc;\n    }\n    _internal_tickSpan(high, low) {\n        if (high < low) {\n            throw new Error('high < low');\n        }\n        const scaleHeight = this._private__priceScale._internal_height();\n        const markHeight = this._private__tickMarkHeight();\n        const maxTickSpan = (high - low) * markHeight / scaleHeight;\n        const spanCalculator1 = new PriceTickSpanCalculator(this._private__base, [2, 2.5, 2]);\n        const spanCalculator2 = new PriceTickSpanCalculator(this._private__base, [2, 2, 2.5]);\n        const spanCalculator3 = new PriceTickSpanCalculator(this._private__base, [2.5, 2, 2]);\n        const spans = [];\n        spans.push(spanCalculator1._internal_tickSpan(high, low, maxTickSpan), spanCalculator2._internal_tickSpan(high, low, maxTickSpan), spanCalculator3._internal_tickSpan(high, low, maxTickSpan));\n        return min(spans);\n    }\n    _internal_rebuildTickMarks() {\n        const priceScale = this._private__priceScale;\n        const firstValue = priceScale._internal_firstValue();\n        if (firstValue === null) {\n            this._private__marks = [];\n            return;\n        }\n        const scaleHeight = priceScale._internal_height();\n        const bottom = this._private__coordinateToLogicalFunc(scaleHeight - 1, firstValue);\n        const top = this._private__coordinateToLogicalFunc(0, firstValue);\n        const extraTopBottomMargin = this._private__priceScale._internal_options().entireTextOnly ? this._private__fontHeight() / 2 : 0;\n        const minCoord = extraTopBottomMargin;\n        const maxCoord = scaleHeight - 1 - extraTopBottomMargin;\n        const high = Math.max(bottom, top);\n        const low = Math.min(bottom, top);\n        if (high === low) {\n            this._private__marks = [];\n            return;\n        }\n        let span = this._internal_tickSpan(high, low);\n        let mod = high % span;\n        mod += mod < 0 ? span : 0;\n        const sign = (high >= low) ? 1 : -1;\n        let prevCoord = null;\n        let targetIndex = 0;\n        for (let logical = high - mod; logical > low; logical -= span) {\n            const coord = this._private__logicalToCoordinateFunc(logical, firstValue, true);\n            // check if there is place for it\n            // this is required for log scale\n            if (prevCoord !== null && Math.abs(coord - prevCoord) < this._private__tickMarkHeight()) {\n                continue;\n            }\n            // check if a tick mark is partially visible and skip it if entireTextOnly is true\n            if (coord < minCoord || coord > maxCoord) {\n                continue;\n            }\n            if (targetIndex < this._private__marks.length) {\n                this._private__marks[targetIndex]._internal_coord = coord;\n                this._private__marks[targetIndex]._internal_label = priceScale._internal_formatLogical(logical);\n            }\n            else {\n                this._private__marks.push({\n                    _internal_coord: coord,\n                    _internal_label: priceScale._internal_formatLogical(logical),\n                });\n            }\n            targetIndex++;\n            prevCoord = coord;\n            if (priceScale._internal_isLog()) {\n                // recalc span\n                span = this._internal_tickSpan(logical * sign, low);\n            }\n        }\n        this._private__marks.length = targetIndex;\n    }\n    _internal_marks() {\n        return this._private__marks;\n    }\n    _private__fontHeight() {\n        return this._private__priceScale._internal_fontSize();\n    }\n    _private__tickMarkHeight() {\n        return Math.ceil(this._private__fontHeight() * TICK_DENSITY);\n    }\n}\n\nfunction sortSources(sources) {\n    return sources.slice().sort((s1, s2) => {\n        return (ensureNotNull(s1._internal_zorder()) - ensureNotNull(s2._internal_zorder()));\n    });\n}\n\n/**\n * Represents the price scale mode.\n */\nvar PriceScaleMode;\n(function (PriceScaleMode) {\n    /**\n     * Price scale shows prices. Price range changes linearly.\n     */\n    PriceScaleMode[PriceScaleMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Price scale shows prices. Price range changes logarithmically.\n     */\n    PriceScaleMode[PriceScaleMode[\"Logarithmic\"] = 1] = \"Logarithmic\";\n    /**\n     * Price scale shows percentage values according the first visible value of the price scale.\n     * The first visible value is 0% in this mode.\n     */\n    PriceScaleMode[PriceScaleMode[\"Percentage\"] = 2] = \"Percentage\";\n    /**\n     * The same as percentage mode, but the first value is moved to 100.\n     */\n    PriceScaleMode[PriceScaleMode[\"IndexedTo100\"] = 3] = \"IndexedTo100\";\n})(PriceScaleMode || (PriceScaleMode = {}));\nconst percentageFormatter = new PercentageFormatter();\nconst defaultPriceFormatter = new PriceFormatter(100, 1);\nclass PriceScale {\n    constructor(id, options, layoutOptions, localizationOptions) {\n        this._private__height = 0;\n        this._private__internalHeightCache = null;\n        this._private__priceRange = null;\n        this._private__priceRangeSnapshot = null;\n        this._private__invalidatedForRange = { _internal_isValid: false, _internal_visibleBars: null };\n        this._private__marginAbove = 0;\n        this._private__marginBelow = 0;\n        this._private__onMarksChanged = new Delegate();\n        this._private__modeChanged = new Delegate();\n        this._private__dataSources = [];\n        this._private__cachedOrderedSources = null;\n        this._private__marksCache = null;\n        this._private__scaleStartPoint = null;\n        this._private__scrollStartPoint = null;\n        this._private__formatter = defaultPriceFormatter;\n        this._private__logFormula = logFormulaForPriceRange(null);\n        this._private__id = id;\n        this._private__options = options;\n        this._private__layoutOptions = layoutOptions;\n        this._private__localizationOptions = localizationOptions;\n        this._private__markBuilder = new PriceTickMarkBuilder(this, 100, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n    }\n    _internal_id() {\n        return this._private__id;\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyOptions(options) {\n        merge(this._private__options, options);\n        this._internal_updateFormatter();\n        if (options.mode !== undefined) {\n            this._internal_setMode({ _internal_mode: options.mode });\n        }\n        if (options.scaleMargins !== undefined) {\n            const top = ensureDefined(options.scaleMargins.top);\n            const bottom = ensureDefined(options.scaleMargins.bottom);\n            if (top < 0 || top > 1) {\n                throw new Error(`Invalid top margin - expect value between 0 and 1, given=${top}`);\n            }\n            if (bottom < 0 || bottom > 1) {\n                throw new Error(`Invalid bottom margin - expect value between 0 and 1, given=${bottom}`);\n            }\n            if (top + bottom > 1) {\n                throw new Error(`Invalid margins - sum of margins must be less than 1, given=${top + bottom}`);\n            }\n            this._private__invalidateInternalHeightCache();\n            this._private__marksCache = null;\n        }\n    }\n    _internal_isAutoScale() {\n        return this._private__options.autoScale;\n    }\n    _internal_isLog() {\n        return this._private__options.mode === 1 /* PriceScaleMode.Logarithmic */;\n    }\n    _internal_isPercentage() {\n        return this._private__options.mode === 2 /* PriceScaleMode.Percentage */;\n    }\n    _internal_isIndexedTo100() {\n        return this._private__options.mode === 3 /* PriceScaleMode.IndexedTo100 */;\n    }\n    _internal_mode() {\n        return {\n            _internal_autoScale: this._private__options.autoScale,\n            _internal_isInverted: this._private__options.invertScale,\n            _internal_mode: this._private__options.mode,\n        };\n    }\n    // eslint-disable-next-line complexity\n    _internal_setMode(newMode) {\n        const oldMode = this._internal_mode();\n        let priceRange = null;\n        if (newMode._internal_autoScale !== undefined) {\n            this._private__options.autoScale = newMode._internal_autoScale;\n        }\n        if (newMode._internal_mode !== undefined) {\n            this._private__options.mode = newMode._internal_mode;\n            if (newMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || newMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */) {\n                this._private__options.autoScale = true;\n            }\n            // TODO: Remove after making rebuildTickMarks lazy\n            this._private__invalidatedForRange._internal_isValid = false;\n        }\n        // define which scale converted from\n        if (oldMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n            if (canConvertPriceRangeFromLog(this._private__priceRange, this._private__logFormula)) {\n                priceRange = convertPriceRangeFromLog(this._private__priceRange, this._private__logFormula);\n                if (priceRange !== null) {\n                    this._internal_setPriceRange(priceRange);\n                }\n            }\n            else {\n                this._private__options.autoScale = true;\n            }\n        }\n        // define which scale converted to\n        if (newMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n            priceRange = convertPriceRangeToLog(this._private__priceRange, this._private__logFormula);\n            if (priceRange !== null) {\n                this._internal_setPriceRange(priceRange);\n            }\n        }\n        const modeChanged = oldMode._internal_mode !== this._private__options.mode;\n        if (modeChanged && (oldMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || this._internal_isPercentage())) {\n            this._internal_updateFormatter();\n        }\n        if (modeChanged && (oldMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */ || this._internal_isIndexedTo100())) {\n            this._internal_updateFormatter();\n        }\n        if (newMode._internal_isInverted !== undefined && oldMode._internal_isInverted !== newMode._internal_isInverted) {\n            this._private__options.invertScale = newMode._internal_isInverted;\n            this._private__onIsInvertedChanged();\n        }\n        this._private__modeChanged._internal_fire(oldMode, this._internal_mode());\n    }\n    _internal_modeChanged() {\n        return this._private__modeChanged;\n    }\n    _internal_fontSize() {\n        return this._private__layoutOptions.fontSize;\n    }\n    _internal_height() {\n        return this._private__height;\n    }\n    _internal_setHeight(value) {\n        if (this._private__height === value) {\n            return;\n        }\n        this._private__height = value;\n        this._private__invalidateInternalHeightCache();\n        this._private__marksCache = null;\n    }\n    _internal_internalHeight() {\n        if (this._private__internalHeightCache) {\n            return this._private__internalHeightCache;\n        }\n        const res = this._internal_height() - this._private__topMarginPx() - this._private__bottomMarginPx();\n        this._private__internalHeightCache = res;\n        return res;\n    }\n    _internal_priceRange() {\n        this._private__makeSureItIsValid();\n        return this._private__priceRange;\n    }\n    _internal_setPriceRange(newPriceRange, isForceSetValue) {\n        const oldPriceRange = this._private__priceRange;\n        if (!isForceSetValue &&\n            !(oldPriceRange === null && newPriceRange !== null) &&\n            (oldPriceRange === null || oldPriceRange._internal_equals(newPriceRange))) {\n            return;\n        }\n        this._private__marksCache = null;\n        this._private__priceRange = newPriceRange;\n    }\n    _internal_isEmpty() {\n        this._private__makeSureItIsValid();\n        return this._private__height === 0 || !this._private__priceRange || this._private__priceRange._internal_isEmpty();\n    }\n    _internal_invertedCoordinate(coordinate) {\n        return this._internal_isInverted() ? coordinate : this._internal_height() - 1 - coordinate;\n    }\n    _internal_priceToCoordinate(price, baseValue) {\n        if (this._internal_isPercentage()) {\n            price = toPercent(price, baseValue);\n        }\n        else if (this._internal_isIndexedTo100()) {\n            price = toIndexedTo100(price, baseValue);\n        }\n        return this._private__logicalToCoordinate(price, baseValue);\n    }\n    _internal_pointsArrayToCoordinates(points, baseValue, visibleRange) {\n        this._private__makeSureItIsValid();\n        const bh = this._private__bottomMarginPx();\n        const range = ensureNotNull(this._internal_priceRange());\n        const min = range._internal_minValue();\n        const max = range._internal_maxValue();\n        const ih = (this._internal_internalHeight() - 1);\n        const isInverted = this._internal_isInverted();\n        const hmm = ih / (max - min);\n        const fromIndex = (visibleRange === undefined) ? 0 : visibleRange.from;\n        const toIndex = (visibleRange === undefined) ? points.length : visibleRange.to;\n        const transformFn = this._private__getCoordinateTransformer();\n        for (let i = fromIndex; i < toIndex; i++) {\n            const point = points[i];\n            const price = point._internal_price;\n            if (isNaN(price)) {\n                continue;\n            }\n            let logical = price;\n            if (transformFn !== null) {\n                logical = transformFn(point._internal_price, baseValue);\n            }\n            const invCoordinate = bh + hmm * (logical - min);\n            const coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            point._internal_y = coordinate;\n        }\n    }\n    _internal_barPricesToCoordinates(pricesList, baseValue, visibleRange) {\n        this._private__makeSureItIsValid();\n        const bh = this._private__bottomMarginPx();\n        const range = ensureNotNull(this._internal_priceRange());\n        const min = range._internal_minValue();\n        const max = range._internal_maxValue();\n        const ih = (this._internal_internalHeight() - 1);\n        const isInverted = this._internal_isInverted();\n        const hmm = ih / (max - min);\n        const fromIndex = (visibleRange === undefined) ? 0 : visibleRange.from;\n        const toIndex = (visibleRange === undefined) ? pricesList.length : visibleRange.to;\n        const transformFn = this._private__getCoordinateTransformer();\n        for (let i = fromIndex; i < toIndex; i++) {\n            const bar = pricesList[i];\n            let openLogical = bar._internal_open;\n            let highLogical = bar._internal_high;\n            let lowLogical = bar._internal_low;\n            let closeLogical = bar._internal_close;\n            if (transformFn !== null) {\n                openLogical = transformFn(bar._internal_open, baseValue);\n                highLogical = transformFn(bar._internal_high, baseValue);\n                lowLogical = transformFn(bar._internal_low, baseValue);\n                closeLogical = transformFn(bar._internal_close, baseValue);\n            }\n            let invCoordinate = bh + hmm * (openLogical - min);\n            let coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_openY = coordinate;\n            invCoordinate = bh + hmm * (highLogical - min);\n            coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_highY = coordinate;\n            invCoordinate = bh + hmm * (lowLogical - min);\n            coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_lowY = coordinate;\n            invCoordinate = bh + hmm * (closeLogical - min);\n            coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_closeY = coordinate;\n        }\n    }\n    _internal_coordinateToPrice(coordinate, baseValue) {\n        const logical = this._private__coordinateToLogical(coordinate, baseValue);\n        return this._internal_logicalToPrice(logical, baseValue);\n    }\n    _internal_logicalToPrice(logical, baseValue) {\n        let value = logical;\n        if (this._internal_isPercentage()) {\n            value = fromPercent(value, baseValue);\n        }\n        else if (this._internal_isIndexedTo100()) {\n            value = fromIndexedTo100(value, baseValue);\n        }\n        return value;\n    }\n    _internal_dataSources() {\n        return this._private__dataSources;\n    }\n    _internal_orderedSources() {\n        if (this._private__cachedOrderedSources) {\n            return this._private__cachedOrderedSources;\n        }\n        let sources = [];\n        for (let i = 0; i < this._private__dataSources.length; i++) {\n            const ds = this._private__dataSources[i];\n            if (ds._internal_zorder() === null) {\n                ds._internal_setZorder(i + 1);\n            }\n            sources.push(ds);\n        }\n        sources = sortSources(sources);\n        this._private__cachedOrderedSources = sources;\n        return this._private__cachedOrderedSources;\n    }\n    _internal_addDataSource(source) {\n        if (this._private__dataSources.indexOf(source) !== -1) {\n            return;\n        }\n        this._private__dataSources.push(source);\n        this._internal_updateFormatter();\n        this._internal_invalidateSourcesCache();\n    }\n    _internal_removeDataSource(source) {\n        const index = this._private__dataSources.indexOf(source);\n        if (index === -1) {\n            throw new Error('source is not attached to scale');\n        }\n        this._private__dataSources.splice(index, 1);\n        if (this._private__dataSources.length === 0) {\n            this._internal_setMode({\n                _internal_autoScale: true,\n            });\n            // if no sources on price scale let's clear price range cache as well as enabling auto scale\n            this._internal_setPriceRange(null);\n        }\n        this._internal_updateFormatter();\n        this._internal_invalidateSourcesCache();\n    }\n    _internal_firstValue() {\n        // TODO: cache the result\n        let result = null;\n        for (const source of this._private__dataSources) {\n            const firstValue = source._internal_firstValue();\n            if (firstValue === null) {\n                continue;\n            }\n            if (result === null || firstValue._internal_timePoint < result._internal_timePoint) {\n                result = firstValue;\n            }\n        }\n        return result === null ? null : result._internal_value;\n    }\n    _internal_isInverted() {\n        return this._private__options.invertScale;\n    }\n    _internal_marks() {\n        const firstValueIsNull = this._internal_firstValue() === null;\n        // do not recalculate marks if firstValueIsNull is true because in this case we'll always get empty result\n        // this could happen in case when a series had some data and then you set empty data to it (in a simplified case)\n        // we could display an empty price scale, but this is not good from UX\n        // so in this case we need to keep an previous marks to display them on the scale\n        // as one of possible examples for this situation could be the following:\n        // let's say you have a study/indicator attached to a price scale and then you decide to stop it, i.e. remove its data because of its visibility\n        // a user will see the previous marks on the scale until you turn on your study back or remove it from the chart completely\n        if (this._private__marksCache !== null && (firstValueIsNull || this._private__marksCache._internal_firstValueIsNull === firstValueIsNull)) {\n            return this._private__marksCache._internal_marks;\n        }\n        this._private__markBuilder._internal_rebuildTickMarks();\n        const marks = this._private__markBuilder._internal_marks();\n        this._private__marksCache = { _internal_marks: marks, _internal_firstValueIsNull: firstValueIsNull };\n        this._private__onMarksChanged._internal_fire();\n        return marks;\n    }\n    _internal_onMarksChanged() {\n        return this._private__onMarksChanged;\n    }\n    _internal_startScale(x) {\n        if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n            return;\n        }\n        if (this._private__scaleStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        // invert x\n        this._private__scaleStartPoint = this._private__height - x;\n        this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n    }\n    _internal_scaleTo(x) {\n        if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n            return;\n        }\n        if (this._private__scaleStartPoint === null) {\n            return;\n        }\n        this._internal_setMode({\n            _internal_autoScale: false,\n        });\n        // invert x\n        x = this._private__height - x;\n        if (x < 0) {\n            x = 0;\n        }\n        let scaleCoeff = (this._private__scaleStartPoint + (this._private__height - 1) * 0.2) / (x + (this._private__height - 1) * 0.2);\n        const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n        scaleCoeff = Math.max(scaleCoeff, 0.1);\n        newPriceRange._internal_scaleAroundCenter(scaleCoeff);\n        this._internal_setPriceRange(newPriceRange);\n    }\n    _internal_endScale() {\n        if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n            return;\n        }\n        this._private__scaleStartPoint = null;\n        this._private__priceRangeSnapshot = null;\n    }\n    _internal_startScroll(x) {\n        if (this._internal_isAutoScale()) {\n            return;\n        }\n        if (this._private__scrollStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        this._private__scrollStartPoint = x;\n        this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n    }\n    _internal_scrollTo(x) {\n        if (this._internal_isAutoScale()) {\n            return;\n        }\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        const priceUnitsPerPixel = ensureNotNull(this._internal_priceRange())._internal_length() / (this._internal_internalHeight() - 1);\n        let pixelDelta = x - this._private__scrollStartPoint;\n        if (this._internal_isInverted()) {\n            pixelDelta *= -1;\n        }\n        const priceDelta = pixelDelta * priceUnitsPerPixel;\n        const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n        newPriceRange._internal_shift(priceDelta);\n        this._internal_setPriceRange(newPriceRange, true);\n        this._private__marksCache = null;\n    }\n    _internal_endScroll() {\n        if (this._internal_isAutoScale()) {\n            return;\n        }\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        this._private__scrollStartPoint = null;\n        this._private__priceRangeSnapshot = null;\n    }\n    _internal_formatter() {\n        if (!this._private__formatter) {\n            this._internal_updateFormatter();\n        }\n        return this._private__formatter;\n    }\n    _internal_formatPrice(price, firstValue) {\n        switch (this._private__options.mode) {\n            case 2 /* PriceScaleMode.Percentage */:\n                return this._private__formatPercentage(toPercent(price, firstValue));\n            case 3 /* PriceScaleMode.IndexedTo100 */:\n                return this._internal_formatter().format(toIndexedTo100(price, firstValue));\n            default:\n                return this._private__formatPrice(price);\n        }\n    }\n    _internal_formatLogical(logical) {\n        switch (this._private__options.mode) {\n            case 2 /* PriceScaleMode.Percentage */:\n                return this._private__formatPercentage(logical);\n            case 3 /* PriceScaleMode.IndexedTo100 */:\n                return this._internal_formatter().format(logical);\n            default:\n                return this._private__formatPrice(logical);\n        }\n    }\n    _internal_formatPriceAbsolute(price) {\n        return this._private__formatPrice(price, ensureNotNull(this._private__formatterSource())._internal_formatter());\n    }\n    _internal_formatPricePercentage(price, baseValue) {\n        price = toPercent(price, baseValue);\n        return this._private__formatPercentage(price, percentageFormatter);\n    }\n    _internal_sourcesForAutoScale() {\n        return this._private__dataSources;\n    }\n    _internal_recalculatePriceRange(visibleBars) {\n        this._private__invalidatedForRange = {\n            _internal_visibleBars: visibleBars,\n            _internal_isValid: false,\n        };\n    }\n    _internal_updateAllViews() {\n        this._private__dataSources.forEach((s) => s._internal_updateAllViews());\n    }\n    _internal_updateFormatter() {\n        this._private__marksCache = null;\n        const formatterSource = this._private__formatterSource();\n        let base = 100;\n        if (formatterSource !== null) {\n            base = Math.round(1 / formatterSource._internal_minMove());\n        }\n        this._private__formatter = defaultPriceFormatter;\n        if (this._internal_isPercentage()) {\n            this._private__formatter = percentageFormatter;\n            base = 100;\n        }\n        else if (this._internal_isIndexedTo100()) {\n            this._private__formatter = new PriceFormatter(100, 1);\n            base = 100;\n        }\n        else {\n            if (formatterSource !== null) {\n                // user\n                this._private__formatter = formatterSource._internal_formatter();\n            }\n        }\n        this._private__markBuilder = new PriceTickMarkBuilder(this, base, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n        this._private__markBuilder._internal_rebuildTickMarks();\n    }\n    _internal_invalidateSourcesCache() {\n        this._private__cachedOrderedSources = null;\n    }\n    /**\n     * @returns The {@link IPriceDataSource} that will be used as the \"formatter source\" (take minMove for formatter).\n     */\n    _private__formatterSource() {\n        return this._private__dataSources[0] || null;\n    }\n    _private__topMarginPx() {\n        return this._internal_isInverted()\n            ? this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow\n            : this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove;\n    }\n    _private__bottomMarginPx() {\n        return this._internal_isInverted()\n            ? this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove\n            : this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow;\n    }\n    _private__makeSureItIsValid() {\n        if (!this._private__invalidatedForRange._internal_isValid) {\n            this._private__invalidatedForRange._internal_isValid = true;\n            this._private__recalculatePriceRangeImpl();\n        }\n    }\n    _private__invalidateInternalHeightCache() {\n        this._private__internalHeightCache = null;\n    }\n    _private__logicalToCoordinate(logical, baseValue) {\n        this._private__makeSureItIsValid();\n        if (this._internal_isEmpty()) {\n            return 0;\n        }\n        logical = this._internal_isLog() && logical ? toLog(logical, this._private__logFormula) : logical;\n        const range = ensureNotNull(this._internal_priceRange());\n        const invCoordinate = this._private__bottomMarginPx() +\n            (this._internal_internalHeight() - 1) * (logical - range._internal_minValue()) / range._internal_length();\n        const coordinate = this._internal_invertedCoordinate(invCoordinate);\n        return coordinate;\n    }\n    _private__coordinateToLogical(coordinate, baseValue) {\n        this._private__makeSureItIsValid();\n        if (this._internal_isEmpty()) {\n            return 0;\n        }\n        const invCoordinate = this._internal_invertedCoordinate(coordinate);\n        const range = ensureNotNull(this._internal_priceRange());\n        const logical = range._internal_minValue() + range._internal_length() *\n            ((invCoordinate - this._private__bottomMarginPx()) / (this._internal_internalHeight() - 1));\n        return this._internal_isLog() ? fromLog(logical, this._private__logFormula) : logical;\n    }\n    _private__onIsInvertedChanged() {\n        this._private__marksCache = null;\n        this._private__markBuilder._internal_rebuildTickMarks();\n    }\n    // eslint-disable-next-line complexity\n    _private__recalculatePriceRangeImpl() {\n        const visibleBars = this._private__invalidatedForRange._internal_visibleBars;\n        if (visibleBars === null) {\n            return;\n        }\n        let priceRange = null;\n        const sources = this._internal_sourcesForAutoScale();\n        let marginAbove = 0;\n        let marginBelow = 0;\n        for (const source of sources) {\n            if (!source._internal_visible()) {\n                continue;\n            }\n            const firstValue = source._internal_firstValue();\n            if (firstValue === null) {\n                continue;\n            }\n            const autoScaleInfo = source._internal_autoscaleInfo(visibleBars._internal_left(), visibleBars._internal_right());\n            let sourceRange = autoScaleInfo && autoScaleInfo._internal_priceRange();\n            if (sourceRange !== null) {\n                switch (this._private__options.mode) {\n                    case 1 /* PriceScaleMode.Logarithmic */:\n                        sourceRange = convertPriceRangeToLog(sourceRange, this._private__logFormula);\n                        break;\n                    case 2 /* PriceScaleMode.Percentage */:\n                        sourceRange = toPercentRange(sourceRange, firstValue._internal_value);\n                        break;\n                    case 3 /* PriceScaleMode.IndexedTo100 */:\n                        sourceRange = toIndexedTo100Range(sourceRange, firstValue._internal_value);\n                        break;\n                }\n                if (priceRange === null) {\n                    priceRange = sourceRange;\n                }\n                else {\n                    priceRange = priceRange._internal_merge(ensureNotNull(sourceRange));\n                }\n                if (autoScaleInfo !== null) {\n                    const margins = autoScaleInfo._internal_margins();\n                    if (margins !== null) {\n                        marginAbove = Math.max(marginAbove, margins.above);\n                        marginBelow = Math.max(marginBelow, margins.below);\n                    }\n                }\n            }\n        }\n        if (marginAbove !== this._private__marginAbove || marginBelow !== this._private__marginBelow) {\n            this._private__marginAbove = marginAbove;\n            this._private__marginBelow = marginBelow;\n            this._private__marksCache = null;\n            this._private__invalidateInternalHeightCache();\n        }\n        if (priceRange !== null) {\n            // keep current range is new is empty\n            if (priceRange._internal_minValue() === priceRange._internal_maxValue()) {\n                const formatterSource = this._private__formatterSource();\n                const minMove = formatterSource === null || this._internal_isPercentage() || this._internal_isIndexedTo100() ? 1 : formatterSource._internal_minMove();\n                // if price range is degenerated to 1 point let's extend it by 10 min move values\n                // to avoid incorrect range and empty (blank) scale (in case of min tick much greater than 1)\n                const extendValue = 5 * minMove;\n                if (this._internal_isLog()) {\n                    priceRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n                }\n                priceRange = new PriceRangeImpl(priceRange._internal_minValue() - extendValue, priceRange._internal_maxValue() + extendValue);\n                if (this._internal_isLog()) {\n                    priceRange = convertPriceRangeToLog(priceRange, this._private__logFormula);\n                }\n            }\n            if (this._internal_isLog()) {\n                const rawRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n                const newLogFormula = logFormulaForPriceRange(rawRange);\n                if (!logFormulasAreSame(newLogFormula, this._private__logFormula)) {\n                    const rawSnapshot = this._private__priceRangeSnapshot !== null ? convertPriceRangeFromLog(this._private__priceRangeSnapshot, this._private__logFormula) : null;\n                    this._private__logFormula = newLogFormula;\n                    priceRange = convertPriceRangeToLog(rawRange, newLogFormula);\n                    if (rawSnapshot !== null) {\n                        this._private__priceRangeSnapshot = convertPriceRangeToLog(rawSnapshot, newLogFormula);\n                    }\n                }\n            }\n            this._internal_setPriceRange(priceRange);\n        }\n        else {\n            // reset empty to default\n            if (this._private__priceRange === null) {\n                this._internal_setPriceRange(new PriceRangeImpl(-0.5, 0.5));\n                this._private__logFormula = logFormulaForPriceRange(null);\n            }\n        }\n        this._private__invalidatedForRange._internal_isValid = true;\n    }\n    _private__getCoordinateTransformer() {\n        if (this._internal_isPercentage()) {\n            return toPercent;\n        }\n        else if (this._internal_isIndexedTo100()) {\n            return toIndexedTo100;\n        }\n        else if (this._internal_isLog()) {\n            return (price) => toLog(price, this._private__logFormula);\n        }\n        return null;\n    }\n    _private__formatValue(value, formatter, fallbackFormatter) {\n        if (formatter === undefined) {\n            if (fallbackFormatter === undefined) {\n                fallbackFormatter = this._internal_formatter();\n            }\n            return fallbackFormatter.format(value);\n        }\n        return formatter(value);\n    }\n    _private__formatPrice(price, fallbackFormatter) {\n        return this._private__formatValue(price, this._private__localizationOptions.priceFormatter, fallbackFormatter);\n    }\n    _private__formatPercentage(percentage, fallbackFormatter) {\n        return this._private__formatValue(percentage, this._private__localizationOptions.percentageFormatter, fallbackFormatter);\n    }\n}\n\nconst DEFAULT_STRETCH_FACTOR = 1000;\nclass Pane {\n    constructor(timeScale, model) {\n        this._private__dataSources = [];\n        this._private__overlaySourcesByScaleId = new Map();\n        this._private__height = 0;\n        this._private__width = 0;\n        this._private__stretchFactor = DEFAULT_STRETCH_FACTOR;\n        this._private__cachedOrderedSources = null;\n        this._private__destroyed = new Delegate();\n        this._private__timeScale = timeScale;\n        this._private__model = model;\n        this._private__grid = new Grid(this);\n        const options = model._internal_options();\n        this._private__leftPriceScale = this._private__createPriceScale(\"left\" /* DefaultPriceScaleId.Left */, options.leftPriceScale);\n        this._private__rightPriceScale = this._private__createPriceScale(\"right\" /* DefaultPriceScaleId.Right */, options.rightPriceScale);\n        this._private__leftPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__leftPriceScale), this);\n        this._private__rightPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__rightPriceScale), this);\n        this._internal_applyScaleOptions(options);\n    }\n    _internal_applyScaleOptions(options) {\n        if (options.leftPriceScale) {\n            this._private__leftPriceScale._internal_applyOptions(options.leftPriceScale);\n        }\n        if (options.rightPriceScale) {\n            this._private__rightPriceScale._internal_applyOptions(options.rightPriceScale);\n        }\n        if (options.localization) {\n            this._private__leftPriceScale._internal_updateFormatter();\n            this._private__rightPriceScale._internal_updateFormatter();\n        }\n        if (options.overlayPriceScales) {\n            const sourceArrays = Array.from(this._private__overlaySourcesByScaleId.values());\n            for (const arr of sourceArrays) {\n                const priceScale = ensureNotNull(arr[0]._internal_priceScale());\n                priceScale._internal_applyOptions(options.overlayPriceScales);\n                if (options.localization) {\n                    priceScale._internal_updateFormatter();\n                }\n            }\n        }\n    }\n    _internal_priceScaleById(id) {\n        switch (id) {\n            case \"left\" /* DefaultPriceScaleId.Left */: {\n                return this._private__leftPriceScale;\n            }\n            case \"right\" /* DefaultPriceScaleId.Right */: {\n                return this._private__rightPriceScale;\n            }\n        }\n        if (this._private__overlaySourcesByScaleId.has(id)) {\n            return ensureDefined(this._private__overlaySourcesByScaleId.get(id))[0]._internal_priceScale();\n        }\n        return null;\n    }\n    _internal_destroy() {\n        this._internal_model()._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n        this._private__leftPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n        this._private__rightPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n        this._private__dataSources.forEach((source) => {\n            if (source._internal_destroy) {\n                source._internal_destroy();\n            }\n        });\n        this._private__destroyed._internal_fire();\n    }\n    _internal_stretchFactor() {\n        return this._private__stretchFactor;\n    }\n    _internal_setStretchFactor(factor) {\n        this._private__stretchFactor = factor;\n    }\n    _internal_model() {\n        return this._private__model;\n    }\n    _internal_width() {\n        return this._private__width;\n    }\n    _internal_height() {\n        return this._private__height;\n    }\n    _internal_setWidth(width) {\n        this._private__width = width;\n        this._internal_updateAllSources();\n    }\n    _internal_setHeight(height) {\n        this._private__height = height;\n        this._private__leftPriceScale._internal_setHeight(height);\n        this._private__rightPriceScale._internal_setHeight(height);\n        // process overlays\n        this._private__dataSources.forEach((ds) => {\n            if (this._internal_isOverlay(ds)) {\n                const priceScale = ds._internal_priceScale();\n                if (priceScale !== null) {\n                    priceScale._internal_setHeight(height);\n                }\n            }\n        });\n        this._internal_updateAllSources();\n    }\n    _internal_dataSources() {\n        return this._private__dataSources;\n    }\n    _internal_isOverlay(source) {\n        const priceScale = source._internal_priceScale();\n        if (priceScale === null) {\n            return true;\n        }\n        return this._private__leftPriceScale !== priceScale && this._private__rightPriceScale !== priceScale;\n    }\n    _internal_addDataSource(source, targetScaleId, zOrder) {\n        const targetZOrder = (zOrder !== undefined) ? zOrder : this._private__getZOrderMinMax()._internal_maxZOrder + 1;\n        this._private__insertDataSource(source, targetScaleId, targetZOrder);\n    }\n    _internal_removeDataSource(source) {\n        const index = this._private__dataSources.indexOf(source);\n        assert(index !== -1, 'removeDataSource: invalid data source');\n        this._private__dataSources.splice(index, 1);\n        const priceScaleId = ensureNotNull(source._internal_priceScale())._internal_id();\n        if (this._private__overlaySourcesByScaleId.has(priceScaleId)) {\n            const overlaySources = ensureDefined(this._private__overlaySourcesByScaleId.get(priceScaleId));\n            const overlayIndex = overlaySources.indexOf(source);\n            if (overlayIndex !== -1) {\n                overlaySources.splice(overlayIndex, 1);\n                if (overlaySources.length === 0) {\n                    this._private__overlaySourcesByScaleId.delete(priceScaleId);\n                }\n            }\n        }\n        const priceScale = source._internal_priceScale();\n        // if source has owner, it returns owner's price scale\n        // and it does not have source in their list\n        if (priceScale && priceScale._internal_dataSources().indexOf(source) >= 0) {\n            priceScale._internal_removeDataSource(source);\n        }\n        if (priceScale !== null) {\n            priceScale._internal_invalidateSourcesCache();\n            this._internal_recalculatePriceScale(priceScale);\n        }\n        this._private__cachedOrderedSources = null;\n    }\n    _internal_priceScalePosition(priceScale) {\n        if (priceScale === this._private__leftPriceScale) {\n            return 'left';\n        }\n        if (priceScale === this._private__rightPriceScale) {\n            return 'right';\n        }\n        return 'overlay';\n    }\n    _internal_leftPriceScale() {\n        return this._private__leftPriceScale;\n    }\n    _internal_rightPriceScale() {\n        return this._private__rightPriceScale;\n    }\n    _internal_startScalePrice(priceScale, x) {\n        priceScale._internal_startScale(x);\n    }\n    _internal_scalePriceTo(priceScale, x) {\n        priceScale._internal_scaleTo(x);\n        // TODO: be more smart and update only affected views\n        this._internal_updateAllSources();\n    }\n    _internal_endScalePrice(priceScale) {\n        priceScale._internal_endScale();\n    }\n    _internal_startScrollPrice(priceScale, x) {\n        priceScale._internal_startScroll(x);\n    }\n    _internal_scrollPriceTo(priceScale, x) {\n        priceScale._internal_scrollTo(x);\n        this._internal_updateAllSources();\n    }\n    _internal_endScrollPrice(priceScale) {\n        priceScale._internal_endScroll();\n    }\n    _internal_updateAllSources() {\n        this._private__dataSources.forEach((source) => {\n            source._internal_updateAllViews();\n        });\n    }\n    _internal_defaultPriceScale() {\n        let priceScale = null;\n        if (this._private__model._internal_options().rightPriceScale.visible && this._private__rightPriceScale._internal_dataSources().length !== 0) {\n            priceScale = this._private__rightPriceScale;\n        }\n        else if (this._private__model._internal_options().leftPriceScale.visible && this._private__leftPriceScale._internal_dataSources().length !== 0) {\n            priceScale = this._private__leftPriceScale;\n        }\n        else if (this._private__dataSources.length !== 0) {\n            priceScale = this._private__dataSources[0]._internal_priceScale();\n        }\n        if (priceScale === null) {\n            priceScale = this._private__rightPriceScale;\n        }\n        return priceScale;\n    }\n    _internal_defaultVisiblePriceScale() {\n        let priceScale = null;\n        if (this._private__model._internal_options().rightPriceScale.visible) {\n            priceScale = this._private__rightPriceScale;\n        }\n        else if (this._private__model._internal_options().leftPriceScale.visible) {\n            priceScale = this._private__leftPriceScale;\n        }\n        return priceScale;\n    }\n    _internal_recalculatePriceScale(priceScale) {\n        if (priceScale === null || !priceScale._internal_isAutoScale()) {\n            return;\n        }\n        this._private__recalculatePriceScaleImpl(priceScale);\n    }\n    _internal_resetPriceScale(priceScale) {\n        const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n        priceScale._internal_setMode({ _internal_autoScale: true });\n        if (visibleBars !== null) {\n            priceScale._internal_recalculatePriceRange(visibleBars);\n        }\n        this._internal_updateAllSources();\n    }\n    _internal_momentaryAutoScale() {\n        this._private__recalculatePriceScaleImpl(this._private__leftPriceScale);\n        this._private__recalculatePriceScaleImpl(this._private__rightPriceScale);\n    }\n    _internal_recalculate() {\n        this._internal_recalculatePriceScale(this._private__leftPriceScale);\n        this._internal_recalculatePriceScale(this._private__rightPriceScale);\n        this._private__dataSources.forEach((ds) => {\n            if (this._internal_isOverlay(ds)) {\n                this._internal_recalculatePriceScale(ds._internal_priceScale());\n            }\n        });\n        this._internal_updateAllSources();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_orderedSources() {\n        if (this._private__cachedOrderedSources === null) {\n            this._private__cachedOrderedSources = sortSources(this._private__dataSources);\n        }\n        return this._private__cachedOrderedSources;\n    }\n    _internal_onDestroyed() {\n        return this._private__destroyed;\n    }\n    _internal_grid() {\n        return this._private__grid;\n    }\n    _private__recalculatePriceScaleImpl(priceScale) {\n        // TODO: can use this checks\n        const sourceForAutoScale = priceScale._internal_sourcesForAutoScale();\n        if (sourceForAutoScale && sourceForAutoScale.length > 0 && !this._private__timeScale._internal_isEmpty()) {\n            const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n            if (visibleBars !== null) {\n                priceScale._internal_recalculatePriceRange(visibleBars);\n            }\n        }\n        priceScale._internal_updateAllViews();\n    }\n    _private__getZOrderMinMax() {\n        const sources = this._internal_orderedSources();\n        if (sources.length === 0) {\n            return { _internal_minZOrder: 0, _internal_maxZOrder: 0 };\n        }\n        let minZOrder = 0;\n        let maxZOrder = 0;\n        for (let j = 0; j < sources.length; j++) {\n            const ds = sources[j];\n            const zOrder = ds._internal_zorder();\n            if (zOrder !== null) {\n                if (zOrder < minZOrder) {\n                    minZOrder = zOrder;\n                }\n                if (zOrder > maxZOrder) {\n                    maxZOrder = zOrder;\n                }\n            }\n        }\n        return { _internal_minZOrder: minZOrder, _internal_maxZOrder: maxZOrder };\n    }\n    _private__insertDataSource(source, priceScaleId, zOrder) {\n        let priceScale = this._internal_priceScaleById(priceScaleId);\n        if (priceScale === null) {\n            priceScale = this._private__createPriceScale(priceScaleId, this._private__model._internal_options().overlayPriceScales);\n        }\n        this._private__dataSources.push(source);\n        if (!isDefaultPriceScale(priceScaleId)) {\n            const overlaySources = this._private__overlaySourcesByScaleId.get(priceScaleId) || [];\n            overlaySources.push(source);\n            this._private__overlaySourcesByScaleId.set(priceScaleId, overlaySources);\n        }\n        priceScale._internal_addDataSource(source);\n        source._internal_setPriceScale(priceScale);\n        source._internal_setZorder(zOrder);\n        this._internal_recalculatePriceScale(priceScale);\n        this._private__cachedOrderedSources = null;\n    }\n    _private__onPriceScaleModeChanged(priceScale, oldMode, newMode) {\n        if (oldMode._internal_mode === newMode._internal_mode) {\n            return;\n        }\n        // momentary auto scale if we toggle percentage/indexedTo100 mode\n        this._private__recalculatePriceScaleImpl(priceScale);\n    }\n    _private__createPriceScale(id, options) {\n        const actualOptions = Object.assign({ visible: true, autoScale: true }, clone(options));\n        const priceScale = new PriceScale(id, actualOptions, this._private__model._internal_options().layout, this._private__model._internal_options().localization);\n        priceScale._internal_setHeight(this._internal_height());\n        return priceScale;\n    }\n}\n\nclass FormattedLabelsCache {\n    constructor(format, horzScaleBehavior, size = 50) {\n        this._private__actualSize = 0;\n        this._private__usageTick = 1;\n        this._private__oldestTick = 1;\n        this._private__cache = new Map();\n        this._private__tick2Labels = new Map();\n        this._private__format = format;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__maxSize = size;\n    }\n    _internal_format(tickMark) {\n        const time = tickMark.time;\n        const cacheKey = this._private__horzScaleBehavior.cacheKey(time);\n        const tick = this._private__cache.get(cacheKey);\n        if (tick !== undefined) {\n            return tick._internal_string;\n        }\n        if (this._private__actualSize === this._private__maxSize) {\n            const oldestValue = this._private__tick2Labels.get(this._private__oldestTick);\n            this._private__tick2Labels.delete(this._private__oldestTick);\n            this._private__cache.delete(ensureDefined(oldestValue));\n            this._private__oldestTick++;\n            this._private__actualSize--;\n        }\n        const str = this._private__format(tickMark);\n        this._private__cache.set(cacheKey, { _internal_string: str, _internal_tick: this._private__usageTick });\n        this._private__tick2Labels.set(this._private__usageTick, cacheKey);\n        this._private__actualSize++;\n        this._private__usageTick++;\n        return str;\n    }\n}\n\nclass RangeImpl {\n    constructor(left, right) {\n        assert(left <= right, 'right should be >= left');\n        this._private__left = left;\n        this._private__right = right;\n    }\n    _internal_left() {\n        return this._private__left;\n    }\n    _internal_right() {\n        return this._private__right;\n    }\n    _internal_count() {\n        return this._private__right - this._private__left + 1;\n    }\n    _internal_contains(index) {\n        return this._private__left <= index && index <= this._private__right;\n    }\n    _internal_equals(other) {\n        return this._private__left === other._internal_left() && this._private__right === other._internal_right();\n    }\n}\nfunction areRangesEqual(first, second) {\n    if (first === null || second === null) {\n        return first === second;\n    }\n    return first._internal_equals(second);\n}\n\nclass TickMarks {\n    constructor() {\n        this._private__marksByWeight = new Map();\n        this._private__cache = null;\n        this._private__uniformDistribution = false;\n    }\n    _internal_setUniformDistribution(val) {\n        this._private__uniformDistribution = val;\n        this._private__cache = null;\n    }\n    _internal_setTimeScalePoints(newPoints, firstChangedPointIndex) {\n        this._private__removeMarksSinceIndex(firstChangedPointIndex);\n        this._private__cache = null;\n        for (let index = firstChangedPointIndex; index < newPoints.length; ++index) {\n            const point = newPoints[index];\n            let marksForWeight = this._private__marksByWeight.get(point.timeWeight);\n            if (marksForWeight === undefined) {\n                marksForWeight = [];\n                this._private__marksByWeight.set(point.timeWeight, marksForWeight);\n            }\n            marksForWeight.push({\n                index: index,\n                time: point.time,\n                weight: point.timeWeight,\n                originalTime: point.originalTime,\n            });\n        }\n    }\n    _internal_build(spacing, maxWidth) {\n        const maxIndexesPerMark = Math.ceil(maxWidth / spacing);\n        if (this._private__cache === null || this._private__cache._internal_maxIndexesPerMark !== maxIndexesPerMark) {\n            this._private__cache = {\n                _internal_marks: this._private__buildMarksImpl(maxIndexesPerMark),\n                _internal_maxIndexesPerMark: maxIndexesPerMark,\n            };\n        }\n        return this._private__cache._internal_marks;\n    }\n    _private__removeMarksSinceIndex(sinceIndex) {\n        if (sinceIndex === 0) {\n            this._private__marksByWeight.clear();\n            return;\n        }\n        const weightsToClear = [];\n        this._private__marksByWeight.forEach((marks, timeWeight) => {\n            if (sinceIndex <= marks[0].index) {\n                weightsToClear.push(timeWeight);\n            }\n            else {\n                marks.splice(lowerBound(marks, sinceIndex, (tm) => tm.index < sinceIndex), Infinity);\n            }\n        });\n        for (const weight of weightsToClear) {\n            this._private__marksByWeight.delete(weight);\n        }\n    }\n    _private__buildMarksImpl(maxIndexesPerMark) {\n        let marks = [];\n        for (const weight of Array.from(this._private__marksByWeight.keys()).sort((a, b) => b - a)) {\n            if (!this._private__marksByWeight.get(weight)) {\n                continue;\n            }\n            // Built tickMarks are now prevMarks, and marks it as new array\n            const prevMarks = marks;\n            marks = [];\n            const prevMarksLength = prevMarks.length;\n            let prevMarksPointer = 0;\n            const currentWeight = ensureDefined(this._private__marksByWeight.get(weight));\n            const currentWeightLength = currentWeight.length;\n            let rightIndex = Infinity;\n            let leftIndex = -Infinity;\n            for (let i = 0; i < currentWeightLength; i++) {\n                const mark = currentWeight[i];\n                const currentIndex = mark.index;\n                // Determine indexes with which current index will be compared\n                // All marks to the right is moved to new array\n                while (prevMarksPointer < prevMarksLength) {\n                    const lastMark = prevMarks[prevMarksPointer];\n                    const lastIndex = lastMark.index;\n                    if (lastIndex < currentIndex) {\n                        prevMarksPointer++;\n                        marks.push(lastMark);\n                        leftIndex = lastIndex;\n                        rightIndex = Infinity;\n                    }\n                    else {\n                        rightIndex = lastIndex;\n                        break;\n                    }\n                }\n                if (rightIndex - currentIndex >= maxIndexesPerMark && currentIndex - leftIndex >= maxIndexesPerMark) {\n                    // TickMark fits. Place it into new array\n                    marks.push(mark);\n                    leftIndex = currentIndex;\n                }\n                else {\n                    if (this._private__uniformDistribution) {\n                        return prevMarks;\n                    }\n                }\n            }\n            // Place all unused tickMarks into new array;\n            for (; prevMarksPointer < prevMarksLength; prevMarksPointer++) {\n                marks.push(prevMarks[prevMarksPointer]);\n            }\n        }\n        return marks;\n    }\n}\n\nclass TimeScaleVisibleRange {\n    constructor(logicalRange) {\n        this._private__logicalRange = logicalRange;\n    }\n    _internal_strictRange() {\n        if (this._private__logicalRange === null) {\n            return null;\n        }\n        return new RangeImpl(Math.floor(this._private__logicalRange._internal_left()), Math.ceil(this._private__logicalRange._internal_right()));\n    }\n    _internal_logicalRange() {\n        return this._private__logicalRange;\n    }\n    static _internal_invalid() {\n        return new TimeScaleVisibleRange(null);\n    }\n}\n\nconst defaultTickMarkMaxCharacterLength = 8;\nfunction markWithGreaterWeight(a, b) {\n    return a.weight > b.weight ? a : b;\n}\nclass TimeScale {\n    constructor(model, options, localizationOptions, horzScaleBehavior) {\n        this._private__width = 0;\n        this._private__baseIndexOrNull = null;\n        this._private__points = [];\n        this._private__scrollStartPoint = null;\n        this._private__scaleStartPoint = null;\n        this._private__tickMarks = new TickMarks();\n        this._private__formattedByWeight = new Map();\n        this._private__visibleRange = TimeScaleVisibleRange._internal_invalid();\n        this._private__visibleRangeInvalidated = true;\n        this._private__visibleBarsChanged = new Delegate();\n        this._private__logicalRangeChanged = new Delegate();\n        this._private__optionsApplied = new Delegate();\n        this._private__commonTransitionStartState = null;\n        this._private__timeMarksCache = null;\n        this._private__labels = [];\n        this._private__options = options;\n        this._private__localizationOptions = localizationOptions;\n        this._private__rightOffset = options.rightOffset;\n        this._private__barSpacing = options.barSpacing;\n        this._private__model = model;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__updateDateTimeFormatter();\n        this._private__tickMarks._internal_setUniformDistribution(options.uniformDistribution);\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyLocalizationOptions(localizationOptions) {\n        merge(this._private__localizationOptions, localizationOptions);\n        this._private__invalidateTickMarks();\n        this._private__updateDateTimeFormatter();\n    }\n    _internal_applyOptions(options, localizationOptions) {\n        var _a;\n        merge(this._private__options, options);\n        if (this._private__options.fixLeftEdge) {\n            this._private__doFixLeftEdge();\n        }\n        if (this._private__options.fixRightEdge) {\n            this._private__doFixRightEdge();\n        }\n        // note that bar spacing should be applied before right offset\n        // because right offset depends on bar spacing\n        if (options.barSpacing !== undefined) {\n            this._private__model._internal_setBarSpacing(options.barSpacing);\n        }\n        if (options.rightOffset !== undefined) {\n            this._private__model._internal_setRightOffset(options.rightOffset);\n        }\n        if (options.minBarSpacing !== undefined) {\n            // yes, if we apply min bar spacing then we need to correct bar spacing\n            // the easiest way is to apply it once again\n            this._private__model._internal_setBarSpacing((_a = options.barSpacing) !== null && _a !== void 0 ? _a : this._private__barSpacing);\n        }\n        this._private__invalidateTickMarks();\n        this._private__updateDateTimeFormatter();\n        this._private__optionsApplied._internal_fire();\n    }\n    _internal_indexToTime(index) {\n        var _a, _b;\n        return (_b = (_a = this._private__points[index]) === null || _a === void 0 ? void 0 : _a.time) !== null && _b !== void 0 ? _b : null;\n    }\n    _internal_indexToTimeScalePoint(index) {\n        var _a;\n        return (_a = this._private__points[index]) !== null && _a !== void 0 ? _a : null;\n    }\n    _internal_timeToIndex(time, findNearest) {\n        if (this._private__points.length < 1) {\n            // no time points available\n            return null;\n        }\n        if (this._private__horzScaleBehavior.key(time) > this._private__horzScaleBehavior.key(this._private__points[this._private__points.length - 1].time)) {\n            // special case\n            return findNearest ? this._private__points.length - 1 : null;\n        }\n        const index = lowerBound(this._private__points, this._private__horzScaleBehavior.key(time), (a, b) => this._private__horzScaleBehavior.key(a.time) < b);\n        if (this._private__horzScaleBehavior.key(time) < this._private__horzScaleBehavior.key(this._private__points[index].time)) {\n            return findNearest ? index : null;\n        }\n        return index;\n    }\n    _internal_isEmpty() {\n        return this._private__width === 0 || this._private__points.length === 0 || this._private__baseIndexOrNull === null;\n    }\n    _internal_hasPoints() {\n        return this._private__points.length > 0;\n    }\n    // strict range: integer indices of the bars in the visible range rounded in more wide direction\n    _internal_visibleStrictRange() {\n        this._private__updateVisibleRange();\n        return this._private__visibleRange._internal_strictRange();\n    }\n    _internal_visibleLogicalRange() {\n        this._private__updateVisibleRange();\n        return this._private__visibleRange._internal_logicalRange();\n    }\n    _internal_visibleTimeRange() {\n        const visibleBars = this._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return null;\n        }\n        const range = {\n            from: visibleBars._internal_left(),\n            to: visibleBars._internal_right(),\n        };\n        return this._internal_timeRangeForLogicalRange(range);\n    }\n    _internal_timeRangeForLogicalRange(range) {\n        const from = Math.round(range.from);\n        const to = Math.round(range.to);\n        const firstIndex = ensureNotNull(this._private__firstIndex());\n        const lastIndex = ensureNotNull(this._private__lastIndex());\n        return {\n            from: ensureNotNull(this._internal_indexToTimeScalePoint(Math.max(firstIndex, from))),\n            to: ensureNotNull(this._internal_indexToTimeScalePoint(Math.min(lastIndex, to))),\n        };\n    }\n    _internal_logicalRangeForTimeRange(range) {\n        return {\n            from: ensureNotNull(this._internal_timeToIndex(range.from, true)),\n            to: ensureNotNull(this._internal_timeToIndex(range.to, true)),\n        };\n    }\n    _internal_width() {\n        return this._private__width;\n    }\n    _internal_setWidth(newWidth) {\n        if (!isFinite(newWidth) || newWidth <= 0) {\n            return;\n        }\n        if (this._private__width === newWidth) {\n            return;\n        }\n        // when we change the width and we need to correct visible range because of fixing left edge\n        // we need to check the previous visible range rather than the new one\n        // because it might be updated by changing width, bar spacing, etc\n        // but we need to try to keep the same range\n        const previousVisibleRange = this._internal_visibleLogicalRange();\n        const oldWidth = this._private__width;\n        this._private__width = newWidth;\n        this._private__visibleRangeInvalidated = true;\n        if (this._private__options.lockVisibleTimeRangeOnResize && oldWidth !== 0) {\n            // recalculate bar spacing\n            const newBarSpacing = this._private__barSpacing * newWidth / oldWidth;\n            this._private__barSpacing = newBarSpacing;\n        }\n        // if time scale is scrolled to the end of data and we have fixed right edge\n        // keep left edge instead of right\n        // we need it to avoid \"shaking\" if the last bar visibility affects time scale width\n        if (this._private__options.fixLeftEdge) {\n            // note that logical left range means not the middle of a bar (it's the left border)\n            if (previousVisibleRange !== null && previousVisibleRange._internal_left() <= 0) {\n                const delta = oldWidth - newWidth;\n                // reduce  _rightOffset means move right\n                // we could move more than required - this will be fixed by _correctOffset()\n                this._private__rightOffset -= Math.round(delta / this._private__barSpacing) + 1;\n                this._private__visibleRangeInvalidated = true;\n            }\n        }\n        // updating bar spacing should be first because right offset depends on it\n        this._private__correctBarSpacing();\n        this._private__correctOffset();\n    }\n    _internal_indexToCoordinate(index) {\n        if (this._internal_isEmpty() || !isInteger(index)) {\n            return 0;\n        }\n        const baseIndex = this._internal_baseIndex();\n        const deltaFromRight = baseIndex + this._private__rightOffset - index;\n        const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n        return coordinate;\n    }\n    _internal_indexesToCoordinates(points, visibleRange) {\n        const baseIndex = this._internal_baseIndex();\n        const indexFrom = (visibleRange === undefined) ? 0 : visibleRange.from;\n        const indexTo = (visibleRange === undefined) ? points.length : visibleRange.to;\n        for (let i = indexFrom; i < indexTo; i++) {\n            const index = points[i]._internal_time;\n            const deltaFromRight = baseIndex + this._private__rightOffset - index;\n            const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n            points[i]._internal_x = coordinate;\n        }\n    }\n    _internal_coordinateToIndex(x) {\n        return Math.ceil(this._private__coordinateToFloatIndex(x));\n    }\n    _internal_setRightOffset(offset) {\n        this._private__visibleRangeInvalidated = true;\n        this._private__rightOffset = offset;\n        this._private__correctOffset();\n        this._private__model._internal_recalculateAllPanes();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_barSpacing() {\n        return this._private__barSpacing;\n    }\n    _internal_setBarSpacing(newBarSpacing) {\n        this._private__setBarSpacing(newBarSpacing);\n        // do not allow scroll out of visible bars\n        this._private__correctOffset();\n        this._private__model._internal_recalculateAllPanes();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_rightOffset() {\n        return this._private__rightOffset;\n    }\n    // eslint-disable-next-line complexity\n    _internal_marks() {\n        if (this._internal_isEmpty()) {\n            return null;\n        }\n        if (this._private__timeMarksCache !== null) {\n            return this._private__timeMarksCache;\n        }\n        const spacing = this._private__barSpacing;\n        const fontSize = this._private__model._internal_options().layout.fontSize;\n        const pixelsPer8Characters = (fontSize + 4) * 5;\n        const pixelsPerCharacter = pixelsPer8Characters / defaultTickMarkMaxCharacterLength;\n        const maxLabelWidth = pixelsPerCharacter * (this._private__options.tickMarkMaxCharacterLength || defaultTickMarkMaxCharacterLength);\n        const indexPerLabel = Math.round(maxLabelWidth / spacing);\n        const visibleBars = ensureNotNull(this._internal_visibleStrictRange());\n        const firstBar = Math.max(visibleBars._internal_left(), visibleBars._internal_left() - indexPerLabel);\n        const lastBar = Math.max(visibleBars._internal_right(), visibleBars._internal_right() - indexPerLabel);\n        const items = this._private__tickMarks._internal_build(spacing, maxLabelWidth);\n        // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second label on time scale\"\n        const earliestIndexOfSecondLabel = this._private__firstIndex() + indexPerLabel;\n        // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second last label on time scale\"\n        const indexOfSecondLastLabel = this._private__lastIndex() - indexPerLabel;\n        const isAllScalingAndScrollingDisabled = this._private__isAllScalingAndScrollingDisabled();\n        const isLeftEdgeFixed = this._private__options.fixLeftEdge || isAllScalingAndScrollingDisabled;\n        const isRightEdgeFixed = this._private__options.fixRightEdge || isAllScalingAndScrollingDisabled;\n        let targetIndex = 0;\n        for (const tm of items) {\n            if (!(firstBar <= tm.index && tm.index <= lastBar)) {\n                continue;\n            }\n            let label;\n            if (targetIndex < this._private__labels.length) {\n                label = this._private__labels[targetIndex];\n                label.coord = this._internal_indexToCoordinate(tm.index);\n                label.label = this._private__formatLabel(tm);\n                label.weight = tm.weight;\n            }\n            else {\n                label = {\n                    needAlignCoordinate: false,\n                    coord: this._internal_indexToCoordinate(tm.index),\n                    label: this._private__formatLabel(tm),\n                    weight: tm.weight,\n                };\n                this._private__labels.push(label);\n            }\n            if (this._private__barSpacing > (maxLabelWidth / 2) && !isAllScalingAndScrollingDisabled) {\n                // if there is enough space then let's show all tick marks as usual\n                label.needAlignCoordinate = false;\n            }\n            else {\n                // if a user is able to scroll after a tick mark then show it as usual, otherwise the coordinate might be aligned\n                // if the index is for the second (last) label or later (earlier) then most likely this label might be displayed without correcting the coordinate\n                label.needAlignCoordinate = (isLeftEdgeFixed && tm.index <= earliestIndexOfSecondLabel) || (isRightEdgeFixed && tm.index >= indexOfSecondLastLabel);\n            }\n            targetIndex++;\n        }\n        this._private__labels.length = targetIndex;\n        this._private__timeMarksCache = this._private__labels;\n        return this._private__labels;\n    }\n    _internal_restoreDefault() {\n        this._private__visibleRangeInvalidated = true;\n        this._internal_setBarSpacing(this._private__options.barSpacing);\n        this._internal_setRightOffset(this._private__options.rightOffset);\n    }\n    _internal_setBaseIndex(baseIndex) {\n        this._private__visibleRangeInvalidated = true;\n        this._private__baseIndexOrNull = baseIndex;\n        this._private__correctOffset();\n        this._private__doFixLeftEdge();\n    }\n    /**\n     * Zoom in/out the scale around a `zoomPoint` on `scale` value.\n     *\n     * @param zoomPoint - X coordinate of the point to apply the zoom.\n     * If `rightBarStaysOnScroll` option is disabled, then will be used to restore right offset.\n     * @param scale - Zoom value (in 1/10 parts of current bar spacing).\n     * Negative value means zoom out, positive - zoom in.\n     */\n    _internal_zoom(zoomPoint, scale) {\n        const floatIndexAtZoomPoint = this._private__coordinateToFloatIndex(zoomPoint);\n        const barSpacing = this._internal_barSpacing();\n        const newBarSpacing = barSpacing + scale * (barSpacing / 10);\n        // zoom in/out bar spacing\n        this._internal_setBarSpacing(newBarSpacing);\n        if (!this._private__options.rightBarStaysOnScroll) {\n            // and then correct right offset to move index under zoomPoint back to its coordinate\n            this._internal_setRightOffset(this._internal_rightOffset() + (floatIndexAtZoomPoint - this._private__coordinateToFloatIndex(zoomPoint)));\n        }\n    }\n    _internal_startScale(x) {\n        if (this._private__scrollStartPoint) {\n            this._internal_endScroll();\n        }\n        if (this._private__scaleStartPoint !== null || this._private__commonTransitionStartState !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        this._private__scaleStartPoint = x;\n        this._private__saveCommonTransitionsStartState();\n    }\n    _internal_scaleTo(x) {\n        if (this._private__commonTransitionStartState === null) {\n            return;\n        }\n        const startLengthFromRight = clamp(this._private__width - x, 0, this._private__width);\n        const currentLengthFromRight = clamp(this._private__width - ensureNotNull(this._private__scaleStartPoint), 0, this._private__width);\n        if (startLengthFromRight === 0 || currentLengthFromRight === 0) {\n            return;\n        }\n        this._internal_setBarSpacing(this._private__commonTransitionStartState._internal_barSpacing * startLengthFromRight / currentLengthFromRight);\n    }\n    _internal_endScale() {\n        if (this._private__scaleStartPoint === null) {\n            return;\n        }\n        this._private__scaleStartPoint = null;\n        this._private__clearCommonTransitionsStartState();\n    }\n    _internal_startScroll(x) {\n        if (this._private__scrollStartPoint !== null || this._private__commonTransitionStartState !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        this._private__scrollStartPoint = x;\n        this._private__saveCommonTransitionsStartState();\n    }\n    _internal_scrollTo(x) {\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        const shiftInLogical = (this._private__scrollStartPoint - x) / this._internal_barSpacing();\n        this._private__rightOffset = ensureNotNull(this._private__commonTransitionStartState)._internal_rightOffset + shiftInLogical;\n        this._private__visibleRangeInvalidated = true;\n        // do not allow scroll out of visible bars\n        this._private__correctOffset();\n    }\n    _internal_endScroll() {\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        this._private__scrollStartPoint = null;\n        this._private__clearCommonTransitionsStartState();\n    }\n    _internal_scrollToRealTime() {\n        this._internal_scrollToOffsetAnimated(this._private__options.rightOffset);\n    }\n    _internal_scrollToOffsetAnimated(offset, animationDuration = 400 /* Constants.DefaultAnimationDuration */) {\n        if (!isFinite(offset)) {\n            throw new RangeError('offset is required and must be finite number');\n        }\n        if (!isFinite(animationDuration) || animationDuration <= 0) {\n            throw new RangeError('animationDuration (optional) must be finite positive number');\n        }\n        const source = this._private__rightOffset;\n        const animationStart = performance.now();\n        this._private__model._internal_setTimeScaleAnimation({\n            _internal_finished: (time) => (time - animationStart) / animationDuration >= 1,\n            _internal_getPosition: (time) => {\n                const animationProgress = (time - animationStart) / animationDuration;\n                const finishAnimation = animationProgress >= 1;\n                return finishAnimation ? offset : source + (offset - source) * animationProgress;\n            },\n        });\n    }\n    _internal_update(newPoints, firstChangedPointIndex) {\n        this._private__visibleRangeInvalidated = true;\n        this._private__points = newPoints;\n        this._private__tickMarks._internal_setTimeScalePoints(newPoints, firstChangedPointIndex);\n        this._private__correctOffset();\n    }\n    _internal_visibleBarsChanged() {\n        return this._private__visibleBarsChanged;\n    }\n    _internal_logicalRangeChanged() {\n        return this._private__logicalRangeChanged;\n    }\n    _internal_optionsApplied() {\n        return this._private__optionsApplied;\n    }\n    _internal_baseIndex() {\n        // null is used to known that baseIndex is not set yet\n        // so in methods which should known whether it is set or not\n        // we should check field `_baseIndexOrNull` instead of getter `baseIndex()`\n        // see minRightOffset for example\n        return this._private__baseIndexOrNull || 0;\n    }\n    _internal_setVisibleRange(range) {\n        const length = range._internal_count();\n        this._private__setBarSpacing(this._private__width / length);\n        this._private__rightOffset = range._internal_right() - this._internal_baseIndex();\n        this._private__correctOffset();\n        this._private__visibleRangeInvalidated = true;\n        this._private__model._internal_recalculateAllPanes();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_fitContent() {\n        const first = this._private__firstIndex();\n        const last = this._private__lastIndex();\n        if (first === null || last === null) {\n            return;\n        }\n        this._internal_setVisibleRange(new RangeImpl(first, last + this._private__options.rightOffset));\n    }\n    _internal_setLogicalRange(range) {\n        const barRange = new RangeImpl(range.from, range.to);\n        this._internal_setVisibleRange(barRange);\n    }\n    _internal_formatDateTime(timeScalePoint) {\n        if (this._private__localizationOptions.timeFormatter !== undefined) {\n            return this._private__localizationOptions.timeFormatter(timeScalePoint.originalTime);\n        }\n        return this._private__horzScaleBehavior.formatHorzItem(timeScalePoint.time);\n    }\n    _private__isAllScalingAndScrollingDisabled() {\n        const { handleScroll, handleScale } = this._private__model._internal_options();\n        return !handleScroll.horzTouchDrag\n            && !handleScroll.mouseWheel\n            && !handleScroll.pressedMouseMove\n            && !handleScroll.vertTouchDrag\n            && !handleScale.axisDoubleClickReset.time\n            && !handleScale.axisPressedMouseMove.time\n            && !handleScale.mouseWheel\n            && !handleScale.pinch;\n    }\n    _private__firstIndex() {\n        return this._private__points.length === 0 ? null : 0;\n    }\n    _private__lastIndex() {\n        return this._private__points.length === 0 ? null : (this._private__points.length - 1);\n    }\n    _private__rightOffsetForCoordinate(x) {\n        return (this._private__width - 1 - x) / this._private__barSpacing;\n    }\n    _private__coordinateToFloatIndex(x) {\n        const deltaFromRight = this._private__rightOffsetForCoordinate(x);\n        const baseIndex = this._internal_baseIndex();\n        const index = baseIndex + this._private__rightOffset - deltaFromRight;\n        // JavaScript uses very strange rounding\n        // we need rounding to avoid problems with calculation errors\n        return Math.round(index * 1000000) / 1000000;\n    }\n    _private__setBarSpacing(newBarSpacing) {\n        const oldBarSpacing = this._private__barSpacing;\n        this._private__barSpacing = newBarSpacing;\n        this._private__correctBarSpacing();\n        // this._barSpacing might be changed in _correctBarSpacing\n        if (oldBarSpacing !== this._private__barSpacing) {\n            this._private__visibleRangeInvalidated = true;\n            this._private__resetTimeMarksCache();\n        }\n    }\n    _private__updateVisibleRange() {\n        if (!this._private__visibleRangeInvalidated) {\n            return;\n        }\n        this._private__visibleRangeInvalidated = false;\n        if (this._internal_isEmpty()) {\n            this._private__setVisibleRange(TimeScaleVisibleRange._internal_invalid());\n            return;\n        }\n        const baseIndex = this._internal_baseIndex();\n        const newBarsLength = this._private__width / this._private__barSpacing;\n        const rightBorder = this._private__rightOffset + baseIndex;\n        const leftBorder = rightBorder - newBarsLength + 1;\n        const logicalRange = new RangeImpl(leftBorder, rightBorder);\n        this._private__setVisibleRange(new TimeScaleVisibleRange(logicalRange));\n    }\n    _private__correctBarSpacing() {\n        const minBarSpacing = this._private__minBarSpacing();\n        if (this._private__barSpacing < minBarSpacing) {\n            this._private__barSpacing = minBarSpacing;\n            this._private__visibleRangeInvalidated = true;\n        }\n        if (this._private__width !== 0) {\n            // make sure that this (1 / Constants.MinVisibleBarsCount) >= coeff in max bar spacing (it's 0.5 here)\n            const maxBarSpacing = this._private__width * 0.5;\n            if (this._private__barSpacing > maxBarSpacing) {\n                this._private__barSpacing = maxBarSpacing;\n                this._private__visibleRangeInvalidated = true;\n            }\n        }\n    }\n    _private__minBarSpacing() {\n        // if both options are enabled then limit bar spacing so that zooming-out is not possible\n        // if it would cause either the first or last points to move too far from an edge\n        if (this._private__options.fixLeftEdge && this._private__options.fixRightEdge && this._private__points.length !== 0) {\n            return this._private__width / this._private__points.length;\n        }\n        return this._private__options.minBarSpacing;\n    }\n    _private__correctOffset() {\n        // block scrolling of to future\n        const maxRightOffset = this._private__maxRightOffset();\n        if (this._private__rightOffset > maxRightOffset) {\n            this._private__rightOffset = maxRightOffset;\n            this._private__visibleRangeInvalidated = true;\n        }\n        // block scrolling of to past\n        const minRightOffset = this._private__minRightOffset();\n        if (minRightOffset !== null && this._private__rightOffset < minRightOffset) {\n            this._private__rightOffset = minRightOffset;\n            this._private__visibleRangeInvalidated = true;\n        }\n    }\n    _private__minRightOffset() {\n        const firstIndex = this._private__firstIndex();\n        const baseIndex = this._private__baseIndexOrNull;\n        if (firstIndex === null || baseIndex === null) {\n            return null;\n        }\n        const barsEstimation = this._private__options.fixLeftEdge\n            ? this._private__width / this._private__barSpacing\n            : Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n        return firstIndex - baseIndex - 1 + barsEstimation;\n    }\n    _private__maxRightOffset() {\n        return this._private__options.fixRightEdge\n            ? 0\n            : (this._private__width / this._private__barSpacing) - Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n    }\n    _private__saveCommonTransitionsStartState() {\n        this._private__commonTransitionStartState = {\n            _internal_barSpacing: this._internal_barSpacing(),\n            _internal_rightOffset: this._internal_rightOffset(),\n        };\n    }\n    _private__clearCommonTransitionsStartState() {\n        this._private__commonTransitionStartState = null;\n    }\n    _private__formatLabel(tickMark) {\n        let formatter = this._private__formattedByWeight.get(tickMark.weight);\n        if (formatter === undefined) {\n            formatter = new FormattedLabelsCache((mark) => {\n                return this._private__formatLabelImpl(mark);\n            }, this._private__horzScaleBehavior);\n            this._private__formattedByWeight.set(tickMark.weight, formatter);\n        }\n        return formatter._internal_format(tickMark);\n    }\n    _private__formatLabelImpl(tickMark) {\n        return this._private__horzScaleBehavior.formatTickmark(tickMark, this._private__localizationOptions);\n    }\n    _private__setVisibleRange(newVisibleRange) {\n        const oldVisibleRange = this._private__visibleRange;\n        this._private__visibleRange = newVisibleRange;\n        if (!areRangesEqual(oldVisibleRange._internal_strictRange(), this._private__visibleRange._internal_strictRange())) {\n            this._private__visibleBarsChanged._internal_fire();\n        }\n        if (!areRangesEqual(oldVisibleRange._internal_logicalRange(), this._private__visibleRange._internal_logicalRange())) {\n            this._private__logicalRangeChanged._internal_fire();\n        }\n        // TODO: reset only coords in case when this._visibleBars has not been changed\n        this._private__resetTimeMarksCache();\n    }\n    _private__resetTimeMarksCache() {\n        this._private__timeMarksCache = null;\n    }\n    _private__invalidateTickMarks() {\n        this._private__resetTimeMarksCache();\n        this._private__formattedByWeight.clear();\n    }\n    _private__updateDateTimeFormatter() {\n        this._private__horzScaleBehavior.updateFormatter(this._private__localizationOptions);\n    }\n    _private__doFixLeftEdge() {\n        if (!this._private__options.fixLeftEdge) {\n            return;\n        }\n        const firstIndex = this._private__firstIndex();\n        if (firstIndex === null) {\n            return;\n        }\n        const visibleRange = this._internal_visibleStrictRange();\n        if (visibleRange === null) {\n            return;\n        }\n        const delta = visibleRange._internal_left() - firstIndex;\n        if (delta < 0) {\n            const leftEdgeOffset = this._private__rightOffset - delta - 1;\n            this._internal_setRightOffset(leftEdgeOffset);\n        }\n        this._private__correctBarSpacing();\n    }\n    _private__doFixRightEdge() {\n        this._private__correctOffset();\n        this._private__correctBarSpacing();\n    }\n}\n\nclass MediaCoordinatesPaneRenderer {\n    _internal_draw(target, isHovered, hitTestData) {\n        target.useMediaCoordinateSpace((scope) => this._internal__drawImpl(scope, isHovered, hitTestData));\n    }\n    _internal_drawBackground(target, isHovered, hitTestData) {\n        target.useMediaCoordinateSpace((scope) => this._internal__drawBackgroundImpl(scope, isHovered, hitTestData));\n    }\n    _internal__drawBackgroundImpl(renderingScope, isHovered, hitTestData) { }\n}\n\nclass WatermarkRenderer extends MediaCoordinatesPaneRenderer {\n    constructor(data) {\n        super();\n        this._private__metricsCache = new Map();\n        this._private__data = data;\n    }\n    _internal__drawImpl(renderingScope) { }\n    _internal__drawBackgroundImpl(renderingScope) {\n        if (!this._private__data._internal_visible) {\n            return;\n        }\n        const { context: ctx, mediaSize } = renderingScope;\n        let textHeight = 0;\n        for (const line of this._private__data._internal_lines) {\n            if (line._internal_text.length === 0) {\n                continue;\n            }\n            ctx.font = line._internal_font;\n            const textWidth = this._private__metrics(ctx, line._internal_text);\n            if (textWidth > mediaSize.width) {\n                line._internal_zoom = mediaSize.width / textWidth;\n            }\n            else {\n                line._internal_zoom = 1;\n            }\n            textHeight += line._internal_lineHeight * line._internal_zoom;\n        }\n        let vertOffset = 0;\n        switch (this._private__data._internal_vertAlign) {\n            case 'top':\n                vertOffset = 0;\n                break;\n            case 'center':\n                vertOffset = Math.max((mediaSize.height - textHeight) / 2, 0);\n                break;\n            case 'bottom':\n                vertOffset = Math.max((mediaSize.height - textHeight), 0);\n                break;\n        }\n        ctx.fillStyle = this._private__data._internal_color;\n        for (const line of this._private__data._internal_lines) {\n            ctx.save();\n            let horzOffset = 0;\n            switch (this._private__data._internal_horzAlign) {\n                case 'left':\n                    ctx.textAlign = 'left';\n                    horzOffset = line._internal_lineHeight / 2;\n                    break;\n                case 'center':\n                    ctx.textAlign = 'center';\n                    horzOffset = mediaSize.width / 2;\n                    break;\n                case 'right':\n                    ctx.textAlign = 'right';\n                    horzOffset = mediaSize.width - 1 - line._internal_lineHeight / 2;\n                    break;\n            }\n            ctx.translate(horzOffset, vertOffset);\n            ctx.textBaseline = 'top';\n            ctx.font = line._internal_font;\n            ctx.scale(line._internal_zoom, line._internal_zoom);\n            ctx.fillText(line._internal_text, 0, line._internal_vertOffset);\n            ctx.restore();\n            vertOffset += line._internal_lineHeight * line._internal_zoom;\n        }\n    }\n    _private__metrics(ctx, text) {\n        const fontCache = this._private__fontCache(ctx.font);\n        let result = fontCache.get(text);\n        if (result === undefined) {\n            result = ctx.measureText(text).width;\n            fontCache.set(text, result);\n        }\n        return result;\n    }\n    _private__fontCache(font) {\n        let fontCache = this._private__metricsCache.get(font);\n        if (fontCache === undefined) {\n            fontCache = new Map();\n            this._private__metricsCache.set(font, fontCache);\n        }\n        return fontCache;\n    }\n}\n\nclass WatermarkPaneView {\n    constructor(source) {\n        this._private__invalidated = true;\n        this._private__rendererData = {\n            _internal_visible: false,\n            _internal_color: '',\n            _internal_lines: [],\n            _internal_vertAlign: 'center',\n            _internal_horzAlign: 'center',\n        };\n        this._private__renderer = new WatermarkRenderer(this._private__rendererData);\n        this._private__source = source;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        const options = this._private__source._internal_options();\n        const data = this._private__rendererData;\n        data._internal_visible = options.visible;\n        if (!data._internal_visible) {\n            return;\n        }\n        data._internal_color = options.color;\n        data._internal_horzAlign = options.horzAlign;\n        data._internal_vertAlign = options.vertAlign;\n        data._internal_lines = [\n            {\n                _internal_text: options.text,\n                _internal_font: makeFont(options.fontSize, options.fontFamily, options.fontStyle),\n                _internal_lineHeight: options.fontSize * 1.2,\n                _internal_vertOffset: 0,\n                _internal_zoom: 0,\n            },\n        ];\n    }\n}\n\nclass Watermark extends DataSource {\n    constructor(model, options) {\n        super();\n        this._private__options = options;\n        this._private__paneView = new WatermarkPaneView(this);\n    }\n    _internal_priceAxisViews() {\n        return [];\n    }\n    _internal_paneViews() {\n        return [this._private__paneView];\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_updateAllViews() {\n        this._private__paneView._internal_update();\n    }\n}\n\n/// <reference types=\"_build-time-constants\" />\n/**\n * Determine how to exit the tracking mode.\n *\n * By default, mobile users will long press to deactivate the scroll and have the ability to check values and dates.\n * Another press is required to activate the scroll, be able to move left/right, zoom, etc.\n */\nvar TrackingModeExitMode;\n(function (TrackingModeExitMode) {\n    /**\n     * Tracking Mode will be deactivated on touch end event.\n     */\n    TrackingModeExitMode[TrackingModeExitMode[\"OnTouchEnd\"] = 0] = \"OnTouchEnd\";\n    /**\n     * Tracking Mode will be deactivated on the next tap event.\n     */\n    TrackingModeExitMode[TrackingModeExitMode[\"OnNextTap\"] = 1] = \"OnNextTap\";\n})(TrackingModeExitMode || (TrackingModeExitMode = {}));\nclass ChartModel {\n    constructor(invalidateHandler, options, horzScaleBehavior) {\n        this._private__panes = [];\n        this._private__serieses = [];\n        this._private__width = 0;\n        this._private__hoveredSource = null;\n        this._private__priceScalesOptionsChanged = new Delegate();\n        this._private__crosshairMoved = new Delegate();\n        this._private__gradientColorsCache = null;\n        this._private__invalidateHandler = invalidateHandler;\n        this._private__options = options;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__rendererOptionsProvider = new PriceAxisRendererOptionsProvider(this);\n        this._private__timeScale = new TimeScale(this, options.timeScale, this._private__options.localization, horzScaleBehavior);\n        this._private__crosshair = new Crosshair(this, options.crosshair);\n        this._private__magnet = new Magnet(options.crosshair);\n        this._private__watermark = new Watermark(this, options.watermark);\n        this._internal_createPane();\n        this._private__panes[0]._internal_setStretchFactor(DEFAULT_STRETCH_FACTOR * 2);\n        this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n        this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n    }\n    _internal_fullUpdate() {\n        this._private__invalidate(InvalidateMask._internal_full());\n    }\n    _internal_lightUpdate() {\n        this._private__invalidate(InvalidateMask._internal_light());\n    }\n    _internal_cursorUpdate() {\n        this._private__invalidate(new InvalidateMask(1 /* InvalidationLevel.Cursor */));\n    }\n    _internal_updateSource(source) {\n        const inv = this._private__invalidationMaskForSource(source);\n        this._private__invalidate(inv);\n    }\n    _internal_hoveredSource() {\n        return this._private__hoveredSource;\n    }\n    _internal_setHoveredSource(source) {\n        const prevSource = this._private__hoveredSource;\n        this._private__hoveredSource = source;\n        if (prevSource !== null) {\n            this._internal_updateSource(prevSource._internal_source);\n        }\n        if (source !== null) {\n            this._internal_updateSource(source._internal_source);\n        }\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyOptions(options) {\n        merge(this._private__options, options);\n        this._private__panes.forEach((p) => p._internal_applyScaleOptions(options));\n        if (options.timeScale !== undefined) {\n            this._private__timeScale._internal_applyOptions(options.timeScale);\n        }\n        if (options.localization !== undefined) {\n            this._private__timeScale._internal_applyLocalizationOptions(options.localization);\n        }\n        if (options.leftPriceScale || options.rightPriceScale) {\n            this._private__priceScalesOptionsChanged._internal_fire();\n        }\n        this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n        this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n        this._internal_fullUpdate();\n    }\n    _internal_applyPriceScaleOptions(priceScaleId, options) {\n        if (priceScaleId === \"left\" /* DefaultPriceScaleId.Left */) {\n            this._internal_applyOptions({\n                leftPriceScale: options,\n            });\n            return;\n        }\n        else if (priceScaleId === \"right\" /* DefaultPriceScaleId.Right */) {\n            this._internal_applyOptions({\n                rightPriceScale: options,\n            });\n            return;\n        }\n        const res = this._internal_findPriceScale(priceScaleId);\n        if (res === null) {\n            {\n                throw new Error(`Trying to apply price scale options with incorrect ID: ${priceScaleId}`);\n            }\n        }\n        res._internal_priceScale._internal_applyOptions(options);\n        this._private__priceScalesOptionsChanged._internal_fire();\n    }\n    _internal_findPriceScale(priceScaleId) {\n        for (const pane of this._private__panes) {\n            const priceScale = pane._internal_priceScaleById(priceScaleId);\n            if (priceScale !== null) {\n                return {\n                    _internal_pane: pane,\n                    _internal_priceScale: priceScale,\n                };\n            }\n        }\n        return null;\n    }\n    _internal_timeScale() {\n        return this._private__timeScale;\n    }\n    _internal_panes() {\n        return this._private__panes;\n    }\n    _internal_watermarkSource() {\n        return this._private__watermark;\n    }\n    _internal_crosshairSource() {\n        return this._private__crosshair;\n    }\n    _internal_crosshairMoved() {\n        return this._private__crosshairMoved;\n    }\n    _internal_setPaneHeight(pane, height) {\n        pane._internal_setHeight(height);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_setWidth(width) {\n        this._private__width = width;\n        this._private__timeScale._internal_setWidth(this._private__width);\n        this._private__panes.forEach((pane) => pane._internal_setWidth(width));\n        this._internal_recalculateAllPanes();\n    }\n    _internal_createPane(index) {\n        const pane = new Pane(this._private__timeScale, this);\n        if (index !== undefined) {\n            this._private__panes.splice(index, 0, pane);\n        }\n        else {\n            // adding to the end - common case\n            this._private__panes.push(pane);\n        }\n        const actualIndex = (index === undefined) ? this._private__panes.length - 1 : index;\n        // we always do autoscaling on the creation\n        // if autoscale option is true, it is ok, just recalculate by invalidation mask\n        // if autoscale option is false, autoscale anyway on the first draw\n        // also there is a scenario when autoscale is true in constructor and false later on applyOptions\n        const mask = InvalidateMask._internal_full();\n        mask._internal_invalidatePane(actualIndex, {\n            _internal_level: 0 /* InvalidationLevel.None */,\n            _internal_autoScale: true,\n        });\n        this._private__invalidate(mask);\n        return pane;\n    }\n    _internal_startScalePrice(pane, priceScale, x) {\n        pane._internal_startScalePrice(priceScale, x);\n    }\n    _internal_scalePriceTo(pane, priceScale, x) {\n        pane._internal_scalePriceTo(priceScale, x);\n        this._internal_updateCrosshair();\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_endScalePrice(pane, priceScale) {\n        pane._internal_endScalePrice(priceScale);\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_startScrollPrice(pane, priceScale, x) {\n        if (priceScale._internal_isAutoScale()) {\n            return;\n        }\n        pane._internal_startScrollPrice(priceScale, x);\n    }\n    _internal_scrollPriceTo(pane, priceScale, x) {\n        if (priceScale._internal_isAutoScale()) {\n            return;\n        }\n        pane._internal_scrollPriceTo(priceScale, x);\n        this._internal_updateCrosshair();\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_endScrollPrice(pane, priceScale) {\n        if (priceScale._internal_isAutoScale()) {\n            return;\n        }\n        pane._internal_endScrollPrice(priceScale);\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_resetPriceScale(pane, priceScale) {\n        pane._internal_resetPriceScale(priceScale);\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_startScaleTime(position) {\n        this._private__timeScale._internal_startScale(position);\n    }\n    /**\n     * Zoom in/out the chart (depends on scale value).\n     *\n     * @param pointX - X coordinate of the point to apply the zoom (the point which should stay on its place)\n     * @param scale - Zoom value. Negative value means zoom out, positive - zoom in.\n     */\n    _internal_zoomTime(pointX, scale) {\n        const timeScale = this._internal_timeScale();\n        if (timeScale._internal_isEmpty() || scale === 0) {\n            return;\n        }\n        const timeScaleWidth = timeScale._internal_width();\n        pointX = Math.max(1, Math.min(pointX, timeScaleWidth));\n        timeScale._internal_zoom(pointX, scale);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_scrollChart(x) {\n        this._internal_startScrollTime(0);\n        this._internal_scrollTimeTo(x);\n        this._internal_endScrollTime();\n    }\n    _internal_scaleTimeTo(x) {\n        this._private__timeScale._internal_scaleTo(x);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_endScaleTime() {\n        this._private__timeScale._internal_endScale();\n        this._internal_lightUpdate();\n    }\n    _internal_startScrollTime(x) {\n        this._private__timeScale._internal_startScroll(x);\n    }\n    _internal_scrollTimeTo(x) {\n        this._private__timeScale._internal_scrollTo(x);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_endScrollTime() {\n        this._private__timeScale._internal_endScroll();\n        this._internal_lightUpdate();\n    }\n    _internal_serieses() {\n        return this._private__serieses;\n    }\n    _internal_setAndSaveCurrentPosition(x, y, event, pane, skipEvent) {\n        this._private__crosshair._internal_saveOriginCoord(x, y);\n        let price = NaN;\n        let index = this._private__timeScale._internal_coordinateToIndex(x);\n        const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n        if (visibleBars !== null) {\n            index = Math.min(Math.max(visibleBars._internal_left(), index), visibleBars._internal_right());\n        }\n        const priceScale = pane._internal_defaultPriceScale();\n        const firstValue = priceScale._internal_firstValue();\n        if (firstValue !== null) {\n            price = priceScale._internal_coordinateToPrice(y, firstValue);\n        }\n        price = this._private__magnet._internal_align(price, index, pane);\n        this._private__crosshair._internal_setPosition(index, price, pane);\n        this._internal_cursorUpdate();\n        if (!skipEvent) {\n            this._private__crosshairMoved._internal_fire(this._private__crosshair._internal_appliedIndex(), { x, y }, event);\n        }\n    }\n    // A position provided external (not from an internal event listener)\n    _internal_setAndSaveSyntheticPosition(price, horizontalPosition, pane) {\n        const priceScale = pane._internal_defaultPriceScale();\n        const firstValue = priceScale._internal_firstValue();\n        const y = priceScale._internal_priceToCoordinate(price, ensureNotNull(firstValue));\n        const index = this._private__timeScale._internal_timeToIndex(horizontalPosition, true);\n        const x = this._private__timeScale._internal_indexToCoordinate(ensureNotNull(index));\n        this._internal_setAndSaveCurrentPosition(x, y, null, pane, true);\n    }\n    _internal_clearCurrentPosition(skipEvent) {\n        const crosshair = this._internal_crosshairSource();\n        crosshair._internal_clearPosition();\n        this._internal_cursorUpdate();\n        if (!skipEvent) {\n            this._private__crosshairMoved._internal_fire(null, null, null);\n        }\n    }\n    _internal_updateCrosshair() {\n        // apply magnet\n        const pane = this._private__crosshair._internal_pane();\n        if (pane !== null) {\n            const x = this._private__crosshair._internal_originCoordX();\n            const y = this._private__crosshair._internal_originCoordY();\n            this._internal_setAndSaveCurrentPosition(x, y, null, pane);\n        }\n        this._private__crosshair._internal_updateAllViews();\n    }\n    _internal_updateTimeScale(newBaseIndex, newPoints, firstChangedPointIndex) {\n        const oldFirstTime = this._private__timeScale._internal_indexToTime(0);\n        if (newPoints !== undefined && firstChangedPointIndex !== undefined) {\n            this._private__timeScale._internal_update(newPoints, firstChangedPointIndex);\n        }\n        const newFirstTime = this._private__timeScale._internal_indexToTime(0);\n        const currentBaseIndex = this._private__timeScale._internal_baseIndex();\n        const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n        // if time scale cannot return current visible bars range (e.g. time scale has zero-width)\n        // then we do not need to update right offset to shift visible bars range to have the same right offset as we have before new bar\n        // (and actually we cannot)\n        if (visibleBars !== null && oldFirstTime !== null && newFirstTime !== null) {\n            const isLastSeriesBarVisible = visibleBars._internal_contains(currentBaseIndex);\n            const isLeftBarShiftToLeft = this._private__horzScaleBehavior.key(oldFirstTime) > this._private__horzScaleBehavior.key(newFirstTime);\n            const isSeriesPointsAdded = newBaseIndex !== null && newBaseIndex > currentBaseIndex;\n            const isSeriesPointsAddedToRight = isSeriesPointsAdded && !isLeftBarShiftToLeft;\n            const allowShiftWhenReplacingWhitespace = this._private__timeScale._internal_options().allowShiftVisibleRangeOnWhitespaceReplacement;\n            const replacedExistingWhitespace = firstChangedPointIndex === undefined;\n            const needShiftVisibleRangeOnNewBar = isLastSeriesBarVisible && (!replacedExistingWhitespace || allowShiftWhenReplacingWhitespace) && this._private__timeScale._internal_options().shiftVisibleRangeOnNewBar;\n            if (isSeriesPointsAddedToRight && !needShiftVisibleRangeOnNewBar) {\n                const compensationShift = newBaseIndex - currentBaseIndex;\n                this._private__timeScale._internal_setRightOffset(this._private__timeScale._internal_rightOffset() - compensationShift);\n            }\n        }\n        this._private__timeScale._internal_setBaseIndex(newBaseIndex);\n    }\n    _internal_recalculatePane(pane) {\n        if (pane !== null) {\n            pane._internal_recalculate();\n        }\n    }\n    _internal_paneForSource(source) {\n        const pane = this._private__panes.find((p) => p._internal_orderedSources().includes(source));\n        return pane === undefined ? null : pane;\n    }\n    _internal_recalculateAllPanes() {\n        this._private__watermark._internal_updateAllViews();\n        this._private__panes.forEach((p) => p._internal_recalculate());\n        this._internal_updateCrosshair();\n    }\n    _internal_destroy() {\n        this._private__panes.forEach((p) => p._internal_destroy());\n        this._private__panes.length = 0;\n        // to avoid memleaks\n        this._private__options.localization.priceFormatter = undefined;\n        this._private__options.localization.percentageFormatter = undefined;\n        this._private__options.localization.timeFormatter = undefined;\n    }\n    _internal_rendererOptionsProvider() {\n        return this._private__rendererOptionsProvider;\n    }\n    _internal_priceAxisRendererOptions() {\n        return this._private__rendererOptionsProvider._internal_options();\n    }\n    _internal_priceScalesOptionsChanged() {\n        return this._private__priceScalesOptionsChanged;\n    }\n    _internal_createSeries(seriesType, options, customPaneView) {\n        const pane = this._private__panes[0];\n        const series = this._private__createSeries(options, seriesType, pane, customPaneView);\n        this._private__serieses.push(series);\n        if (this._private__serieses.length === 1) {\n            // call fullUpdate to recalculate chart's parts geometry\n            this._internal_fullUpdate();\n        }\n        else {\n            this._internal_lightUpdate();\n        }\n        return series;\n    }\n    _internal_removeSeries(series) {\n        const pane = this._internal_paneForSource(series);\n        const seriesIndex = this._private__serieses.indexOf(series);\n        assert(seriesIndex !== -1, 'Series not found');\n        this._private__serieses.splice(seriesIndex, 1);\n        ensureNotNull(pane)._internal_removeDataSource(series);\n        if (series._internal_destroy) {\n            series._internal_destroy();\n        }\n    }\n    _internal_moveSeriesToScale(series, targetScaleId) {\n        const pane = ensureNotNull(this._internal_paneForSource(series));\n        pane._internal_removeDataSource(series);\n        // check if targetScaleId exists\n        const target = this._internal_findPriceScale(targetScaleId);\n        if (target === null) {\n            // new scale on the same pane\n            const zOrder = series._internal_zorder();\n            pane._internal_addDataSource(series, targetScaleId, zOrder);\n        }\n        else {\n            // if move to the new scale of the same pane, keep zorder\n            // if move to new pane\n            const zOrder = (target._internal_pane === pane) ? series._internal_zorder() : undefined;\n            target._internal_pane._internal_addDataSource(series, targetScaleId, zOrder);\n        }\n    }\n    _internal_fitContent() {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setFitContent();\n        this._private__invalidate(mask);\n    }\n    _internal_setTargetLogicalRange(range) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_applyRange(range);\n        this._private__invalidate(mask);\n    }\n    _internal_resetTimeScale() {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_resetTimeScale();\n        this._private__invalidate(mask);\n    }\n    _internal_setBarSpacing(spacing) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setBarSpacing(spacing);\n        this._private__invalidate(mask);\n    }\n    _internal_setRightOffset(offset) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setRightOffset(offset);\n        this._private__invalidate(mask);\n    }\n    _internal_setTimeScaleAnimation(animation) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setTimeScaleAnimation(animation);\n        this._private__invalidate(mask);\n    }\n    _internal_stopTimeScaleAnimation() {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_stopTimeScaleAnimation();\n        this._private__invalidate(mask);\n    }\n    _internal_defaultVisiblePriceScaleId() {\n        return this._private__options.rightPriceScale.visible ? \"right\" /* DefaultPriceScaleId.Right */ : \"left\" /* DefaultPriceScaleId.Left */;\n    }\n    _internal_backgroundBottomColor() {\n        return this._private__backgroundBottomColor;\n    }\n    _internal_backgroundTopColor() {\n        return this._private__backgroundTopColor;\n    }\n    _internal_backgroundColorAtYPercentFromTop(percent) {\n        const bottomColor = this._private__backgroundBottomColor;\n        const topColor = this._private__backgroundTopColor;\n        if (bottomColor === topColor) {\n            // solid background\n            return bottomColor;\n        }\n        // gradient background\n        // percent should be from 0 to 100 (we're using only integer values to make cache more efficient)\n        percent = Math.max(0, Math.min(100, Math.round(percent * 100)));\n        if (this._private__gradientColorsCache === null ||\n            this._private__gradientColorsCache._internal_topColor !== topColor || this._private__gradientColorsCache._internal_bottomColor !== bottomColor) {\n            this._private__gradientColorsCache = {\n                _internal_topColor: topColor,\n                _internal_bottomColor: bottomColor,\n                _internal_colors: new Map(),\n            };\n        }\n        else {\n            const cachedValue = this._private__gradientColorsCache._internal_colors.get(percent);\n            if (cachedValue !== undefined) {\n                return cachedValue;\n            }\n        }\n        const result = gradientColorAtPercent(topColor, bottomColor, percent / 100);\n        this._private__gradientColorsCache._internal_colors.set(percent, result);\n        return result;\n    }\n    _private__paneInvalidationMask(pane, level) {\n        const inv = new InvalidateMask(level);\n        if (pane !== null) {\n            const index = this._private__panes.indexOf(pane);\n            inv._internal_invalidatePane(index, {\n                _internal_level: level,\n            });\n        }\n        return inv;\n    }\n    _private__invalidationMaskForSource(source, invalidateType) {\n        if (invalidateType === undefined) {\n            invalidateType = 2 /* InvalidationLevel.Light */;\n        }\n        return this._private__paneInvalidationMask(this._internal_paneForSource(source), invalidateType);\n    }\n    _private__invalidate(mask) {\n        if (this._private__invalidateHandler) {\n            this._private__invalidateHandler(mask);\n        }\n        this._private__panes.forEach((pane) => pane._internal_grid()._internal_paneView()._internal_update());\n    }\n    _private__createSeries(options, seriesType, pane, customPaneView) {\n        const series = new Series(this, options, seriesType, pane, customPaneView);\n        const targetScaleId = options.priceScaleId !== undefined ? options.priceScaleId : this._internal_defaultVisiblePriceScaleId();\n        pane._internal_addDataSource(series, targetScaleId);\n        if (!isDefaultPriceScale(targetScaleId)) {\n            // let's apply that options again to apply margins\n            series._internal_applyOptions(options);\n        }\n        return series;\n    }\n    _private__getBackgroundColor(side) {\n        const layoutOptions = this._private__options.layout;\n        if (layoutOptions.background.type === \"gradient\" /* ColorType.VerticalGradient */) {\n            return side === 0 /* BackgroundColorSide.Top */ ?\n                layoutOptions.background.topColor :\n                layoutOptions.background.bottomColor;\n        }\n        return layoutOptions.background.color;\n    }\n}\n\nfunction fillUpDownCandlesticksColors(options) {\n    if (options.borderColor !== undefined) {\n        options.borderUpColor = options.borderColor;\n        options.borderDownColor = options.borderColor;\n    }\n    if (options.wickColor !== undefined) {\n        options.wickUpColor = options.wickColor;\n        options.wickDownColor = options.wickColor;\n    }\n}\n/**\n * Represents the type of the last price animation for series such as area or line.\n */\nvar LastPriceAnimationMode;\n(function (LastPriceAnimationMode) {\n    /**\n     * Animation is always disabled\n     */\n    LastPriceAnimationMode[LastPriceAnimationMode[\"Disabled\"] = 0] = \"Disabled\";\n    /**\n     * Animation is always enabled.\n     */\n    LastPriceAnimationMode[LastPriceAnimationMode[\"Continuous\"] = 1] = \"Continuous\";\n    /**\n     * Animation is active after new data.\n     */\n    LastPriceAnimationMode[LastPriceAnimationMode[\"OnDataUpdate\"] = 2] = \"OnDataUpdate\";\n})(LastPriceAnimationMode || (LastPriceAnimationMode = {}));\nfunction precisionByMinMove(minMove) {\n    if (minMove >= 1) {\n        return 0;\n    }\n    let i = 0;\n    for (; i < 8; i++) {\n        const intPart = Math.round(minMove);\n        const fractPart = Math.abs(intPart - minMove);\n        if (fractPart < 1e-8) {\n            return i;\n        }\n        minMove = minMove * 10;\n    }\n    return i;\n}\n/**\n * Represents the source of data to be used for the horizontal price line.\n */\nvar PriceLineSource;\n(function (PriceLineSource) {\n    /**\n     * Use the last bar data.\n     */\n    PriceLineSource[PriceLineSource[\"LastBar\"] = 0] = \"LastBar\";\n    /**\n     * Use the last visible data of the chart viewport.\n     */\n    PriceLineSource[PriceLineSource[\"LastVisible\"] = 1] = \"LastVisible\";\n})(PriceLineSource || (PriceLineSource = {}));\n\n/**\n * Represents a type of color.\n */\nvar ColorType;\n(function (ColorType) {\n    /** Solid color */\n    ColorType[\"Solid\"] = \"solid\";\n    /** Vertical gradient color */\n    ColorType[\"VerticalGradient\"] = \"gradient\";\n})(ColorType || (ColorType = {}));\n\n/**\n * Check if a time value is a business day object.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link BusinessDay} object, false otherwise.\n */\nfunction isBusinessDay(time) {\n    return !isNumber(time) && !isString(time);\n}\n/**\n * Check if a time value is a UTC timestamp number.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link UTCTimestamp} number, false otherwise.\n */\nfunction isUTCTimestamp(time) {\n    return isNumber(time);\n}\n/**\n * Represents the type of a tick mark on the time axis.\n */\nvar TickMarkType;\n(function (TickMarkType) {\n    /**\n     * The start of the year (e.g. it's the first tick mark in a year).\n     */\n    TickMarkType[TickMarkType[\"Year\"] = 0] = \"Year\";\n    /**\n     * The start of the month (e.g. it's the first tick mark in a month).\n     */\n    TickMarkType[TickMarkType[\"Month\"] = 1] = \"Month\";\n    /**\n     * A day of the month.\n     */\n    TickMarkType[TickMarkType[\"DayOfMonth\"] = 2] = \"DayOfMonth\";\n    /**\n     * A time without seconds.\n     */\n    TickMarkType[TickMarkType[\"Time\"] = 3] = \"Time\";\n    /**\n     * A time with seconds.\n     */\n    TickMarkType[TickMarkType[\"TimeWithSeconds\"] = 4] = \"TimeWithSeconds\";\n})(TickMarkType || (TickMarkType = {}));\n\nconst getMonth = (date) => date.getUTCMonth() + 1;\nconst getDay = (date) => date.getUTCDate();\nconst getYear = (date) => date.getUTCFullYear();\nconst dd = (date) => numberToStringWithLeadingZero(getDay(date), 2);\nconst MMMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1)\n    .toLocaleString(locale, { month: 'long' });\nconst MMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1)\n    .toLocaleString(locale, { month: 'short' });\nconst MM = (date) => numberToStringWithLeadingZero(getMonth(date), 2);\nconst yy = (date) => numberToStringWithLeadingZero(getYear(date) % 100, 2);\nconst yyyy = (date) => numberToStringWithLeadingZero(getYear(date), 4);\nfunction formatDate(date, format, locale) {\n    return format\n        .replace(/yyyy/g, yyyy(date))\n        .replace(/yy/g, yy(date))\n        .replace(/MMMM/g, MMMM(date, locale))\n        .replace(/MMM/g, MMM(date, locale))\n        .replace(/MM/g, MM(date))\n        .replace(/dd/g, dd(date));\n}\n\nclass DateFormatter {\n    constructor(dateFormat = 'yyyy-MM-dd', locale = 'default') {\n        this._private__dateFormat = dateFormat;\n        this._private__locale = locale;\n    }\n    _internal_format(date) {\n        return formatDate(date, this._private__dateFormat, this._private__locale);\n    }\n}\n\nclass TimeFormatter {\n    constructor(format) {\n        this._private__formatStr = format || '%h:%m:%s';\n    }\n    _internal_format(date) {\n        return this._private__formatStr.replace('%h', numberToStringWithLeadingZero(date.getUTCHours(), 2)).\n            replace('%m', numberToStringWithLeadingZero(date.getUTCMinutes(), 2)).\n            replace('%s', numberToStringWithLeadingZero(date.getUTCSeconds(), 2));\n    }\n}\n\nconst defaultParams = {\n    _internal_dateFormat: 'yyyy-MM-dd',\n    _internal_timeFormat: '%h:%m:%s',\n    _internal_dateTimeSeparator: ' ',\n    _internal_locale: 'default',\n};\nclass DateTimeFormatter {\n    constructor(params = {}) {\n        const formatterParams = Object.assign(Object.assign({}, defaultParams), params);\n        this._private__dateFormatter = new DateFormatter(formatterParams._internal_dateFormat, formatterParams._internal_locale);\n        this._private__timeFormatter = new TimeFormatter(formatterParams._internal_timeFormat);\n        this._private__separator = formatterParams._internal_dateTimeSeparator;\n    }\n    _internal_format(dateTime) {\n        return `${this._private__dateFormatter._internal_format(dateTime)}${this._private__separator}${this._private__timeFormatter._internal_format(dateTime)}`;\n    }\n}\n\nfunction defaultTickMarkFormatter(timePoint, tickMarkType, locale) {\n    const formatOptions = {};\n    switch (tickMarkType) {\n        case 0 /* TickMarkType.Year */:\n            formatOptions.year = 'numeric';\n            break;\n        case 1 /* TickMarkType.Month */:\n            formatOptions.month = 'short';\n            break;\n        case 2 /* TickMarkType.DayOfMonth */:\n            formatOptions.day = 'numeric';\n            break;\n        case 3 /* TickMarkType.Time */:\n            formatOptions.hour12 = false;\n            formatOptions.hour = '2-digit';\n            formatOptions.minute = '2-digit';\n            break;\n        case 4 /* TickMarkType.TimeWithSeconds */:\n            formatOptions.hour12 = false;\n            formatOptions.hour = '2-digit';\n            formatOptions.minute = '2-digit';\n            formatOptions.second = '2-digit';\n            break;\n    }\n    const date = timePoint._internal_businessDay === undefined\n        ? new Date(timePoint._internal_timestamp * 1000)\n        : new Date(Date.UTC(timePoint._internal_businessDay.year, timePoint._internal_businessDay.month - 1, timePoint._internal_businessDay.day));\n    // from given date we should use only as UTC date or timestamp\n    // but to format as locale date we can convert UTC date to local date\n    const localDateFromUtc = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n    return localDateFromUtc.toLocaleString(locale, formatOptions);\n}\n\nfunction hours(count) {\n    return count * 60 * 60 * 1000;\n}\nfunction minutes(count) {\n    return count * 60 * 1000;\n}\nfunction seconds(count) {\n    return count * 1000;\n}\nconst intradayWeightDivisors = [\n    { _internal_divisor: seconds(1), _internal_weight: 10 /* TickMarkWeight.Second */ },\n    { _internal_divisor: minutes(1), _internal_weight: 20 /* TickMarkWeight.Minute1 */ },\n    { _internal_divisor: minutes(5), _internal_weight: 21 /* TickMarkWeight.Minute5 */ },\n    { _internal_divisor: minutes(30), _internal_weight: 22 /* TickMarkWeight.Minute30 */ },\n    { _internal_divisor: hours(1), _internal_weight: 30 /* TickMarkWeight.Hour1 */ },\n    { _internal_divisor: hours(3), _internal_weight: 31 /* TickMarkWeight.Hour3 */ },\n    { _internal_divisor: hours(6), _internal_weight: 32 /* TickMarkWeight.Hour6 */ },\n    { _internal_divisor: hours(12), _internal_weight: 33 /* TickMarkWeight.Hour12 */ },\n];\nfunction weightByTime(currentDate, prevDate) {\n    if (currentDate.getUTCFullYear() !== prevDate.getUTCFullYear()) {\n        return 70 /* TickMarkWeight.Year */;\n    }\n    else if (currentDate.getUTCMonth() !== prevDate.getUTCMonth()) {\n        return 60 /* TickMarkWeight.Month */;\n    }\n    else if (currentDate.getUTCDate() !== prevDate.getUTCDate()) {\n        return 50 /* TickMarkWeight.Day */;\n    }\n    for (let i = intradayWeightDivisors.length - 1; i >= 0; --i) {\n        if (Math.floor(prevDate.getTime() / intradayWeightDivisors[i]._internal_divisor) !== Math.floor(currentDate.getTime() / intradayWeightDivisors[i]._internal_divisor)) {\n            return intradayWeightDivisors[i]._internal_weight;\n        }\n    }\n    return 0 /* TickMarkWeight.LessThanSecond */;\n}\nfunction cast(t) {\n    return t;\n}\nfunction fillWeightsForPoints(sortedTimePoints, startIndex = 0) {\n    if (sortedTimePoints.length === 0) {\n        return;\n    }\n    let prevTime = startIndex === 0 ? null : cast(sortedTimePoints[startIndex - 1].time)._internal_timestamp;\n    let prevDate = prevTime !== null ? new Date(prevTime * 1000) : null;\n    let totalTimeDiff = 0;\n    for (let index = startIndex; index < sortedTimePoints.length; ++index) {\n        const currentPoint = sortedTimePoints[index];\n        const currentDate = new Date(cast(currentPoint.time)._internal_timestamp * 1000);\n        if (prevDate !== null) {\n            currentPoint.timeWeight = weightByTime(currentDate, prevDate);\n        }\n        totalTimeDiff += cast(currentPoint.time)._internal_timestamp - (prevTime || cast(currentPoint.time)._internal_timestamp);\n        prevTime = cast(currentPoint.time)._internal_timestamp;\n        prevDate = currentDate;\n    }\n    if (startIndex === 0 && sortedTimePoints.length > 1) {\n        // let's guess a weight for the first point\n        // let's say the previous point was average time back in the history\n        const averageTimeDiff = Math.ceil(totalTimeDiff / (sortedTimePoints.length - 1));\n        const approxPrevDate = new Date((cast(sortedTimePoints[0].time)._internal_timestamp - averageTimeDiff) * 1000);\n        sortedTimePoints[0].timeWeight = weightByTime(new Date(cast(sortedTimePoints[0].time)._internal_timestamp * 1000), approxPrevDate);\n    }\n}\n\nfunction businessDayConverter(time) {\n    let businessDay = time;\n    if (isString(time)) {\n        businessDay = stringToBusinessDay(time);\n    }\n    if (!isBusinessDay(businessDay)) {\n        throw new Error('time must be of type BusinessDay');\n    }\n    const date = new Date(Date.UTC(businessDay.year, businessDay.month - 1, businessDay.day, 0, 0, 0, 0));\n    return {\n        _internal_timestamp: Math.round(date.getTime() / 1000),\n        _internal_businessDay: businessDay,\n    };\n}\nfunction timestampConverter(time) {\n    if (!isUTCTimestamp(time)) {\n        throw new Error('time must be of type isUTCTimestamp');\n    }\n    return {\n        _internal_timestamp: time,\n    };\n}\nfunction selectTimeConverter(data) {\n    if (data.length === 0) {\n        return null;\n    }\n    if (isBusinessDay(data[0].time) || isString(data[0].time)) {\n        return businessDayConverter;\n    }\n    return timestampConverter;\n}\nconst validDateRegex = /^\\d\\d\\d\\d-\\d\\d-\\d\\d$/;\nfunction convertTime(time) {\n    if (isUTCTimestamp(time)) {\n        return timestampConverter(time);\n    }\n    if (!isBusinessDay(time)) {\n        return businessDayConverter(stringToBusinessDay(time));\n    }\n    return businessDayConverter(time);\n}\nfunction stringToBusinessDay(value) {\n    {\n        // in some browsers (I look at your Chrome) the Date constructor may accept invalid date string\n        // but parses them in 'implementation specific' way\n        // for example 2019-1-1 isn't the same as 2019-01-01 (for Chrome both are 'valid' date strings)\n        // see https://bugs.chromium.org/p/chromium/issues/detail?id=968939\n        // so, we need to be sure that date has valid format to avoid strange behavior and hours of debugging\n        // but let's do this in development build only because of perf\n        if (!validDateRegex.test(value)) {\n            throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n        }\n    }\n    const d = new Date(value);\n    if (isNaN(d.getTime())) {\n        throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n    }\n    return {\n        day: d.getUTCDate(),\n        month: d.getUTCMonth() + 1,\n        year: d.getUTCFullYear(),\n    };\n}\nfunction convertStringToBusinessDay(value) {\n    if (isString(value.time)) {\n        value.time = stringToBusinessDay(value.time);\n    }\n}\nfunction convertStringsToBusinessDays(data) {\n    return data.forEach(convertStringToBusinessDay);\n}\n\n// eslint-disable-next-line complexity\nfunction weightToTickMarkType(weight, timeVisible, secondsVisible) {\n    switch (weight) {\n        case 0 /* TickMarkWeight.LessThanSecond */:\n        case 10 /* TickMarkWeight.Second */:\n            return timeVisible\n                ? (secondsVisible ? 4 /* TickMarkType.TimeWithSeconds */ : 3 /* TickMarkType.Time */)\n                : 2 /* TickMarkType.DayOfMonth */;\n        case 20 /* TickMarkWeight.Minute1 */:\n        case 21 /* TickMarkWeight.Minute5 */:\n        case 22 /* TickMarkWeight.Minute30 */:\n        case 30 /* TickMarkWeight.Hour1 */:\n        case 31 /* TickMarkWeight.Hour3 */:\n        case 32 /* TickMarkWeight.Hour6 */:\n        case 33 /* TickMarkWeight.Hour12 */:\n            return timeVisible ? 3 /* TickMarkType.Time */ : 2 /* TickMarkType.DayOfMonth */;\n        case 50 /* TickMarkWeight.Day */:\n            return 2 /* TickMarkType.DayOfMonth */;\n        case 60 /* TickMarkWeight.Month */:\n            return 1 /* TickMarkType.Month */;\n        case 70 /* TickMarkWeight.Year */:\n            return 0 /* TickMarkType.Year */;\n    }\n}\nclass HorzScaleBehaviorTime {\n    options() {\n        return this._private__options;\n    }\n    setOptions(options) {\n        this._private__options = options;\n        this.updateFormatter(options.localization);\n    }\n    preprocessData(data) {\n        if (Array.isArray(data)) {\n            convertStringsToBusinessDays(data);\n        }\n        else {\n            convertStringToBusinessDay(data);\n        }\n    }\n    createConverterToInternalObj(data) {\n        return ensureNotNull(selectTimeConverter(data));\n    }\n    key(item) {\n        // eslint-disable-next-line no-restricted-syntax\n        if (typeof item === 'object' && \"_internal_timestamp\" in item) {\n            return item._internal_timestamp;\n        }\n        else {\n            return this.key(this.convertHorzItemToInternal(item));\n        }\n    }\n    cacheKey(item) {\n        const time = item;\n        return time._internal_businessDay === undefined\n            ? new Date(time._internal_timestamp * 1000).getTime()\n            : new Date(Date.UTC(time._internal_businessDay.year, time._internal_businessDay.month - 1, time._internal_businessDay.day)).getTime();\n    }\n    convertHorzItemToInternal(item) {\n        return convertTime(item);\n    }\n    updateFormatter(options) {\n        if (!this._private__options) {\n            return;\n        }\n        const dateFormat = options.dateFormat;\n        if (this._private__options.timeScale.timeVisible) {\n            this._private__dateTimeFormatter = new DateTimeFormatter({\n                _internal_dateFormat: dateFormat,\n                _internal_timeFormat: this._private__options.timeScale.secondsVisible ? '%h:%m:%s' : '%h:%m',\n                _internal_dateTimeSeparator: '   ',\n                _internal_locale: options.locale,\n            });\n        }\n        else {\n            this._private__dateTimeFormatter = new DateFormatter(dateFormat, options.locale);\n        }\n    }\n    formatHorzItem(item) {\n        const tp = item;\n        return this._private__dateTimeFormatter._internal_format(new Date(tp._internal_timestamp * 1000));\n    }\n    formatTickmark(tickMark, localizationOptions) {\n        const tickMarkType = weightToTickMarkType(tickMark.weight, this._private__options.timeScale.timeVisible, this._private__options.timeScale.secondsVisible);\n        const options = this._private__options.timeScale;\n        if (options.tickMarkFormatter !== undefined) {\n            const tickMarkString = options.tickMarkFormatter(tickMark.originalTime, tickMarkType, localizationOptions.locale);\n            if (tickMarkString !== null) {\n                return tickMarkString;\n            }\n        }\n        return defaultTickMarkFormatter(tickMark.time, tickMarkType, localizationOptions.locale);\n    }\n    maxTickMarkWeight(tickMarks) {\n        let maxWeight = tickMarks.reduce(markWithGreaterWeight, tickMarks[0]).weight;\n        // special case: it looks strange if 15:00 is bold but 14:00 is not\n        // so if maxWeight > TickMarkWeight.Hour1 and < TickMarkWeight.Day reduce it to TickMarkWeight.Hour1\n        if (maxWeight > 30 /* TickMarkWeight.Hour1 */ && maxWeight < 50 /* TickMarkWeight.Day */) {\n            maxWeight = 30 /* TickMarkWeight.Hour1 */;\n        }\n        return maxWeight;\n    }\n    fillWeightsForPoints(sortedTimePoints, startIndex) {\n        fillWeightsForPoints(sortedTimePoints, startIndex);\n    }\n    static _internal_applyDefaults(options) {\n        return merge({ localization: { dateFormat: 'dd MMM \\'yy' } }, options !== null && options !== void 0 ? options : {});\n    }\n}\n\n/**\n * When you're trying to use the library in server-side context (for instance in SSR)\n * you don't have some browser-specific variables like navigator or window\n * and if the library will use them on the top level of the library\n * the import will fail due ReferenceError\n * thus, this allows use the navigator on the top level and being imported in server-side context as well\n * See issue #446\n */\n// eslint-disable-next-line @typescript-eslint/tslint/config\nconst isRunningOnClientSide = typeof window !== 'undefined';\n\nfunction isFF() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    return window.navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n}\nfunction isIOS() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    return /iPhone|iPad|iPod/.test(window.navigator.platform);\n}\nfunction isChrome() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    return window.chrome !== undefined;\n}\n// Determine whether the browser is running on windows.\nfunction isWindows() {\n    var _a;\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    // more accurate if available\n    if ((_a = navigator === null || navigator === void 0 ? void 0 : navigator.userAgentData) === null || _a === void 0 ? void 0 : _a.platform) {\n        return navigator.userAgentData.platform === 'Windows';\n    }\n    return navigator.userAgent.toLowerCase().indexOf('win') >= 0;\n}\n// Determine whether the browser is Chromium based.\nfunction isChromiumBased() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    if (!navigator.userAgentData) {\n        return false;\n    }\n    return navigator.userAgentData.brands.some((brand) => {\n        return brand.brand.includes('Chromium');\n    });\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction warn(msg) {\n    {\n        // eslint-disable-next-line no-console\n        console.warn(msg);\n    }\n}\n\n// on Hi-DPI CSS size * Device Pixel Ratio should be integer to avoid smoothing\n// For chart widget we decrease the size because we must be inside container.\n// For time axis this is not important, since it just affects space for pane widgets\nfunction suggestChartSize(originalSize) {\n    const integerWidth = Math.floor(originalSize.width);\n    const integerHeight = Math.floor(originalSize.height);\n    const width = integerWidth - (integerWidth % 2);\n    const height = integerHeight - (integerHeight % 2);\n    return size$1({ width, height });\n}\nfunction suggestTimeScaleHeight(originalHeight) {\n    return originalHeight + (originalHeight % 2);\n}\nfunction suggestPriceScaleWidth(originalWidth) {\n    return originalWidth + (originalWidth % 2);\n}\n\nfunction distanceBetweenPoints(pos1, pos2) {\n    return pos1._internal_position - pos2._internal_position;\n}\nfunction speedPxPerMSec(pos1, pos2, maxSpeed) {\n    const speed = (pos1._internal_position - pos2._internal_position) / (pos1._internal_time - pos2._internal_time);\n    return Math.sign(speed) * Math.min(Math.abs(speed), maxSpeed);\n}\nfunction durationMSec(speed, dumpingCoeff) {\n    const lnDumpingCoeff = Math.log(dumpingCoeff);\n    return Math.log((1 /* Constants.EpsilonDistance */ * lnDumpingCoeff) / -speed) / (lnDumpingCoeff);\n}\nclass KineticAnimation {\n    constructor(minSpeed, maxSpeed, dumpingCoeff, minMove) {\n        this._private__position1 = null;\n        this._private__position2 = null;\n        this._private__position3 = null;\n        this._private__position4 = null;\n        this._private__animationStartPosition = null;\n        this._private__durationMsecs = 0;\n        this._private__speedPxPerMsec = 0;\n        this._private__minSpeed = minSpeed;\n        this._private__maxSpeed = maxSpeed;\n        this._private__dumpingCoeff = dumpingCoeff;\n        this._private__minMove = minMove;\n    }\n    _internal_addPosition(position, time) {\n        if (this._private__position1 !== null) {\n            if (this._private__position1._internal_time === time) {\n                this._private__position1._internal_position = position;\n                return;\n            }\n            if (Math.abs(this._private__position1._internal_position - position) < this._private__minMove) {\n                return;\n            }\n        }\n        this._private__position4 = this._private__position3;\n        this._private__position3 = this._private__position2;\n        this._private__position2 = this._private__position1;\n        this._private__position1 = { _internal_time: time, _internal_position: position };\n    }\n    _internal_start(position, time) {\n        if (this._private__position1 === null || this._private__position2 === null) {\n            return;\n        }\n        if (time - this._private__position1._internal_time > 50 /* Constants.MaxStartDelay */) {\n            return;\n        }\n        // To calculate all the rest parameters we should calculate the speed af first\n        let totalDistance = 0;\n        const speed1 = speedPxPerMSec(this._private__position1, this._private__position2, this._private__maxSpeed);\n        const distance1 = distanceBetweenPoints(this._private__position1, this._private__position2);\n        // We're calculating weighted average speed\n        // Than more distance for a segment, than more its weight\n        const speedItems = [speed1];\n        const distanceItems = [distance1];\n        totalDistance += distance1;\n        if (this._private__position3 !== null) {\n            const speed2 = speedPxPerMSec(this._private__position2, this._private__position3, this._private__maxSpeed);\n            // stop at this moment if direction of the segment is opposite\n            if (Math.sign(speed2) === Math.sign(speed1)) {\n                const distance2 = distanceBetweenPoints(this._private__position2, this._private__position3);\n                speedItems.push(speed2);\n                distanceItems.push(distance2);\n                totalDistance += distance2;\n                if (this._private__position4 !== null) {\n                    const speed3 = speedPxPerMSec(this._private__position3, this._private__position4, this._private__maxSpeed);\n                    if (Math.sign(speed3) === Math.sign(speed1)) {\n                        const distance3 = distanceBetweenPoints(this._private__position3, this._private__position4);\n                        speedItems.push(speed3);\n                        distanceItems.push(distance3);\n                        totalDistance += distance3;\n                    }\n                }\n            }\n        }\n        let resultSpeed = 0;\n        for (let i = 0; i < speedItems.length; ++i) {\n            resultSpeed += distanceItems[i] / totalDistance * speedItems[i];\n        }\n        if (Math.abs(resultSpeed) < this._private__minSpeed) {\n            return;\n        }\n        this._private__animationStartPosition = { _internal_position: position, _internal_time: time };\n        this._private__speedPxPerMsec = resultSpeed;\n        this._private__durationMsecs = durationMSec(Math.abs(resultSpeed), this._private__dumpingCoeff);\n    }\n    _internal_getPosition(time) {\n        const startPosition = ensureNotNull(this._private__animationStartPosition);\n        const durationMsecs = time - startPosition._internal_time;\n        return startPosition._internal_position + this._private__speedPxPerMsec * (Math.pow(this._private__dumpingCoeff, durationMsecs) - 1) / (Math.log(this._private__dumpingCoeff));\n    }\n    _internal_finished(time) {\n        return this._private__animationStartPosition === null || this._private__progressDuration(time) === this._private__durationMsecs;\n    }\n    _private__progressDuration(time) {\n        const startPosition = ensureNotNull(this._private__animationStartPosition);\n        const progress = time - startPosition._internal_time;\n        return Math.min(progress, this._private__durationMsecs);\n    }\n}\n\nconst svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 35 19\" width=\"35\" height=\"19\" fill=\"none\"><g fill-rule=\"evenodd\" clip-path=\"url(#a)\" clip-rule=\"evenodd\"><path fill=\"var(--stroke)\" d=\"M2 0H0v10h6v9h21.4l.5-1.3 6-15 1-2.7H23.7l-.5 1.3-.2.6a5 5 0 0 0-7-.9V0H2Zm20 17h4l5.2-13 .8-2h-7l-1 2.5-.2.5-1.5 3.8-.3.7V17Zm-.8-10a3 3 0 0 0 .7-2.7A3 3 0 1 0 16.8 7h4.4ZM14 7V2H2v6h6v9h4V7h2Z\"/><path fill=\"var(--fill)\" d=\"M14 2H2v6h6v9h6V2Zm12 15h-7l6-15h7l-6 15Zm-7-9a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\"/></g><defs><clipPath id=\"a\"><path fill=\"var(--stroke)\" d=\"M0 0h35v19H0z\"/></clipPath></defs></svg>`;\nconst css = `a#tv-attr-logo{--fill:#131722;--stroke:#fff;position:absolute;left:10px;bottom:10px;height:19px;width:35px;margin:0;padding:0;border:0;z-index:3;}a#tv-attr-logo[data-dark]{--fill:#D1D4DC;--stroke:#131722;}`;\n// This widget doesn't support dynamically responding to options changes\n// because it is expected that the `attributionLogo` option won't be changed\n// and this saves some bundle size.\nclass AttributionLogoWidget {\n    constructor(container, chart) {\n        this._private__element = undefined;\n        this._private__cssElement = undefined;\n        this._private__theme = undefined;\n        this._private__visible = false;\n        this._private__container = container;\n        this._private__chart = chart;\n        this._private__render();\n    }\n    _internal_update() {\n        this._private__render();\n    }\n    _internal_removeElement() {\n        if (this._private__element) {\n            this._private__container.removeChild(this._private__element);\n        }\n        if (this._private__cssElement) {\n            this._private__container.removeChild(this._private__cssElement);\n        }\n        this._private__element = undefined;\n        this._private__cssElement = undefined;\n    }\n    _private__shouldUpdate() {\n        return this._private__visible !== this._private__shouldBeVisible() || this._private__theme !== this._private__themeToUse();\n    }\n    _private__themeToUse() {\n        return colorStringToGrayscale(this._private__chart._internal_options().layout.textColor) > 160 ? 'dark' : 'light';\n    }\n    _private__shouldBeVisible() {\n        return this._private__chart._internal_options().layout.attributionLogo;\n    }\n    _private__getUTMSource() {\n        const url = new URL(location.href);\n        if (!url.hostname) {\n            // ignore local testing\n            return '';\n        }\n        return '&utm_source=' + url.hostname + url.pathname;\n    }\n    _private__render() {\n        if (!this._private__shouldUpdate()) {\n            return;\n        }\n        this._internal_removeElement();\n        this._private__visible = this._private__shouldBeVisible();\n        if (this._private__visible) {\n            this._private__theme = this._private__themeToUse();\n            this._private__cssElement = document.createElement('style');\n            this._private__cssElement.innerText = css;\n            this._private__element = document.createElement('a');\n            this._private__element.href = `https://www.tradingview.com/?utm_medium=lwc-link&utm_campaign=lwc-chart${this._private__getUTMSource()}`;\n            this._private__element.title = 'Charting by TradingView';\n            this._private__element.id = 'tv-attr-logo';\n            this._private__element.target = '_blank';\n            this._private__element.innerHTML = svg;\n            this._private__element.toggleAttribute('data-dark', this._private__theme === 'dark');\n            this._private__container.appendChild(this._private__cssElement);\n            this._private__container.appendChild(this._private__element);\n        }\n    }\n}\n\nfunction createBoundCanvas(parentElement, size) {\n    const doc = ensureNotNull(parentElement.ownerDocument);\n    const canvas = doc.createElement('canvas');\n    parentElement.appendChild(canvas);\n    const binding = bindCanvasElementBitmapSizeTo(canvas, {\n        type: 'device-pixel-content-box',\n        options: {\n            allowResizeObserver: false,\n        },\n        transform: (bitmapSize, canvasElementClientSize) => ({\n            width: Math.max(bitmapSize.width, canvasElementClientSize.width),\n            height: Math.max(bitmapSize.height, canvasElementClientSize.height),\n        }),\n    });\n    binding.resizeCanvasElement(size);\n    return binding;\n}\nfunction releaseCanvas(canvas) {\n    var _a;\n    // This function fixes the iOS Safari error \"Total canvas memory use exceeds the maximum limit\".\n    // Seems that iOS Safari stores canvas elements for some additional time internally.\n    // So if we create/destroy a lot of canvas elements in a short period of time we can get this error.\n    // We resize the canvas to 1x1 pixels to force it to release memmory resources.\n    canvas.width = 1;\n    canvas.height = 1;\n    (_a = canvas.getContext('2d')) === null || _a === void 0 ? void 0 : _a.clearRect(0, 0, 1, 1);\n}\n\nfunction drawBackground(renderer, target, isHovered, hitTestData) {\n    if (renderer._internal_drawBackground) {\n        renderer._internal_drawBackground(target, isHovered, hitTestData);\n    }\n}\nfunction drawForeground(renderer, target, isHovered, hitTestData) {\n    renderer._internal_draw(target, isHovered, hitTestData);\n}\nfunction drawSourcePaneViews(paneViewsGetter, drawRendererFn, source, pane) {\n    const paneViews = paneViewsGetter(source, pane);\n    for (const paneView of paneViews) {\n        const renderer = paneView._internal_renderer();\n        if (renderer !== null) {\n            drawRendererFn(renderer);\n        }\n    }\n}\n\nfunction preventScrollByWheelClick(el) {\n    if (!isChrome()) {\n        return;\n    }\n    el.addEventListener('mousedown', (e) => {\n        if (e.button === 1 /* MouseEventButton.Middle */) {\n            // prevent incorrect scrolling event\n            e.preventDefault();\n            return false;\n        }\n        return undefined;\n    });\n}\n\n// TODO: get rid of a lot of boolean flags, probably we should replace it with some enum\nclass MouseEventHandler {\n    constructor(target, handler, options) {\n        this._private__clickCount = 0;\n        this._private__clickTimeoutId = null;\n        this._private__clickPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n        this._private__tapCount = 0;\n        this._private__tapTimeoutId = null;\n        this._private__tapPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n        this._private__longTapTimeoutId = null;\n        this._private__longTapActive = false;\n        this._private__mouseMoveStartPosition = null;\n        this._private__touchMoveStartPosition = null;\n        this._private__touchMoveExceededManhattanDistance = false;\n        this._private__cancelClick = false;\n        this._private__cancelTap = false;\n        this._private__unsubscribeOutsideMouseEvents = null;\n        this._private__unsubscribeOutsideTouchEvents = null;\n        this._private__unsubscribeMobileSafariEvents = null;\n        this._private__unsubscribeMousemove = null;\n        this._private__unsubscribeRootMouseEvents = null;\n        this._private__unsubscribeRootTouchEvents = null;\n        this._private__startPinchMiddlePoint = null;\n        this._private__startPinchDistance = 0;\n        this._private__pinchPrevented = false;\n        this._private__preventTouchDragProcess = false;\n        this._private__mousePressed = false;\n        this._private__lastTouchEventTimeStamp = 0;\n        // for touchstart/touchmove/touchend events we handle only first touch\n        // i.e. we don't support several active touches at the same time (except pinch event)\n        this._private__activeTouchId = null;\n        // accept all mouse leave events if it's not an iOS device\n        // see _mouseEnterHandler, _mouseMoveHandler, _mouseLeaveHandler\n        this._private__acceptMouseLeave = !isIOS();\n        /**\n         * In Firefox mouse events dont't fire if the mouse position is outside of the browser's border.\n         * To prevent the mouse from hanging while pressed we're subscribing on the mouseleave event of the document element.\n         * We're subscribing on mouseleave, but this event is actually fired on mouseup outside of the browser's border.\n         */\n        this._private__onFirefoxOutsideMouseUp = (mouseUpEvent) => {\n            this._private__mouseUpHandler(mouseUpEvent);\n        };\n        /**\n         * Safari doesn't fire touchstart/mousedown events on double tap since iOS 13.\n         * There are two possible solutions:\n         * 1) Call preventDefault in touchEnd handler. But it also prevents click event from firing.\n         * 2) Add listener on dblclick event that fires with the preceding mousedown/mouseup.\n         * https://developer.apple.com/forums/thread/125073\n         */\n        this._private__onMobileSafariDoubleClick = (dblClickEvent) => {\n            if (this._private__firesTouchEvents(dblClickEvent)) {\n                const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n                ++this._private__tapCount;\n                if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n                    const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__tapPosition);\n                    if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n                        this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n                    }\n                    this._private__resetTapTimeout();\n                }\n            }\n            else {\n                const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n                ++this._private__clickCount;\n                if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n                    const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__clickPosition);\n                    if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n                        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n                    }\n                    this._private__resetClickTimeout();\n                }\n            }\n        };\n        this._private__target = target;\n        this._private__handler = handler;\n        this._private__options = options;\n        this._private__init();\n    }\n    _internal_destroy() {\n        if (this._private__unsubscribeOutsideMouseEvents !== null) {\n            this._private__unsubscribeOutsideMouseEvents();\n            this._private__unsubscribeOutsideMouseEvents = null;\n        }\n        if (this._private__unsubscribeOutsideTouchEvents !== null) {\n            this._private__unsubscribeOutsideTouchEvents();\n            this._private__unsubscribeOutsideTouchEvents = null;\n        }\n        if (this._private__unsubscribeMousemove !== null) {\n            this._private__unsubscribeMousemove();\n            this._private__unsubscribeMousemove = null;\n        }\n        if (this._private__unsubscribeRootMouseEvents !== null) {\n            this._private__unsubscribeRootMouseEvents();\n            this._private__unsubscribeRootMouseEvents = null;\n        }\n        if (this._private__unsubscribeRootTouchEvents !== null) {\n            this._private__unsubscribeRootTouchEvents();\n            this._private__unsubscribeRootTouchEvents = null;\n        }\n        if (this._private__unsubscribeMobileSafariEvents !== null) {\n            this._private__unsubscribeMobileSafariEvents();\n            this._private__unsubscribeMobileSafariEvents = null;\n        }\n        this._private__clearLongTapTimeout();\n        this._private__resetClickTimeout();\n    }\n    _private__mouseEnterHandler(enterEvent) {\n        if (this._private__unsubscribeMousemove) {\n            this._private__unsubscribeMousemove();\n        }\n        const boundMouseMoveHandler = this._private__mouseMoveHandler.bind(this);\n        this._private__unsubscribeMousemove = () => {\n            this._private__target.removeEventListener('mousemove', boundMouseMoveHandler);\n        };\n        this._private__target.addEventListener('mousemove', boundMouseMoveHandler);\n        if (this._private__firesTouchEvents(enterEvent)) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(enterEvent);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseEnterEvent);\n        this._private__acceptMouseLeave = true;\n    }\n    _private__resetClickTimeout() {\n        if (this._private__clickTimeoutId !== null) {\n            clearTimeout(this._private__clickTimeoutId);\n        }\n        this._private__clickCount = 0;\n        this._private__clickTimeoutId = null;\n        this._private__clickPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n    }\n    _private__resetTapTimeout() {\n        if (this._private__tapTimeoutId !== null) {\n            clearTimeout(this._private__tapTimeoutId);\n        }\n        this._private__tapCount = 0;\n        this._private__tapTimeoutId = null;\n        this._private__tapPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n    }\n    _private__mouseMoveHandler(moveEvent) {\n        if (this._private__mousePressed || this._private__touchMoveStartPosition !== null) {\n            return;\n        }\n        if (this._private__firesTouchEvents(moveEvent)) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(moveEvent);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseMoveEvent);\n        this._private__acceptMouseLeave = true;\n    }\n    _private__touchMoveHandler(moveEvent) {\n        const touch = touchWithId(moveEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n        if (touch === null) {\n            return;\n        }\n        this._private__lastTouchEventTimeStamp = eventTimeStamp(moveEvent);\n        if (this._private__startPinchMiddlePoint !== null) {\n            return;\n        }\n        if (this._private__preventTouchDragProcess) {\n            return;\n        }\n        // prevent pinch if move event comes faster than the second touch\n        this._private__pinchPrevented = true;\n        const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(touch), ensureNotNull(this._private__touchMoveStartPosition));\n        const { _internal_xOffset: xOffset, _internal_yOffset: yOffset, _internal_manhattanDistance: manhattanDistance } = moveInfo;\n        if (!this._private__touchMoveExceededManhattanDistance && manhattanDistance < 5 /* Constants.CancelTapManhattanDistance */) {\n            return;\n        }\n        if (!this._private__touchMoveExceededManhattanDistance) {\n            // first time when current position exceeded manhattan distance\n            // vertical drag is more important than horizontal drag\n            // because we scroll the page vertically often than horizontally\n            const correctedXOffset = xOffset * 0.5;\n            // a drag can be only if touch page scroll isn't allowed\n            const isVertDrag = yOffset >= correctedXOffset && !this._private__options._internal_treatVertTouchDragAsPageScroll();\n            const isHorzDrag = correctedXOffset > yOffset && !this._private__options._internal_treatHorzTouchDragAsPageScroll();\n            // if drag event happened then we should revert preventDefault state to original one\n            // and try to process the drag event\n            // else we shouldn't prevent default of the event and ignore processing the drag event\n            if (!isVertDrag && !isHorzDrag) {\n                this._private__preventTouchDragProcess = true;\n            }\n            this._private__touchMoveExceededManhattanDistance = true;\n            // if manhattan distance is more that 5 - we should cancel tap event\n            this._private__cancelTap = true;\n            this._private__clearLongTapTimeout();\n            this._private__resetTapTimeout();\n        }\n        if (!this._private__preventTouchDragProcess) {\n            const compatEvent = this._private__makeCompatEvent(moveEvent, touch);\n            this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchMoveEvent);\n            // we should prevent default in case of touch only\n            // to prevent scroll of the page\n            preventDefault(moveEvent);\n        }\n    }\n    _private__mouseMoveWithDownHandler(moveEvent) {\n        if (moveEvent.button !== 0 /* MouseEventButton.Left */) {\n            return;\n        }\n        const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(moveEvent), ensureNotNull(this._private__mouseMoveStartPosition));\n        const { _internal_manhattanDistance: manhattanDistance } = moveInfo;\n        if (manhattanDistance >= 5 /* Constants.CancelClickManhattanDistance */) {\n            // if manhattan distance is more that 5 - we should cancel click event\n            this._private__cancelClick = true;\n            this._private__resetClickTimeout();\n        }\n        if (this._private__cancelClick) {\n            // if this._cancelClick is true, that means that minimum manhattan distance is already exceeded\n            const compatEvent = this._private__makeCompatEvent(moveEvent);\n            this._private__processMouseEvent(compatEvent, this._private__handler._internal_pressedMouseMoveEvent);\n        }\n    }\n    _private__touchMouseMoveWithDownInfo(currentPosition, startPosition) {\n        const xOffset = Math.abs(startPosition._internal_x - currentPosition._internal_x);\n        const yOffset = Math.abs(startPosition._internal_y - currentPosition._internal_y);\n        const manhattanDistance = xOffset + yOffset;\n        return {\n            _internal_xOffset: xOffset,\n            _internal_yOffset: yOffset,\n            _internal_manhattanDistance: manhattanDistance,\n        };\n    }\n    // eslint-disable-next-line complexity\n    _private__touchEndHandler(touchEndEvent) {\n        let touch = touchWithId(touchEndEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n        if (touch === null && touchEndEvent.touches.length === 0) {\n            // something went wrong, somehow we missed the required touchend event\n            // probably the browser has not sent this event\n            touch = touchEndEvent.changedTouches[0];\n        }\n        if (touch === null) {\n            return;\n        }\n        this._private__activeTouchId = null;\n        this._private__lastTouchEventTimeStamp = eventTimeStamp(touchEndEvent);\n        this._private__clearLongTapTimeout();\n        this._private__touchMoveStartPosition = null;\n        if (this._private__unsubscribeRootTouchEvents) {\n            this._private__unsubscribeRootTouchEvents();\n            this._private__unsubscribeRootTouchEvents = null;\n        }\n        const compatEvent = this._private__makeCompatEvent(touchEndEvent, touch);\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchEndEvent);\n        ++this._private__tapCount;\n        if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n            // check that both clicks are near enough\n            const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(touch), this._private__tapPosition);\n            if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n                this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n            }\n            this._private__resetTapTimeout();\n        }\n        else {\n            if (!this._private__cancelTap) {\n                this._private__processTouchEvent(compatEvent, this._private__handler._internal_tapEvent);\n                // do not fire mouse events if tap handler was executed\n                // prevent click event on new dom element (who appeared after tap)\n                if (this._private__handler._internal_tapEvent) {\n                    preventDefault(touchEndEvent);\n                }\n            }\n        }\n        // prevent, for example, safari's dblclick-to-zoom or fast-click after long-tap\n        // we handle mouseDoubleClickEvent here ourselves\n        if (this._private__tapCount === 0) {\n            preventDefault(touchEndEvent);\n        }\n        if (touchEndEvent.touches.length === 0) {\n            if (this._private__longTapActive) {\n                this._private__longTapActive = false;\n                // prevent native click event\n                preventDefault(touchEndEvent);\n            }\n        }\n    }\n    _private__mouseUpHandler(mouseUpEvent) {\n        if (mouseUpEvent.button !== 0 /* MouseEventButton.Left */) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(mouseUpEvent);\n        this._private__mouseMoveStartPosition = null;\n        this._private__mousePressed = false;\n        if (this._private__unsubscribeRootMouseEvents) {\n            this._private__unsubscribeRootMouseEvents();\n            this._private__unsubscribeRootMouseEvents = null;\n        }\n        if (isFF()) {\n            const rootElement = this._private__target.ownerDocument.documentElement;\n            rootElement.removeEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n        }\n        if (this._private__firesTouchEvents(mouseUpEvent)) {\n            return;\n        }\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseUpEvent);\n        ++this._private__clickCount;\n        if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n            // check that both clicks are near enough\n            const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(mouseUpEvent), this._private__clickPosition);\n            if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n                this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n            }\n            this._private__resetClickTimeout();\n        }\n        else {\n            if (!this._private__cancelClick) {\n                this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseClickEvent);\n            }\n        }\n    }\n    _private__clearLongTapTimeout() {\n        if (this._private__longTapTimeoutId === null) {\n            return;\n        }\n        clearTimeout(this._private__longTapTimeoutId);\n        this._private__longTapTimeoutId = null;\n    }\n    _private__touchStartHandler(downEvent) {\n        if (this._private__activeTouchId !== null) {\n            return;\n        }\n        const touch = downEvent.changedTouches[0];\n        this._private__activeTouchId = touch.identifier;\n        this._private__lastTouchEventTimeStamp = eventTimeStamp(downEvent);\n        const rootElement = this._private__target.ownerDocument.documentElement;\n        this._private__cancelTap = false;\n        this._private__touchMoveExceededManhattanDistance = false;\n        this._private__preventTouchDragProcess = false;\n        this._private__touchMoveStartPosition = getPosition(touch);\n        if (this._private__unsubscribeRootTouchEvents) {\n            this._private__unsubscribeRootTouchEvents();\n            this._private__unsubscribeRootTouchEvents = null;\n        }\n        {\n            const boundTouchMoveWithDownHandler = this._private__touchMoveHandler.bind(this);\n            const boundTouchEndHandler = this._private__touchEndHandler.bind(this);\n            this._private__unsubscribeRootTouchEvents = () => {\n                rootElement.removeEventListener('touchmove', boundTouchMoveWithDownHandler);\n                rootElement.removeEventListener('touchend', boundTouchEndHandler);\n            };\n            rootElement.addEventListener('touchmove', boundTouchMoveWithDownHandler, { passive: false });\n            rootElement.addEventListener('touchend', boundTouchEndHandler, { passive: false });\n            this._private__clearLongTapTimeout();\n            this._private__longTapTimeoutId = setTimeout(this._private__longTapHandler.bind(this, downEvent), 240 /* Delay.LongTap */);\n        }\n        const compatEvent = this._private__makeCompatEvent(downEvent, touch);\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchStartEvent);\n        if (!this._private__tapTimeoutId) {\n            this._private__tapCount = 0;\n            this._private__tapTimeoutId = setTimeout(this._private__resetTapTimeout.bind(this), 500 /* Delay.ResetClick */);\n            this._private__tapPosition = getPosition(touch);\n        }\n    }\n    _private__mouseDownHandler(downEvent) {\n        if (downEvent.button !== 0 /* MouseEventButton.Left */) {\n            return;\n        }\n        const rootElement = this._private__target.ownerDocument.documentElement;\n        if (isFF()) {\n            rootElement.addEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n        }\n        this._private__cancelClick = false;\n        this._private__mouseMoveStartPosition = getPosition(downEvent);\n        if (this._private__unsubscribeRootMouseEvents) {\n            this._private__unsubscribeRootMouseEvents();\n            this._private__unsubscribeRootMouseEvents = null;\n        }\n        {\n            const boundMouseMoveWithDownHandler = this._private__mouseMoveWithDownHandler.bind(this);\n            const boundMouseUpHandler = this._private__mouseUpHandler.bind(this);\n            this._private__unsubscribeRootMouseEvents = () => {\n                rootElement.removeEventListener('mousemove', boundMouseMoveWithDownHandler);\n                rootElement.removeEventListener('mouseup', boundMouseUpHandler);\n            };\n            rootElement.addEventListener('mousemove', boundMouseMoveWithDownHandler);\n            rootElement.addEventListener('mouseup', boundMouseUpHandler);\n        }\n        this._private__mousePressed = true;\n        if (this._private__firesTouchEvents(downEvent)) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(downEvent);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDownEvent);\n        if (!this._private__clickTimeoutId) {\n            this._private__clickCount = 0;\n            this._private__clickTimeoutId = setTimeout(this._private__resetClickTimeout.bind(this), 500 /* Delay.ResetClick */);\n            this._private__clickPosition = getPosition(downEvent);\n        }\n    }\n    _private__init() {\n        this._private__target.addEventListener('mouseenter', this._private__mouseEnterHandler.bind(this));\n        // Do not show context menu when something went wrong\n        this._private__target.addEventListener('touchcancel', this._private__clearLongTapTimeout.bind(this));\n        {\n            const doc = this._private__target.ownerDocument;\n            const outsideHandler = (event) => {\n                if (!this._private__handler._internal_mouseDownOutsideEvent) {\n                    return;\n                }\n                if (event.composed && this._private__target.contains(event.composedPath()[0])) {\n                    return;\n                }\n                if (event.target && this._private__target.contains(event.target)) {\n                    return;\n                }\n                this._private__handler._internal_mouseDownOutsideEvent();\n            };\n            this._private__unsubscribeOutsideTouchEvents = () => {\n                doc.removeEventListener('touchstart', outsideHandler);\n            };\n            this._private__unsubscribeOutsideMouseEvents = () => {\n                doc.removeEventListener('mousedown', outsideHandler);\n            };\n            doc.addEventListener('mousedown', outsideHandler);\n            doc.addEventListener('touchstart', outsideHandler, { passive: true });\n        }\n        if (isIOS()) {\n            this._private__unsubscribeMobileSafariEvents = () => {\n                this._private__target.removeEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n            };\n            this._private__target.addEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n        }\n        this._private__target.addEventListener('mouseleave', this._private__mouseLeaveHandler.bind(this));\n        this._private__target.addEventListener('touchstart', this._private__touchStartHandler.bind(this), { passive: true });\n        preventScrollByWheelClick(this._private__target);\n        this._private__target.addEventListener('mousedown', this._private__mouseDownHandler.bind(this));\n        this._private__initPinch();\n        // Hey mobile Safari, what's up?\n        // If mobile Safari doesn't have any touchmove handler with passive=false\n        // it treats a touchstart and the following touchmove events as cancelable=false,\n        // so we can't prevent them (as soon we subscribe on touchmove inside touchstart's handler).\n        // And we'll get scroll of the page along with chart's one instead of only chart's scroll.\n        this._private__target.addEventListener('touchmove', () => { }, { passive: false });\n    }\n    _private__initPinch() {\n        if (this._private__handler._internal_pinchStartEvent === undefined &&\n            this._private__handler._internal_pinchEvent === undefined &&\n            this._private__handler._internal_pinchEndEvent === undefined) {\n            return;\n        }\n        this._private__target.addEventListener('touchstart', (event) => this._private__checkPinchState(event.touches), { passive: true });\n        this._private__target.addEventListener('touchmove', (event) => {\n            if (event.touches.length !== 2 || this._private__startPinchMiddlePoint === null) {\n                return;\n            }\n            if (this._private__handler._internal_pinchEvent !== undefined) {\n                const currentDistance = getDistance(event.touches[0], event.touches[1]);\n                const scale = currentDistance / this._private__startPinchDistance;\n                this._private__handler._internal_pinchEvent(this._private__startPinchMiddlePoint, scale);\n                preventDefault(event);\n            }\n        }, { passive: false });\n        this._private__target.addEventListener('touchend', (event) => {\n            this._private__checkPinchState(event.touches);\n        });\n    }\n    _private__checkPinchState(touches) {\n        if (touches.length === 1) {\n            this._private__pinchPrevented = false;\n        }\n        if (touches.length !== 2 || this._private__pinchPrevented || this._private__longTapActive) {\n            this._private__stopPinch();\n        }\n        else {\n            this._private__startPinch(touches);\n        }\n    }\n    _private__startPinch(touches) {\n        const box = getBoundingClientRect(this._private__target);\n        this._private__startPinchMiddlePoint = {\n            _internal_x: ((touches[0].clientX - box.left) + (touches[1].clientX - box.left)) / 2,\n            _internal_y: ((touches[0].clientY - box.top) + (touches[1].clientY - box.top)) / 2,\n        };\n        this._private__startPinchDistance = getDistance(touches[0], touches[1]);\n        if (this._private__handler._internal_pinchStartEvent !== undefined) {\n            this._private__handler._internal_pinchStartEvent();\n        }\n        this._private__clearLongTapTimeout();\n    }\n    _private__stopPinch() {\n        if (this._private__startPinchMiddlePoint === null) {\n            return;\n        }\n        this._private__startPinchMiddlePoint = null;\n        if (this._private__handler._internal_pinchEndEvent !== undefined) {\n            this._private__handler._internal_pinchEndEvent();\n        }\n    }\n    _private__mouseLeaveHandler(event) {\n        if (this._private__unsubscribeMousemove) {\n            this._private__unsubscribeMousemove();\n        }\n        if (this._private__firesTouchEvents(event)) {\n            return;\n        }\n        if (!this._private__acceptMouseLeave) {\n            // mobile Safari sometimes emits mouse leave event for no reason, there is no way to handle it in other way\n            // just ignore this event if there was no mouse move or mouse enter events\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(event);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseLeaveEvent);\n        // accept all mouse leave events if it's not an iOS device\n        this._private__acceptMouseLeave = !isIOS();\n    }\n    _private__longTapHandler(event) {\n        const touch = touchWithId(event.touches, ensureNotNull(this._private__activeTouchId));\n        if (touch === null) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(event, touch);\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_longTapEvent);\n        this._private__cancelTap = true;\n        // long tap is active until touchend event with 0 touches occurred\n        this._private__longTapActive = true;\n    }\n    _private__firesTouchEvents(e) {\n        if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents !== undefined) {\n            return e.sourceCapabilities.firesTouchEvents;\n        }\n        return eventTimeStamp(e) < this._private__lastTouchEventTimeStamp + 500 /* Delay.PreventFiresTouchEvents */;\n    }\n    _private__processTouchEvent(event, callback) {\n        if (callback) {\n            callback.call(this._private__handler, event);\n        }\n    }\n    _private__processMouseEvent(event, callback) {\n        if (!callback) {\n            return;\n        }\n        callback.call(this._private__handler, event);\n    }\n    _private__makeCompatEvent(event, touch) {\n        // TouchEvent has no clientX/Y coordinates:\n        // We have to use the last Touch instead\n        const eventLike = touch || event;\n        const box = this._private__target.getBoundingClientRect() || { left: 0, top: 0 };\n        return {\n            clientX: eventLike.clientX,\n            clientY: eventLike.clientY,\n            pageX: eventLike.pageX,\n            pageY: eventLike.pageY,\n            screenX: eventLike.screenX,\n            screenY: eventLike.screenY,\n            localX: (eventLike.clientX - box.left),\n            localY: (eventLike.clientY - box.top),\n            ctrlKey: event.ctrlKey,\n            altKey: event.altKey,\n            shiftKey: event.shiftKey,\n            metaKey: event.metaKey,\n            _internal_isTouch: !event.type.startsWith('mouse') && event.type !== 'contextmenu' && event.type !== 'click',\n            _internal_srcType: event.type,\n            _internal_target: eventLike.target,\n            _internal_view: event.view,\n            _internal_preventDefault: () => {\n                if (event.type !== 'touchstart') {\n                    // touchstart is passive and cannot be prevented\n                    preventDefault(event);\n                }\n            },\n        };\n    }\n}\nfunction getBoundingClientRect(element) {\n    return element.getBoundingClientRect() || { left: 0, top: 0 };\n}\nfunction getDistance(p1, p2) {\n    const xDiff = p1.clientX - p2.clientX;\n    const yDiff = p1.clientY - p2.clientY;\n    return Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n}\nfunction preventDefault(event) {\n    if (event.cancelable) {\n        event.preventDefault();\n    }\n}\nfunction getPosition(eventLike) {\n    return {\n        _internal_x: eventLike.pageX,\n        _internal_y: eventLike.pageY,\n    };\n}\nfunction eventTimeStamp(e) {\n    // for some reason e.timestamp is always 0 on iPad with magic mouse, so we use performance.now() as a fallback\n    return e.timeStamp || performance.now();\n}\nfunction touchWithId(touches, id) {\n    for (let i = 0; i < touches.length; ++i) {\n        if (touches[i].identifier === id) {\n            return touches[i];\n        }\n    }\n    return null;\n}\n\n// returns true if item is above reference\nfunction comparePrimitiveZOrder(item, reference) {\n    return (!reference ||\n        (item === 'top' && reference !== 'top') ||\n        (item === 'normal' && reference === 'bottom'));\n}\nfunction findBestPrimitiveHitTest(sources, x, y) {\n    var _a, _b;\n    let bestPrimitiveHit;\n    let bestHitSource;\n    for (const source of sources) {\n        const primitiveHitResults = (_b = (_a = source._internal_primitiveHitTest) === null || _a === void 0 ? void 0 : _a.call(source, x, y)) !== null && _b !== void 0 ? _b : [];\n        for (const hitResult of primitiveHitResults) {\n            if (comparePrimitiveZOrder(hitResult.zOrder, bestPrimitiveHit === null || bestPrimitiveHit === void 0 ? void 0 : bestPrimitiveHit.zOrder)) {\n                bestPrimitiveHit = hitResult;\n                bestHitSource = source;\n            }\n        }\n    }\n    if (!bestPrimitiveHit || !bestHitSource) {\n        return null;\n    }\n    return {\n        _internal_hit: bestPrimitiveHit,\n        _internal_source: bestHitSource,\n    };\n}\nfunction convertPrimitiveHitResult(primitiveHit) {\n    return {\n        _internal_source: primitiveHit._internal_source,\n        _internal_object: {\n            _internal_externalId: primitiveHit._internal_hit.externalId,\n        },\n        _internal_cursorStyle: primitiveHit._internal_hit.cursorStyle,\n    };\n}\n/**\n * Performs a hit test on a collection of pane views to determine which view and object\n * is located at a given coordinate (x, y) and returns the matching pane view and\n * hit-tested result object, or null if no match is found.\n */\nfunction hitTestPaneView(paneViews, x, y) {\n    for (const paneView of paneViews) {\n        const renderer = paneView._internal_renderer();\n        if (renderer !== null && renderer._internal_hitTest) {\n            const result = renderer._internal_hitTest(x, y);\n            if (result !== null) {\n                return {\n                    _internal_view: paneView,\n                    _internal_object: result,\n                };\n            }\n        }\n    }\n    return null;\n}\nfunction hitTestPane(pane, x, y) {\n    const sources = pane._internal_orderedSources();\n    const bestPrimitiveHit = findBestPrimitiveHitTest(sources, x, y);\n    if ((bestPrimitiveHit === null || bestPrimitiveHit === void 0 ? void 0 : bestPrimitiveHit._internal_hit.zOrder) === 'top') {\n        // a primitive hit on the 'top' layer will always beat the built-in hit tests\n        // (on normal layer) so we can return early here.\n        return convertPrimitiveHitResult(bestPrimitiveHit);\n    }\n    for (const source of sources) {\n        if (bestPrimitiveHit && bestPrimitiveHit._internal_source === source && bestPrimitiveHit._internal_hit.zOrder !== 'bottom' && !bestPrimitiveHit._internal_hit.isBackground) {\n            // a primitive will be drawn above a built-in item like a series marker\n            // therefore it takes precedence here.\n            return convertPrimitiveHitResult(bestPrimitiveHit);\n        }\n        const sourceResult = hitTestPaneView(source._internal_paneViews(pane), x, y);\n        if (sourceResult !== null) {\n            return {\n                _internal_source: source,\n                _internal_view: sourceResult._internal_view,\n                _internal_object: sourceResult._internal_object,\n            };\n        }\n        if (bestPrimitiveHit && bestPrimitiveHit._internal_source === source && bestPrimitiveHit._internal_hit.zOrder !== 'bottom' && bestPrimitiveHit._internal_hit.isBackground) {\n            return convertPrimitiveHitResult(bestPrimitiveHit);\n        }\n    }\n    if (bestPrimitiveHit === null || bestPrimitiveHit === void 0 ? void 0 : bestPrimitiveHit._internal_hit) {\n        // return primitive hits for the 'bottom' layer\n        return convertPrimitiveHitResult(bestPrimitiveHit);\n    }\n    return null;\n}\n\nfunction buildPriceAxisViewsGetter(zOrder, priceScaleId) {\n    return (source) => {\n        var _a, _b, _c, _d;\n        const psId = (_b = (_a = source._internal_priceScale()) === null || _a === void 0 ? void 0 : _a._internal_id()) !== null && _b !== void 0 ? _b : '';\n        if (psId !== priceScaleId) {\n            // exclude if source is using a different price scale.\n            return [];\n        }\n        return (_d = (_c = source._internal_pricePaneViews) === null || _c === void 0 ? void 0 : _c.call(source, zOrder)) !== null && _d !== void 0 ? _d : [];\n    };\n}\nfunction recalculateOverlapping(views, direction, scaleHeight, rendererOptions) {\n    if (!views.length) {\n        return;\n    }\n    let currentGroupStart = 0;\n    const center = scaleHeight / 2;\n    const initLabelHeight = views[0]._internal_height(rendererOptions, true);\n    let spaceBeforeCurrentGroup = direction === 1\n        ? center - (views[0]._internal_getFixedCoordinate() - initLabelHeight / 2)\n        : views[0]._internal_getFixedCoordinate() - initLabelHeight / 2 - center;\n    spaceBeforeCurrentGroup = Math.max(0, spaceBeforeCurrentGroup);\n    for (let i = 1; i < views.length; i++) {\n        const view = views[i];\n        const prev = views[i - 1];\n        const height = prev._internal_height(rendererOptions, false);\n        const coordinate = view._internal_getFixedCoordinate();\n        const prevFixedCoordinate = prev._internal_getFixedCoordinate();\n        const overlap = direction === 1\n            ? coordinate > prevFixedCoordinate - height\n            : coordinate < prevFixedCoordinate + height;\n        if (overlap) {\n            const fixedCoordinate = prevFixedCoordinate - height * direction;\n            view._internal_setFixedCoordinate(fixedCoordinate);\n            const edgePoint = fixedCoordinate - direction * height / 2;\n            const outOfViewport = direction === 1 ? edgePoint < 0 : edgePoint > scaleHeight;\n            if (outOfViewport && spaceBeforeCurrentGroup > 0) {\n                // shift the whole group up or down\n                const desiredGroupShift = direction === 1 ? -1 - edgePoint : edgePoint - scaleHeight;\n                const possibleShift = Math.min(desiredGroupShift, spaceBeforeCurrentGroup);\n                for (let k = currentGroupStart; k < views.length; k++) {\n                    views[k]._internal_setFixedCoordinate(views[k]._internal_getFixedCoordinate() + direction * possibleShift);\n                }\n                spaceBeforeCurrentGroup -= possibleShift;\n            }\n        }\n        else {\n            currentGroupStart = i;\n            spaceBeforeCurrentGroup = direction === 1\n                ? prevFixedCoordinate - height - coordinate\n                : coordinate - (prevFixedCoordinate + height);\n        }\n    }\n}\nclass PriceAxisWidget {\n    constructor(pane, options, rendererOptionsProvider, side) {\n        this._private__priceScale = null;\n        this._private__size = null;\n        this._private__mousedown = false;\n        this._private__widthCache = new TextWidthCache(200);\n        this._private__font = null;\n        this._private__prevOptimalWidth = 0;\n        this._private__isSettingSize = false;\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize) {\n                return;\n            }\n            this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n        };\n        this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize) {\n                return;\n            }\n            this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n        };\n        this._private__pane = pane;\n        this._private__options = options;\n        this._private__layoutOptions = options.layout;\n        this._private__rendererOptionsProvider = rendererOptionsProvider;\n        this._private__isLeft = side === 'left';\n        this._private__sourcePaneViews = buildPriceAxisViewsGetter('normal', side);\n        this._private__sourceTopPaneViews = buildPriceAxisViewsGetter('top', side);\n        this._private__sourceBottomPaneViews = buildPriceAxisViewsGetter('bottom', side);\n        this._private__cell = document.createElement('div');\n        this._private__cell.style.height = '100%';\n        this._private__cell.style.overflow = 'hidden';\n        this._private__cell.style.width = '25px';\n        this._private__cell.style.left = '0';\n        this._private__cell.style.position = 'relative';\n        this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        const canvas = this._private__canvasBinding.canvasElement;\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = '1';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        this._private__topCanvasBinding = createBoundCanvas(this._private__cell, size$1({ width: 16, height: 16 }));\n        this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        const topCanvas = this._private__topCanvasBinding.canvasElement;\n        topCanvas.style.position = 'absolute';\n        topCanvas.style.zIndex = '2';\n        topCanvas.style.left = '0';\n        topCanvas.style.top = '0';\n        const handler = {\n            _internal_mouseDownEvent: this._private__mouseDownEvent.bind(this),\n            _internal_touchStartEvent: this._private__mouseDownEvent.bind(this),\n            _internal_pressedMouseMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n            _internal_touchMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n            _internal_mouseDownOutsideEvent: this._private__mouseDownOutsideEvent.bind(this),\n            _internal_mouseUpEvent: this._private__mouseUpEvent.bind(this),\n            _internal_touchEndEvent: this._private__mouseUpEvent.bind(this),\n            _internal_mouseDoubleClickEvent: this._private__mouseDoubleClickEvent.bind(this),\n            _internal_doubleTapEvent: this._private__mouseDoubleClickEvent.bind(this),\n            _internal_mouseEnterEvent: this._private__mouseEnterEvent.bind(this),\n            _internal_mouseLeaveEvent: this._private__mouseLeaveEvent.bind(this),\n        };\n        this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, handler, {\n            _internal_treatVertTouchDragAsPageScroll: () => !this._private__options.handleScroll.vertTouchDrag,\n            _internal_treatHorzTouchDragAsPageScroll: () => true,\n        });\n    }\n    _internal_destroy() {\n        this._private__mouseEventHandler._internal_destroy();\n        this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__topCanvasBinding.canvasElement);\n        this._private__topCanvasBinding.dispose();\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n        if (this._private__priceScale !== null) {\n            this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n        }\n        this._private__priceScale = null;\n    }\n    _internal_getElement() {\n        return this._private__cell;\n    }\n    _internal_fontSize() {\n        return this._private__layoutOptions.fontSize;\n    }\n    _internal_rendererOptions() {\n        const options = this._private__rendererOptionsProvider._internal_options();\n        const isFontChanged = this._private__font !== options._internal_font;\n        if (isFontChanged) {\n            this._private__widthCache._internal_reset();\n            this._private__font = options._internal_font;\n        }\n        return options;\n    }\n    _internal_optimalWidth() {\n        if (this._private__priceScale === null) {\n            return 0;\n        }\n        let tickMarkMaxWidth = 0;\n        const rendererOptions = this._internal_rendererOptions();\n        const ctx = ensureNotNull(this._private__canvasBinding.canvasElement.getContext('2d'));\n        ctx.save();\n        const tickMarks = this._private__priceScale._internal_marks();\n        ctx.font = this._private__baseFont();\n        if (tickMarks.length > 0) {\n            tickMarkMaxWidth = Math.max(this._private__widthCache._internal_measureText(ctx, tickMarks[0]._internal_label), this._private__widthCache._internal_measureText(ctx, tickMarks[tickMarks.length - 1]._internal_label));\n        }\n        const views = this._private__backLabels();\n        for (let j = views.length; j--;) {\n            const width = this._private__widthCache._internal_measureText(ctx, views[j]._internal_text());\n            if (width > tickMarkMaxWidth) {\n                tickMarkMaxWidth = width;\n            }\n        }\n        const firstValue = this._private__priceScale._internal_firstValue();\n        if (firstValue !== null && this._private__size !== null) {\n            const topValue = this._private__priceScale._internal_coordinateToPrice(1, firstValue);\n            const bottomValue = this._private__priceScale._internal_coordinateToPrice(this._private__size.height - 2, firstValue);\n            tickMarkMaxWidth = Math.max(tickMarkMaxWidth, this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.floor(Math.min(topValue, bottomValue)) + 0.11111111111111, firstValue)), this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.ceil(Math.max(topValue, bottomValue)) - 0.11111111111111, firstValue)));\n        }\n        ctx.restore();\n        const resultTickMarksMaxWidth = tickMarkMaxWidth || 34 /* Constants.DefaultOptimalWidth */;\n        const res = Math.ceil(rendererOptions._internal_borderSize +\n            rendererOptions._internal_tickLength +\n            rendererOptions._internal_paddingInner +\n            rendererOptions._internal_paddingOuter +\n            5 /* Constants.LabelOffset */ +\n            resultTickMarksMaxWidth);\n        // make it even, remove this after migration to perfect fancy canvas\n        return suggestPriceScaleWidth(res);\n    }\n    _internal_setSize(newSize) {\n        if (this._private__size === null || !equalSizes(this._private__size, newSize)) {\n            this._private__size = newSize;\n            this._private__isSettingSize = true;\n            this._private__canvasBinding.resizeCanvasElement(newSize);\n            this._private__topCanvasBinding.resizeCanvasElement(newSize);\n            this._private__isSettingSize = false;\n            this._private__cell.style.width = `${newSize.width}px`;\n            this._private__cell.style.height = `${newSize.height}px`;\n        }\n    }\n    _internal_getWidth() {\n        return ensureNotNull(this._private__size).width;\n    }\n    _internal_setPriceScale(priceScale) {\n        if (this._private__priceScale === priceScale) {\n            return;\n        }\n        if (this._private__priceScale !== null) {\n            this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n        }\n        this._private__priceScale = priceScale;\n        priceScale._internal_onMarksChanged()._internal_subscribe(this._private__onMarksChanged.bind(this), this);\n    }\n    _internal_priceScale() {\n        return this._private__priceScale;\n    }\n    _internal_reset() {\n        const pane = this._private__pane._internal_state();\n        const model = this._private__pane._internal_chart()._internal_model();\n        model._internal_resetPriceScale(pane, ensureNotNull(this._internal_priceScale()));\n    }\n    _internal_paint(type) {\n        if (this._private__size === null) {\n            return;\n        }\n        if (type !== 1 /* InvalidationLevel.Cursor */) {\n            this._private__alignLabels();\n            this._private__canvasBinding.applySuggestedBitmapSize();\n            const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n            if (target !== null) {\n                target.useBitmapCoordinateSpace((scope) => {\n                    this._private__drawBackground(scope);\n                    this._private__drawBorder(scope);\n                });\n                this._private__pane._internal_drawAdditionalSources(target, this._private__sourceBottomPaneViews);\n                this._private__drawTickMarks(target);\n                this._private__pane._internal_drawAdditionalSources(target, this._private__sourcePaneViews);\n                this._private__drawBackLabels(target);\n            }\n        }\n        this._private__topCanvasBinding.applySuggestedBitmapSize();\n        const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n        if (topTarget !== null) {\n            topTarget.useBitmapCoordinateSpace(({ context: ctx, bitmapSize }) => {\n                ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n            });\n            this._private__drawCrosshairLabel(topTarget);\n            this._private__pane._internal_drawAdditionalSources(topTarget, this._private__sourceTopPaneViews);\n        }\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _internal_update() {\n        var _a;\n        // this call has side-effect - it regenerates marks on the price scale\n        (_a = this._private__priceScale) === null || _a === void 0 ? void 0 : _a._internal_marks();\n    }\n    _private__mouseDownEvent(e) {\n        if (this._private__priceScale === null || this._private__priceScale._internal_isEmpty() || !this._private__options.handleScale.axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        this._private__mousedown = true;\n        model._internal_startScalePrice(pane, this._private__priceScale, e.localY);\n    }\n    _private__pressedMouseMoveEvent(e) {\n        if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        const priceScale = this._private__priceScale;\n        model._internal_scalePriceTo(pane, priceScale, e.localY);\n    }\n    _private__mouseDownOutsideEvent() {\n        if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        const priceScale = this._private__priceScale;\n        if (this._private__mousedown) {\n            this._private__mousedown = false;\n            model._internal_endScalePrice(pane, priceScale);\n        }\n    }\n    _private__mouseUpEvent(e) {\n        if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        this._private__mousedown = false;\n        model._internal_endScalePrice(pane, this._private__priceScale);\n    }\n    _private__mouseDoubleClickEvent(e) {\n        if (this._private__options.handleScale.axisDoubleClickReset.price) {\n            this._internal_reset();\n        }\n    }\n    _private__mouseEnterEvent(e) {\n        if (this._private__priceScale === null) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        if (model._internal_options().handleScale.axisPressedMouseMove.price && !this._private__priceScale._internal_isPercentage() && !this._private__priceScale._internal_isIndexedTo100()) {\n            this._private__setCursor(1 /* CursorType.NsResize */);\n        }\n    }\n    _private__mouseLeaveEvent(e) {\n        this._private__setCursor(0 /* CursorType.Default */);\n    }\n    _private__backLabels() {\n        const res = [];\n        const priceScale = (this._private__priceScale === null) ? undefined : this._private__priceScale;\n        const addViewsForSources = (sources) => {\n            for (let i = 0; i < sources.length; ++i) {\n                const source = sources[i];\n                const views = source._internal_priceAxisViews(this._private__pane._internal_state(), priceScale);\n                for (let j = 0; j < views.length; j++) {\n                    res.push(views[j]);\n                }\n            }\n        };\n        // calculate max and min coordinates for views on selection\n        // crosshair individually\n        addViewsForSources(this._private__pane._internal_state()._internal_orderedSources());\n        return res;\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        const { width, height } = bitmapSize;\n        const model = this._private__pane._internal_state()._internal_model();\n        const topColor = model._internal_backgroundTopColor();\n        const bottomColor = model._internal_backgroundBottomColor();\n        if (topColor === bottomColor) {\n            clearRect(ctx, 0, 0, width, height, topColor);\n        }\n        else {\n            clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n        }\n    }\n    _private__drawBorder({ context: ctx, bitmapSize, horizontalPixelRatio }) {\n        if (this._private__size === null || this._private__priceScale === null || !this._private__priceScale._internal_options().borderVisible) {\n            return;\n        }\n        ctx.fillStyle = this._private__priceScale._internal_options().borderColor;\n        const borderSize = Math.max(1, Math.floor(this._internal_rendererOptions()._internal_borderSize * horizontalPixelRatio));\n        let left;\n        if (this._private__isLeft) {\n            left = bitmapSize.width - borderSize;\n        }\n        else {\n            left = 0;\n        }\n        ctx.fillRect(left, 0, borderSize, bitmapSize.height);\n    }\n    _private__drawTickMarks(target) {\n        if (this._private__size === null || this._private__priceScale === null) {\n            return;\n        }\n        const tickMarks = this._private__priceScale._internal_marks();\n        const priceScaleOptions = this._private__priceScale._internal_options();\n        const rendererOptions = this._internal_rendererOptions();\n        const tickMarkLeftX = this._private__isLeft ?\n            (this._private__size.width - rendererOptions._internal_tickLength) :\n            0;\n        if (priceScaleOptions.borderVisible && priceScaleOptions.ticksVisible) {\n            target.useBitmapCoordinateSpace(({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) => {\n                ctx.fillStyle = priceScaleOptions.borderColor;\n                const tickHeight = Math.max(1, Math.floor(verticalPixelRatio));\n                const tickOffset = Math.floor(verticalPixelRatio * 0.5);\n                const tickLength = Math.round(rendererOptions._internal_tickLength * horizontalPixelRatio);\n                ctx.beginPath();\n                for (const tickMark of tickMarks) {\n                    ctx.rect(Math.floor(tickMarkLeftX * horizontalPixelRatio), Math.round(tickMark._internal_coord * verticalPixelRatio) - tickOffset, tickLength, tickHeight);\n                }\n                ctx.fill();\n            });\n        }\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            var _a;\n            ctx.font = this._private__baseFont();\n            ctx.fillStyle = (_a = priceScaleOptions.textColor) !== null && _a !== void 0 ? _a : this._private__layoutOptions.textColor;\n            ctx.textAlign = this._private__isLeft ? 'right' : 'left';\n            ctx.textBaseline = 'middle';\n            const textLeftX = this._private__isLeft ?\n                Math.round(tickMarkLeftX - rendererOptions._internal_paddingInner) :\n                Math.round(tickMarkLeftX + rendererOptions._internal_tickLength + rendererOptions._internal_paddingInner);\n            const yMidCorrections = tickMarks.map((mark) => this._private__widthCache._internal_yMidCorrection(ctx, mark._internal_label));\n            for (let i = tickMarks.length; i--;) {\n                const tickMark = tickMarks[i];\n                ctx.fillText(tickMark._internal_label, textLeftX, tickMark._internal_coord + yMidCorrections[i]);\n            }\n        });\n    }\n    _private__alignLabels() {\n        if (this._private__size === null || this._private__priceScale === null) {\n            return;\n        }\n        const views = [];\n        const orderedSources = this._private__priceScale._internal_orderedSources().slice(); // Copy of array\n        const pane = this._private__pane;\n        const paneState = pane._internal_state();\n        const rendererOptions = this._internal_rendererOptions();\n        // if we are default price scale, append labels from no-scale\n        const isDefault = this._private__priceScale === paneState._internal_defaultVisiblePriceScale();\n        if (isDefault) {\n            this._private__pane._internal_state()._internal_orderedSources().forEach((source) => {\n                if (paneState._internal_isOverlay(source)) {\n                    orderedSources.push(source);\n                }\n            });\n        }\n        const priceScale = this._private__priceScale;\n        const updateForSources = (sources) => {\n            sources.forEach((source) => {\n                const sourceViews = source._internal_priceAxisViews(paneState, priceScale);\n                // never align selected sources\n                sourceViews.forEach((view) => {\n                    view._internal_setFixedCoordinate(null);\n                    if (view._internal_isVisible()) {\n                        views.push(view);\n                    }\n                });\n            });\n        };\n        // crosshair individually\n        updateForSources(orderedSources);\n        views.forEach((view) => view._internal_setFixedCoordinate(view._internal_coordinate()));\n        const options = this._private__priceScale._internal_options();\n        if (!options.alignLabels) {\n            return;\n        }\n        this._private__fixLabelOverlap(views, rendererOptions);\n    }\n    _private__fixLabelOverlap(views, rendererOptions) {\n        if (this._private__size === null) {\n            return;\n        }\n        const center = this._private__size.height / 2;\n        // split into two parts\n        const top = views.filter((view) => view._internal_coordinate() <= center);\n        const bottom = views.filter((view) => view._internal_coordinate() > center);\n        // sort top from center to top\n        top.sort((l, r) => r._internal_coordinate() - l._internal_coordinate());\n        bottom.sort((l, r) => l._internal_coordinate() - r._internal_coordinate());\n        for (const view of views) {\n            const halfHeight = Math.floor(view._internal_height(rendererOptions) / 2);\n            const coordinate = view._internal_coordinate();\n            if (coordinate > -halfHeight && coordinate < halfHeight) {\n                view._internal_setFixedCoordinate(halfHeight);\n            }\n            if (coordinate > (this._private__size.height - halfHeight) && coordinate < this._private__size.height + halfHeight) {\n                view._internal_setFixedCoordinate(this._private__size.height - halfHeight);\n            }\n        }\n        recalculateOverlapping(top, 1, this._private__size.height, rendererOptions);\n        recalculateOverlapping(bottom, -1, this._private__size.height, rendererOptions);\n    }\n    _private__drawBackLabels(target) {\n        if (this._private__size === null) {\n            return;\n        }\n        const views = this._private__backLabels();\n        const rendererOptions = this._internal_rendererOptions();\n        const align = this._private__isLeft ? 'right' : 'left';\n        views.forEach((view) => {\n            if (view._internal_isAxisLabelVisible()) {\n                const renderer = view._internal_renderer(ensureNotNull(this._private__priceScale));\n                renderer._internal_draw(target, rendererOptions, this._private__widthCache, align);\n            }\n        });\n    }\n    _private__drawCrosshairLabel(target) {\n        if (this._private__size === null || this._private__priceScale === null) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const views = []; // array of arrays\n        const pane = this._private__pane._internal_state();\n        const v = model._internal_crosshairSource()._internal_priceAxisViews(pane, this._private__priceScale);\n        if (v.length) {\n            views.push(v);\n        }\n        const ro = this._internal_rendererOptions();\n        const align = this._private__isLeft ? 'right' : 'left';\n        views.forEach((arr) => {\n            arr.forEach((view) => {\n                view._internal_renderer(ensureNotNull(this._private__priceScale))._internal_draw(target, ro, this._private__widthCache, align);\n            });\n        });\n    }\n    _private__setCursor(type) {\n        this._private__cell.style.cursor = type === 1 /* CursorType.NsResize */ ? 'ns-resize' : 'default';\n    }\n    _private__onMarksChanged() {\n        const width = this._internal_optimalWidth();\n        // avoid price scale is shrunk\n        // using < instead !== to avoid infinite changes\n        if (this._private__prevOptimalWidth < width) {\n            this._private__pane._internal_chart()._internal_model()._internal_fullUpdate();\n        }\n        this._private__prevOptimalWidth = width;\n    }\n    _private__baseFont() {\n        return makeFont(this._private__layoutOptions.fontSize, this._private__layoutOptions.fontFamily);\n    }\n}\n\nfunction sourceBottomPaneViews$1(source, pane) {\n    var _a, _b;\n    return (_b = (_a = source._internal_bottomPaneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nfunction sourcePaneViews$1(source, pane) {\n    var _a, _b;\n    return (_b = (_a = source._internal_paneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nfunction sourceLabelPaneViews(source, pane) {\n    var _a, _b;\n    return (_b = (_a = source._internal_labelPaneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nfunction sourceTopPaneViews$1(source, pane) {\n    var _a, _b;\n    return (_b = (_a = source._internal_topPaneViews) === null || _a === void 0 ? void 0 : _a.call(source, pane)) !== null && _b !== void 0 ? _b : [];\n}\nclass PaneWidget {\n    constructor(chart, state) {\n        this._private__size = size$1({ width: 0, height: 0 });\n        this._private__leftPriceAxisWidget = null;\n        this._private__rightPriceAxisWidget = null;\n        this._private__attributionLogoWidget = null;\n        this._private__startScrollingPos = null;\n        this._private__isScrolling = false;\n        this._private__clicked = new Delegate();\n        this._private__dblClicked = new Delegate();\n        this._private__prevPinchScale = 0;\n        this._private__longTap = false;\n        this._private__startTrackPoint = null;\n        this._private__exitTrackingModeOnNextTry = false;\n        this._private__initCrosshairPosition = null;\n        this._private__scrollXAnimation = null;\n        this._private__isSettingSize = false;\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize || this._private__state === null) {\n                return;\n            }\n            this._private__model()._internal_lightUpdate();\n        };\n        this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize || this._private__state === null) {\n                return;\n            }\n            this._private__model()._internal_lightUpdate();\n        };\n        this._private__chart = chart;\n        this._private__state = state;\n        this._private__state._internal_onDestroyed()._internal_subscribe(this._private__onStateDestroyed.bind(this), this, true);\n        this._private__paneCell = document.createElement('td');\n        this._private__paneCell.style.padding = '0';\n        this._private__paneCell.style.position = 'relative';\n        const paneWrapper = document.createElement('div');\n        paneWrapper.style.width = '100%';\n        paneWrapper.style.height = '100%';\n        paneWrapper.style.position = 'relative';\n        paneWrapper.style.overflow = 'hidden';\n        this._private__leftAxisCell = document.createElement('td');\n        this._private__leftAxisCell.style.padding = '0';\n        this._private__rightAxisCell = document.createElement('td');\n        this._private__rightAxisCell.style.padding = '0';\n        this._private__paneCell.appendChild(paneWrapper);\n        this._private__canvasBinding = createBoundCanvas(paneWrapper, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        const canvas = this._private__canvasBinding.canvasElement;\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = '1';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        this._private__topCanvasBinding = createBoundCanvas(paneWrapper, size$1({ width: 16, height: 16 }));\n        this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        const topCanvas = this._private__topCanvasBinding.canvasElement;\n        topCanvas.style.position = 'absolute';\n        topCanvas.style.zIndex = '2';\n        topCanvas.style.left = '0';\n        topCanvas.style.top = '0';\n        this._private__rowElement = document.createElement('tr');\n        this._private__rowElement.appendChild(this._private__leftAxisCell);\n        this._private__rowElement.appendChild(this._private__paneCell);\n        this._private__rowElement.appendChild(this._private__rightAxisCell);\n        this._internal_updatePriceAxisWidgetsStates();\n        this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n            _internal_treatVertTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options().handleScroll.vertTouchDrag,\n            _internal_treatHorzTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options().handleScroll.horzTouchDrag,\n        });\n    }\n    _internal_destroy() {\n        if (this._private__leftPriceAxisWidget !== null) {\n            this._private__leftPriceAxisWidget._internal_destroy();\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            this._private__rightPriceAxisWidget._internal_destroy();\n        }\n        this._private__attributionLogoWidget = null;\n        this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__topCanvasBinding.canvasElement);\n        this._private__topCanvasBinding.dispose();\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n        }\n        this._private__mouseEventHandler._internal_destroy();\n    }\n    _internal_state() {\n        return ensureNotNull(this._private__state);\n    }\n    _internal_setState(pane) {\n        var _a, _b;\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n        }\n        this._private__state = pane;\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_subscribe(PaneWidget.prototype._private__onStateDestroyed.bind(this), this, true);\n        }\n        this._internal_updatePriceAxisWidgetsStates();\n        if (this._private__chart._internal_paneWidgets().indexOf(this) === this._private__chart._internal_paneWidgets().length - 1) {\n            this._private__attributionLogoWidget = (_a = this._private__attributionLogoWidget) !== null && _a !== void 0 ? _a : new AttributionLogoWidget(this._private__paneCell, this._private__chart);\n            this._private__attributionLogoWidget._internal_update();\n        }\n        else {\n            (_b = this._private__attributionLogoWidget) === null || _b === void 0 ? void 0 : _b._internal_removeElement();\n            this._private__attributionLogoWidget = null;\n        }\n    }\n    _internal_chart() {\n        return this._private__chart;\n    }\n    _internal_getElement() {\n        return this._private__rowElement;\n    }\n    _internal_updatePriceAxisWidgetsStates() {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__recreatePriceAxisWidgets();\n        if (this._private__model()._internal_serieses().length === 0) {\n            return;\n        }\n        if (this._private__leftPriceAxisWidget !== null) {\n            const leftPriceScale = this._private__state._internal_leftPriceScale();\n            this._private__leftPriceAxisWidget._internal_setPriceScale(ensureNotNull(leftPriceScale));\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            const rightPriceScale = this._private__state._internal_rightPriceScale();\n            this._private__rightPriceAxisWidget._internal_setPriceScale(ensureNotNull(rightPriceScale));\n        }\n    }\n    _internal_updatePriceAxisWidgets() {\n        if (this._private__leftPriceAxisWidget !== null) {\n            this._private__leftPriceAxisWidget._internal_update();\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            this._private__rightPriceAxisWidget._internal_update();\n        }\n    }\n    _internal_stretchFactor() {\n        return this._private__state !== null ? this._private__state._internal_stretchFactor() : 0;\n    }\n    _internal_setStretchFactor(stretchFactor) {\n        if (this._private__state) {\n            this._private__state._internal_setStretchFactor(stretchFactor);\n        }\n    }\n    _internal_mouseEnterEvent(event) {\n        if (!this._private__state) {\n            return;\n        }\n        this._private__onMouseEvent();\n        const x = event.localX;\n        const y = event.localY;\n        this._private__setCrosshairPosition(x, y, event);\n    }\n    _internal_mouseDownEvent(event) {\n        this._private__onMouseEvent();\n        this._private__mouseTouchDownEvent();\n        this._private__setCrosshairPosition(event.localX, event.localY, event);\n    }\n    _internal_mouseMoveEvent(event) {\n        var _a;\n        if (!this._private__state) {\n            return;\n        }\n        this._private__onMouseEvent();\n        const x = event.localX;\n        const y = event.localY;\n        this._private__setCrosshairPosition(x, y, event);\n        const hitTest = this._internal_hitTest(x, y);\n        this._private__chart._internal_setCursorStyle((_a = hitTest === null || hitTest === void 0 ? void 0 : hitTest._internal_cursorStyle) !== null && _a !== void 0 ? _a : null);\n        this._private__model()._internal_setHoveredSource(hitTest && { _internal_source: hitTest._internal_source, _internal_object: hitTest._internal_object });\n    }\n    _internal_mouseClickEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__onMouseEvent();\n        this._private__fireClickedDelegate(event);\n    }\n    _internal_mouseDoubleClickEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__fireMouseClickDelegate(this._private__dblClicked, event);\n    }\n    _internal_doubleTapEvent(event) {\n        this._internal_mouseDoubleClickEvent(event);\n    }\n    _internal_pressedMouseMoveEvent(event) {\n        this._private__onMouseEvent();\n        this._private__pressedMouseTouchMoveEvent(event);\n        this._private__setCrosshairPosition(event.localX, event.localY, event);\n    }\n    _internal_mouseUpEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__onMouseEvent();\n        this._private__longTap = false;\n        this._private__endScroll(event);\n    }\n    _internal_tapEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__fireClickedDelegate(event);\n    }\n    _internal_longTapEvent(event) {\n        this._private__longTap = true;\n        if (this._private__startTrackPoint === null) {\n            const point = { x: event.localX, y: event.localY };\n            this._private__startTrackingMode(point, point, event);\n        }\n    }\n    _internal_mouseLeaveEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__onMouseEvent();\n        this._private__state._internal_model()._internal_setHoveredSource(null);\n        this._private__clearCrosshairPosition();\n    }\n    _internal_clicked() {\n        return this._private__clicked;\n    }\n    _internal_dblClicked() {\n        return this._private__dblClicked;\n    }\n    _internal_pinchStartEvent() {\n        this._private__prevPinchScale = 1;\n        this._private__model()._internal_stopTimeScaleAnimation();\n    }\n    _internal_pinchEvent(middlePoint, scale) {\n        if (!this._private__chart._internal_options().handleScale.pinch) {\n            return;\n        }\n        const zoomScale = (scale - this._private__prevPinchScale) * 5;\n        this._private__prevPinchScale = scale;\n        this._private__model()._internal_zoomTime(middlePoint._internal_x, zoomScale);\n    }\n    _internal_touchStartEvent(event) {\n        this._private__longTap = false;\n        this._private__exitTrackingModeOnNextTry = this._private__startTrackPoint !== null;\n        this._private__mouseTouchDownEvent();\n        const crosshair = this._private__model()._internal_crosshairSource();\n        if (this._private__startTrackPoint !== null && crosshair._internal_visible()) {\n            this._private__initCrosshairPosition = { x: crosshair._internal_appliedX(), y: crosshair._internal_appliedY() };\n            this._private__startTrackPoint = { x: event.localX, y: event.localY };\n        }\n    }\n    _internal_touchMoveEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        const x = event.localX;\n        const y = event.localY;\n        if (this._private__startTrackPoint !== null) {\n            // tracking mode: move crosshair\n            this._private__exitTrackingModeOnNextTry = false;\n            const origPoint = ensureNotNull(this._private__initCrosshairPosition);\n            const newX = origPoint.x + (x - this._private__startTrackPoint.x);\n            const newY = origPoint.y + (y - this._private__startTrackPoint.y);\n            this._private__setCrosshairPosition(newX, newY, event);\n            return;\n        }\n        this._private__pressedMouseTouchMoveEvent(event);\n    }\n    _internal_touchEndEvent(event) {\n        if (this._internal_chart()._internal_options().trackingMode.exitMode === 0 /* TrackingModeExitMode.OnTouchEnd */) {\n            this._private__exitTrackingModeOnNextTry = true;\n        }\n        this._private__tryExitTrackingMode();\n        this._private__endScroll(event);\n    }\n    _internal_hitTest(x, y) {\n        const state = this._private__state;\n        if (state === null) {\n            return null;\n        }\n        return hitTestPane(state, x, y);\n    }\n    _internal_setPriceAxisSize(width, position) {\n        const priceAxisWidget = position === 'left' ? this._private__leftPriceAxisWidget : this._private__rightPriceAxisWidget;\n        ensureNotNull(priceAxisWidget)._internal_setSize(size$1({ width, height: this._private__size.height }));\n    }\n    _internal_getSize() {\n        return this._private__size;\n    }\n    _internal_setSize(newSize) {\n        if (equalSizes(this._private__size, newSize)) {\n            return;\n        }\n        this._private__size = newSize;\n        this._private__isSettingSize = true;\n        this._private__canvasBinding.resizeCanvasElement(newSize);\n        this._private__topCanvasBinding.resizeCanvasElement(newSize);\n        this._private__isSettingSize = false;\n        this._private__paneCell.style.width = newSize.width + 'px';\n        this._private__paneCell.style.height = newSize.height + 'px';\n    }\n    _internal_recalculatePriceScales() {\n        const pane = ensureNotNull(this._private__state);\n        pane._internal_recalculatePriceScale(pane._internal_leftPriceScale());\n        pane._internal_recalculatePriceScale(pane._internal_rightPriceScale());\n        for (const source of pane._internal_dataSources()) {\n            if (pane._internal_isOverlay(source)) {\n                const priceScale = source._internal_priceScale();\n                if (priceScale !== null) {\n                    pane._internal_recalculatePriceScale(priceScale);\n                }\n                // for overlay drawings price scale is owner's price scale\n                // however owner's price scale could not contain ds\n                source._internal_updateAllViews();\n            }\n        }\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _internal_paint(type) {\n        if (type === 0 /* InvalidationLevel.None */) {\n            return;\n        }\n        if (this._private__state === null) {\n            return;\n        }\n        if (type > 1 /* InvalidationLevel.Cursor */) {\n            this._internal_recalculatePriceScales();\n        }\n        if (this._private__leftPriceAxisWidget !== null) {\n            this._private__leftPriceAxisWidget._internal_paint(type);\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            this._private__rightPriceAxisWidget._internal_paint(type);\n        }\n        if (type !== 1 /* InvalidationLevel.Cursor */) {\n            this._private__canvasBinding.applySuggestedBitmapSize();\n            const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n            if (target !== null) {\n                target.useBitmapCoordinateSpace((scope) => {\n                    this._private__drawBackground(scope);\n                });\n                if (this._private__state) {\n                    this._private__drawSources(target, sourceBottomPaneViews$1);\n                    this._private__drawGrid(target);\n                    this._private__drawWatermark(target);\n                    this._private__drawSources(target, sourcePaneViews$1);\n                    this._private__drawSources(target, sourceLabelPaneViews);\n                }\n            }\n        }\n        this._private__topCanvasBinding.applySuggestedBitmapSize();\n        const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n        if (topTarget !== null) {\n            topTarget.useBitmapCoordinateSpace(({ context: ctx, bitmapSize }) => {\n                ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n            });\n            this._private__drawCrosshair(topTarget);\n            this._private__drawSources(topTarget, sourceTopPaneViews$1);\n        }\n    }\n    _internal_leftPriceAxisWidget() {\n        return this._private__leftPriceAxisWidget;\n    }\n    _internal_rightPriceAxisWidget() {\n        return this._private__rightPriceAxisWidget;\n    }\n    _internal_drawAdditionalSources(target, paneViewsGetter) {\n        this._private__drawSources(target, paneViewsGetter);\n    }\n    _private__onStateDestroyed() {\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n        }\n        this._private__state = null;\n    }\n    _private__fireClickedDelegate(event) {\n        this._private__fireMouseClickDelegate(this._private__clicked, event);\n    }\n    _private__fireMouseClickDelegate(delegate, event) {\n        const x = event.localX;\n        const y = event.localY;\n        if (delegate._internal_hasListeners()) {\n            delegate._internal_fire(this._private__model()._internal_timeScale()._internal_coordinateToIndex(x), { x, y }, event);\n        }\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        const { width, height } = bitmapSize;\n        const model = this._private__model();\n        const topColor = model._internal_backgroundTopColor();\n        const bottomColor = model._internal_backgroundBottomColor();\n        if (topColor === bottomColor) {\n            clearRect(ctx, 0, 0, width, height, bottomColor);\n        }\n        else {\n            clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n        }\n    }\n    _private__drawGrid(target) {\n        const state = ensureNotNull(this._private__state);\n        const paneView = state._internal_grid()._internal_paneView();\n        const renderer = paneView._internal_renderer();\n        if (renderer !== null) {\n            renderer._internal_draw(target, false);\n        }\n    }\n    _private__drawWatermark(target) {\n        const source = this._private__model()._internal_watermarkSource();\n        this._private__drawSourceImpl(target, sourcePaneViews$1, drawBackground, source);\n        this._private__drawSourceImpl(target, sourcePaneViews$1, drawForeground, source);\n    }\n    _private__drawCrosshair(target) {\n        this._private__drawSourceImpl(target, sourcePaneViews$1, drawForeground, this._private__model()._internal_crosshairSource());\n    }\n    _private__drawSources(target, paneViewsGetter) {\n        const state = ensureNotNull(this._private__state);\n        const sources = state._internal_orderedSources();\n        for (const source of sources) {\n            this._private__drawSourceImpl(target, paneViewsGetter, drawBackground, source);\n        }\n        for (const source of sources) {\n            this._private__drawSourceImpl(target, paneViewsGetter, drawForeground, source);\n        }\n    }\n    _private__drawSourceImpl(target, paneViewsGetter, drawFn, source) {\n        const state = ensureNotNull(this._private__state);\n        const hoveredSource = state._internal_model()._internal_hoveredSource();\n        const isHovered = hoveredSource !== null && hoveredSource._internal_source === source;\n        const objecId = hoveredSource !== null && isHovered && hoveredSource._internal_object !== undefined\n            ? hoveredSource._internal_object._internal_hitTestData\n            : undefined;\n        const drawRendererFn = (renderer) => drawFn(renderer, target, isHovered, objecId);\n        drawSourcePaneViews(paneViewsGetter, drawRendererFn, source, state);\n    }\n    _private__recreatePriceAxisWidgets() {\n        if (this._private__state === null) {\n            return;\n        }\n        const chart = this._private__chart;\n        const leftAxisVisible = this._private__state._internal_leftPriceScale()._internal_options().visible;\n        const rightAxisVisible = this._private__state._internal_rightPriceScale()._internal_options().visible;\n        if (!leftAxisVisible && this._private__leftPriceAxisWidget !== null) {\n            this._private__leftAxisCell.removeChild(this._private__leftPriceAxisWidget._internal_getElement());\n            this._private__leftPriceAxisWidget._internal_destroy();\n            this._private__leftPriceAxisWidget = null;\n        }\n        if (!rightAxisVisible && this._private__rightPriceAxisWidget !== null) {\n            this._private__rightAxisCell.removeChild(this._private__rightPriceAxisWidget._internal_getElement());\n            this._private__rightPriceAxisWidget._internal_destroy();\n            this._private__rightPriceAxisWidget = null;\n        }\n        const rendererOptionsProvider = chart._internal_model()._internal_rendererOptionsProvider();\n        if (leftAxisVisible && this._private__leftPriceAxisWidget === null) {\n            this._private__leftPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'left');\n            this._private__leftAxisCell.appendChild(this._private__leftPriceAxisWidget._internal_getElement());\n        }\n        if (rightAxisVisible && this._private__rightPriceAxisWidget === null) {\n            this._private__rightPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'right');\n            this._private__rightAxisCell.appendChild(this._private__rightPriceAxisWidget._internal_getElement());\n        }\n    }\n    _private__preventScroll(event) {\n        return event._internal_isTouch && this._private__longTap || this._private__startTrackPoint !== null;\n    }\n    _private__correctXCoord(x) {\n        return Math.max(0, Math.min(x, this._private__size.width - 1));\n    }\n    _private__correctYCoord(y) {\n        return Math.max(0, Math.min(y, this._private__size.height - 1));\n    }\n    _private__setCrosshairPosition(x, y, event) {\n        this._private__model()._internal_setAndSaveCurrentPosition(this._private__correctXCoord(x), this._private__correctYCoord(y), event, ensureNotNull(this._private__state));\n    }\n    _private__clearCrosshairPosition() {\n        this._private__model()._internal_clearCurrentPosition();\n    }\n    _private__tryExitTrackingMode() {\n        if (this._private__exitTrackingModeOnNextTry) {\n            this._private__startTrackPoint = null;\n            this._private__clearCrosshairPosition();\n        }\n    }\n    _private__startTrackingMode(startTrackPoint, crossHairPosition, event) {\n        this._private__startTrackPoint = startTrackPoint;\n        this._private__exitTrackingModeOnNextTry = false;\n        this._private__setCrosshairPosition(crossHairPosition.x, crossHairPosition.y, event);\n        const crosshair = this._private__model()._internal_crosshairSource();\n        this._private__initCrosshairPosition = { x: crosshair._internal_appliedX(), y: crosshair._internal_appliedY() };\n    }\n    _private__model() {\n        return this._private__chart._internal_model();\n    }\n    _private__endScroll(event) {\n        if (!this._private__isScrolling) {\n            return;\n        }\n        const model = this._private__model();\n        const state = this._internal_state();\n        model._internal_endScrollPrice(state, state._internal_defaultPriceScale());\n        this._private__startScrollingPos = null;\n        this._private__isScrolling = false;\n        model._internal_endScrollTime();\n        if (this._private__scrollXAnimation !== null) {\n            const startAnimationTime = performance.now();\n            const timeScale = model._internal_timeScale();\n            this._private__scrollXAnimation._internal_start(timeScale._internal_rightOffset(), startAnimationTime);\n            if (!this._private__scrollXAnimation._internal_finished(startAnimationTime)) {\n                model._internal_setTimeScaleAnimation(this._private__scrollXAnimation);\n            }\n        }\n    }\n    _private__onMouseEvent() {\n        this._private__startTrackPoint = null;\n    }\n    _private__mouseTouchDownEvent() {\n        if (!this._private__state) {\n            return;\n        }\n        this._private__model()._internal_stopTimeScaleAnimation();\n        if (document.activeElement !== document.body && document.activeElement !== document.documentElement) {\n            // If any focusable element except the page itself is focused, remove the focus\n            ensureNotNull(document.activeElement).blur();\n        }\n        else {\n            // Clear selection\n            const selection = document.getSelection();\n            if (selection !== null) {\n                selection.removeAllRanges();\n            }\n        }\n        const priceScale = this._private__state._internal_defaultPriceScale();\n        if (priceScale._internal_isEmpty() || this._private__model()._internal_timeScale()._internal_isEmpty()) {\n            return;\n        }\n    }\n    // eslint-disable-next-line complexity\n    _private__pressedMouseTouchMoveEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        const model = this._private__model();\n        const timeScale = model._internal_timeScale();\n        if (timeScale._internal_isEmpty()) {\n            return;\n        }\n        const chartOptions = this._private__chart._internal_options();\n        const scrollOptions = chartOptions.handleScroll;\n        const kineticScrollOptions = chartOptions.kineticScroll;\n        if ((!scrollOptions.pressedMouseMove || event._internal_isTouch) &&\n            (!scrollOptions.horzTouchDrag && !scrollOptions.vertTouchDrag || !event._internal_isTouch)) {\n            return;\n        }\n        const priceScale = this._private__state._internal_defaultPriceScale();\n        const now = performance.now();\n        if (this._private__startScrollingPos === null && !this._private__preventScroll(event)) {\n            this._private__startScrollingPos = {\n                x: event.clientX,\n                y: event.clientY,\n                _internal_timestamp: now,\n                _internal_localX: event.localX,\n                _internal_localY: event.localY,\n            };\n        }\n        if (this._private__startScrollingPos !== null &&\n            !this._private__isScrolling &&\n            (this._private__startScrollingPos.x !== event.clientX || this._private__startScrollingPos.y !== event.clientY)) {\n            if (event._internal_isTouch && kineticScrollOptions.touch || !event._internal_isTouch && kineticScrollOptions.mouse) {\n                const barSpacing = timeScale._internal_barSpacing();\n                this._private__scrollXAnimation = new KineticAnimation(0.2 /* KineticScrollConstants.MinScrollSpeed */ / barSpacing, 7 /* KineticScrollConstants.MaxScrollSpeed */ / barSpacing, 0.997 /* KineticScrollConstants.DumpingCoeff */, 15 /* KineticScrollConstants.ScrollMinMove */ / barSpacing);\n                this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), this._private__startScrollingPos._internal_timestamp);\n            }\n            else {\n                this._private__scrollXAnimation = null;\n            }\n            if (!priceScale._internal_isEmpty()) {\n                model._internal_startScrollPrice(this._private__state, priceScale, event.localY);\n            }\n            model._internal_startScrollTime(event.localX);\n            this._private__isScrolling = true;\n        }\n        if (this._private__isScrolling) {\n            // this allows scrolling not default price scales\n            if (!priceScale._internal_isEmpty()) {\n                model._internal_scrollPriceTo(this._private__state, priceScale, event.localY);\n            }\n            model._internal_scrollTimeTo(event.localX);\n            if (this._private__scrollXAnimation !== null) {\n                this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), now);\n            }\n        }\n    }\n}\n\nclass PriceAxisStub {\n    constructor(side, options, params, borderVisible, bottomColor) {\n        this._private__invalidated = true;\n        this._private__size = size$1({ width: 0, height: 0 });\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => this._internal_paint(3 /* InvalidationLevel.Full */);\n        this._private__isLeft = side === 'left';\n        this._private__rendererOptionsProvider = params._internal_rendererOptionsProvider;\n        this._private__options = options;\n        this._private__borderVisible = borderVisible;\n        this._private__bottomColor = bottomColor;\n        this._private__cell = document.createElement('div');\n        this._private__cell.style.width = '25px';\n        this._private__cell.style.height = '100%';\n        this._private__cell.style.overflow = 'hidden';\n        this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    }\n    _internal_destroy() {\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n    }\n    _internal_getElement() {\n        return this._private__cell;\n    }\n    _internal_getSize() {\n        return this._private__size;\n    }\n    _internal_setSize(newSize) {\n        if (!equalSizes(this._private__size, newSize)) {\n            this._private__size = newSize;\n            this._private__canvasBinding.resizeCanvasElement(newSize);\n            this._private__cell.style.width = `${newSize.width}px`;\n            this._private__cell.style.height = `${newSize.height}px`;\n            this._private__invalidated = true;\n        }\n    }\n    _internal_paint(type) {\n        if (type < 3 /* InvalidationLevel.Full */ && !this._private__invalidated) {\n            return;\n        }\n        if (this._private__size.width === 0 || this._private__size.height === 0) {\n            return;\n        }\n        this._private__invalidated = false;\n        this._private__canvasBinding.applySuggestedBitmapSize();\n        const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n        if (target !== null) {\n            target.useBitmapCoordinateSpace((scope) => {\n                this._private__drawBackground(scope);\n                this._private__drawBorder(scope);\n            });\n        }\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _private__drawBorder({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (!this._private__borderVisible()) {\n            return;\n        }\n        ctx.fillStyle = this._private__options.timeScale.borderColor;\n        const horzBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * horizontalPixelRatio);\n        const vertBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * verticalPixelRatio);\n        const left = (this._private__isLeft) ? bitmapSize.width - horzBorderSize : 0;\n        ctx.fillRect(left, 0, horzBorderSize, vertBorderSize);\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__bottomColor());\n    }\n}\n\nfunction buildTimeAxisViewsGetter(zOrder) {\n    return (source) => { var _a, _b; return (_b = (_a = source._internal_timePaneViews) === null || _a === void 0 ? void 0 : _a.call(source, zOrder)) !== null && _b !== void 0 ? _b : []; };\n}\nconst sourcePaneViews = buildTimeAxisViewsGetter('normal');\nconst sourceTopPaneViews = buildTimeAxisViewsGetter('top');\nconst sourceBottomPaneViews = buildTimeAxisViewsGetter('bottom');\nclass TimeAxisWidget {\n    constructor(chartWidget, horzScaleBehavior) {\n        this._private__leftStub = null;\n        this._private__rightStub = null;\n        this._private__rendererOptions = null;\n        this._private__mouseDown = false;\n        this._private__size = size$1({ width: 0, height: 0 });\n        this._private__sizeChanged = new Delegate();\n        this._private__widthCache = new TextWidthCache(5);\n        this._private__isSettingSize = false;\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n            if (!this._private__isSettingSize) {\n                this._private__chart._internal_model()._internal_lightUpdate();\n            }\n        };\n        this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n            if (!this._private__isSettingSize) {\n                this._private__chart._internal_model()._internal_lightUpdate();\n            }\n        };\n        this._private__chart = chartWidget;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__options = chartWidget._internal_options().layout;\n        this._private__element = document.createElement('tr');\n        this._private__leftStubCell = document.createElement('td');\n        this._private__leftStubCell.style.padding = '0';\n        this._private__rightStubCell = document.createElement('td');\n        this._private__rightStubCell.style.padding = '0';\n        this._private__cell = document.createElement('td');\n        this._private__cell.style.height = '25px';\n        this._private__cell.style.padding = '0';\n        this._private__dv = document.createElement('div');\n        this._private__dv.style.width = '100%';\n        this._private__dv.style.height = '100%';\n        this._private__dv.style.position = 'relative';\n        this._private__dv.style.overflow = 'hidden';\n        this._private__cell.appendChild(this._private__dv);\n        this._private__canvasBinding = createBoundCanvas(this._private__dv, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        const canvas = this._private__canvasBinding.canvasElement;\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = '1';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        this._private__topCanvasBinding = createBoundCanvas(this._private__dv, size$1({ width: 16, height: 16 }));\n        this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        const topCanvas = this._private__topCanvasBinding.canvasElement;\n        topCanvas.style.position = 'absolute';\n        topCanvas.style.zIndex = '2';\n        topCanvas.style.left = '0';\n        topCanvas.style.top = '0';\n        this._private__element.appendChild(this._private__leftStubCell);\n        this._private__element.appendChild(this._private__cell);\n        this._private__element.appendChild(this._private__rightStubCell);\n        this._private__recreateStubs();\n        this._private__chart._internal_model()._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__recreateStubs.bind(this), this);\n        this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n            _internal_treatVertTouchDragAsPageScroll: () => true,\n            _internal_treatHorzTouchDragAsPageScroll: () => !this._private__chart._internal_options().handleScroll.horzTouchDrag,\n        });\n    }\n    _internal_destroy() {\n        this._private__mouseEventHandler._internal_destroy();\n        if (this._private__leftStub !== null) {\n            this._private__leftStub._internal_destroy();\n        }\n        if (this._private__rightStub !== null) {\n            this._private__rightStub._internal_destroy();\n        }\n        this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__topCanvasBinding.canvasElement);\n        this._private__topCanvasBinding.dispose();\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        releaseCanvas(this._private__canvasBinding.canvasElement);\n        this._private__canvasBinding.dispose();\n    }\n    _internal_getElement() {\n        return this._private__element;\n    }\n    _internal_leftStub() {\n        return this._private__leftStub;\n    }\n    _internal_rightStub() {\n        return this._private__rightStub;\n    }\n    _internal_mouseDownEvent(event) {\n        if (this._private__mouseDown) {\n            return;\n        }\n        this._private__mouseDown = true;\n        const model = this._private__chart._internal_model();\n        if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n            return;\n        }\n        model._internal_startScaleTime(event.localX);\n    }\n    _internal_touchStartEvent(event) {\n        this._internal_mouseDownEvent(event);\n    }\n    _internal_mouseDownOutsideEvent() {\n        const model = this._private__chart._internal_model();\n        if (!model._internal_timeScale()._internal_isEmpty() && this._private__mouseDown) {\n            this._private__mouseDown = false;\n            if (this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n                model._internal_endScaleTime();\n            }\n        }\n    }\n    _internal_pressedMouseMoveEvent(event) {\n        const model = this._private__chart._internal_model();\n        if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n            return;\n        }\n        model._internal_scaleTimeTo(event.localX);\n    }\n    _internal_touchMoveEvent(event) {\n        this._internal_pressedMouseMoveEvent(event);\n    }\n    _internal_mouseUpEvent() {\n        this._private__mouseDown = false;\n        const model = this._private__chart._internal_model();\n        if (model._internal_timeScale()._internal_isEmpty() && !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n            return;\n        }\n        model._internal_endScaleTime();\n    }\n    _internal_touchEndEvent() {\n        this._internal_mouseUpEvent();\n    }\n    _internal_mouseDoubleClickEvent() {\n        if (this._private__chart._internal_options().handleScale.axisDoubleClickReset.time) {\n            this._private__chart._internal_model()._internal_resetTimeScale();\n        }\n    }\n    _internal_doubleTapEvent() {\n        this._internal_mouseDoubleClickEvent();\n    }\n    _internal_mouseEnterEvent() {\n        if (this._private__chart._internal_model()._internal_options().handleScale.axisPressedMouseMove.time) {\n            this._private__setCursor(1 /* CursorType.EwResize */);\n        }\n    }\n    _internal_mouseLeaveEvent() {\n        this._private__setCursor(0 /* CursorType.Default */);\n    }\n    _internal_getSize() {\n        return this._private__size;\n    }\n    _internal_sizeChanged() {\n        return this._private__sizeChanged;\n    }\n    _internal_setSizes(timeAxisSize, leftStubWidth, rightStubWidth) {\n        if (!equalSizes(this._private__size, timeAxisSize)) {\n            this._private__size = timeAxisSize;\n            this._private__isSettingSize = true;\n            this._private__canvasBinding.resizeCanvasElement(timeAxisSize);\n            this._private__topCanvasBinding.resizeCanvasElement(timeAxisSize);\n            this._private__isSettingSize = false;\n            this._private__cell.style.width = `${timeAxisSize.width}px`;\n            this._private__cell.style.height = `${timeAxisSize.height}px`;\n            this._private__sizeChanged._internal_fire(timeAxisSize);\n        }\n        if (this._private__leftStub !== null) {\n            this._private__leftStub._internal_setSize(size$1({ width: leftStubWidth, height: timeAxisSize.height }));\n        }\n        if (this._private__rightStub !== null) {\n            this._private__rightStub._internal_setSize(size$1({ width: rightStubWidth, height: timeAxisSize.height }));\n        }\n    }\n    _internal_optimalHeight() {\n        const rendererOptions = this._private__getRendererOptions();\n        return Math.ceil(\n        // rendererOptions.offsetSize +\n        rendererOptions._internal_borderSize +\n            rendererOptions._internal_tickLength +\n            rendererOptions._internal_fontSize +\n            rendererOptions._internal_paddingTop +\n            rendererOptions._internal_paddingBottom +\n            rendererOptions._internal_labelBottomOffset);\n    }\n    _internal_update() {\n        // this call has side-effect - it regenerates marks on the time scale\n        this._private__chart._internal_model()._internal_timeScale()._internal_marks();\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _internal_paint(type) {\n        if (type === 0 /* InvalidationLevel.None */) {\n            return;\n        }\n        if (type !== 1 /* InvalidationLevel.Cursor */) {\n            this._private__canvasBinding.applySuggestedBitmapSize();\n            const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n            if (target !== null) {\n                target.useBitmapCoordinateSpace((scope) => {\n                    this._private__drawBackground(scope);\n                    this._private__drawBorder(scope);\n                    this._private__drawAdditionalSources(target, sourceBottomPaneViews);\n                });\n                this._private__drawTickMarks(target);\n                this._private__drawAdditionalSources(target, sourcePaneViews);\n                // atm we don't have sources to be drawn on time axis except crosshair which is rendered on top level canvas\n                // so let's don't call this code at all for now\n                // this._drawLabels(this._chart.model().dataSources(), target);\n            }\n            if (this._private__leftStub !== null) {\n                this._private__leftStub._internal_paint(type);\n            }\n            if (this._private__rightStub !== null) {\n                this._private__rightStub._internal_paint(type);\n            }\n        }\n        this._private__topCanvasBinding.applySuggestedBitmapSize();\n        const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n        if (topTarget !== null) {\n            topTarget.useBitmapCoordinateSpace(({ context: ctx, bitmapSize }) => {\n                ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n            });\n            this._private__drawLabels([...this._private__chart._internal_model()._internal_serieses(), this._private__chart._internal_model()._internal_crosshairSource()], topTarget);\n            this._private__drawAdditionalSources(topTarget, sourceTopPaneViews);\n        }\n    }\n    _private__drawAdditionalSources(target, axisViewsGetter) {\n        const sources = this._private__chart._internal_model()._internal_serieses();\n        for (const source of sources) {\n            drawSourcePaneViews(axisViewsGetter, (renderer) => drawBackground(renderer, target, false, undefined), source, undefined);\n        }\n        for (const source of sources) {\n            drawSourcePaneViews(axisViewsGetter, (renderer) => drawForeground(renderer, target, false, undefined), source, undefined);\n        }\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__chart._internal_model()._internal_backgroundBottomColor());\n    }\n    _private__drawBorder({ context: ctx, bitmapSize, verticalPixelRatio }) {\n        if (this._private__chart._internal_options().timeScale.borderVisible) {\n            ctx.fillStyle = this._private__lineColor();\n            const borderSize = Math.max(1, Math.floor(this._private__getRendererOptions()._internal_borderSize * verticalPixelRatio));\n            ctx.fillRect(0, 0, bitmapSize.width, borderSize);\n        }\n    }\n    _private__drawTickMarks(target) {\n        const timeScale = this._private__chart._internal_model()._internal_timeScale();\n        const tickMarks = timeScale._internal_marks();\n        if (!tickMarks || tickMarks.length === 0) {\n            return;\n        }\n        const maxWeight = this._private__horzScaleBehavior.maxTickMarkWeight(tickMarks);\n        const rendererOptions = this._private__getRendererOptions();\n        const options = timeScale._internal_options();\n        if (options.borderVisible && options.ticksVisible) {\n            target.useBitmapCoordinateSpace(({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) => {\n                ctx.strokeStyle = this._private__lineColor();\n                ctx.fillStyle = this._private__lineColor();\n                const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n                const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n                ctx.beginPath();\n                const tickLen = Math.round(rendererOptions._internal_tickLength * verticalPixelRatio);\n                for (let index = tickMarks.length; index--;) {\n                    const x = Math.round(tickMarks[index].coord * horizontalPixelRatio);\n                    ctx.rect(x - tickOffset, 0, tickWidth, tickLen);\n                }\n                ctx.fill();\n            });\n        }\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            const yText = (rendererOptions._internal_borderSize +\n                rendererOptions._internal_tickLength +\n                rendererOptions._internal_paddingTop +\n                rendererOptions._internal_fontSize / 2);\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = this._private__textColor();\n            // draw base marks\n            ctx.font = this._private__baseFont();\n            for (const tickMark of tickMarks) {\n                if (tickMark.weight < maxWeight) {\n                    const coordinate = tickMark.needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark.coord, tickMark.label) : tickMark.coord;\n                    ctx.fillText(tickMark.label, coordinate, yText);\n                }\n            }\n            if (this._private__chart._internal_options().timeScale.allowBoldLabels) {\n                ctx.font = this._private__baseBoldFont();\n            }\n            for (const tickMark of tickMarks) {\n                if (tickMark.weight >= maxWeight) {\n                    const coordinate = tickMark.needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark.coord, tickMark.label) : tickMark.coord;\n                    ctx.fillText(tickMark.label, coordinate, yText);\n                }\n            }\n        });\n    }\n    _private__alignTickMarkLabelCoordinate(ctx, coordinate, labelText) {\n        const labelWidth = this._private__widthCache._internal_measureText(ctx, labelText);\n        const labelWidthHalf = labelWidth / 2;\n        const leftTextCoordinate = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        if (leftTextCoordinate < 0) {\n            coordinate = coordinate + Math.abs(0 - leftTextCoordinate);\n        }\n        else if (leftTextCoordinate + labelWidth > this._private__size.width) {\n            coordinate = coordinate - Math.abs(this._private__size.width - (leftTextCoordinate + labelWidth));\n        }\n        return coordinate;\n    }\n    _private__drawLabels(sources, target) {\n        const rendererOptions = this._private__getRendererOptions();\n        for (const source of sources) {\n            for (const view of source._internal_timeAxisViews()) {\n                view._internal_renderer()._internal_draw(target, rendererOptions);\n            }\n        }\n    }\n    _private__lineColor() {\n        return this._private__chart._internal_options().timeScale.borderColor;\n    }\n    _private__textColor() {\n        return this._private__options.textColor;\n    }\n    _private__fontSize() {\n        return this._private__options.fontSize;\n    }\n    _private__baseFont() {\n        return makeFont(this._private__fontSize(), this._private__options.fontFamily);\n    }\n    _private__baseBoldFont() {\n        return makeFont(this._private__fontSize(), this._private__options.fontFamily, 'bold');\n    }\n    _private__getRendererOptions() {\n        if (this._private__rendererOptions === null) {\n            this._private__rendererOptions = {\n                _internal_borderSize: 1 /* Constants.BorderSize */,\n                _internal_baselineOffset: NaN,\n                _internal_paddingTop: NaN,\n                _internal_paddingBottom: NaN,\n                _internal_paddingHorizontal: NaN,\n                _internal_tickLength: 5 /* Constants.TickLength */,\n                _internal_fontSize: NaN,\n                _internal_font: '',\n                _internal_widthCache: new TextWidthCache(),\n                _internal_labelBottomOffset: 0,\n            };\n        }\n        const rendererOptions = this._private__rendererOptions;\n        const newFont = this._private__baseFont();\n        if (rendererOptions._internal_font !== newFont) {\n            const fontSize = this._private__fontSize();\n            rendererOptions._internal_fontSize = fontSize;\n            rendererOptions._internal_font = newFont;\n            rendererOptions._internal_paddingTop = 3 * fontSize / 12;\n            rendererOptions._internal_paddingBottom = 3 * fontSize / 12;\n            rendererOptions._internal_paddingHorizontal = 9 * fontSize / 12;\n            rendererOptions._internal_baselineOffset = 0;\n            rendererOptions._internal_labelBottomOffset = 4 * fontSize / 12;\n            rendererOptions._internal_widthCache._internal_reset();\n        }\n        return this._private__rendererOptions;\n    }\n    _private__setCursor(type) {\n        this._private__cell.style.cursor = type === 1 /* CursorType.EwResize */ ? 'ew-resize' : 'default';\n    }\n    _private__recreateStubs() {\n        const model = this._private__chart._internal_model();\n        const options = model._internal_options();\n        if (!options.leftPriceScale.visible && this._private__leftStub !== null) {\n            this._private__leftStubCell.removeChild(this._private__leftStub._internal_getElement());\n            this._private__leftStub._internal_destroy();\n            this._private__leftStub = null;\n        }\n        if (!options.rightPriceScale.visible && this._private__rightStub !== null) {\n            this._private__rightStubCell.removeChild(this._private__rightStub._internal_getElement());\n            this._private__rightStub._internal_destroy();\n            this._private__rightStub = null;\n        }\n        const rendererOptionsProvider = this._private__chart._internal_model()._internal_rendererOptionsProvider();\n        const params = {\n            _internal_rendererOptionsProvider: rendererOptionsProvider,\n        };\n        const borderVisibleGetter = () => {\n            return options.leftPriceScale.borderVisible && model._internal_timeScale()._internal_options().borderVisible;\n        };\n        const bottomColorGetter = () => model._internal_backgroundBottomColor();\n        if (options.leftPriceScale.visible && this._private__leftStub === null) {\n            this._private__leftStub = new PriceAxisStub('left', options, params, borderVisibleGetter, bottomColorGetter);\n            this._private__leftStubCell.appendChild(this._private__leftStub._internal_getElement());\n        }\n        if (options.rightPriceScale.visible && this._private__rightStub === null) {\n            this._private__rightStub = new PriceAxisStub('right', options, params, borderVisibleGetter, bottomColorGetter);\n            this._private__rightStubCell.appendChild(this._private__rightStub._internal_getElement());\n        }\n    }\n}\n\nconst windowsChrome = isChromiumBased() && isWindows();\nclass ChartWidget {\n    constructor(container, options, horzScaleBehavior) {\n        this._private__paneWidgets = [];\n        this._private__drawRafId = 0;\n        this._private__height = 0;\n        this._private__width = 0;\n        this._private__leftPriceAxisWidth = 0;\n        this._private__rightPriceAxisWidth = 0;\n        this._private__invalidateMask = null;\n        this._private__drawPlanned = false;\n        this._private__clicked = new Delegate();\n        this._private__dblClicked = new Delegate();\n        this._private__crosshairMoved = new Delegate();\n        this._private__observer = null;\n        this._private__cursorStyleOverride = null;\n        this._private__container = container;\n        this._private__options = options;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__element = document.createElement('div');\n        this._private__element.classList.add('tv-lightweight-charts');\n        this._private__element.style.overflow = 'hidden';\n        this._private__element.style.direction = 'ltr';\n        this._private__element.style.width = '100%';\n        this._private__element.style.height = '100%';\n        disableSelection(this._private__element);\n        this._private__tableElement = document.createElement('table');\n        this._private__tableElement.setAttribute('cellspacing', '0');\n        this._private__element.appendChild(this._private__tableElement);\n        this._private__onWheelBound = this._private__onMousewheel.bind(this);\n        if (shouldSubscribeMouseWheel(this._private__options)) {\n            this._private__setMouseWheelEventListener(true);\n        }\n        this._private__model = new ChartModel(this._private__invalidateHandler.bind(this), this._private__options, horzScaleBehavior);\n        this._internal_model()._internal_crosshairMoved()._internal_subscribe(this._private__onPaneWidgetCrosshairMoved.bind(this), this);\n        this._private__timeAxisWidget = new TimeAxisWidget(this, this._private__horzScaleBehavior);\n        this._private__tableElement.appendChild(this._private__timeAxisWidget._internal_getElement());\n        const usedObserver = options.autoSize && this._private__installObserver();\n        // observer could not fire event immediately for some cases\n        // so we have to set initial size manually\n        let width = this._private__options.width;\n        let height = this._private__options.height;\n        // ignore width/height options if observer has actually been used\n        // however respect options if installing resize observer failed\n        if (usedObserver || width === 0 || height === 0) {\n            const containerRect = container.getBoundingClientRect();\n            width = width || containerRect.width;\n            height = height || containerRect.height;\n        }\n        // BEWARE: resize must be called BEFORE _syncGuiWithModel (in constructor only)\n        // or after but with adjustSize to properly update time scale\n        this._internal_resize(width, height);\n        this._private__syncGuiWithModel();\n        container.appendChild(this._private__element);\n        this._private__updateTimeAxisVisibility();\n        this._private__model._internal_timeScale()._internal_optionsApplied()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n        this._private__model._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n    }\n    _internal_model() {\n        return this._private__model;\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_paneWidgets() {\n        return this._private__paneWidgets;\n    }\n    _internal_timeAxisWidget() {\n        return this._private__timeAxisWidget;\n    }\n    _internal_destroy() {\n        this._private__setMouseWheelEventListener(false);\n        if (this._private__drawRafId !== 0) {\n            window.cancelAnimationFrame(this._private__drawRafId);\n        }\n        this._private__model._internal_crosshairMoved()._internal_unsubscribeAll(this);\n        this._private__model._internal_timeScale()._internal_optionsApplied()._internal_unsubscribeAll(this);\n        this._private__model._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n        this._private__model._internal_destroy();\n        for (const paneWidget of this._private__paneWidgets) {\n            this._private__tableElement.removeChild(paneWidget._internal_getElement());\n            paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_destroy();\n        }\n        this._private__paneWidgets = [];\n        // for (const paneSeparator of this._paneSeparators) {\n        // \tthis._destroySeparator(paneSeparator);\n        // }\n        // this._paneSeparators = [];\n        ensureNotNull(this._private__timeAxisWidget)._internal_destroy();\n        if (this._private__element.parentElement !== null) {\n            this._private__element.parentElement.removeChild(this._private__element);\n        }\n        this._private__crosshairMoved._internal_destroy();\n        this._private__clicked._internal_destroy();\n        this._private__dblClicked._internal_destroy();\n        this._private__uninstallObserver();\n    }\n    _internal_resize(width, height, forceRepaint = false) {\n        if (this._private__height === height && this._private__width === width) {\n            return;\n        }\n        const sizeHint = suggestChartSize(size$1({ width, height }));\n        this._private__height = sizeHint.height;\n        this._private__width = sizeHint.width;\n        const heightStr = this._private__height + 'px';\n        const widthStr = this._private__width + 'px';\n        ensureNotNull(this._private__element).style.height = heightStr;\n        ensureNotNull(this._private__element).style.width = widthStr;\n        this._private__tableElement.style.height = heightStr;\n        this._private__tableElement.style.width = widthStr;\n        if (forceRepaint) {\n            this._private__drawImpl(InvalidateMask._internal_full(), performance.now());\n        }\n        else {\n            this._private__model._internal_fullUpdate();\n        }\n    }\n    _internal_paint(invalidateMask) {\n        if (invalidateMask === undefined) {\n            invalidateMask = InvalidateMask._internal_full();\n        }\n        for (let i = 0; i < this._private__paneWidgets.length; i++) {\n            this._private__paneWidgets[i]._internal_paint(invalidateMask._internal_invalidateForPane(i)._internal_level);\n        }\n        if (this._private__options.timeScale.visible) {\n            this._private__timeAxisWidget._internal_paint(invalidateMask._internal_fullInvalidation());\n        }\n    }\n    _internal_applyOptions(options) {\n        const currentlyHasMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n        // we don't need to merge options here because it's done in chart model\n        // and since both model and widget share the same object it will be done automatically for widget as well\n        // not ideal solution for sure, but it work's for now Â¯\\_(ãƒ„)_/Â¯\n        this._private__model._internal_applyOptions(options);\n        const shouldHaveMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n        if (shouldHaveMouseWheelListener !== currentlyHasMouseWheelListener) {\n            this._private__setMouseWheelEventListener(shouldHaveMouseWheelListener);\n        }\n        this._private__updateTimeAxisVisibility();\n        this._private__applyAutoSizeOptions(options);\n    }\n    _internal_clicked() {\n        return this._private__clicked;\n    }\n    _internal_dblClicked() {\n        return this._private__dblClicked;\n    }\n    _internal_crosshairMoved() {\n        return this._private__crosshairMoved;\n    }\n    _internal_takeScreenshot() {\n        if (this._private__invalidateMask !== null) {\n            this._private__drawImpl(this._private__invalidateMask, performance.now());\n            this._private__invalidateMask = null;\n        }\n        const screeshotBitmapSize = this._private__traverseLayout(null);\n        const screenshotCanvas = document.createElement('canvas');\n        screenshotCanvas.width = screeshotBitmapSize.width;\n        screenshotCanvas.height = screeshotBitmapSize.height;\n        const ctx = ensureNotNull(screenshotCanvas.getContext('2d'));\n        this._private__traverseLayout(ctx);\n        return screenshotCanvas;\n    }\n    _internal_getPriceAxisWidth(position) {\n        if (position === 'left' && !this._private__isLeftAxisVisible()) {\n            return 0;\n        }\n        if (position === 'right' && !this._private__isRightAxisVisible()) {\n            return 0;\n        }\n        if (this._private__paneWidgets.length === 0) {\n            return 0;\n        }\n        // we don't need to worry about exactly pane widget here\n        // because all pane widgets have the same width of price axis widget\n        // see _adjustSizeImpl\n        const priceAxisWidget = position === 'left'\n            ? this._private__paneWidgets[0]._internal_leftPriceAxisWidget()\n            : this._private__paneWidgets[0]._internal_rightPriceAxisWidget();\n        return ensureNotNull(priceAxisWidget)._internal_getWidth();\n    }\n    _internal_autoSizeActive() {\n        return this._private__options.autoSize && this._private__observer !== null;\n    }\n    _internal_element() {\n        return this._private__element;\n    }\n    _internal_setCursorStyle(style) {\n        this._private__cursorStyleOverride = style;\n        if (this._private__cursorStyleOverride) {\n            this._internal_element().style.setProperty('cursor', style);\n        }\n        else {\n            this._internal_element().style.removeProperty('cursor');\n        }\n    }\n    _internal_getCursorOverrideStyle() {\n        return this._private__cursorStyleOverride;\n    }\n    _internal_paneSize() {\n        // we currently only support a single pane.\n        return ensureDefined(this._private__paneWidgets[0])._internal_getSize();\n    }\n    // eslint-disable-next-line complexity\n    _private__applyAutoSizeOptions(options) {\n        if (options.autoSize === undefined && this._private__observer && (options.width !== undefined || options.height !== undefined)) {\n            warn(`You should turn autoSize off explicitly before specifying sizes; try adding options.autoSize: false to new options`);\n            return;\n        }\n        if (options.autoSize && !this._private__observer) {\n            // installing observer will override resize if successful\n            this._private__installObserver();\n        }\n        if (options.autoSize === false && this._private__observer !== null) {\n            this._private__uninstallObserver();\n        }\n        if (!options.autoSize && (options.width !== undefined || options.height !== undefined)) {\n            this._internal_resize(options.width || this._private__width, options.height || this._private__height);\n        }\n    }\n    /**\n     * Traverses the widget's layout (pane and axis child widgets),\n     * draws the screenshot (if rendering context is passed) and returns the screenshot bitmap size\n     *\n     * @param ctx - if passed, used to draw the screenshot of widget\n     * @returns screenshot bitmap size\n     */\n    _private__traverseLayout(ctx) {\n        let totalWidth = 0;\n        let totalHeight = 0;\n        const firstPane = this._private__paneWidgets[0];\n        const drawPriceAxises = (position, targetX) => {\n            let targetY = 0;\n            for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n                const paneWidget = this._private__paneWidgets[paneIndex];\n                const priceAxisWidget = ensureNotNull(position === 'left' ? paneWidget._internal_leftPriceAxisWidget() : paneWidget._internal_rightPriceAxisWidget());\n                const bitmapSize = priceAxisWidget._internal_getBitmapSize();\n                if (ctx !== null) {\n                    priceAxisWidget._internal_drawBitmap(ctx, targetX, targetY);\n                }\n                targetY += bitmapSize.height;\n                // if (paneIndex < this._paneWidgets.length - 1) {\n                // \tconst separator = this._paneSeparators[paneIndex];\n                // \tconst separatorBitmapSize = separator.getBitmapSize();\n                // \tif (ctx !== null) {\n                // \t\tseparator.drawBitmap(ctx, targetX, targetY);\n                // \t}\n                // \ttargetY += separatorBitmapSize.height;\n                // }\n            }\n        };\n        // draw left price scale if exists\n        if (this._private__isLeftAxisVisible()) {\n            drawPriceAxises('left', 0);\n            const leftAxisBitmapWidth = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n            totalWidth += leftAxisBitmapWidth;\n        }\n        for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n            const paneWidget = this._private__paneWidgets[paneIndex];\n            const bitmapSize = paneWidget._internal_getBitmapSize();\n            if (ctx !== null) {\n                paneWidget._internal_drawBitmap(ctx, totalWidth, totalHeight);\n            }\n            totalHeight += bitmapSize.height;\n            // if (paneIndex < this._paneWidgets.length - 1) {\n            // \tconst separator = this._paneSeparators[paneIndex];\n            // \tconst separatorBitmapSize = separator.getBitmapSize();\n            // \tif (ctx !== null) {\n            // \t\tseparator.drawBitmap(ctx, totalWidth, totalHeight);\n            // \t}\n            // \ttotalHeight += separatorBitmapSize.height;\n            // }\n        }\n        const firstPaneBitmapWidth = firstPane._internal_getBitmapSize().width;\n        totalWidth += firstPaneBitmapWidth;\n        // draw right price scale if exists\n        if (this._private__isRightAxisVisible()) {\n            drawPriceAxises('right', totalWidth);\n            const rightAxisBitmapWidth = ensureNotNull(firstPane._internal_rightPriceAxisWidget())._internal_getBitmapSize().width;\n            totalWidth += rightAxisBitmapWidth;\n        }\n        const drawStub = (position, targetX, targetY) => {\n            const stub = ensureNotNull(position === 'left' ? this._private__timeAxisWidget._internal_leftStub() : this._private__timeAxisWidget._internal_rightStub());\n            stub._internal_drawBitmap(ensureNotNull(ctx), targetX, targetY);\n        };\n        // draw time scale and stubs\n        if (this._private__options.timeScale.visible) {\n            const timeAxisBitmapSize = this._private__timeAxisWidget._internal_getBitmapSize();\n            if (ctx !== null) {\n                let targetX = 0;\n                if (this._private__isLeftAxisVisible()) {\n                    drawStub('left', targetX, totalHeight);\n                    targetX = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n                }\n                this._private__timeAxisWidget._internal_drawBitmap(ctx, targetX, totalHeight);\n                targetX += timeAxisBitmapSize.width;\n                if (this._private__isRightAxisVisible()) {\n                    drawStub('right', targetX, totalHeight);\n                }\n            }\n            totalHeight += timeAxisBitmapSize.height;\n        }\n        return size$1({\n            width: totalWidth,\n            height: totalHeight,\n        });\n    }\n    // eslint-disable-next-line complexity\n    _private__adjustSizeImpl() {\n        let totalStretch = 0;\n        let leftPriceAxisWidth = 0;\n        let rightPriceAxisWidth = 0;\n        for (const paneWidget of this._private__paneWidgets) {\n            if (this._private__isLeftAxisVisible()) {\n                leftPriceAxisWidth = Math.max(leftPriceAxisWidth, ensureNotNull(paneWidget._internal_leftPriceAxisWidget())._internal_optimalWidth(), this._private__options.leftPriceScale.minimumWidth);\n            }\n            if (this._private__isRightAxisVisible()) {\n                rightPriceAxisWidth = Math.max(rightPriceAxisWidth, ensureNotNull(paneWidget._internal_rightPriceAxisWidget())._internal_optimalWidth(), this._private__options.rightPriceScale.minimumWidth);\n            }\n            totalStretch += paneWidget._internal_stretchFactor();\n        }\n        leftPriceAxisWidth = suggestPriceScaleWidth(leftPriceAxisWidth);\n        rightPriceAxisWidth = suggestPriceScaleWidth(rightPriceAxisWidth);\n        const width = this._private__width;\n        const height = this._private__height;\n        const paneWidth = Math.max(width - leftPriceAxisWidth - rightPriceAxisWidth, 0);\n        // const separatorCount = this._paneSeparators.length;\n        // const separatorHeight = SEPARATOR_HEIGHT;\n        const separatorsHeight = 0; // separatorHeight * separatorCount;\n        const timeAxisVisible = this._private__options.timeScale.visible;\n        let timeAxisHeight = timeAxisVisible ? Math.max(this._private__timeAxisWidget._internal_optimalHeight(), this._private__options.timeScale.minimumHeight) : 0;\n        timeAxisHeight = suggestTimeScaleHeight(timeAxisHeight);\n        const otherWidgetHeight = separatorsHeight + timeAxisHeight;\n        const totalPaneHeight = height < otherWidgetHeight ? 0 : height - otherWidgetHeight;\n        const stretchPixels = totalPaneHeight / totalStretch;\n        let accumulatedHeight = 0;\n        for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; ++paneIndex) {\n            const paneWidget = this._private__paneWidgets[paneIndex];\n            paneWidget._internal_setState(this._private__model._internal_panes()[paneIndex]);\n            let paneHeight = 0;\n            let calculatePaneHeight = 0;\n            if (paneIndex === this._private__paneWidgets.length - 1) {\n                calculatePaneHeight = totalPaneHeight - accumulatedHeight;\n            }\n            else {\n                calculatePaneHeight = Math.round(paneWidget._internal_stretchFactor() * stretchPixels);\n            }\n            paneHeight = Math.max(calculatePaneHeight, 2);\n            accumulatedHeight += paneHeight;\n            paneWidget._internal_setSize(size$1({ width: paneWidth, height: paneHeight }));\n            if (this._private__isLeftAxisVisible()) {\n                paneWidget._internal_setPriceAxisSize(leftPriceAxisWidth, 'left');\n            }\n            if (this._private__isRightAxisVisible()) {\n                paneWidget._internal_setPriceAxisSize(rightPriceAxisWidth, 'right');\n            }\n            if (paneWidget._internal_state()) {\n                this._private__model._internal_setPaneHeight(paneWidget._internal_state(), paneHeight);\n            }\n        }\n        this._private__timeAxisWidget._internal_setSizes(size$1({ width: timeAxisVisible ? paneWidth : 0, height: timeAxisHeight }), timeAxisVisible ? leftPriceAxisWidth : 0, timeAxisVisible ? rightPriceAxisWidth : 0);\n        this._private__model._internal_setWidth(paneWidth);\n        if (this._private__leftPriceAxisWidth !== leftPriceAxisWidth) {\n            this._private__leftPriceAxisWidth = leftPriceAxisWidth;\n        }\n        if (this._private__rightPriceAxisWidth !== rightPriceAxisWidth) {\n            this._private__rightPriceAxisWidth = rightPriceAxisWidth;\n        }\n    }\n    _private__setMouseWheelEventListener(add) {\n        if (add) {\n            this._private__element.addEventListener('wheel', this._private__onWheelBound, { passive: false });\n            return;\n        }\n        this._private__element.removeEventListener('wheel', this._private__onWheelBound);\n    }\n    _private__determineWheelSpeedAdjustment(event) {\n        switch (event.deltaMode) {\n            case event.DOM_DELTA_PAGE:\n                // one screen at time scroll mode\n                return 120;\n            case event.DOM_DELTA_LINE:\n                // one line at time scroll mode\n                return 32;\n        }\n        if (!windowsChrome) {\n            return 1;\n        }\n        // Chromium on Windows has a bug where the scroll speed isn't correctly\n        // adjusted for high density displays. We need to correct for this so that\n        // scroll speed is consistent between browsers.\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1001735\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1207308\n        return (1 / window.devicePixelRatio);\n    }\n    _private__onMousewheel(event) {\n        if ((event.deltaX === 0 || !this._private__options.handleScroll.mouseWheel) &&\n            (event.deltaY === 0 || !this._private__options.handleScale.mouseWheel)) {\n            return;\n        }\n        const scrollSpeedAdjustment = this._private__determineWheelSpeedAdjustment(event);\n        const deltaX = scrollSpeedAdjustment * event.deltaX / 100;\n        const deltaY = -(scrollSpeedAdjustment * event.deltaY / 100);\n        if (event.cancelable) {\n            event.preventDefault();\n        }\n        if (deltaY !== 0 && this._private__options.handleScale.mouseWheel) {\n            const zoomScale = Math.sign(deltaY) * Math.min(1, Math.abs(deltaY));\n            const scrollPosition = event.clientX - this._private__element.getBoundingClientRect().left;\n            this._internal_model()._internal_zoomTime(scrollPosition, zoomScale);\n        }\n        if (deltaX !== 0 && this._private__options.handleScroll.mouseWheel) {\n            this._internal_model()._internal_scrollChart(deltaX * -80); // 80 is a made up coefficient, and minus is for the \"natural\" scroll\n        }\n    }\n    _private__drawImpl(invalidateMask, time) {\n        var _a;\n        const invalidationType = invalidateMask._internal_fullInvalidation();\n        // actions for full invalidation ONLY (not shared with light)\n        if (invalidationType === 3 /* InvalidationLevel.Full */) {\n            this._private__updateGui();\n        }\n        // light or full invalidate actions\n        if (invalidationType === 3 /* InvalidationLevel.Full */ ||\n            invalidationType === 2 /* InvalidationLevel.Light */) {\n            this._private__applyMomentaryAutoScale(invalidateMask);\n            this._private__applyTimeScaleInvalidations(invalidateMask, time);\n            this._private__timeAxisWidget._internal_update();\n            this._private__paneWidgets.forEach((pane) => {\n                pane._internal_updatePriceAxisWidgets();\n            });\n            // In the case a full invalidation has been postponed during the draw, reapply\n            // the timescale invalidations. A full invalidation would mean there is a change\n            // in the timescale width (caused by price scale changes) that needs to be drawn\n            // right away to avoid flickering.\n            if (((_a = this._private__invalidateMask) === null || _a === void 0 ? void 0 : _a._internal_fullInvalidation()) === 3 /* InvalidationLevel.Full */) {\n                this._private__invalidateMask._internal_merge(invalidateMask);\n                this._private__updateGui();\n                this._private__applyMomentaryAutoScale(this._private__invalidateMask);\n                this._private__applyTimeScaleInvalidations(this._private__invalidateMask, time);\n                invalidateMask = this._private__invalidateMask;\n                this._private__invalidateMask = null;\n            }\n        }\n        this._internal_paint(invalidateMask);\n    }\n    _private__applyTimeScaleInvalidations(invalidateMask, time) {\n        for (const tsInvalidation of invalidateMask._internal_timeScaleInvalidations()) {\n            this._private__applyTimeScaleInvalidation(tsInvalidation, time);\n        }\n    }\n    _private__applyMomentaryAutoScale(invalidateMask) {\n        const panes = this._private__model._internal_panes();\n        for (let i = 0; i < panes.length; i++) {\n            if (invalidateMask._internal_invalidateForPane(i)._internal_autoScale) {\n                panes[i]._internal_momentaryAutoScale();\n            }\n        }\n    }\n    _private__applyTimeScaleInvalidation(invalidation, time) {\n        const timeScale = this._private__model._internal_timeScale();\n        switch (invalidation._internal_type) {\n            case 0 /* TimeScaleInvalidationType.FitContent */:\n                timeScale._internal_fitContent();\n                break;\n            case 1 /* TimeScaleInvalidationType.ApplyRange */:\n                timeScale._internal_setLogicalRange(invalidation._internal_value);\n                break;\n            case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n                timeScale._internal_setBarSpacing(invalidation._internal_value);\n                break;\n            case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n                timeScale._internal_setRightOffset(invalidation._internal_value);\n                break;\n            case 4 /* TimeScaleInvalidationType.Reset */:\n                timeScale._internal_restoreDefault();\n                break;\n            case 5 /* TimeScaleInvalidationType.Animation */:\n                if (!invalidation._internal_value._internal_finished(time)) {\n                    timeScale._internal_setRightOffset(invalidation._internal_value._internal_getPosition(time));\n                }\n                break;\n        }\n    }\n    _private__invalidateHandler(invalidateMask) {\n        if (this._private__invalidateMask !== null) {\n            this._private__invalidateMask._internal_merge(invalidateMask);\n        }\n        else {\n            this._private__invalidateMask = invalidateMask;\n        }\n        if (!this._private__drawPlanned) {\n            this._private__drawPlanned = true;\n            this._private__drawRafId = window.requestAnimationFrame((time) => {\n                this._private__drawPlanned = false;\n                this._private__drawRafId = 0;\n                if (this._private__invalidateMask !== null) {\n                    const mask = this._private__invalidateMask;\n                    this._private__invalidateMask = null;\n                    this._private__drawImpl(mask, time);\n                    for (const tsInvalidation of mask._internal_timeScaleInvalidations()) {\n                        if (tsInvalidation._internal_type === 5 /* TimeScaleInvalidationType.Animation */ && !tsInvalidation._internal_value._internal_finished(time)) {\n                            this._internal_model()._internal_setTimeScaleAnimation(tsInvalidation._internal_value);\n                            break;\n                        }\n                    }\n                }\n            });\n        }\n    }\n    _private__updateGui() {\n        this._private__syncGuiWithModel();\n    }\n    // private _destroySeparator(separator: PaneSeparator): void {\n    // \tthis._tableElement.removeChild(separator.getElement());\n    // \tseparator.destroy();\n    // }\n    _private__syncGuiWithModel() {\n        const panes = this._private__model._internal_panes();\n        const targetPaneWidgetsCount = panes.length;\n        const actualPaneWidgetsCount = this._private__paneWidgets.length;\n        // Remove (if needed) pane widgets and separators\n        for (let i = targetPaneWidgetsCount; i < actualPaneWidgetsCount; i++) {\n            const paneWidget = ensureDefined(this._private__paneWidgets.pop());\n            this._private__tableElement.removeChild(paneWidget._internal_getElement());\n            paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_destroy();\n            // const paneSeparator = this._paneSeparators.pop();\n            // if (paneSeparator !== undefined) {\n            // \tthis._destroySeparator(paneSeparator);\n            // }\n        }\n        // Create (if needed) new pane widgets and separators\n        for (let i = actualPaneWidgetsCount; i < targetPaneWidgetsCount; i++) {\n            const paneWidget = new PaneWidget(this, panes[i]);\n            paneWidget._internal_clicked()._internal_subscribe(this._private__onPaneWidgetClicked.bind(this), this);\n            paneWidget._internal_dblClicked()._internal_subscribe(this._private__onPaneWidgetDblClicked.bind(this), this);\n            this._private__paneWidgets.push(paneWidget);\n            // create and insert separator\n            // if (i > 1) {\n            // \tconst paneSeparator = new PaneSeparator(this, i - 1, i, true);\n            // \tthis._paneSeparators.push(paneSeparator);\n            // \tthis._tableElement.insertBefore(paneSeparator.getElement(), this._timeAxisWidget.getElement());\n            // }\n            // insert paneWidget\n            this._private__tableElement.insertBefore(paneWidget._internal_getElement(), this._private__timeAxisWidget._internal_getElement());\n        }\n        for (let i = 0; i < targetPaneWidgetsCount; i++) {\n            const state = panes[i];\n            const paneWidget = this._private__paneWidgets[i];\n            if (paneWidget._internal_state() !== state) {\n                paneWidget._internal_setState(state);\n            }\n            else {\n                paneWidget._internal_updatePriceAxisWidgetsStates();\n            }\n        }\n        this._private__updateTimeAxisVisibility();\n        this._private__adjustSizeImpl();\n    }\n    _private__getMouseEventParamsImpl(index, point, event) {\n        var _a;\n        const seriesData = new Map();\n        if (index !== null) {\n            const serieses = this._private__model._internal_serieses();\n            serieses.forEach((s) => {\n                // TODO: replace with search left\n                const data = s._internal_bars()._internal_search(index);\n                if (data !== null) {\n                    seriesData.set(s, data);\n                }\n            });\n        }\n        let clientTime;\n        if (index !== null) {\n            const timePoint = (_a = this._private__model._internal_timeScale()._internal_indexToTimeScalePoint(index)) === null || _a === void 0 ? void 0 : _a.originalTime;\n            if (timePoint !== undefined) {\n                clientTime = timePoint;\n            }\n        }\n        const hoveredSource = this._internal_model()._internal_hoveredSource();\n        const hoveredSeries = hoveredSource !== null && hoveredSource._internal_source instanceof Series\n            ? hoveredSource._internal_source\n            : undefined;\n        const hoveredObject = hoveredSource !== null && hoveredSource._internal_object !== undefined\n            ? hoveredSource._internal_object._internal_externalId\n            : undefined;\n        return {\n            _internal_originalTime: clientTime,\n            _internal_index: index !== null && index !== void 0 ? index : undefined,\n            _internal_point: point !== null && point !== void 0 ? point : undefined,\n            _internal_hoveredSeries: hoveredSeries,\n            _internal_seriesData: seriesData,\n            _internal_hoveredObject: hoveredObject,\n            _internal_touchMouseEventData: event !== null && event !== void 0 ? event : undefined,\n        };\n    }\n    _private__onPaneWidgetClicked(time, point, event) {\n        this._private__clicked._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n    }\n    _private__onPaneWidgetDblClicked(time, point, event) {\n        this._private__dblClicked._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n    }\n    _private__onPaneWidgetCrosshairMoved(time, point, event) {\n        this._private__crosshairMoved._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n    }\n    _private__updateTimeAxisVisibility() {\n        const display = this._private__options.timeScale.visible ? '' : 'none';\n        this._private__timeAxisWidget._internal_getElement().style.display = display;\n    }\n    _private__isLeftAxisVisible() {\n        return this._private__paneWidgets[0]._internal_state()._internal_leftPriceScale()._internal_options().visible;\n    }\n    _private__isRightAxisVisible() {\n        return this._private__paneWidgets[0]._internal_state()._internal_rightPriceScale()._internal_options().visible;\n    }\n    _private__installObserver() {\n        // eslint-disable-next-line no-restricted-syntax\n        if (!('ResizeObserver' in window)) {\n            warn('Options contains \"autoSize\" flag, but the browser does not support ResizeObserver feature. Please provide polyfill.');\n            return false;\n        }\n        else {\n            this._private__observer = new ResizeObserver((entries) => {\n                const containerEntry = entries.find((entry) => entry.target === this._private__container);\n                if (!containerEntry) {\n                    return;\n                }\n                this._internal_resize(containerEntry.contentRect.width, containerEntry.contentRect.height);\n            });\n            this._private__observer.observe(this._private__container, { box: 'border-box' });\n            return true;\n        }\n    }\n    _private__uninstallObserver() {\n        if (this._private__observer !== null) {\n            this._private__observer.disconnect();\n        }\n        this._private__observer = null;\n    }\n}\nfunction disableSelection(element) {\n    element.style.userSelect = 'none';\n    // eslint-disable-next-line deprecation/deprecation\n    element.style.webkitUserSelect = 'none';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    element.style.msUserSelect = 'none';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    element.style.MozUserSelect = 'none';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    element.style.webkitTapHighlightColor = 'transparent';\n}\nfunction shouldSubscribeMouseWheel(options) {\n    return Boolean(options.handleScroll.mouseWheel || options.handleScale.mouseWheel);\n}\n\nfunction isWhitespaceData(data) {\n    return data.open === undefined && data.value === undefined;\n}\nfunction isFulfilledData(data) {\n    return isFulfilledBarData(data) || isFulfilledLineData(data);\n}\nfunction isFulfilledBarData(data) {\n    return data.open !== undefined;\n}\nfunction isFulfilledLineData(data) {\n    return data.value !== undefined;\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction getColoredLineBasedSeriesPlotRow(time, index, item, originalTime) {\n    const val = item.value;\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [val, val, val, val], _internal_originalTime: originalTime };\n    if (item.color !== undefined) {\n        res._internal_color = item.color;\n    }\n    return res;\n}\nfunction getAreaSeriesPlotRow(time, index, item, originalTime) {\n    const val = item.value;\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [val, val, val, val], _internal_originalTime: originalTime };\n    if (item.lineColor !== undefined) {\n        res._internal_lineColor = item.lineColor;\n    }\n    if (item.topColor !== undefined) {\n        res._internal_topColor = item.topColor;\n    }\n    if (item.bottomColor !== undefined) {\n        res._internal_bottomColor = item.bottomColor;\n    }\n    return res;\n}\nfunction getBaselineSeriesPlotRow(time, index, item, originalTime) {\n    const val = item.value;\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [val, val, val, val], _internal_originalTime: originalTime };\n    if (item.topLineColor !== undefined) {\n        res._internal_topLineColor = item.topLineColor;\n    }\n    if (item.bottomLineColor !== undefined) {\n        res._internal_bottomLineColor = item.bottomLineColor;\n    }\n    if (item.topFillColor1 !== undefined) {\n        res._internal_topFillColor1 = item.topFillColor1;\n    }\n    if (item.topFillColor2 !== undefined) {\n        res._internal_topFillColor2 = item.topFillColor2;\n    }\n    if (item.bottomFillColor1 !== undefined) {\n        res._internal_bottomFillColor1 = item.bottomFillColor1;\n    }\n    if (item.bottomFillColor2 !== undefined) {\n        res._internal_bottomFillColor2 = item.bottomFillColor2;\n    }\n    return res;\n}\nfunction getBarSeriesPlotRow(time, index, item, originalTime) {\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [item.open, item.high, item.low, item.close], _internal_originalTime: originalTime };\n    if (item.color !== undefined) {\n        res._internal_color = item.color;\n    }\n    return res;\n}\nfunction getCandlestickSeriesPlotRow(time, index, item, originalTime) {\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [item.open, item.high, item.low, item.close], _internal_originalTime: originalTime };\n    if (item.color !== undefined) {\n        res._internal_color = item.color;\n    }\n    if (item.borderColor !== undefined) {\n        res._internal_borderColor = item.borderColor;\n    }\n    if (item.wickColor !== undefined) {\n        res._internal_wickColor = item.wickColor;\n    }\n    return res;\n}\nfunction getCustomSeriesPlotRow(time, index, item, originalTime, dataToPlotRow) {\n    const values = ensureDefined(dataToPlotRow)(item);\n    const max = Math.max(...values);\n    const min = Math.min(...values);\n    const last = values[values.length - 1];\n    const value = [last, max, min, last];\n    const _a = item, { time: excludedTime, color } = _a, data = __rest(_a, [\"time\", \"color\"]);\n    return { _internal_index: index, _internal_time: time, _internal_value: value, _internal_originalTime: originalTime, _internal_data: data, _internal_color: color };\n}\nfunction isSeriesPlotRow(row) {\n    return row._internal_value !== undefined;\n}\nfunction wrapCustomValues(plotRow, bar) {\n    if (bar.customValues !== undefined) {\n        plotRow._internal_customValues = bar.customValues;\n    }\n    return plotRow;\n}\nfunction isWhitespaceDataWithCustomCheck(bar, customIsWhitespace) {\n    if (customIsWhitespace) {\n        return customIsWhitespace(bar);\n    }\n    return isWhitespaceData(bar);\n}\nfunction wrapWhitespaceData(createPlotRowFn) {\n    return (time, index, bar, originalTime, dataToPlotRow, customIsWhitespace) => {\n        if (isWhitespaceDataWithCustomCheck(bar, customIsWhitespace)) {\n            return wrapCustomValues({ _internal_time: time, _internal_index: index, _internal_originalTime: originalTime }, bar);\n        }\n        return wrapCustomValues(createPlotRowFn(time, index, bar, originalTime, dataToPlotRow), bar);\n    };\n}\nfunction getSeriesPlotRowCreator(seriesType) {\n    const seriesPlotRowFnMap = {\n        Candlestick: wrapWhitespaceData(getCandlestickSeriesPlotRow),\n        Bar: wrapWhitespaceData(getBarSeriesPlotRow),\n        Area: wrapWhitespaceData(getAreaSeriesPlotRow),\n        Baseline: wrapWhitespaceData(getBaselineSeriesPlotRow),\n        Histogram: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n        Line: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n        Custom: wrapWhitespaceData(getCustomSeriesPlotRow),\n    };\n    return seriesPlotRowFnMap[seriesType];\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction createEmptyTimePointData(timePoint) {\n    return { _internal_index: 0, _internal_mapping: new Map(), _internal_timePoint: timePoint };\n}\nfunction seriesRowsFirstAndLastTime(seriesRows, bh) {\n    if (seriesRows === undefined || seriesRows.length === 0) {\n        return undefined;\n    }\n    return {\n        _internal_firstTime: bh.key(seriesRows[0]._internal_time),\n        _internal_lastTime: bh.key(seriesRows[seriesRows.length - 1]._internal_time),\n    };\n}\nfunction seriesUpdateInfo(seriesRows, prevSeriesRows, bh) {\n    const firstAndLastTime = seriesRowsFirstAndLastTime(seriesRows, bh);\n    const prevFirstAndLastTime = seriesRowsFirstAndLastTime(prevSeriesRows, bh);\n    if (firstAndLastTime !== undefined && prevFirstAndLastTime !== undefined) {\n        return {\n            _internal_lastBarUpdatedOrNewBarsAddedToTheRight: firstAndLastTime._internal_lastTime >= prevFirstAndLastTime._internal_lastTime &&\n                firstAndLastTime._internal_firstTime >= prevFirstAndLastTime._internal_firstTime,\n        };\n    }\n    return undefined;\n}\nfunction timeScalePointTime(mergedPointData) {\n    let result;\n    mergedPointData.forEach((v) => {\n        if (result === undefined) {\n            result = v._internal_originalTime;\n        }\n    });\n    return ensureDefined(result);\n}\nfunction saveOriginalTime(data) {\n    if (data._internal_originalTime === undefined) {\n        data._internal_originalTime = data.time;\n    }\n}\nclass DataLayer {\n    constructor(horzScaleBehavior) {\n        // note that _pointDataByTimePoint and _seriesRowsBySeries shares THE SAME objects in their values between each other\n        // it's just different kind of maps to make usages/perf better\n        this._private__pointDataByTimePoint = new Map();\n        this._private__seriesRowsBySeries = new Map();\n        this._private__seriesLastTimePoint = new Map();\n        // this is kind of \"dest\" values (in opposite to \"source\" ones) - we don't need to modify it manually, the only by calling _updateTimeScalePoints or updateSeriesData methods\n        this._private__sortedTimePoints = [];\n        this._private__horzScaleBehavior = horzScaleBehavior;\n    }\n    _internal_destroy() {\n        this._private__pointDataByTimePoint.clear();\n        this._private__seriesRowsBySeries.clear();\n        this._private__seriesLastTimePoint.clear();\n        this._private__sortedTimePoints = [];\n    }\n    _internal_setSeriesData(series, data) {\n        let needCleanupPoints = this._private__pointDataByTimePoint.size !== 0;\n        let isTimeScaleAffected = false;\n        // save previous series rows data before it's replaced inside this._setRowsToSeries\n        const prevSeriesRows = this._private__seriesRowsBySeries.get(series);\n        if (prevSeriesRows !== undefined) {\n            if (this._private__seriesRowsBySeries.size === 1) {\n                needCleanupPoints = false;\n                isTimeScaleAffected = true;\n                // perf optimization - if there is only 1 series, then we can just clear and fill everything from scratch\n                this._private__pointDataByTimePoint.clear();\n            }\n            else {\n                // perf optimization - actually we have to use this._pointDataByTimePoint for going through here\n                // but as soon as this._sortedTimePoints is just a different form of _pointDataByTimePoint we can use it as well\n                for (const point of this._private__sortedTimePoints) {\n                    if (point.pointData._internal_mapping.delete(series)) {\n                        isTimeScaleAffected = true;\n                    }\n                }\n            }\n        }\n        let seriesRows = [];\n        if (data.length !== 0) {\n            const originalTimes = data.map((d) => d.time);\n            const timeConverter = this._private__horzScaleBehavior.createConverterToInternalObj(data);\n            const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n            const dataToPlotRow = series._internal_customSeriesPlotValuesBuilder();\n            const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n            seriesRows = data.map((item, index) => {\n                const time = timeConverter(item.time);\n                const horzItemKey = this._private__horzScaleBehavior.key(time);\n                let timePointData = this._private__pointDataByTimePoint.get(horzItemKey);\n                if (timePointData === undefined) {\n                    // the indexes will be sync later\n                    timePointData = createEmptyTimePointData(time);\n                    this._private__pointDataByTimePoint.set(horzItemKey, timePointData);\n                    isTimeScaleAffected = true;\n                }\n                const row = createPlotRow(time, timePointData._internal_index, item, originalTimes[index], dataToPlotRow, customWhitespaceChecker);\n                timePointData._internal_mapping.set(series, row);\n                return row;\n            });\n        }\n        if (needCleanupPoints) {\n            // we deleted the old data from mapping and added the new ones\n            // so there might be empty points now, let's remove them first\n            this._private__cleanupPointsData();\n        }\n        this._private__setRowsToSeries(series, seriesRows);\n        let firstChangedPointIndex = -1;\n        if (isTimeScaleAffected) {\n            // then generate the time scale points\n            // timeWeight will be updates in _updateTimeScalePoints later\n            const newTimeScalePoints = [];\n            this._private__pointDataByTimePoint.forEach((pointData) => {\n                newTimeScalePoints.push({\n                    timeWeight: 0,\n                    time: pointData._internal_timePoint,\n                    pointData,\n                    originalTime: timeScalePointTime(pointData._internal_mapping),\n                });\n            });\n            newTimeScalePoints.sort((t1, t2) => this._private__horzScaleBehavior.key(t1.time) - this._private__horzScaleBehavior.key(t2.time));\n            firstChangedPointIndex = this._private__replaceTimeScalePoints(newTimeScalePoints);\n        }\n        return this._private__getUpdateResponse(series, firstChangedPointIndex, seriesUpdateInfo(this._private__seriesRowsBySeries.get(series), prevSeriesRows, this._private__horzScaleBehavior));\n    }\n    _internal_removeSeries(series) {\n        return this._internal_setSeriesData(series, []);\n    }\n    _internal_updateSeriesData(series, data) {\n        const extendedData = data;\n        saveOriginalTime(extendedData);\n        // convertStringToBusinessDay(data);\n        this._private__horzScaleBehavior.preprocessData(data);\n        const timeConverter = this._private__horzScaleBehavior.createConverterToInternalObj([data]);\n        const time = timeConverter(data.time);\n        const lastSeriesTime = this._private__seriesLastTimePoint.get(series);\n        if (lastSeriesTime !== undefined && this._private__horzScaleBehavior.key(time) < this._private__horzScaleBehavior.key(lastSeriesTime)) {\n            throw new Error(`Cannot update oldest data, last time=${lastSeriesTime}, new time=${time}`);\n        }\n        let pointDataAtTime = this._private__pointDataByTimePoint.get(this._private__horzScaleBehavior.key(time));\n        // if no point data found for the new data item\n        // that means that we need to update scale\n        const affectsTimeScale = pointDataAtTime === undefined;\n        if (pointDataAtTime === undefined) {\n            // the indexes will be sync later\n            pointDataAtTime = createEmptyTimePointData(time);\n            this._private__pointDataByTimePoint.set(this._private__horzScaleBehavior.key(time), pointDataAtTime);\n        }\n        const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n        const dataToPlotRow = series._internal_customSeriesPlotValuesBuilder();\n        const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n        const plotRow = createPlotRow(time, pointDataAtTime._internal_index, data, extendedData._internal_originalTime, dataToPlotRow, customWhitespaceChecker);\n        pointDataAtTime._internal_mapping.set(series, plotRow);\n        this._private__updateLastSeriesRow(series, plotRow);\n        const info = { _internal_lastBarUpdatedOrNewBarsAddedToTheRight: isSeriesPlotRow(plotRow) };\n        // if point already exist on the time scale - we don't need to make a full update and just make an incremental one\n        if (!affectsTimeScale) {\n            return this._private__getUpdateResponse(series, -1, info);\n        }\n        const newPoint = {\n            timeWeight: 0,\n            time: pointDataAtTime._internal_timePoint,\n            pointData: pointDataAtTime,\n            originalTime: timeScalePointTime(pointDataAtTime._internal_mapping),\n        };\n        const insertIndex = lowerBound(this._private__sortedTimePoints, this._private__horzScaleBehavior.key(newPoint.time), (a, b) => this._private__horzScaleBehavior.key(a.time) < b);\n        // yes, I know that this array is readonly and this change is intended to make it performative\n        // we marked _sortedTimePoints array as readonly to avoid modifying this array anywhere else\n        // but this place is exceptional case due performance reasons, sorry\n        this._private__sortedTimePoints.splice(insertIndex, 0, newPoint);\n        for (let index = insertIndex; index < this._private__sortedTimePoints.length; ++index) {\n            assignIndexToPointData(this._private__sortedTimePoints[index].pointData, index);\n        }\n        this._private__horzScaleBehavior.fillWeightsForPoints(this._private__sortedTimePoints, insertIndex);\n        return this._private__getUpdateResponse(series, insertIndex, info);\n    }\n    _private__updateLastSeriesRow(series, plotRow) {\n        let seriesData = this._private__seriesRowsBySeries.get(series);\n        if (seriesData === undefined) {\n            seriesData = [];\n            this._private__seriesRowsBySeries.set(series, seriesData);\n        }\n        const lastSeriesRow = seriesData.length !== 0 ? seriesData[seriesData.length - 1] : null;\n        if (lastSeriesRow === null || this._private__horzScaleBehavior.key(plotRow._internal_time) > this._private__horzScaleBehavior.key(lastSeriesRow._internal_time)) {\n            if (isSeriesPlotRow(plotRow)) {\n                seriesData.push(plotRow);\n            }\n        }\n        else {\n            if (isSeriesPlotRow(plotRow)) {\n                seriesData[seriesData.length - 1] = plotRow;\n            }\n            else {\n                seriesData.splice(-1, 1);\n            }\n        }\n        this._private__seriesLastTimePoint.set(series, plotRow._internal_time);\n    }\n    _private__setRowsToSeries(series, seriesRows) {\n        if (seriesRows.length !== 0) {\n            this._private__seriesRowsBySeries.set(series, seriesRows.filter(isSeriesPlotRow));\n            this._private__seriesLastTimePoint.set(series, seriesRows[seriesRows.length - 1]._internal_time);\n        }\n        else {\n            this._private__seriesRowsBySeries.delete(series);\n            this._private__seriesLastTimePoint.delete(series);\n        }\n    }\n    _private__cleanupPointsData() {\n        // let's treat all current points as \"potentially removed\"\n        // we could create an array with actually potentially removed points\n        // but most likely this array will be similar to _sortedTimePoints so let's avoid using additional memory\n        // note that we can use _sortedTimePoints here since a point might be removed only it was here previously\n        for (const point of this._private__sortedTimePoints) {\n            if (point.pointData._internal_mapping.size === 0) {\n                this._private__pointDataByTimePoint.delete(this._private__horzScaleBehavior.key(point.time));\n            }\n        }\n    }\n    /**\n     * Sets new time scale and make indexes valid for all series\n     *\n     * @returns The index of the first changed point or `-1` if there is no change.\n     */\n    _private__replaceTimeScalePoints(newTimePoints) {\n        let firstChangedPointIndex = -1;\n        // search the first different point and \"syncing\" time weight by the way\n        for (let index = 0; index < this._private__sortedTimePoints.length && index < newTimePoints.length; ++index) {\n            const oldPoint = this._private__sortedTimePoints[index];\n            const newPoint = newTimePoints[index];\n            if (this._private__horzScaleBehavior.key(oldPoint.time) !== this._private__horzScaleBehavior.key(newPoint.time)) {\n                firstChangedPointIndex = index;\n                break;\n            }\n            // re-assign point's time weight for points if time is the same (and all prior times was the same)\n            newPoint.timeWeight = oldPoint.timeWeight;\n            assignIndexToPointData(newPoint.pointData, index);\n        }\n        if (firstChangedPointIndex === -1 && this._private__sortedTimePoints.length !== newTimePoints.length) {\n            // the common part of the prev and the new points are the same\n            // so the first changed point is the next after the common part\n            firstChangedPointIndex = Math.min(this._private__sortedTimePoints.length, newTimePoints.length);\n        }\n        if (firstChangedPointIndex === -1) {\n            // if no time scale changed, then do nothing\n            return -1;\n        }\n        // if time scale points are changed that means that we need to make full update to all series (with clearing points)\n        // but first we need to synchronize indexes and re-fill time weights\n        for (let index = firstChangedPointIndex; index < newTimePoints.length; ++index) {\n            assignIndexToPointData(newTimePoints[index].pointData, index);\n        }\n        // re-fill time weights for point after the first changed one\n        this._private__horzScaleBehavior.fillWeightsForPoints(newTimePoints, firstChangedPointIndex);\n        this._private__sortedTimePoints = newTimePoints;\n        return firstChangedPointIndex;\n    }\n    _private__getBaseIndex() {\n        if (this._private__seriesRowsBySeries.size === 0) {\n            // if we have no data then 'reset' the base index to null\n            return null;\n        }\n        let baseIndex = 0;\n        this._private__seriesRowsBySeries.forEach((data) => {\n            if (data.length !== 0) {\n                baseIndex = Math.max(baseIndex, data[data.length - 1]._internal_index);\n            }\n        });\n        return baseIndex;\n    }\n    _private__getUpdateResponse(updatedSeries, firstChangedPointIndex, info) {\n        const dataUpdateResponse = {\n            _internal_series: new Map(),\n            _internal_timeScale: {\n                _internal_baseIndex: this._private__getBaseIndex(),\n            },\n        };\n        if (firstChangedPointIndex !== -1) {\n            // TODO: it's possible to make perf improvements by checking what series has data after firstChangedPointIndex\n            // but let's skip for now\n            this._private__seriesRowsBySeries.forEach((data, s) => {\n                dataUpdateResponse._internal_series.set(s, {\n                    _internal_data: data,\n                    _internal_info: s === updatedSeries ? info : undefined,\n                });\n            });\n            // if the series data was set to [] it will have already been removed from _seriesRowBySeries\n            // meaning the forEach above won't add the series to the data update response\n            // so we handle that case here\n            if (!this._private__seriesRowsBySeries.has(updatedSeries)) {\n                dataUpdateResponse._internal_series.set(updatedSeries, { _internal_data: [], _internal_info: info });\n            }\n            dataUpdateResponse._internal_timeScale._internal_points = this._private__sortedTimePoints;\n            dataUpdateResponse._internal_timeScale._internal_firstChangedPointIndex = firstChangedPointIndex;\n        }\n        else {\n            const seriesData = this._private__seriesRowsBySeries.get(updatedSeries);\n            // if no seriesData found that means that we just removed the series\n            dataUpdateResponse._internal_series.set(updatedSeries, { _internal_data: seriesData || [], _internal_info: info });\n        }\n        return dataUpdateResponse;\n    }\n}\nfunction assignIndexToPointData(pointData, index) {\n    // first, nevertheless update index of point data (\"make it valid\")\n    pointData._internal_index = index;\n    // and then we need to sync indexes for all series\n    pointData._internal_mapping.forEach((seriesRow) => {\n        seriesRow._internal_index = index;\n    });\n}\n\nfunction singleValueData(plotRow) {\n    const data = {\n        value: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n        time: plotRow._internal_originalTime,\n    };\n    if (plotRow._internal_customValues !== undefined) {\n        data.customValues = plotRow._internal_customValues;\n    }\n    return data;\n}\nfunction lineData(plotRow) {\n    const result = singleValueData(plotRow);\n    if (plotRow._internal_color !== undefined) {\n        result.color = plotRow._internal_color;\n    }\n    return result;\n}\nfunction areaData(plotRow) {\n    const result = singleValueData(plotRow);\n    if (plotRow._internal_lineColor !== undefined) {\n        result.lineColor = plotRow._internal_lineColor;\n    }\n    if (plotRow._internal_topColor !== undefined) {\n        result.topColor = plotRow._internal_topColor;\n    }\n    if (plotRow._internal_bottomColor !== undefined) {\n        result.bottomColor = plotRow._internal_bottomColor;\n    }\n    return result;\n}\nfunction baselineData(plotRow) {\n    const result = singleValueData(plotRow);\n    if (plotRow._internal_topLineColor !== undefined) {\n        result.topLineColor = plotRow._internal_topLineColor;\n    }\n    if (plotRow._internal_bottomLineColor !== undefined) {\n        result.bottomLineColor = plotRow._internal_bottomLineColor;\n    }\n    if (plotRow._internal_topFillColor1 !== undefined) {\n        result.topFillColor1 = plotRow._internal_topFillColor1;\n    }\n    if (plotRow._internal_topFillColor2 !== undefined) {\n        result.topFillColor2 = plotRow._internal_topFillColor2;\n    }\n    if (plotRow._internal_bottomFillColor1 !== undefined) {\n        result.bottomFillColor1 = plotRow._internal_bottomFillColor1;\n    }\n    if (plotRow._internal_bottomFillColor2 !== undefined) {\n        result.bottomFillColor2 = plotRow._internal_bottomFillColor2;\n    }\n    return result;\n}\nfunction ohlcData(plotRow) {\n    const data = {\n        open: plotRow._internal_value[0 /* PlotRowValueIndex.Open */],\n        high: plotRow._internal_value[1 /* PlotRowValueIndex.High */],\n        low: plotRow._internal_value[2 /* PlotRowValueIndex.Low */],\n        close: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n        time: plotRow._internal_originalTime,\n    };\n    if (plotRow._internal_customValues !== undefined) {\n        data.customValues = plotRow._internal_customValues;\n    }\n    return data;\n}\nfunction barData(plotRow) {\n    const result = ohlcData(plotRow);\n    if (plotRow._internal_color !== undefined) {\n        result.color = plotRow._internal_color;\n    }\n    return result;\n}\nfunction candlestickData(plotRow) {\n    const result = ohlcData(plotRow);\n    const { _internal_color: color, _internal_borderColor: borderColor, _internal_wickColor: wickColor } = plotRow;\n    if (color !== undefined) {\n        result.color = color;\n    }\n    if (borderColor !== undefined) {\n        result.borderColor = borderColor;\n    }\n    if (wickColor !== undefined) {\n        result.wickColor = wickColor;\n    }\n    return result;\n}\nfunction getSeriesDataCreator(seriesType) {\n    const seriesPlotRowToDataMap = {\n        Area: (areaData),\n        Line: (lineData),\n        Baseline: (baselineData),\n        Histogram: (lineData),\n        Bar: (barData),\n        Candlestick: (candlestickData),\n        Custom: (customData),\n    };\n    return seriesPlotRowToDataMap[seriesType];\n}\nfunction customData(plotRow) {\n    const time = plotRow._internal_originalTime;\n    return Object.assign(Object.assign({}, plotRow._internal_data), { time });\n}\n\nconst crosshairOptionsDefaults = {\n    vertLine: {\n        color: '#9598A1',\n        width: 1,\n        style: 3 /* LineStyle.LargeDashed */,\n        visible: true,\n        labelVisible: true,\n        labelBackgroundColor: '#131722',\n    },\n    horzLine: {\n        color: '#9598A1',\n        width: 1,\n        style: 3 /* LineStyle.LargeDashed */,\n        visible: true,\n        labelVisible: true,\n        labelBackgroundColor: '#131722',\n    },\n    mode: 1 /* CrosshairMode.Magnet */,\n};\n\nconst gridOptionsDefaults = {\n    vertLines: {\n        color: '#D6DCDE',\n        style: 0 /* LineStyle.Solid */,\n        visible: true,\n    },\n    horzLines: {\n        color: '#D6DCDE',\n        style: 0 /* LineStyle.Solid */,\n        visible: true,\n    },\n};\n\nconst layoutOptionsDefaults = {\n    background: {\n        type: \"solid\" /* ColorType.Solid */,\n        color: '#FFFFFF',\n    },\n    textColor: '#191919',\n    fontSize: 12,\n    fontFamily: defaultFontFamily,\n    attributionLogo: true,\n};\n\nconst priceScaleOptionsDefaults = {\n    autoScale: true,\n    mode: 0 /* PriceScaleMode.Normal */,\n    invertScale: false,\n    alignLabels: true,\n    borderVisible: true,\n    borderColor: '#2B2B43',\n    entireTextOnly: false,\n    visible: false,\n    ticksVisible: false,\n    scaleMargins: {\n        bottom: 0.1,\n        top: 0.2,\n    },\n    minimumWidth: 0,\n};\n\nconst timeScaleOptionsDefaults = {\n    rightOffset: 0,\n    barSpacing: 6,\n    minBarSpacing: 0.5,\n    fixLeftEdge: false,\n    fixRightEdge: false,\n    lockVisibleTimeRangeOnResize: false,\n    rightBarStaysOnScroll: false,\n    borderVisible: true,\n    borderColor: '#2B2B43',\n    visible: true,\n    timeVisible: false,\n    secondsVisible: true,\n    shiftVisibleRangeOnNewBar: true,\n    allowShiftVisibleRangeOnWhitespaceReplacement: false,\n    ticksVisible: false,\n    uniformDistribution: false,\n    minimumHeight: 0,\n    allowBoldLabels: true,\n};\n\nconst watermarkOptionsDefaults = {\n    color: 'rgba(0, 0, 0, 0)',\n    visible: false,\n    fontSize: 48,\n    fontFamily: defaultFontFamily,\n    fontStyle: '',\n    text: '',\n    horzAlign: 'center',\n    vertAlign: 'center',\n};\n\nfunction chartOptionsDefaults() {\n    return {\n        width: 0,\n        height: 0,\n        autoSize: false,\n        layout: layoutOptionsDefaults,\n        crosshair: crosshairOptionsDefaults,\n        grid: gridOptionsDefaults,\n        overlayPriceScales: Object.assign({}, priceScaleOptionsDefaults),\n        leftPriceScale: Object.assign(Object.assign({}, priceScaleOptionsDefaults), { visible: false }),\n        rightPriceScale: Object.assign(Object.assign({}, priceScaleOptionsDefaults), { visible: true }),\n        timeScale: timeScaleOptionsDefaults,\n        watermark: watermarkOptionsDefaults,\n        localization: {\n            locale: isRunningOnClientSide ? navigator.language : '',\n            dateFormat: 'dd MMM \\'yy',\n        },\n        handleScroll: {\n            mouseWheel: true,\n            pressedMouseMove: true,\n            horzTouchDrag: true,\n            vertTouchDrag: true,\n        },\n        handleScale: {\n            axisPressedMouseMove: {\n                time: true,\n                price: true,\n            },\n            axisDoubleClickReset: {\n                time: true,\n                price: true,\n            },\n            mouseWheel: true,\n            pinch: true,\n        },\n        kineticScroll: {\n            mouse: false,\n            touch: true,\n        },\n        trackingMode: {\n            exitMode: 1 /* TrackingModeExitMode.OnNextTap */,\n        },\n    };\n}\n\nclass PriceScaleApi {\n    constructor(chartWidget, priceScaleId) {\n        this._private__chartWidget = chartWidget;\n        this._private__priceScaleId = priceScaleId;\n    }\n    applyOptions(options) {\n        this._private__chartWidget._internal_model()._internal_applyPriceScaleOptions(this._private__priceScaleId, options);\n    }\n    options() {\n        return this._private__priceScale()._internal_options();\n    }\n    width() {\n        if (!isDefaultPriceScale(this._private__priceScaleId)) {\n            return 0;\n        }\n        return this._private__chartWidget._internal_getPriceAxisWidth(this._private__priceScaleId);\n    }\n    _private__priceScale() {\n        return ensureNotNull(this._private__chartWidget._internal_model()._internal_findPriceScale(this._private__priceScaleId))._internal_priceScale;\n    }\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction checkPriceLineOptions(options) {\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    assert(typeof options.price === 'number', `the type of 'price' price line's property must be a number, got '${typeof options.price}'`);\n}\nfunction checkItemsAreOrdered(data, bh, allowDuplicates = false) {\n    if (data.length === 0) {\n        return;\n    }\n    let prevTime = bh.key(data[0].time);\n    for (let i = 1; i < data.length; ++i) {\n        const currentTime = bh.key(data[i].time);\n        const checkResult = allowDuplicates ? prevTime <= currentTime : prevTime < currentTime;\n        assert(checkResult, `data must be asc ordered by time, index=${i}, time=${currentTime}, prev time=${prevTime}`);\n        prevTime = currentTime;\n    }\n}\nfunction checkSeriesValuesType(type, data) {\n    data.forEach(getChecker(type));\n}\nfunction getChecker(type) {\n    switch (type) {\n        case 'Bar':\n        case 'Candlestick':\n            return checkBarItem.bind(null, type);\n        case 'Area':\n        case 'Baseline':\n        case 'Line':\n        case 'Histogram':\n            return checkLineItem.bind(null, type);\n        case 'Custom':\n            return checkCustomItem.bind(null, type);\n    }\n}\nfunction checkBarItem(type, barItem) {\n    if (!isFulfilledBarData(barItem)) {\n        return;\n    }\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof barItem.open === 'number', `${type} series item data value of open must be a number, got=${typeof barItem.open}, value=${barItem.open}`);\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof barItem.high === 'number', `${type} series item data value of high must be a number, got=${typeof barItem.high}, value=${barItem.high}`);\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof barItem.low === 'number', `${type} series item data value of low must be a number, got=${typeof barItem.low}, value=${barItem.low}`);\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof barItem.close === 'number', `${type} series item data value of close must be a number, got=${typeof barItem.close}, value=${barItem.close}`);\n}\nfunction checkLineItem(type, lineItem) {\n    if (!isFulfilledLineData(lineItem)) {\n        return;\n    }\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof lineItem.value === 'number', `${type} series item data value must be a number, got=${typeof lineItem.value}, value=${lineItem.value}`);\n}\nfunction checkCustomItem(\n// type: 'Custom',\n// customItem: SeriesDataItemTypeMap[typeof type]\n) {\n    // Nothing to check yet...\n    return;\n}\n\nfunction convertSeriesMarker(sm, newTime, originalTime) {\n    const values = __rest(sm, [\"time\", \"originalTime\"]);\n    /* eslint-disable @typescript-eslint/consistent-type-assertions */\n    const res = Object.assign({ time: newTime }, values);\n    /* eslint-enable @typescript-eslint/consistent-type-assertions */\n    if (originalTime !== undefined) {\n        res.originalTime = originalTime;\n    }\n    return res;\n}\n\nconst priceLineOptionsDefaults = {\n    color: '#FF0000',\n    price: 0,\n    lineStyle: 2 /* LineStyle.Dashed */,\n    lineWidth: 1,\n    lineVisible: true,\n    axisLabelVisible: true,\n    title: '',\n    axisLabelColor: '',\n    axisLabelTextColor: '',\n};\n\nclass PriceLine {\n    constructor(priceLine) {\n        this._private__priceLine = priceLine;\n    }\n    applyOptions(options) {\n        this._private__priceLine._internal_applyOptions(options);\n    }\n    options() {\n        return this._private__priceLine._internal_options();\n    }\n    _internal_priceLine() {\n        return this._private__priceLine;\n    }\n}\n\nclass SeriesApi {\n    constructor(series, dataUpdatesConsumer, priceScaleApiProvider, chartApi, horzScaleBehavior) {\n        this._private__dataChangedDelegate = new Delegate();\n        this._internal__series = series;\n        this._internal__dataUpdatesConsumer = dataUpdatesConsumer;\n        this._private__priceScaleApiProvider = priceScaleApiProvider;\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._internal__chartApi = chartApi;\n    }\n    _internal_destroy() {\n        this._private__dataChangedDelegate._internal_destroy();\n    }\n    priceFormatter() {\n        return this._internal__series._internal_formatter();\n    }\n    priceToCoordinate(price) {\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return null;\n        }\n        return this._internal__series._internal_priceScale()._internal_priceToCoordinate(price, firstValue._internal_value);\n    }\n    coordinateToPrice(coordinate) {\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return null;\n        }\n        return this._internal__series._internal_priceScale()._internal_coordinateToPrice(coordinate, firstValue._internal_value);\n    }\n    barsInLogicalRange(range) {\n        if (range === null) {\n            return null;\n        }\n        // we use TimeScaleVisibleRange here to convert LogicalRange to strict range properly\n        const correctedRange = new TimeScaleVisibleRange(new RangeImpl(range.from, range.to))._internal_strictRange();\n        const bars = this._internal__series._internal_bars();\n        if (bars._internal_isEmpty()) {\n            return null;\n        }\n        const dataFirstBarInRange = bars._internal_search(correctedRange._internal_left(), 1 /* MismatchDirection.NearestRight */);\n        const dataLastBarInRange = bars._internal_search(correctedRange._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n        const dataFirstIndex = ensureNotNull(bars._internal_firstIndex());\n        const dataLastIndex = ensureNotNull(bars._internal_lastIndex());\n        // this means that we request data in the data gap\n        // e.g. let's say we have series with data [0..10, 30..60]\n        // and we request bars info in range [15, 25]\n        // thus, dataFirstBarInRange will be with index 30 and dataLastBarInRange with 10\n        if (dataFirstBarInRange !== null && dataLastBarInRange !== null && dataFirstBarInRange._internal_index > dataLastBarInRange._internal_index) {\n            return {\n                barsBefore: range.from - dataFirstIndex,\n                barsAfter: dataLastIndex - range.to,\n            };\n        }\n        const barsBefore = (dataFirstBarInRange === null || dataFirstBarInRange._internal_index === dataFirstIndex)\n            ? range.from - dataFirstIndex\n            : dataFirstBarInRange._internal_index - dataFirstIndex;\n        const barsAfter = (dataLastBarInRange === null || dataLastBarInRange._internal_index === dataLastIndex)\n            ? dataLastIndex - range.to\n            : dataLastIndex - dataLastBarInRange._internal_index;\n        const result = { barsBefore, barsAfter };\n        // actually they can't exist separately\n        if (dataFirstBarInRange !== null && dataLastBarInRange !== null) {\n            result.from = dataFirstBarInRange._internal_originalTime;\n            result.to = dataLastBarInRange._internal_originalTime;\n        }\n        return result;\n    }\n    setData(data) {\n        checkItemsAreOrdered(data, this._private__horzScaleBehavior);\n        checkSeriesValuesType(this._internal__series._internal_seriesType(), data);\n        this._internal__dataUpdatesConsumer._internal_applyNewData(this._internal__series, data);\n        this._private__onDataChanged('full');\n    }\n    update(bar) {\n        checkSeriesValuesType(this._internal__series._internal_seriesType(), [bar]);\n        this._internal__dataUpdatesConsumer._internal_updateData(this._internal__series, bar);\n        this._private__onDataChanged('update');\n    }\n    dataByIndex(logicalIndex, mismatchDirection) {\n        const data = this._internal__series._internal_bars()._internal_search(logicalIndex, mismatchDirection);\n        if (data === null) {\n            // actually it can be a whitespace\n            return null;\n        }\n        const creator = getSeriesDataCreator(this.seriesType());\n        return creator(data);\n    }\n    data() {\n        const seriesCreator = getSeriesDataCreator(this.seriesType());\n        const rows = this._internal__series._internal_bars()._internal_rows();\n        return rows.map((row) => seriesCreator(row));\n    }\n    subscribeDataChanged(handler) {\n        this._private__dataChangedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeDataChanged(handler) {\n        this._private__dataChangedDelegate._internal_unsubscribe(handler);\n    }\n    setMarkers(data) {\n        checkItemsAreOrdered(data, this._private__horzScaleBehavior, true);\n        const convertedMarkers = data.map((marker) => convertSeriesMarker(marker, this._private__horzScaleBehavior.convertHorzItemToInternal(marker.time), marker.time));\n        this._internal__series._internal_setMarkers(convertedMarkers);\n    }\n    markers() {\n        return this._internal__series._internal_markers().map((internalItem) => {\n            return convertSeriesMarker(internalItem, internalItem.originalTime, undefined);\n        });\n    }\n    applyOptions(options) {\n        this._internal__series._internal_applyOptions(options);\n    }\n    options() {\n        return clone(this._internal__series._internal_options());\n    }\n    priceScale() {\n        return this._private__priceScaleApiProvider.priceScale(this._internal__series._internal_priceScale()._internal_id());\n    }\n    createPriceLine(options) {\n        checkPriceLineOptions(options);\n        const strictOptions = merge(clone(priceLineOptionsDefaults), options);\n        const priceLine = this._internal__series._internal_createPriceLine(strictOptions);\n        return new PriceLine(priceLine);\n    }\n    removePriceLine(line) {\n        this._internal__series._internal_removePriceLine(line._internal_priceLine());\n    }\n    seriesType() {\n        return this._internal__series._internal_seriesType();\n    }\n    attachPrimitive(primitive) {\n        // at this point we cast the generic to unknown because we\n        // don't want the model to know the types of the API (â—‘_â—‘)\n        this._internal__series._internal_attachPrimitive(primitive);\n        if (primitive.attached) {\n            primitive.attached({\n                chart: this._internal__chartApi,\n                series: this,\n                requestUpdate: () => this._internal__series._internal_model()._internal_fullUpdate(),\n            });\n        }\n    }\n    detachPrimitive(primitive) {\n        this._internal__series._internal_detachPrimitive(primitive);\n        if (primitive.detached) {\n            primitive.detached();\n        }\n    }\n    _private__onDataChanged(scope) {\n        if (this._private__dataChangedDelegate._internal_hasListeners()) {\n            this._private__dataChangedDelegate._internal_fire(scope);\n        }\n    }\n}\n\nclass TimeScaleApi {\n    constructor(model, timeAxisWidget, horzScaleBehavior) {\n        this._private__timeRangeChanged = new Delegate();\n        this._private__logicalRangeChanged = new Delegate();\n        this._private__sizeChanged = new Delegate();\n        this._private__model = model;\n        this._private__timeScale = model._internal_timeScale();\n        this._private__timeAxisWidget = timeAxisWidget;\n        this._private__timeScale._internal_visibleBarsChanged()._internal_subscribe(this._private__onVisibleBarsChanged.bind(this));\n        this._private__timeScale._internal_logicalRangeChanged()._internal_subscribe(this._private__onVisibleLogicalRangeChanged.bind(this));\n        this._private__timeAxisWidget._internal_sizeChanged()._internal_subscribe(this._private__onSizeChanged.bind(this));\n        this._private__horzScaleBehavior = horzScaleBehavior;\n    }\n    _internal_destroy() {\n        this._private__timeScale._internal_visibleBarsChanged()._internal_unsubscribeAll(this);\n        this._private__timeScale._internal_logicalRangeChanged()._internal_unsubscribeAll(this);\n        this._private__timeAxisWidget._internal_sizeChanged()._internal_unsubscribeAll(this);\n        this._private__timeRangeChanged._internal_destroy();\n        this._private__logicalRangeChanged._internal_destroy();\n        this._private__sizeChanged._internal_destroy();\n    }\n    scrollPosition() {\n        return this._private__timeScale._internal_rightOffset();\n    }\n    scrollToPosition(position, animated) {\n        if (!animated) {\n            this._private__model._internal_setRightOffset(position);\n            return;\n        }\n        this._private__timeScale._internal_scrollToOffsetAnimated(position, 1000 /* Constants.AnimationDurationMs */);\n    }\n    scrollToRealTime() {\n        this._private__timeScale._internal_scrollToRealTime();\n    }\n    getVisibleRange() {\n        const timeRange = this._private__timeScale._internal_visibleTimeRange();\n        if (timeRange === null) {\n            return null;\n        }\n        return {\n            from: timeRange.from.originalTime,\n            to: timeRange.to.originalTime,\n        };\n    }\n    setVisibleRange(range) {\n        const convertedRange = {\n            from: this._private__horzScaleBehavior.convertHorzItemToInternal(range.from),\n            to: this._private__horzScaleBehavior.convertHorzItemToInternal(range.to),\n        };\n        const logicalRange = this._private__timeScale._internal_logicalRangeForTimeRange(convertedRange);\n        this._private__model._internal_setTargetLogicalRange(logicalRange);\n    }\n    getVisibleLogicalRange() {\n        const logicalRange = this._private__timeScale._internal_visibleLogicalRange();\n        if (logicalRange === null) {\n            return null;\n        }\n        return {\n            from: logicalRange._internal_left(),\n            to: logicalRange._internal_right(),\n        };\n    }\n    setVisibleLogicalRange(range) {\n        assert(range.from <= range.to, 'The from index cannot be after the to index.');\n        this._private__model._internal_setTargetLogicalRange(range);\n    }\n    resetTimeScale() {\n        this._private__model._internal_resetTimeScale();\n    }\n    fitContent() {\n        this._private__model._internal_fitContent();\n    }\n    logicalToCoordinate(logical) {\n        const timeScale = this._private__model._internal_timeScale();\n        if (timeScale._internal_isEmpty()) {\n            return null;\n        }\n        else {\n            return timeScale._internal_indexToCoordinate(logical);\n        }\n    }\n    coordinateToLogical(x) {\n        if (this._private__timeScale._internal_isEmpty()) {\n            return null;\n        }\n        else {\n            return this._private__timeScale._internal_coordinateToIndex(x);\n        }\n    }\n    timeToCoordinate(time) {\n        const timePoint = this._private__horzScaleBehavior.convertHorzItemToInternal(time);\n        const timePointIndex = this._private__timeScale._internal_timeToIndex(timePoint, false);\n        if (timePointIndex === null) {\n            return null;\n        }\n        return this._private__timeScale._internal_indexToCoordinate(timePointIndex);\n    }\n    coordinateToTime(x) {\n        const timeScale = this._private__model._internal_timeScale();\n        const timePointIndex = timeScale._internal_coordinateToIndex(x);\n        const timePoint = timeScale._internal_indexToTimeScalePoint(timePointIndex);\n        if (timePoint === null) {\n            return null;\n        }\n        return timePoint.originalTime;\n    }\n    width() {\n        return this._private__timeAxisWidget._internal_getSize().width;\n    }\n    height() {\n        return this._private__timeAxisWidget._internal_getSize().height;\n    }\n    subscribeVisibleTimeRangeChange(handler) {\n        this._private__timeRangeChanged._internal_subscribe(handler);\n    }\n    unsubscribeVisibleTimeRangeChange(handler) {\n        this._private__timeRangeChanged._internal_unsubscribe(handler);\n    }\n    subscribeVisibleLogicalRangeChange(handler) {\n        this._private__logicalRangeChanged._internal_subscribe(handler);\n    }\n    unsubscribeVisibleLogicalRangeChange(handler) {\n        this._private__logicalRangeChanged._internal_unsubscribe(handler);\n    }\n    subscribeSizeChange(handler) {\n        this._private__sizeChanged._internal_subscribe(handler);\n    }\n    unsubscribeSizeChange(handler) {\n        this._private__sizeChanged._internal_unsubscribe(handler);\n    }\n    applyOptions(options) {\n        this._private__timeScale._internal_applyOptions(options);\n    }\n    options() {\n        return Object.assign(Object.assign({}, clone(this._private__timeScale._internal_options())), { barSpacing: this._private__timeScale._internal_barSpacing() });\n    }\n    _private__onVisibleBarsChanged() {\n        if (this._private__timeRangeChanged._internal_hasListeners()) {\n            this._private__timeRangeChanged._internal_fire(this.getVisibleRange());\n        }\n    }\n    _private__onVisibleLogicalRangeChanged() {\n        if (this._private__logicalRangeChanged._internal_hasListeners()) {\n            this._private__logicalRangeChanged._internal_fire(this.getVisibleLogicalRange());\n        }\n    }\n    _private__onSizeChanged(size) {\n        this._private__sizeChanged._internal_fire(size.width, size.height);\n    }\n}\n\nfunction patchPriceFormat(priceFormat) {\n    if (priceFormat === undefined || priceFormat.type === 'custom') {\n        return;\n    }\n    const priceFormatBuiltIn = priceFormat;\n    if (priceFormatBuiltIn.minMove !== undefined && priceFormatBuiltIn.precision === undefined) {\n        priceFormatBuiltIn.precision = precisionByMinMove(priceFormatBuiltIn.minMove);\n    }\n}\nfunction migrateHandleScaleScrollOptions(options) {\n    if (isBoolean(options.handleScale)) {\n        const handleScale = options.handleScale;\n        options.handleScale = {\n            axisDoubleClickReset: {\n                time: handleScale,\n                price: handleScale,\n            },\n            axisPressedMouseMove: {\n                time: handleScale,\n                price: handleScale,\n            },\n            mouseWheel: handleScale,\n            pinch: handleScale,\n        };\n    }\n    else if (options.handleScale !== undefined) {\n        const { axisPressedMouseMove, axisDoubleClickReset } = options.handleScale;\n        if (isBoolean(axisPressedMouseMove)) {\n            options.handleScale.axisPressedMouseMove = {\n                time: axisPressedMouseMove,\n                price: axisPressedMouseMove,\n            };\n        }\n        if (isBoolean(axisDoubleClickReset)) {\n            options.handleScale.axisDoubleClickReset = {\n                time: axisDoubleClickReset,\n                price: axisDoubleClickReset,\n            };\n        }\n    }\n    const handleScroll = options.handleScroll;\n    if (isBoolean(handleScroll)) {\n        options.handleScroll = {\n            horzTouchDrag: handleScroll,\n            vertTouchDrag: handleScroll,\n            mouseWheel: handleScroll,\n            pressedMouseMove: handleScroll,\n        };\n    }\n}\nfunction toInternalOptions(options) {\n    migrateHandleScaleScrollOptions(options);\n    return options;\n}\nclass ChartApi {\n    constructor(container, horzScaleBehavior, options) {\n        this._private__seriesMap = new Map();\n        this._private__seriesMapReversed = new Map();\n        this._private__clickedDelegate = new Delegate();\n        this._private__dblClickedDelegate = new Delegate();\n        this._private__crosshairMovedDelegate = new Delegate();\n        this._private__dataLayer = new DataLayer(horzScaleBehavior);\n        const internalOptions = (options === undefined) ?\n            clone(chartOptionsDefaults()) :\n            merge(clone(chartOptionsDefaults()), toInternalOptions(options));\n        this._private__horzScaleBehavior = horzScaleBehavior;\n        this._private__chartWidget = new ChartWidget(container, internalOptions, horzScaleBehavior);\n        this._private__chartWidget._internal_clicked()._internal_subscribe((paramSupplier) => {\n            if (this._private__clickedDelegate._internal_hasListeners()) {\n                this._private__clickedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n            }\n        }, this);\n        this._private__chartWidget._internal_dblClicked()._internal_subscribe((paramSupplier) => {\n            if (this._private__dblClickedDelegate._internal_hasListeners()) {\n                this._private__dblClickedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n            }\n        }, this);\n        this._private__chartWidget._internal_crosshairMoved()._internal_subscribe((paramSupplier) => {\n            if (this._private__crosshairMovedDelegate._internal_hasListeners()) {\n                this._private__crosshairMovedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n            }\n        }, this);\n        const model = this._private__chartWidget._internal_model();\n        this._private__timeScaleApi = new TimeScaleApi(model, this._private__chartWidget._internal_timeAxisWidget(), this._private__horzScaleBehavior);\n    }\n    remove() {\n        this._private__chartWidget._internal_clicked()._internal_unsubscribeAll(this);\n        this._private__chartWidget._internal_dblClicked()._internal_unsubscribeAll(this);\n        this._private__chartWidget._internal_crosshairMoved()._internal_unsubscribeAll(this);\n        this._private__timeScaleApi._internal_destroy();\n        this._private__chartWidget._internal_destroy();\n        this._private__seriesMap.clear();\n        this._private__seriesMapReversed.clear();\n        this._private__clickedDelegate._internal_destroy();\n        this._private__dblClickedDelegate._internal_destroy();\n        this._private__crosshairMovedDelegate._internal_destroy();\n        this._private__dataLayer._internal_destroy();\n    }\n    resize(width, height, forceRepaint) {\n        if (this.autoSizeActive()) {\n            // We return early here instead of checking this within the actual _chartWidget.resize method\n            // because this should only apply to external resize requests.\n            warn(`Height and width values ignored because 'autoSize' option is enabled.`);\n            return;\n        }\n        this._private__chartWidget._internal_resize(width, height, forceRepaint);\n    }\n    addCustomSeries(customPaneView, options) {\n        const paneView = ensure(customPaneView);\n        const defaults = Object.assign(Object.assign({}, customStyleDefaults), paneView.defaultOptions());\n        return this._private__addSeriesImpl('Custom', defaults, options, paneView);\n    }\n    addAreaSeries(options) {\n        return this._private__addSeriesImpl('Area', areaStyleDefaults, options);\n    }\n    addBaselineSeries(options) {\n        return this._private__addSeriesImpl('Baseline', baselineStyleDefaults, options);\n    }\n    addBarSeries(options) {\n        return this._private__addSeriesImpl('Bar', barStyleDefaults, options);\n    }\n    addCandlestickSeries(options = {}) {\n        fillUpDownCandlesticksColors(options);\n        return this._private__addSeriesImpl('Candlestick', candlestickStyleDefaults, options);\n    }\n    addHistogramSeries(options) {\n        return this._private__addSeriesImpl('Histogram', histogramStyleDefaults, options);\n    }\n    addLineSeries(options) {\n        return this._private__addSeriesImpl('Line', lineStyleDefaults, options);\n    }\n    removeSeries(seriesApi) {\n        const series = ensureDefined(this._private__seriesMap.get(seriesApi));\n        const update = this._private__dataLayer._internal_removeSeries(series);\n        const model = this._private__chartWidget._internal_model();\n        model._internal_removeSeries(series);\n        this._private__sendUpdateToChart(update);\n        this._private__seriesMap.delete(seriesApi);\n        this._private__seriesMapReversed.delete(series);\n    }\n    _internal_applyNewData(series, data) {\n        this._private__sendUpdateToChart(this._private__dataLayer._internal_setSeriesData(series, data));\n    }\n    _internal_updateData(series, data) {\n        this._private__sendUpdateToChart(this._private__dataLayer._internal_updateSeriesData(series, data));\n    }\n    subscribeClick(handler) {\n        this._private__clickedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeClick(handler) {\n        this._private__clickedDelegate._internal_unsubscribe(handler);\n    }\n    subscribeCrosshairMove(handler) {\n        this._private__crosshairMovedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeCrosshairMove(handler) {\n        this._private__crosshairMovedDelegate._internal_unsubscribe(handler);\n    }\n    subscribeDblClick(handler) {\n        this._private__dblClickedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeDblClick(handler) {\n        this._private__dblClickedDelegate._internal_unsubscribe(handler);\n    }\n    priceScale(priceScaleId) {\n        return new PriceScaleApi(this._private__chartWidget, priceScaleId);\n    }\n    timeScale() {\n        return this._private__timeScaleApi;\n    }\n    applyOptions(options) {\n        this._private__chartWidget._internal_applyOptions(toInternalOptions(options));\n    }\n    options() {\n        return this._private__chartWidget._internal_options();\n    }\n    takeScreenshot() {\n        return this._private__chartWidget._internal_takeScreenshot();\n    }\n    autoSizeActive() {\n        return this._private__chartWidget._internal_autoSizeActive();\n    }\n    chartElement() {\n        return this._private__chartWidget._internal_element();\n    }\n    paneSize() {\n        const size = this._private__chartWidget._internal_paneSize();\n        return {\n            height: size.height,\n            width: size.width,\n        };\n    }\n    setCrosshairPosition(price, horizontalPosition, seriesApi) {\n        const series = this._private__seriesMap.get(seriesApi);\n        if (series === undefined) {\n            return;\n        }\n        const pane = this._private__chartWidget._internal_model()._internal_paneForSource(series);\n        if (pane === null) {\n            return;\n        }\n        this._private__chartWidget._internal_model()._internal_setAndSaveSyntheticPosition(price, horizontalPosition, pane);\n    }\n    clearCrosshairPosition() {\n        this._private__chartWidget._internal_model()._internal_clearCurrentPosition(true);\n    }\n    _private__addSeriesImpl(type, styleDefaults, options = {}, customPaneView) {\n        patchPriceFormat(options.priceFormat);\n        const strictOptions = merge(clone(seriesOptionsDefaults), clone(styleDefaults), options);\n        const series = this._private__chartWidget._internal_model()._internal_createSeries(type, strictOptions, customPaneView);\n        const res = new SeriesApi(series, this, this, this, this._private__horzScaleBehavior);\n        this._private__seriesMap.set(res, series);\n        this._private__seriesMapReversed.set(series, res);\n        return res;\n    }\n    _private__sendUpdateToChart(update) {\n        const model = this._private__chartWidget._internal_model();\n        model._internal_updateTimeScale(update._internal_timeScale._internal_baseIndex, update._internal_timeScale._internal_points, update._internal_timeScale._internal_firstChangedPointIndex);\n        update._internal_series.forEach((value, series) => series._internal_setData(value._internal_data, value._internal_info));\n        model._internal_recalculateAllPanes();\n    }\n    _private__mapSeriesToApi(series) {\n        return ensureDefined(this._private__seriesMapReversed.get(series));\n    }\n    _private__convertMouseParams(param) {\n        const seriesData = new Map();\n        param._internal_seriesData.forEach((plotRow, series) => {\n            const seriesType = series._internal_seriesType();\n            const data = getSeriesDataCreator(seriesType)(plotRow);\n            if (seriesType !== 'Custom') {\n                assert(isFulfilledData(data));\n            }\n            else {\n                const customWhitespaceChecker = series._internal_customSeriesWhitespaceCheck();\n                assert(!customWhitespaceChecker || customWhitespaceChecker(data) === false);\n            }\n            seriesData.set(this._private__mapSeriesToApi(series), data);\n        });\n        const hoveredSeries = param._internal_hoveredSeries === undefined ||\n            !this._private__seriesMapReversed.has(param._internal_hoveredSeries)\n            ? undefined\n            : this._private__mapSeriesToApi(param._internal_hoveredSeries);\n        return {\n            time: param._internal_originalTime,\n            logical: param._internal_index,\n            point: param._internal_point,\n            hoveredSeries,\n            hoveredObjectId: param._internal_hoveredObject,\n            seriesData,\n            sourceEvent: param._internal_touchMouseEventData,\n        };\n    }\n}\n\n/**\n * This function is the main entry point of the Lightweight Charting Library. If you are using time values\n * for the horizontal scale then it is recommended that you rather use the {@link createChart} function.\n *\n * @template HorzScaleItem - type of points on the horizontal scale\n * @template THorzScaleBehavior - type of horizontal axis strategy that encapsulate all the specific behaviors of the horizontal scale type\n *\n * @param container - ID of HTML element or element itself\n * @param horzScaleBehavior - Horizontal scale behavior\n * @param options - Any subset of options to be applied at start.\n * @returns An interface to the created chart\n */\nfunction createChartEx(container, horzScaleBehavior, options) {\n    let htmlElement;\n    if (isString(container)) {\n        const element = document.getElementById(container);\n        assert(element !== null, `Cannot find element in DOM with id=${container}`);\n        htmlElement = element;\n    }\n    else {\n        htmlElement = container;\n    }\n    const res = new ChartApi(htmlElement, horzScaleBehavior, options);\n    horzScaleBehavior.setOptions(res.options());\n    return res;\n}\n/**\n * This function is the simplified main entry point of the Lightweight Charting Library with time points for the horizontal scale.\n *\n * @param container - ID of HTML element or element itself\n * @param options - Any subset of options to be applied at start.\n * @returns An interface to the created chart\n */\nfunction createChart(container, options) {\n    return createChartEx(container, new HorzScaleBehaviorTime(), HorzScaleBehaviorTime._internal_applyDefaults(options));\n}\n/**\n * Provides the default implementation of the horizontal scale (time-based) that can be used as a base for extending the horizontal scale with custom behavior.\n * This allows for the introduction of custom functionality without re-implementing the entire {@link IHorzScaleBehavior}&lt;{@link Time}&gt; interface.\n *\n * For further details, refer to the {@link createChartEx} chart constructor method.\n *\n * @returns An uninitialized class implementing the {@link IHorzScaleBehavior}&lt;{@link Time}&gt; interface\n */\nfunction defaultHorzScaleBehavior() {\n    return HorzScaleBehaviorTime;\n}\n\n/// <reference types=\"_build-time-constants\" />\nconst customSeriesDefaultOptions = Object.assign(Object.assign({}, seriesOptionsDefaults), customStyleDefaults);\n/**\n * Returns the current version as a string. For example `'3.3.0'`.\n */\nfunction version() {\n    return \"4.2.0\";\n}\n\nexport { ColorType, CrosshairMode, LastPriceAnimationMode, LineStyle, LineType, MismatchDirection, PriceLineSource, PriceScaleMode, TickMarkType, TrackingModeExitMode, createChart, createChartEx, customSeriesDefaultOptions, defaultHorzScaleBehavior, isBusinessDay, isUTCTimestamp, version };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}