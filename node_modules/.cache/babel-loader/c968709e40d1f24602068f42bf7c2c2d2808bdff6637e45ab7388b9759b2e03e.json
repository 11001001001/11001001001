{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [rectangles, setRectangles] = useState([]);\n  const [currentRect, setCurrentRect] = useState(null);\n  const canvasWidth = 600; // Ширина canvas\n  const canvasHeight = 400; // Высота canvas\n  const rectWidth = 30; // Ширина каждого прямоугольника\n  const gap = 2; // Промежуток между прямоугольниками\n  const centerYDefault = canvasHeight / 2; // Центр canvas по оси Y\n  const centerX = canvasWidth / 2; // Центр canvas по оси X\n  const yBuffer = 100; // Дополнительное пространство в 100 пикселей вверх и вниз\n\n  let centerY = centerYDefault;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight); // Очистка canvas\n\n    // Обновление центральной оси при необходимости\n    rectangles.forEach(rect => {\n      if (centerY - rect.yOffset + rect.height / 2 > canvasHeight - yBuffer || centerY - rect.yOffset - rect.height / 2 < yBuffer) {\n        centerY = centerY - rect.yOffset;\n      }\n    });\n\n    // Рисуем уже существующие прямоугольники\n    rectangles.forEach(rect => {\n      ctx.beginPath();\n      ctx.rect(centerX + rect.xOffset, centerY - rect.yOffset, rectWidth, rect.height);\n      ctx.fillStyle = rect.color;\n      ctx.fill();\n      ctx.closePath();\n    });\n\n    // Рисуем текущий прямоугольник в реальном времени\n    if (currentRect) {\n      ctx.beginPath();\n      ctx.rect(centerX + currentRect.xOffset, centerY - currentRect.yOffset, rectWidth, currentRect.height);\n      ctx.fillStyle = currentRect.color;\n      ctx.fill();\n      ctx.closePath();\n    }\n  }, [rectangles, currentRect]);\n  const animateRectangle = () => {\n    const newTarget = Math.floor(Math.random() * 41) * (Math.random() > 0.5 ? 1 : -1);\n    const stepHeight = newTarget / 100; // 10 секунд, 100 шагов (по 100мс каждый)\n    let currentYOffset = rectangles.length > 0 ? rectangles[rectangles.length - 1].yOffset : 0; // Начальное смещение от предыдущего прямоугольника\n    const previousYOffset = currentYOffset; // Сохраняем предыдущее значение\n    const direction = newTarget > 0 ? 1 : -1;\n    const color = newTarget >= 0 ? 'green' : 'red'; // Цвет в зависимости от разницы\n\n    let currentHeight = 0;\n    setCurrentRect({\n      height: 0,\n      direction,\n      xOffset: 0,\n      yOffset: currentYOffset,\n      color\n    });\n    const interval = setInterval(() => {\n      currentHeight += stepHeight;\n      currentYOffset += stepHeight;\n      setCurrentRect({\n        height: Math.abs(currentHeight),\n        direction,\n        xOffset: -((rectangles.length + 1) * (rectWidth + gap)),\n        yOffset: previousYOffset + currentYOffset,\n        color\n      });\n      if (Math.abs(currentHeight) >= Math.abs(newTarget)) {\n        clearInterval(interval);\n        setRectangles(prevRectangles => [...prevRectangles, {\n          height: Math.abs(currentHeight),\n          direction,\n          xOffset: -(prevRectangles.length + 1) * (rectWidth + gap),\n          yOffset: previousYOffset + currentYOffset,\n          color\n        }]);\n        setCurrentRect(null);\n      }\n    }, 100);\n  };\n  useEffect(() => {\n    if (!isRunning) return;\n    const interval = setInterval(animateRectangle, 10000);\n    animateRectangle(); // Запуск анимации сразу при первом запуске\n\n    return () => clearInterval(interval);\n  }, [isRunning]);\n  const handleStartStop = () => {\n    setIsRunning(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: canvasWidth,\n        height: canvasHeight,\n        style: {\n          border: '1px solid black'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartStop,\n        style: {\n          display: 'block',\n          margin: '10px auto'\n        },\n        children: isRunning ? 'Stop' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n_s(Page4, \"iqILHVl0vId7QELVSt8GClCx6sc=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Page4","_s","canvasRef","isRunning","setIsRunning","rectangles","setRectangles","currentRect","setCurrentRect","canvasWidth","canvasHeight","rectWidth","gap","centerYDefault","centerX","yBuffer","centerY","canvas","current","ctx","getContext","clearRect","forEach","rect","yOffset","height","beginPath","xOffset","fillStyle","color","fill","closePath","animateRectangle","newTarget","Math","floor","random","stepHeight","currentYOffset","length","previousYOffset","direction","currentHeight","interval","setInterval","abs","clearInterval","prevRectangles","handleStartStop","prevState","style","display","justifyContent","alignItems","children","ref","width","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","margin","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Page4 = () => {\n    const canvasRef = useRef(null);\n    const [isRunning, setIsRunning] = useState(false);\n    const [rectangles, setRectangles] = useState([]);\n    const [currentRect, setCurrentRect] = useState(null);\n\n    const canvasWidth = 600;  // Ширина canvas\n    const canvasHeight = 400; // Высота canvas\n    const rectWidth = 30;     // Ширина каждого прямоугольника\n    const gap = 2;            // Промежуток между прямоугольниками\n    const centerYDefault = canvasHeight / 2;  // Центр canvas по оси Y\n    const centerX = canvasWidth / 2;   // Центр canvas по оси X\n    const yBuffer = 100;      // Дополнительное пространство в 100 пикселей вверх и вниз\n\n    let centerY = centerYDefault;\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvasWidth, canvasHeight);  // Очистка canvas\n\n        // Обновление центральной оси при необходимости\n        rectangles.forEach(rect => {\n            if (centerY - rect.yOffset + rect.height / 2 > canvasHeight - yBuffer || centerY - rect.yOffset - rect.height / 2 < yBuffer) {\n                centerY = centerY - rect.yOffset;\n            }\n        });\n\n        // Рисуем уже существующие прямоугольники\n        rectangles.forEach(rect => {\n            ctx.beginPath();\n            ctx.rect(centerX + rect.xOffset, centerY - rect.yOffset, rectWidth, rect.height);\n            ctx.fillStyle = rect.color;\n            ctx.fill();\n            ctx.closePath();\n        });\n\n        // Рисуем текущий прямоугольник в реальном времени\n        if (currentRect) {\n            ctx.beginPath();\n            ctx.rect(centerX + currentRect.xOffset, centerY - currentRect.yOffset, rectWidth, currentRect.height);\n            ctx.fillStyle = currentRect.color;\n            ctx.fill();\n            ctx.closePath();\n        }\n    }, [rectangles, currentRect]);\n\n    const animateRectangle = () => {\n        const newTarget = Math.floor(Math.random() * 41) * (Math.random() > 0.5 ? 1 : -1);\n        const stepHeight = newTarget / 100; // 10 секунд, 100 шагов (по 100мс каждый)\n        let currentYOffset = rectangles.length > 0 ? rectangles[rectangles.length - 1].yOffset : 0; // Начальное смещение от предыдущего прямоугольника\n        const previousYOffset = currentYOffset; // Сохраняем предыдущее значение\n        const direction = newTarget > 0 ? 1 : -1;\n        const color = newTarget >= 0 ? 'green' : 'red'; // Цвет в зависимости от разницы\n\n        let currentHeight = 0;\n\n        setCurrentRect({ height: 0, direction, xOffset: 0, yOffset: currentYOffset, color });\n\n        const interval = setInterval(() => {\n            currentHeight += stepHeight;\n            currentYOffset += stepHeight;\n\n            setCurrentRect({\n                height: Math.abs(currentHeight),\n                direction,\n                xOffset: -((rectangles.length + 1) * (rectWidth + gap)),\n                yOffset: previousYOffset + currentYOffset,\n                color\n            });\n\n            if (Math.abs(currentHeight) >= Math.abs(newTarget)) {\n                clearInterval(interval);\n                setRectangles(prevRectangles => [\n                    ...prevRectangles,\n                    {\n                        height: Math.abs(currentHeight),\n                        direction,\n                        xOffset: -(prevRectangles.length + 1) * (rectWidth + gap),\n                        yOffset: previousYOffset + currentYOffset,\n                        color\n                    }\n                ]);\n                setCurrentRect(null);\n            }\n        }, 100);\n    };\n\n    useEffect(() => {\n        if (!isRunning) return;\n\n        const interval = setInterval(animateRectangle, 10000);\n        animateRectangle(); // Запуск анимации сразу при первом запуске\n\n        return () => clearInterval(interval);\n    }, [isRunning]);\n\n    const handleStartStop = () => {\n        setIsRunning(prevState => !prevState);\n    };\n\n    return (\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n            <div>\n                <canvas ref={canvasRef} width={canvasWidth} height={canvasHeight} style={{ border: '1px solid black' }} />\n                <button onClick={handleStartStop} style={{ display: 'block', margin: '10px auto' }}>\n                    {isRunning ? 'Stop' : 'Start'}\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}