{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const [previousValue, setPreviousValue] = useState(56000);\n  const [currentValue, setCurrentValue] = useState(56000);\n  const [rectangles, setRectangles] = useState([]); // массив для хранения прямоугольников\n  const canvasRef = useRef(null);\n  const generateValue = () => {\n    const maxDifference = 345;\n    const minValue = Math.max(54122, previousValue - maxDifference);\n    const maxValue = Math.min(57955, previousValue + maxDifference);\n    const newValue = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\n    setCurrentValue(newValue);\n  };\n  useEffect(() => {\n    if (currentValue !== previousValue) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const scale = window.devicePixelRatio || 1;\n      canvas.width = 500 * scale;\n      canvas.height = 300 * scale;\n      ctx.scale(scale, scale);\n      const difference = currentValue - previousValue;\n      const step = difference > 0 ? 1 : -1;\n      let progress = 0;\n      const startY = 150 - (previousValue - 56000) / 3843 * 120;\n      const targetY = 150 - (currentValue - 56000) / 3843 * 120;\n      const rectWidth = 30;\n      const interval = setInterval(() => {\n        progress += step * 0.5;\n        ctx.clearRect(0, 0, canvas.width / scale, canvas.height / scale);\n\n        // смещение всех прямоугольников влево\n        const updatedRectangles = rectangles.map(rect => ({\n          ...rect,\n          x: rect.x - rectWidth\n        }));\n\n        // рисование всех прямоугольников\n        updatedRectangles.forEach(rect => {\n          ctx.fillStyle = rect.color;\n          ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n          // Рисование полоски по середине прямоугольника\n          ctx.fillStyle = 'black';\n          ctx.fillRect(rect.x + rect.width / 2 - 2.5, rect.y - 2.5, 5, rect.height + 5);\n        });\n\n        // рисование текущего прямоугольника\n        const height = Math.abs(progress);\n        const rectY = difference > 0 ? startY - height : startY;\n        ctx.fillStyle = difference > 0 ? 'green' : 'red';\n        ctx.fillRect(canvas.width / scale / 2 - 15, rectY, rectWidth, height);\n        // Рисование полоски по середине текущего прямоугольника\n        ctx.fillStyle = 'black';\n        ctx.fillRect(canvas.width / scale / 2 - 2.5, rectY - 2.5, 5, height + 5);\n        if (Math.abs(progress) >= Math.abs(targetY - startY)) {\n          clearInterval(interval);\n\n          // добавляем новый прямоугольник в массив\n          updatedRectangles.push({\n            x: canvas.width / scale / 2 - 15,\n            y: rectY,\n            width: rectWidth,\n            height: height,\n            color: difference > 0 ? 'green' : 'red'\n          });\n          setRectangles(updatedRectangles);\n          setPreviousValue(currentValue);\n        }\n      }, 20);\n      return () => clearInterval(interval);\n    }\n  }, [currentValue, previousValue, rectangles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        width: 500,\n        height: 300,\n        border: '1px solid black',\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateValue,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px',\n        cursor: 'pointer',\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px'\n      },\n      children: \"Generate Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(Page4, \"JM6rmb4pxKBfH5qzcSGMJxGcfbY=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Page4","_s","previousValue","setPreviousValue","currentValue","setCurrentValue","rectangles","setRectangles","canvasRef","generateValue","maxDifference","minValue","Math","max","maxValue","min","newValue","floor","random","canvas","current","ctx","getContext","scale","window","devicePixelRatio","width","height","difference","step","progress","startY","targetY","rectWidth","interval","setInterval","clearRect","updatedRectangles","map","rect","x","forEach","fillStyle","color","fillRect","y","abs","rectY","clearInterval","push","style","display","flexDirection","alignItems","children","ref","border","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","fontSize","cursor","backgroundColor","borderRadius","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Page4 = () => {\n    const [previousValue, setPreviousValue] = useState(56000);\n    const [currentValue, setCurrentValue] = useState(56000);\n    const [rectangles, setRectangles] = useState([]); // массив для хранения прямоугольников\n    const canvasRef = useRef(null);\n\n    const generateValue = () => {\n        const maxDifference = 345;\n        const minValue = Math.max(54122, previousValue - maxDifference);\n        const maxValue = Math.min(57955, previousValue + maxDifference);\n        const newValue = Math.floor(Math.random() * (maxValue - minValue + 1)) + minValue;\n        setCurrentValue(newValue);\n    };\n\n    useEffect(() => {\n        if (currentValue !== previousValue) {\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext('2d');\n\n            const scale = window.devicePixelRatio || 1;\n            canvas.width = 500 * scale;\n            canvas.height = 300 * scale;\n            ctx.scale(scale, scale);\n\n            const difference = currentValue - previousValue;\n            const step = difference > 0 ? 1 : -1;\n            let progress = 0;\n\n            const startY = 150 - ((previousValue - 56000) / 3843) * 120;\n            const targetY = 150 - ((currentValue - 56000) / 3843) * 120;\n            const rectWidth = 30;\n\n            const interval = setInterval(() => {\n                progress += step * 0.5;\n\n                ctx.clearRect(0, 0, canvas.width / scale, canvas.height / scale);\n\n                // смещение всех прямоугольников влево\n                const updatedRectangles = rectangles.map((rect) => ({\n                    ...rect,\n                    x: rect.x - rectWidth,\n                }));\n\n                // рисование всех прямоугольников\n                updatedRectangles.forEach((rect) => {\n                    ctx.fillStyle = rect.color;\n                    ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n                    // Рисование полоски по середине прямоугольника\n                    ctx.fillStyle = 'black';\n                    ctx.fillRect(rect.x + rect.width / 2 - 2.5, rect.y - 2.5, 5, rect.height + 5);\n                });\n\n                // рисование текущего прямоугольника\n                const height = Math.abs(progress);\n                const rectY = difference > 0 ? startY - height : startY;\n                ctx.fillStyle = difference > 0 ? 'green' : 'red';\n                ctx.fillRect(canvas.width / scale / 2 - 15, rectY, rectWidth, height);\n                // Рисование полоски по середине текущего прямоугольника\n                ctx.fillStyle = 'black';\n                ctx.fillRect(canvas.width / scale / 2 - 2.5, rectY - 2.5, 5, height + 5);\n\n                if (Math.abs(progress) >= Math.abs(targetY - startY)) {\n                    clearInterval(interval);\n\n                    // добавляем новый прямоугольник в массив\n                    updatedRectangles.push({\n                        x: canvas.width / scale / 2 - 15,\n                        y: rectY,\n                        width: rectWidth,\n                        height: height,\n                        color: difference > 0 ? 'green' : 'red',\n                    });\n\n                    setRectangles(updatedRectangles);\n                    setPreviousValue(currentValue);\n                }\n            }, 20);\n\n            return () => clearInterval(interval);\n        }\n    }, [currentValue, previousValue, rectangles]);\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            <canvas\n                ref={canvasRef}\n                style={{ width: 500, height: 300, border: '1px solid black', marginBottom: '20px' }}\n            ></canvas>\n            <button\n                onClick={generateValue}\n                style={{\n                    padding: '10px 20px',\n                    fontSize: '16px',\n                    cursor: 'pointer',\n                    backgroundColor: '#4CAF50',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '5px'\n                }}>\n                Generate Value\n            </button>\n        </div>\n    );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}