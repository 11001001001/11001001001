{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, PointElement, LinearScale, Title, CategoryScale } from 'chart.js';\n\n// Регистрация компонентов Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, PointElement, LinearScale, Title, CategoryScale);\nconst Page4 = () => {\n  _s();\n  const [data, setData] = useState({\n    labels: [],\n    // Подписи для оси X (временные метки)\n    datasets: [{\n      label: 'Random Data',\n      data: [],\n      // Данные для графика\n      borderColor: 'rgba(75,192,192,1)',\n      backgroundColor: 'rgba(75,192,192,0.2)',\n      fill: true\n    }]\n  });\n\n  // Добавление нового случайного значения в график\n  const addData = () => {\n    const newData = [...data.datasets[0].data];\n    const newLabels = [...data.labels];\n    if (newData.length >= 20) {\n      // Ограничение до 20 точек на графике\n      newData.shift(); // Удаляем первую точку\n      newLabels.shift();\n    }\n    newData.push(Math.floor(Math.random() * 100)); // Генерация случайного числа\n    newLabels.push(new Date().toLocaleTimeString()); // Добавление текущего времени\n\n    setData({\n      labels: newLabels,\n      datasets: [{\n        ...data.datasets[0],\n        data: newData\n      }]\n    });\n  };\n\n  // Обновление графика каждую секунду\n  useEffect(() => {\n    const interval = setInterval(addData, 1000);\n    return () => clearInterval(interval);\n  }, [data]);\n\n  // Инлайн стили для контейнера графика\n  const containerStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    backgroundColor: '#f5f5f5'\n  };\n  const chartStyle = {\n    width: '50%',\n    height: '50%'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chartStyle,\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Page4, \"vFVcYcKMEcIioNhfJbD1p1vyFpw=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","LineElement","PointElement","LinearScale","Title","CategoryScale","jsxDEV","_jsxDEV","register","Page4","_s","data","setData","labels","datasets","label","borderColor","backgroundColor","fill","addData","newData","newLabels","length","shift","push","Math","floor","random","Date","toLocaleTimeString","interval","setInterval","clearInterval","containerStyle","display","justifyContent","alignItems","height","chartStyle","width","style","children","options","maintainAspectRatio","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, PointElement, LinearScale, Title, CategoryScale } from 'chart.js';\n\n// Регистрация компонентов Chart.js\nChartJS.register(LineElement, PointElement, LinearScale, Title, CategoryScale);\n\nconst Page4 = () => {\n  const [data, setData] = useState({\n    labels: [],  // Подписи для оси X (временные метки)\n    datasets: [\n      {\n        label: 'Random Data',\n        data: [],  // Данные для графика\n        borderColor: 'rgba(75,192,192,1)',\n        backgroundColor: 'rgba(75,192,192,0.2)',\n        fill: true,\n      }\n    ],\n  });\n\n  // Добавление нового случайного значения в график\n  const addData = () => {\n    const newData = [...data.datasets[0].data];\n    const newLabels = [...data.labels];\n    if (newData.length >= 20) {  // Ограничение до 20 точек на графике\n      newData.shift();  // Удаляем первую точку\n      newLabels.shift();\n    }\n\n    newData.push(Math.floor(Math.random() * 100));  // Генерация случайного числа\n    newLabels.push(new Date().toLocaleTimeString());  // Добавление текущего времени\n\n    setData({\n      labels: newLabels,\n      datasets: [{\n        ...data.datasets[0],\n        data: newData\n      }]\n    });\n  };\n\n  // Обновление графика каждую секунду\n  useEffect(() => {\n    const interval = setInterval(addData, 1000);\n    return () => clearInterval(interval);\n  }, [data]);\n\n  // Инлайн стили для контейнера графика\n  const containerStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    backgroundColor: '#f5f5f5'\n  };\n\n  const chartStyle = {\n    width: '50%',\n    height: '50%',\n  };\n\n  return (\n    <div style={containerStyle}>\n      <div style={chartStyle}>\n        <Line data={data} options={{ maintainAspectRatio: false }} />\n      </div>\n    </div>\n  );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}