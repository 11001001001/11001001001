{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Импортируем useNavigate\nimport './Page3.css';\nimport ConfettiCanvas from './ConfettiCanvas';\nimport LoadingScreen from './LoadingScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Page3() {\n  _s();\n  const [value, setValue] = useState(0.00);\n  const [balance, setBalance] = useState(() => {\n    const savedBalance = localStorage.getItem('balance');\n    return savedBalance ? parseFloat(savedBalance) : 0.00;\n  });\n  const [bet, setBet] = useState('');\n  const [tickets, setTickets] = useState(() => {\n    const savedTickets = localStorage.getItem('tickets');\n    return savedTickets ? parseInt(savedTickets, 10) : 9;\n  });\n  const [message, setMessage] = useState('Введите ставку');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [result, setResult] = useState(null);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [animateInput, setAnimateInput] = useState(false);\n  const [animateValue, setAnimateValue] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [timeLeft, setTimeLeft] = useState('');\n  const navigate = useNavigate(); // Инициализируем useNavigate\n  const intervalRef = useRef(null);\n  const timeoutRef = useRef(null);\n  const triggerHapticFeedback = () => {\n    if (window.Telegram.WebApp) {\n      window.Telegram.WebApp.HapticFeedback.impactOccurred('heavy');\n    } else if (navigator.vibrate) {\n      navigator.vibrate(50); // Для Android устройств\n    }\n  };\n  const triggerHapticFeedbackSoft = () => {\n    if (window.Telegram.WebApp) {\n      window.Telegram.WebApp.HapticFeedback.impactOccurred('rigid');\n    } else if (navigator.vibrate) {\n      navigator.vibrate(50); // Для Android устройств\n    }\n  };\n  useEffect(() => {\n    const betAmount = parseFloat(bet);\n    if (bet === '') {\n      setMessage('Select your bet');\n    } else if (isNaN(betAmount) || betAmount <= 0 || betAmount > balance) {\n      setMessage('Not enough tokens');\n    } else if (!tickets) {\n      setMessage('Need more tickets');\n    } else {\n      setMessage('Hold on');\n    }\n  }, [bet, balance]);\n  useEffect(() => {\n    setAnimateInput(true);\n    setAnimateValue(true);\n  }, []);\n  useEffect(() => {\n    const checkTicketsReset = () => {\n      const now = new Date();\n      const lastReset = localStorage.getItem('lastReset');\n      const lastResetDate = lastReset ? new Date(lastReset) : null;\n      if (!lastResetDate || now.getDate() !== lastResetDate.getDate()) {\n        setTickets(9);\n        localStorage.setItem('tickets', '9');\n        localStorage.setItem('lastReset', now.toString());\n      }\n    };\n    checkTicketsReset();\n    const interval = setInterval(checkTicketsReset, 60000); // Проверка каждую минуту\n\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    const loadingTimeout = setTimeout(() => setLoading(false), 4000); // Hide loading screen after 4 seconds\n    return () => clearTimeout(loadingTimeout);\n  }, []);\n  useEffect(() => {\n    if (tickets === 0) {\n      const calculateTimeLeft = () => {\n        const now = new Date();\n        const nextReset = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\n        const difference = nextReset - now;\n        let hours = Math.floor(difference / (1000 * 60 * 60));\n        let minutes = Math.floor(difference % (1000 * 60 * 60) / (1000 * 60));\n        let seconds = Math.floor(difference % (1000 * 60) / 1000);\n        setTimeLeft(`${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`);\n      };\n      calculateTimeLeft();\n      const timeInterval = setInterval(calculateTimeLeft, 1000);\n      return () => clearInterval(timeInterval);\n    }\n  }, [tickets]);\n  const handle10 = cef => {\n    const betValue = Math.floor(balance * cef);\n    setBet(betValue);\n  };\n  const handleButtonPress = () => {\n    const betAmount = parseFloat(bet);\n    if (!isNaN(betAmount) && betAmount <= balance && betAmount > 0 && tickets > 0 && !isPlaying) {\n      setIsPlaying(true);\n      setValue(1.00);\n      setGameOver(false);\n      setResult(null);\n      setShowConfetti(false);\n      setTickets(prevTickets => {\n        const newTickets = prevTickets - 1;\n        localStorage.setItem('tickets', newTickets.toString());\n        return newTickets;\n      });\n      setBalance(prevBalance => {\n        const newBalance = parseFloat((prevBalance - betAmount).toFixed(2));\n        return isNaN(newBalance) || newBalance < 0 ? 0 : newBalance;\n      });\n      const maxMultiplier = 20.00;\n      intervalRef.current = setInterval(() => {\n        setValue(prevValue => parseFloat((prevValue + 0.01).toFixed(2)));\n        triggerHapticFeedback();\n      }, 100); // Увеличиваем коэффициент каждые 100 мс\n\n      const randomFactor = Math.random();\n      let randomTime;\n      if (randomFactor < 0.1) {\n        // 10% случаев - от 0 до 1000\n        randomTime = Math.floor(Math.random() * 1001);\n      } else if (randomFactor < 0.2) {\n        // Следующие 10% - от 1100 до 2000\n        randomTime = Math.floor(Math.random() * 901) + 1100;\n      } else if (randomFactor < 0.3) {\n        // Следующие 10% - от 2100 до 3000\n        randomTime = Math.floor(Math.random() * 901) + 2100;\n      } else if (randomFactor < 0.4) {\n        // Следующие 10% - от 3100 до 4000\n        randomTime = Math.floor(Math.random() * 901) + 30100;\n      } else if (randomFactor < 0.5) {\n        // Следующие 10% - от 4100 до 5000\n        randomTime = Math.floor(Math.random() * 901) + 4100;\n      } else if (randomFactor < 0.6) {\n        // Следующие 10% - от 5100 до 6000\n        randomTime = Math.floor(Math.random() * 901) + 55100;\n      } else if (randomFactor < 0.7) {\n        // Следующие 10% - от 6100 до 7000\n        randomTime = Math.floor(Math.random() * 901) + 66100;\n      } else if (randomFactor < 0.8) {\n        // Следующие 10% - от 7100 до 8000\n        randomTime = Math.floor(Math.random() * 901) + 7100;\n      } else if (randomFactor < 0.9) {\n        // Следующие 10% - от 8100 до 9000\n        randomTime = Math.floor(Math.random() * 901) + 28100;\n      } else {\n        // Последние 10% - от 9100 до 10000\n        randomTime = Math.floor(Math.random() * 901) + 99100;\n      }\n      timeoutRef.current = setTimeout(() => {\n        clearInterval(intervalRef.current);\n        setGameOver(true);\n        setResult(`-${betAmount.toFixed(2)} coin`);\n        setIsPlaying(false);\n        setBet(''); // Сбрасываем ставку\n        setTimeout(() => {\n          setGameOver(false);\n          setResult(null);\n        }, 1000); // 1 секунда задержки\n      }, randomTime);\n    }\n  };\n  const handleButtonRelease = () => {\n    if (!gameOver && isPlaying) {\n      clearInterval(intervalRef.current);\n      clearTimeout(timeoutRef.current);\n      const betAmount = parseFloat(bet);\n      const winnings = parseFloat((betAmount * value).toFixed(2));\n      const newBalance = parseFloat((balance + winnings).toFixed(2));\n      setBalance(isNaN(newBalance) || newBalance < 0 ? 0 : newBalance);\n      localStorage.setItem('balance', (isNaN(newBalance) || newBalance < 0 ? 0 : newBalance).toString());\n      setResult(`+${winnings.toFixed(2)} coin`);\n      setIsPlaying(false);\n      setGameOver(true);\n      setShowConfetti(true);\n      setBet(''); // Сбрасываем ставку\n      setTimeout(() => {\n        setGameOver(false);\n        setResult(null);\n      }, 1000); // 1 секунда задержки\n    }\n  };\n  const handleInputChange = e => {\n    const betValue = e.target.value;\n    if (/^\\d*\\.?\\d*$/.test(betValue)) {\n      setBet(betValue);\n    }\n  };\n  const handleNavigateBack = () => {\n    navigate(-1); // Используем navigate для перехода назад\n  };\n  const bet10 = Math.floor(balance * 0.1);\n  const bet25 = Math.floor(balance * 0.25);\n  const bet50 = Math.floor(balance * 0.5);\n  const betAll = Math.floor(balance);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Page3 ${animateInput ? 'fade-in' : ''}`,\n    children: [loading && /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }, this), !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handleNavigateBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"Bet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `input-wrapper ${animateInput ? 'fade-in' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: bet,\n          onChange: handleInputChange,\n          placeholder: \"Enter your bet\",\n          className: `bet-input ${animateInput ? 'fade-in' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `value ${animateValue ? 'fade-in' : ''}`,\n        children: [value.toFixed(2), \"x\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handle10(0.1),\n          children: bet10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handle10(0.25),\n          children: bet25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handle10(0.5),\n          children: bet50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handle10(1),\n          children: betAll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tickets\",\n        children: [\"Tickets: \", tickets]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), tickets === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-left\",\n        children: [\"Tickets reset in: \", timeLeft]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance\",\n        children: [\"Balance: \", balance.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onMouseDown: handleButtonPress,\n          onMouseUp: handleButtonRelease,\n          disabled: isPlaying || tickets === 0,\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), showConfetti && /*#__PURE__*/_jsxDEV(ConfettiCanvas, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n}\n_s(Page3, \"NOS8GprxsAEckV+gy0Dt2OlfVAQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Page3;\nexport default Page3;\nvar _c;\n$RefreshReg$(_c, \"Page3\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","ConfettiCanvas","LoadingScreen","jsxDEV","_jsxDEV","Page3","_s","value","setValue","balance","setBalance","savedBalance","localStorage","getItem","parseFloat","bet","setBet","tickets","setTickets","savedTickets","parseInt","message","setMessage","isPlaying","setIsPlaying","gameOver","setGameOver","result","setResult","showConfetti","setShowConfetti","animateInput","setAnimateInput","animateValue","setAnimateValue","loading","setLoading","timeLeft","setTimeLeft","navigate","intervalRef","timeoutRef","triggerHapticFeedback","window","Telegram","WebApp","HapticFeedback","impactOccurred","navigator","vibrate","triggerHapticFeedbackSoft","betAmount","isNaN","checkTicketsReset","now","Date","lastReset","lastResetDate","getDate","setItem","toString","interval","setInterval","clearInterval","loadingTimeout","setTimeout","clearTimeout","calculateTimeLeft","nextReset","getFullYear","getMonth","difference","hours","Math","floor","minutes","seconds","padStart","timeInterval","handle10","cef","betValue","handleButtonPress","prevTickets","newTickets","prevBalance","newBalance","toFixed","maxMultiplier","current","prevValue","randomFactor","random","randomTime","handleButtonRelease","winnings","handleInputChange","e","target","test","handleNavigateBack","bet10","bet25","bet50","betAll","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","placeholder","onMouseDown","onMouseUp","disabled","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page3.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Импортируем useNavigate\nimport './Page3.css';\nimport ConfettiCanvas from './ConfettiCanvas';\nimport LoadingScreen from './LoadingScreen';\n\nfunction Page3() {\n  const [value, setValue] = useState(0.00);\n  const [balance, setBalance] = useState(() => {\n    const savedBalance = localStorage.getItem('balance');\n    return savedBalance ? parseFloat(savedBalance) : 0.00;\n  });\n  const [bet, setBet] = useState('');\n  const [tickets, setTickets] = useState(() => {\n    const savedTickets = localStorage.getItem('tickets');\n    return savedTickets ? parseInt(savedTickets, 10) : 9;\n  });\n  const [message, setMessage] = useState('Введите ставку');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [result, setResult] = useState(null);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [animateInput, setAnimateInput] = useState(false);\n  const [animateValue, setAnimateValue] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [timeLeft, setTimeLeft] = useState('');\n\n  const navigate = useNavigate(); // Инициализируем useNavigate\n  const intervalRef = useRef(null);\n  const timeoutRef = useRef(null);\n\n  const triggerHapticFeedback = () => {\n    if (window.Telegram.WebApp) {\n      window.Telegram.WebApp.HapticFeedback.impactOccurred('heavy');\n    } else if (navigator.vibrate) {\n      navigator.vibrate(50); // Для Android устройств\n    }\n  };\n\n  const triggerHapticFeedbackSoft = () => {\n    if (window.Telegram.WebApp) {\n      window.Telegram.WebApp.HapticFeedback.impactOccurred('rigid');\n    } else if (navigator.vibrate) {\n      navigator.vibrate(50); // Для Android устройств\n    }\n  };\n\n  useEffect(() => {\n    const betAmount = parseFloat(bet);\n    if (bet === '') {\n      setMessage('Select your bet');\n    } else if (isNaN(betAmount) || betAmount <= 0 || betAmount > balance) {\n      setMessage('Not enough tokens');\n    } else if (!tickets) {\n      setMessage('Need more tickets');\n    } else {\n      setMessage('Hold on');\n    }\n  }, [bet, balance]);\n\n  useEffect(() => {\n    setAnimateInput(true);\n    setAnimateValue(true);\n  }, []);\n\n  useEffect(() => {\n    const checkTicketsReset = () => {\n      const now = new Date();\n      const lastReset = localStorage.getItem('lastReset');\n      const lastResetDate = lastReset ? new Date(lastReset) : null;\n\n      if (!lastResetDate || now.getDate() !== lastResetDate.getDate()) {\n        setTickets(9);\n        localStorage.setItem('tickets', '9');\n        localStorage.setItem('lastReset', now.toString());\n      }\n    };\n\n    checkTicketsReset();\n\n    const interval = setInterval(checkTicketsReset, 60000); // Проверка каждую минуту\n\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    const loadingTimeout = setTimeout(() => setLoading(false), 4000); // Hide loading screen after 4 seconds\n    return () => clearTimeout(loadingTimeout);\n  }, []);\n\n  useEffect(() => {\n    if (tickets === 0) {\n      const calculateTimeLeft = () => {\n        const now = new Date();\n        const nextReset = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\n        const difference = nextReset - now;\n\n        let hours = Math.floor(difference / (1000 * 60 * 60));\n        let minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n        let seconds = Math.floor((difference % (1000 * 60)) / 1000);\n\n        setTimeLeft(`${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`);\n      };\n\n      calculateTimeLeft();\n      const timeInterval = setInterval(calculateTimeLeft, 1000);\n\n      return () => clearInterval(timeInterval);\n    }\n  }, [tickets]);\n\n  const handle10 = (cef) => {\n    const betValue = Math.floor(balance * cef);\n    setBet(betValue);\n  };\n\n  const handleButtonPress = () => {\n    const betAmount = parseFloat(bet);\n    if (!isNaN(betAmount) && betAmount <= balance && betAmount > 0 && tickets > 0 && !isPlaying) {\n      setIsPlaying(true);\n      setValue(1.00);\n      setGameOver(false);\n      setResult(null);\n      setShowConfetti(false);\n      setTickets((prevTickets) => {\n        const newTickets = prevTickets - 1;\n        localStorage.setItem('tickets', newTickets.toString());\n        return newTickets;\n      });\n      setBalance((prevBalance) => {\n        const newBalance = parseFloat((prevBalance - betAmount).toFixed(2));\n        return isNaN(newBalance) || newBalance < 0 ? 0 : newBalance;\n      });\n\n      const maxMultiplier = 20.00;\n      intervalRef.current = setInterval(() => {\n        setValue((prevValue) => parseFloat((prevValue + 0.01).toFixed(2)));\n        triggerHapticFeedback();\n      }, 100); // Увеличиваем коэффициент каждые 100 мс\n\n      const randomFactor = Math.random();\n      let randomTime;\n\n      if (randomFactor < 0.1) {\n        // 10% случаев - от 0 до 1000\n        randomTime = Math.floor(Math.random() * 1001);\n      } else if (randomFactor < 0.2) {\n        // Следующие 10% - от 1100 до 2000\n        randomTime = Math.floor(Math.random() * 901) + 1100;\n      } else if (randomFactor < 0.3) {\n        // Следующие 10% - от 2100 до 3000\n        randomTime = Math.floor(Math.random() * 901) + 2100;\n      } else if (randomFactor < 0.4) {\n        // Следующие 10% - от 3100 до 4000\n        randomTime = Math.floor(Math.random() * 901) + 30100;\n      } else if (randomFactor < 0.5) {\n        // Следующие 10% - от 4100 до 5000\n        randomTime = Math.floor(Math.random() * 901) + 4100;\n      } else if (randomFactor < 0.6) {\n        // Следующие 10% - от 5100 до 6000\n        randomTime = Math.floor(Math.random() * 901) + 55100;\n      } else if (randomFactor < 0.7) {\n        // Следующие 10% - от 6100 до 7000\n        randomTime = Math.floor(Math.random() * 901) + 66100;\n      } else if (randomFactor < 0.8) {\n        // Следующие 10% - от 7100 до 8000\n        randomTime = Math.floor(Math.random() * 901) + 7100;\n      } else if (randomFactor < 0.9) {\n        // Следующие 10% - от 8100 до 9000\n        randomTime = Math.floor(Math.random() * 901) + 28100;\n      } else {\n        // Последние 10% - от 9100 до 10000\n        randomTime = Math.floor(Math.random() * 901) + 99100;\n      }\n\n      timeoutRef.current = setTimeout(() => {\n        clearInterval(intervalRef.current);\n        setGameOver(true);\n        setResult(`-${betAmount.toFixed(2)} coin`);\n        setIsPlaying(false);\n        setBet(''); // Сбрасываем ставку\n        setTimeout(() => {\n          setGameOver(false);\n          setResult(null);\n        }, 1000); // 1 секунда задержки\n      }, randomTime);\n    }\n  };\n\n  const handleButtonRelease = () => {\n    if (!gameOver && isPlaying) {\n      clearInterval(intervalRef.current);\n      clearTimeout(timeoutRef.current);\n      const betAmount = parseFloat(bet);\n      const winnings = parseFloat((betAmount * value).toFixed(2));\n      const newBalance = parseFloat((balance + winnings).toFixed(2));\n      setBalance(isNaN(newBalance) || newBalance < 0 ? 0 : newBalance);\n      localStorage.setItem('balance', (isNaN(newBalance) || newBalance < 0 ? 0 : newBalance).toString());\n      setResult(`+${winnings.toFixed(2)} coin`);\n      setIsPlaying(false);\n      setGameOver(true);\n      setShowConfetti(true);\n      setBet(''); // Сбрасываем ставку\n      setTimeout(() => {\n        setGameOver(false);\n        setResult(null);\n      }, 1000); // 1 секунда задержки\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const betValue = e.target.value;\n    if (/^\\d*\\.?\\d*$/.test(betValue)) {\n      setBet(betValue);\n    }\n  };\n\n  const handleNavigateBack = () => {\n    navigate(-1); // Используем navigate для перехода назад\n  };\n\n  const bet10 = Math.floor(balance * 0.1);\n  const bet25 = Math.floor(balance * 0.25);\n  const bet50 = Math.floor(balance * 0.5);\n  const betAll = Math.floor(balance);\n\n  return (\n    <div className={`Page3 ${animateInput ? 'fade-in' : ''}`}>\n      {loading && <LoadingScreen />}\n      {!loading && (\n        <div className=\"content\">\n          <button className=\"back-button\" onClick={handleNavigateBack}>\n            Back\n          </button>\n          <div className=\"header\">Bet</div>\n          <div className={`input-wrapper ${animateInput ? 'fade-in' : ''}`}>\n            <input\n              type=\"number\"\n              value={bet}\n              onChange={handleInputChange}\n              placeholder=\"Enter your bet\"\n              className={`bet-input ${animateInput ? 'fade-in' : ''}`}\n            />\n          </div>\n          <div className={`value ${animateValue ? 'fade-in' : ''}`}>{value.toFixed(2)}x</div>\n          <div className=\"message\">{message}</div>\n          <div className=\"button-group\">\n            <button onClick={() => handle10(0.1)}>{bet10}</button>\n            <button onClick={() => handle10(0.25)}>{bet25}</button>\n            <button onClick={() => handle10(0.5)}>{bet50}</button>\n            <button onClick={() => handle10(1)}>{betAll}</button>\n          </div>\n          <div className=\"tickets\">Tickets: {tickets}</div>\n          {tickets === 0 && (\n            <div className=\"time-left\">Tickets reset in: {timeLeft}</div>\n          )}\n          <div className=\"balance\">Balance: {balance.toFixed(2)}</div>\n          <div className=\"result\">{result}</div>\n          <div className=\"button-group\">\n            <button onMouseDown={handleButtonPress} onMouseUp={handleButtonRelease} disabled={isPlaying || tickets === 0}>\n              Play\n            </button>\n          </div>\n          {showConfetti && <ConfettiCanvas />}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Page3;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}