{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [priceData, setPriceData] = useState(null);\n  const [range, setRange] = useState({\n    min: 59500,\n    max: 60500\n  });\n  const candleWidth = 20;\n  let lastCandleX = 100;\n  let lastCandleY = 0;\n  useEffect(() => {\n    fetchBitcoinPrice();\n    const interval = setInterval(() => {\n      fetchBitcoinPrice();\n    }, 5000); // Запрашиваем цену каждые 5 секунд\n\n    return () => clearInterval(interval);\n  }, []);\n  const fetchBitcoinPrice = async () => {\n    try {\n      const response = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd');\n      const price = response.data.bitcoin.usd;\n      setPriceData(price);\n      generateNewCandle(price);\n    } catch (error) {\n      console.error(\"Error fetching Bitcoin price:\", error);\n      generateNewCandle(priceData); // Используем предыдущее значение, если ошибка\n    }\n  };\n  const generateNewCandle = price => {\n    const ctx = canvasRef.current.getContext('2d');\n    const randomOffset = (Math.random() > 0.5 ? 1 : -1) * Math.floor(Math.random() * 345);\n    const newPrice = price + randomOffset;\n    let newCandleY = calculateYPosition(price);\n    let targetCandleY = calculateYPosition(newPrice);\n    animateCandle(ctx, lastCandleX, lastCandleY, targetCandleY, price < newPrice ? 'green' : 'red', () => {\n      lastCandleX += candleWidth;\n      lastCandleY = targetCandleY;\n\n      // Смещаем область графика при выходе за границы\n      if (newPrice > range.max || newPrice < range.min) {\n        shiftCanvas(ctx);\n        setRange({\n          min: range.min + 1000,\n          max: range.max + 1000\n        });\n      }\n    });\n  };\n  const calculateYPosition = price => {\n    const canvasHeight = canvasRef.current.height;\n    const middleY = canvasHeight / 2;\n    const scale = 500; // масштаб по 500 вверх и вниз\n    return middleY - (price - priceData) * (canvasHeight / (range.max - range.min));\n  };\n  const animateCandle = (ctx, x, startY, targetY, color, onComplete) => {\n    let currentY = startY;\n    const step = (targetY - startY) / 50; // Движение за шаг\n\n    const draw = () => {\n      ctx.clearRect(x, 0, candleWidth, ctx.canvas.height); // Очищаем место для новой свечи\n      ctx.fillStyle = color;\n      ctx.fillRect(x, startY, candleWidth, currentY - startY);\n      currentY += step;\n      if (step > 0 && currentY <= targetY || step < 0 && currentY >= targetY) {\n        requestAnimationFrame(draw);\n      } else {\n        onComplete();\n      }\n    };\n    requestAnimationFrame(draw);\n  };\n  const shiftCanvas = ctx => {\n    const canvas = canvasRef.current;\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.putImageData(imageData, -candleWidth, 0);\n    lastCandleX -= candleWidth;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bitcoin Candlestick Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 1000,\n      height: 500,\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Page4, \"k3EQ0CoEM+7TX08W3dJXhEnFGjk=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Page4","_s","canvasRef","priceData","setPriceData","range","setRange","min","max","candleWidth","lastCandleX","lastCandleY","fetchBitcoinPrice","interval","setInterval","clearInterval","response","get","price","data","bitcoin","usd","generateNewCandle","error","console","ctx","current","getContext","randomOffset","Math","random","floor","newPrice","newCandleY","calculateYPosition","targetCandleY","animateCandle","shiftCanvas","canvasHeight","height","middleY","scale","x","startY","targetY","color","onComplete","currentY","step","draw","clearRect","canvas","fillStyle","fillRect","requestAnimationFrame","imageData","getImageData","width","putImageData","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","border","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nconst Page4 = () => {\n  const canvasRef = useRef(null);\n  const [priceData, setPriceData] = useState(null);\n  const [range, setRange] = useState({ min: 59500, max: 60500 });\n  const candleWidth = 20;\n  let lastCandleX = 100;\n  let lastCandleY = 0;\n\n  useEffect(() => {\n    fetchBitcoinPrice();\n\n    const interval = setInterval(() => {\n      fetchBitcoinPrice();\n    }, 5000); // Запрашиваем цену каждые 5 секунд\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const fetchBitcoinPrice = async () => {\n    try {\n      const response = await axios.get(\n        'https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd'\n      );\n      const price = response.data.bitcoin.usd;\n      setPriceData(price);\n      generateNewCandle(price);\n    } catch (error) {\n      console.error(\"Error fetching Bitcoin price:\", error);\n      generateNewCandle(priceData); // Используем предыдущее значение, если ошибка\n    }\n  };\n\n  const generateNewCandle = (price) => {\n    const ctx = canvasRef.current.getContext('2d');\n    const randomOffset = (Math.random() > 0.5 ? 1 : -1) * Math.floor(Math.random() * 345);\n    const newPrice = price + randomOffset;\n\n    let newCandleY = calculateYPosition(price);\n    let targetCandleY = calculateYPosition(newPrice);\n\n    animateCandle(ctx, lastCandleX, lastCandleY, targetCandleY, price < newPrice ? 'green' : 'red', () => {\n      lastCandleX += candleWidth;\n      lastCandleY = targetCandleY;\n\n      // Смещаем область графика при выходе за границы\n      if (newPrice > range.max || newPrice < range.min) {\n        shiftCanvas(ctx);\n        setRange({ min: range.min + 1000, max: range.max + 1000 });\n      }\n    });\n  };\n\n  const calculateYPosition = (price) => {\n    const canvasHeight = canvasRef.current.height;\n    const middleY = canvasHeight / 2;\n    const scale = 500; // масштаб по 500 вверх и вниз\n    return middleY - (price - priceData) * (canvasHeight / (range.max - range.min));\n  };\n\n  const animateCandle = (ctx, x, startY, targetY, color, onComplete) => {\n    let currentY = startY;\n    const step = (targetY - startY) / 50; // Движение за шаг\n\n    const draw = () => {\n      ctx.clearRect(x, 0, candleWidth, ctx.canvas.height); // Очищаем место для новой свечи\n      ctx.fillStyle = color;\n      ctx.fillRect(x, startY, candleWidth, currentY - startY);\n\n      currentY += step;\n\n      if ((step > 0 && currentY <= targetY) || (step < 0 && currentY >= targetY)) {\n        requestAnimationFrame(draw);\n      } else {\n        onComplete();\n      }\n    };\n\n    requestAnimationFrame(draw);\n  };\n\n  const shiftCanvas = (ctx) => {\n    const canvas = canvasRef.current;\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.putImageData(imageData, -candleWidth, 0);\n    lastCandleX -= candleWidth;\n  };\n\n  return (\n    <div>\n      <h1>Bitcoin Candlestick Chart</h1>\n      <canvas ref={canvasRef} width={1000} height={500} style={{ border: '1px solid black' }}></canvas>\n    </div>\n  );\n};\n\nexport default Page4;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}