{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register the necessary components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Page4 = () => {\n  _s();\n  // Predefined array of 30 values between 30 and 78\n  const predefinedData = Array.from({\n    length: 30\n  }, () => Math.floor(Math.random() * 49) + 30);\n  const [data, setData] = useState(predefinedData);\n  const [chartData, setChartData] = useState(null);\n  const [intervalId, setIntervalId] = useState(null);\n  const startChart = () => {\n    if (intervalId) return; // Prevent multiple intervals\n\n    // Update chart data every second\n    const id = setInterval(() => {\n      setData(prevData => {\n        const newData = [...prevData, predefinedData[prevData.length % predefinedData.length]].slice(-30);\n        updateChartData(newData);\n        return newData;\n      });\n    }, 1000);\n    setIntervalId(id);\n  };\n  const updateChartData = dataArray => {\n    const labels = Array.from({\n      length: dataArray.length\n    }, (_, i) => i + 1);\n    setChartData({\n      labels,\n      datasets: [{\n        label: 'Predefined Data',\n        data: dataArray,\n        borderColor: 'rgba(75,192,192,1)',\n        fill: false,\n        tension: 0.1\n      }]\n    });\n  };\n  const handleClick = () => {\n    setData(predefinedData);\n    updateChartData(predefinedData);\n    startChart();\n  };\n  useEffect(() => {\n    return () => {\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [intervalId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Start Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), chartData && /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Time'\n            },\n            min: 0,\n            max: 30,\n            offset: true // Ensures the rightmost value is centered\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Value'\n            },\n            min: 30,\n            max: 80\n          }\n        },\n        layout: {\n          padding: {\n            right: 100 // Adds space to center the chart\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Page4, \"CJbdu3A5e1UH53x5ynvAlEK/Uc4=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Page4","_s","predefinedData","Array","from","length","Math","floor","random","data","setData","chartData","setChartData","intervalId","setIntervalId","startChart","id","setInterval","prevData","newData","slice","updateChartData","dataArray","labels","_","i","datasets","label","borderColor","fill","tension","handleClick","clearInterval","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","options","scales","x","title","display","text","min","max","offset","y","layout","padding","right","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\n// Register the necessary components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst Page4 = () => {\n  // Predefined array of 30 values between 30 and 78\n  const predefinedData = Array.from({ length: 30 }, () => Math.floor(Math.random() * 49) + 30);\n  \n  const [data, setData] = useState(predefinedData);\n  const [chartData, setChartData] = useState(null);\n  const [intervalId, setIntervalId] = useState(null);\n\n  const startChart = () => {\n    if (intervalId) return; // Prevent multiple intervals\n\n    // Update chart data every second\n    const id = setInterval(() => {\n      setData((prevData) => {\n        const newData = [...prevData, predefinedData[prevData.length % predefinedData.length]].slice(-30);\n        updateChartData(newData);\n        return newData;\n      });\n    }, 1000);\n    setIntervalId(id);\n  };\n\n  const updateChartData = (dataArray) => {\n    const labels = Array.from({ length: dataArray.length }, (_, i) => i + 1);\n    setChartData({\n      labels,\n      datasets: [\n        {\n          label: 'Predefined Data',\n          data: dataArray,\n          borderColor: 'rgba(75,192,192,1)',\n          fill: false,\n          tension: 0.1,\n        },\n      ],\n    });\n  };\n\n  const handleClick = () => {\n    setData(predefinedData);\n    updateChartData(predefinedData);\n    startChart();\n  };\n\n  useEffect(() => {\n    return () => {\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [intervalId]);\n\n  return (\n    <div>\n      <button onClick={handleClick}>Start Chart</button>\n      {chartData && (\n        <Line\n          data={chartData}\n          options={{\n            scales: {\n              x: {\n                title: {\n                  display: true,\n                  text: 'Time',\n                },\n                min: 0,\n                max: 30,\n                offset: true, // Ensures the rightmost value is centered\n              },\n              y: {\n                title: {\n                  display: true,\n                  text: 'Value',\n                },\n                min: 30,\n                max: 80,\n              },\n            },\n            layout: {\n              padding: {\n                right: 100, // Adds space to center the chart\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}