{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const [currentValue, setCurrentValue] = useState(0);\n  const [targetValue, setTargetValue] = useState(0);\n  const [baseValue, setBaseValue] = useState(0);\n  const [candlesticks, setCandlesticks] = useState([]); // Массив для хранения свечей\n  const canvasRef = useRef(null);\n\n  // Функция для получения цены биткоина\n  const fetchBitcoinPrice = async () => {\n    try {\n      const response = await fetch('https://api.coindesk.com/v1/bpi/currentprice/BTC.json');\n      const data = await response.json();\n      const price = data.bpi.USD.rate_float;\n      return Math.round(price);\n    } catch (error) {\n      console.error('Ошибка при получении цены биткоина:', error);\n      return currentValue; // Возвращаем текущее значение при ошибке\n    }\n  };\n  const getRandomPriceChange = () => {\n    return Math.random() < 0.5 ? -(Math.random() * 18 + 5) : Math.random() * 18 + 5;\n  };\n\n  // Функция для обновления целевой цены\n  const updateTargetValue = async () => {\n    const currentPrice = await fetchBitcoinPrice();\n    const priceChange = getRandomPriceChange();\n    setTargetValue(currentPrice + priceChange);\n  };\n  useEffect(() => {\n    const updatePrice = async () => {\n      const initialPrice = await fetchBitcoinPrice();\n      setCurrentValue(initialPrice);\n      setBaseValue(initialPrice);\n      setTargetValue(initialPrice);\n    };\n    updatePrice();\n  }, []);\n  useEffect(() => {\n    const priceDifference = Math.abs(targetValue - currentValue);\n    const duration = 5000; // Время на формирование свечи\n    const stepDuration = Math.max(50, duration / priceDifference);\n    const interval = setInterval(() => {\n      setCurrentValue(prevValue => {\n        const newValue = prevValue < targetValue ? Math.min(prevValue + 0.05, targetValue) : Math.max(prevValue - 0.05, targetValue);\n        if (newValue === targetValue) {\n          clearInterval(interval);\n          const color = targetValue > baseValue ? 'green' : 'red';\n          const newCandlestick = {\n            open: baseValue,\n            close: targetValue,\n            high: Math.max(baseValue, targetValue),\n            low: Math.min(baseValue, targetValue),\n            color\n          };\n          setCandlesticks(prev => [...prev, newCandlestick]);\n          setBaseValue(targetValue); // Обновляем базовое значение для следующей свечи\n          updateTargetValue(); // Запрашиваем новое значение\n        }\n        return newValue;\n      });\n    }, stepDuration);\n    return () => clearInterval(interval);\n  }, [currentValue, targetValue]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const scale = window.devicePixelRatio || 1;\n    canvas.width = 500 * scale;\n    canvas.height = 300 * scale;\n    ctx.scale(scale, scale);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const candleWidth = 30;\n    candlesticks.forEach((candle, index) => {\n      const x = canvas.width - (candlesticks.length - index) * candleWidth;\n      const yTop = canvas.height / 2 - (candle.high - baseValue) * 10;\n      const yBottom = canvas.height / 2 - (candle.low - baseValue) * 10;\n      const candleHeight = yTop - yBottom;\n      ctx.fillStyle = candle.color;\n      ctx.fillRect(x, yBottom, candleWidth, candleHeight);\n    });\n\n    // Рисуем горизонтальную линию\n    ctx.strokeStyle = 'lightblue';\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.moveTo(0, canvas.height / 2);\n    ctx.lineTo(canvas.width, canvas.height / 2);\n    ctx.stroke();\n  }, [candlesticks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        width: 500,\n        height: 300,\n        border: '1px solid black',\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(Page4, \"bnVYUoO2ZOD2Biz9P8+hXAvXaEk=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Page4","_s","currentValue","setCurrentValue","targetValue","setTargetValue","baseValue","setBaseValue","candlesticks","setCandlesticks","canvasRef","fetchBitcoinPrice","response","fetch","data","json","price","bpi","USD","rate_float","Math","round","error","console","getRandomPriceChange","random","updateTargetValue","currentPrice","priceChange","updatePrice","initialPrice","priceDifference","abs","duration","stepDuration","max","interval","setInterval","prevValue","newValue","min","clearInterval","color","newCandlestick","open","close","high","low","prev","canvas","current","ctx","getContext","scale","window","devicePixelRatio","width","height","clearRect","candleWidth","forEach","candle","index","x","length","yTop","yBottom","candleHeight","fillStyle","fillRect","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","style","display","flexDirection","alignItems","children","ref","border","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Page4 = () => {\n  const [currentValue, setCurrentValue] = useState(0);\n  const [targetValue, setTargetValue] = useState(0);\n  const [baseValue, setBaseValue] = useState(0);\n  const [candlesticks, setCandlesticks] = useState([]); // Массив для хранения свечей\n  const canvasRef = useRef(null);\n\n  // Функция для получения цены биткоина\n  const fetchBitcoinPrice = async () => {\n    try {\n      const response = await fetch('https://api.coindesk.com/v1/bpi/currentprice/BTC.json');\n      const data = await response.json();\n      const price = data.bpi.USD.rate_float;\n      return Math.round(price);\n    } catch (error) {\n      console.error('Ошибка при получении цены биткоина:', error);\n      return currentValue; // Возвращаем текущее значение при ошибке\n    }\n  };\n\n  const getRandomPriceChange = () => {\n    return Math.random() < 0.5 ? -(Math.random() * 18 + 5) : Math.random() * 18 + 5;\n  };\n\n  // Функция для обновления целевой цены\n  const updateTargetValue = async () => {\n    const currentPrice = await fetchBitcoinPrice();\n    const priceChange = getRandomPriceChange();\n    setTargetValue(currentPrice + priceChange);\n  };\n\n  useEffect(() => {\n    const updatePrice = async () => {\n      const initialPrice = await fetchBitcoinPrice();\n      setCurrentValue(initialPrice);\n      setBaseValue(initialPrice);\n      setTargetValue(initialPrice);\n    };\n\n    updatePrice();\n  }, []);\n\n  useEffect(() => {\n    const priceDifference = Math.abs(targetValue - currentValue);\n    const duration = 5000; // Время на формирование свечи\n    const stepDuration = Math.max(50, duration / priceDifference);\n\n    const interval = setInterval(() => {\n      setCurrentValue(prevValue => {\n        const newValue = prevValue < targetValue\n          ? Math.min(prevValue + 0.05, targetValue)\n          : Math.max(prevValue - 0.05, targetValue);\n\n        if (newValue === targetValue) {\n          clearInterval(interval);\n          const color = targetValue > baseValue ? 'green' : 'red';\n          const newCandlestick = {\n            open: baseValue,\n            close: targetValue,\n            high: Math.max(baseValue, targetValue),\n            low: Math.min(baseValue, targetValue),\n            color\n          };\n          setCandlesticks(prev => [...prev, newCandlestick]);\n          setBaseValue(targetValue); // Обновляем базовое значение для следующей свечи\n          updateTargetValue(); // Запрашиваем новое значение\n        }\n\n        return newValue;\n      });\n    }, stepDuration);\n\n    return () => clearInterval(interval);\n  }, [currentValue, targetValue]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const scale = window.devicePixelRatio || 1;\n    canvas.width = 500 * scale;\n    canvas.height = 300 * scale;\n    ctx.scale(scale, scale);\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const candleWidth = 30;\n    candlesticks.forEach((candle, index) => {\n      const x = canvas.width - (candlesticks.length - index) * candleWidth;\n      const yTop = canvas.height / 2 - ((candle.high - baseValue) * 10);\n      const yBottom = canvas.height / 2 - ((candle.low - baseValue) * 10);\n      const candleHeight = yTop - yBottom;\n\n      ctx.fillStyle = candle.color;\n      ctx.fillRect(x, yBottom, candleWidth, candleHeight);\n    });\n\n    // Рисуем горизонтальную линию\n    ctx.strokeStyle = 'lightblue';\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.moveTo(0, canvas.height / 2);\n    ctx.lineTo(canvas.width, canvas.height / 2);\n    ctx.stroke();\n  }, [candlesticks]);\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <canvas\n        ref={canvasRef}\n        style={{ width: 500, height: 300, border: '1px solid black', marginBottom: '20px' }}\n      ></canvas>\n    </div>\n  );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}