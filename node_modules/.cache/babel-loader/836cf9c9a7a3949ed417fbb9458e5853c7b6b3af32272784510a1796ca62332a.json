{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const [rectangles, setRectangles] = useState([]);\n  const [currentValue, setCurrentValue] = useState(0);\n  const [animationState, setAnimationState] = useState({\n    position: 0,\n    width: 0\n  });\n  useEffect(() => {\n    // Function to generate a random value between -50 and 50\n    const generateRandomValue = () => Math.floor(Math.random() * 101) - 50;\n\n    // Function to update the animation state every 100ms\n    const animateRectangle = (targetValue, startPosition) => {\n      const step = targetValue / 50; // 5 seconds, 100ms per step\n      let position = startPosition;\n      let currentStep = 0;\n      const interval = setInterval(() => {\n        position += step;\n        currentStep += 1;\n        setAnimationState({\n          position,\n          width: currentStep * 2\n        });\n        if (currentStep >= 50) {\n          clearInterval(interval);\n          // Update rectangles and set the new value for the next rectangle\n          setRectangles(prev => [...prev, {\n            value: targetValue,\n            start: startPosition\n          }]);\n          setCurrentValue(targetValue);\n        }\n      }, 100);\n    };\n\n    // Initial animation call\n    animateRectangle(generateRandomValue(), currentValue);\n  }, [currentValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100vh',\n      position: 'relative',\n      overflow: 'hidden'\n    },\n    children: [rectangles.map((rect, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: `${50 - (index + 1) * 10}%`,\n        top: `${50 - rect.start / 2}%`,\n        width: '30px',\n        height: `${Math.abs(rect.value)}px`,\n        backgroundColor: rect.value > 0 ? 'green' : 'red',\n        transform: `translateY(${rect.value < 0 ? 100 : 0}%)`,\n        transition: 'top 5s, height 5s'\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        width: '30px',\n        height: `${animationState.width}px`,\n        backgroundColor: currentValue > 0 ? 'green' : 'red',\n        transform: `translateY(${currentValue < 0 ? 100 : 0}%)`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Page4, \"/wFz3EVYOXpmTp0kG2CHpwjV3Sc=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Page4","_s","rectangles","setRectangles","currentValue","setCurrentValue","animationState","setAnimationState","position","width","generateRandomValue","Math","floor","random","animateRectangle","targetValue","startPosition","step","currentStep","interval","setInterval","clearInterval","prev","value","start","style","height","overflow","children","map","rect","index","left","top","abs","backgroundColor","transform","transition","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Page4 = () => {\n  const [rectangles, setRectangles] = useState([]);\n  const [currentValue, setCurrentValue] = useState(0);\n  const [animationState, setAnimationState] = useState({ position: 0, width: 0 });\n\n  useEffect(() => {\n    // Function to generate a random value between -50 and 50\n    const generateRandomValue = () => Math.floor(Math.random() * 101) - 50;\n\n    // Function to update the animation state every 100ms\n    const animateRectangle = (targetValue, startPosition) => {\n      const step = targetValue / 50; // 5 seconds, 100ms per step\n      let position = startPosition;\n      let currentStep = 0;\n\n      const interval = setInterval(() => {\n        position += step;\n        currentStep += 1;\n\n        setAnimationState({ position, width: currentStep * 2 });\n\n        if (currentStep >= 50) {\n          clearInterval(interval);\n          // Update rectangles and set the new value for the next rectangle\n          setRectangles((prev) => [...prev, { value: targetValue, start: startPosition }]);\n          setCurrentValue(targetValue);\n        }\n      }, 100);\n    };\n\n    // Initial animation call\n    animateRectangle(generateRandomValue(), currentValue);\n  }, [currentValue]);\n\n  return (\n    <div style={{ width: '100%', height: '100vh', position: 'relative', overflow: 'hidden' }}>\n      {rectangles.map((rect, index) => (\n        <div\n          key={index}\n          style={{\n            position: 'absolute',\n            left: `${50 - (index + 1) * 10}%`,\n            top: `${50 - (rect.start / 2)}%`,\n            width: '30px',\n            height: `${Math.abs(rect.value)}px`,\n            backgroundColor: rect.value > 0 ? 'green' : 'red',\n            transform: `translateY(${rect.value < 0 ? 100 : 0}%)`,\n            transition: 'top 5s, height 5s',\n          }}\n        />\n      ))}\n      <div\n        style={{\n          position: 'absolute',\n          left: '50%',\n          top: '50%',\n          width: '30px',\n          height: `${animationState.width}px`,\n          backgroundColor: currentValue > 0 ? 'green' : 'red',\n          transform: `translateY(${currentValue < 0 ? 100 : 0}%)`,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}