{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const [centerValue, setCenterValue] = useState(null);\n  const [previousValue, setPreviousValue] = useState(null);\n  const [currentValue, setCurrentValue] = useState(null);\n  const [currentValueShow, setCurrentValueShow] = useState(1);\n  const [rectangles, setRectangles] = useState([]);\n  const [lastY, setLastY] = useState(null);\n  const [lineY, setLineY] = useState(null);\n  const [predictionType, setPredictionType] = useState(null); // 'buy' or 'sell'\n  const [countdown, setCountdown] = useState(0);\n  const [result, setResult] = useState(null);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const canvasRef = useRef(null);\n  const lineCanvasRef = useRef(null);\n  const animationTimeoutRef = useRef(null);\n  const fetchBitcoinPrice = async () => {\n    try {\n      const response = await fetch('https://api.coindesk.com/v1/bpi/currentprice/BTC.json');\n      const data = await response.json();\n      const price = parseFloat(data.bpi.USD.rate.replace(',', ''));\n      return price;\n    } catch (error) {\n      console.error('Ошибка при получении цены биткоина:', error);\n      return 56000;\n    }\n  };\n  const generateValue = () => {\n    if (centerValue !== null) {\n      const randomRangeSelector = Math.random();\n      let newValue;\n      if (randomRangeSelector <= 0.6) {\n        const min = centerValue - 222;\n        const max = centerValue + 222;\n        newValue = Math.floor(Math.random() * (max - min + 1)) + min;\n      } else if (randomRangeSelector <= 0.8) {\n        const min = centerValue - 333;\n        const max = centerValue + 333;\n        newValue = Math.floor(Math.random() * (max - min + 1)) + min;\n      } else {\n        const min = centerValue - 1111;\n        const max = centerValue + 1111;\n        newValue = Math.floor(Math.random() * (max - min + 1)) + min;\n      }\n      setCurrentValue(newValue);\n    }\n  };\n  const generateRandomMultiplier = () => {\n    const rangeSelector = Math.random();\n    if (rangeSelector <= 0.4) {\n      return Math.random() * (0.1 - 0.01) + 0.01;\n    } else if (rangeSelector <= 0.7) {\n      return Math.random() * (0.5 - 0.11) + 0.11;\n    } else if (rangeSelector <= 0.8) {\n      return Math.random() * (0.9 - 0.51) + 0.51;\n    } else {\n      return Math.random() * (1 - 0.91) + 0.91;\n    }\n  };\n  useEffect(() => {\n    const initialize = async () => {\n      const price = await fetchBitcoinPrice();\n      setCenterValue(price);\n      setPreviousValue(price);\n      setCurrentValue(price);\n      setCurrentValueShow(price);\n    };\n    initialize();\n  }, []);\n  useEffect(() => {\n    if (centerValue !== null) {\n      generateValue();\n    }\n  }, [centerValue]);\n  useEffect(() => {\n    if (countdown > 0) {\n      const timer = setTimeout(() => setCountdown(countdown - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (countdown === 0 && predictionType) {\n      setIsButtonDisabled(false);\n      if (currentValue > lineY && predictionType === 'buy') {\n        setResult('Выиграл');\n      } else if (currentValue < lineY && predictionType === 'sell') {\n        setResult('Выиграл');\n      } else {\n        setResult('Проиграл');\n      }\n    }\n  }, [countdown, currentValue]);\n  useEffect(() => {\n    const startDrawing = () => {\n      const drawRectangle = () => {\n        if (currentValue !== previousValue && previousValue !== null) {\n          const canvas = canvasRef.current;\n          const lineCanvas = lineCanvasRef.current;\n          const ctx = canvas.getContext('2d');\n          const lineCtx = lineCanvas.getContext('2d');\n          const scale = window.devicePixelRatio || 1;\n          canvas.width = 500 * scale;\n          canvas.height = 300 * scale;\n          lineCanvas.width = 500 * scale;\n          lineCanvas.height = 300 * scale;\n          ctx.scale(scale, scale);\n          lineCtx.scale(scale, scale);\n          const difference = currentValue - previousValue;\n          let step = difference > 0 ? 1 : -1;\n          let progress = 0;\n          const startY = lastY !== null ? lastY : 150 - (previousValue - centerValue) / 1111 * 120;\n          const targetY = 150 - (currentValue - centerValue) / 1111 * 120;\n          const rectWidth = 20;\n          let animationDirection = 1;\n          let hasReachedTarget = false; // Флаг для отслеживания достижения targetY\n          const startTime = Date.now();\n          const interval = setInterval(() => {\n            const randomMultiplier = generateRandomMultiplier();\n            progress += step * animationDirection * randomMultiplier;\n            ctx.clearRect(0, 0, canvas.width / scale, canvas.height / scale);\n            lineCtx.clearRect(0, 0, lineCanvas.width / scale, lineCanvas.height / scale);\n            const updatedRectangles = rectangles.map(rect => ({\n              ...rect,\n              x: rect.x - rectWidth\n            }));\n            updatedRectangles.forEach(rect => {\n              ctx.fillStyle = rect.color;\n              ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n            });\n            const height = Math.abs(progress);\n            let rectY;\n            if (difference > 0) {\n              rectY = startY - height;\n            } else {\n              rectY = startY;\n            }\n            ctx.fillStyle = difference > 0 ? 'green' : 'red';\n            ctx.fillRect(canvas.width / scale / 2 - 15, rectY, rectWidth, height);\n\n            // Настройка перфорированной линии\n            if (lineY !== null) {\n              lineCtx.strokeStyle = currentValue > lineY && predictionType === 'buy' || currentValue < lineY && predictionType === 'sell' ? 'green' : 'red';\n              lineCtx.lineWidth = 0.4;\n              lineCtx.setLineDash([5, 5]);\n              lineCtx.beginPath();\n              lineCtx.moveTo(0, lineY);\n              lineCtx.lineTo(canvas.width / scale, lineY);\n              lineCtx.stroke();\n\n              // Текст около линии\n              lineCtx.font = '10px Arial';\n              lineCtx.fillStyle = lineCtx.strokeStyle;\n              lineCtx.fillText(lineY.toFixed(2), canvas.width / scale - 40, lineY - 5);\n            }\n\n            // Переключение направления анимации\n            if (!hasReachedTarget && Math.abs(progress) >= Math.abs(targetY - startY)) {\n              animationDirection *= -1;\n              hasReachedTarget = true;\n            } else if (hasReachedTarget && Math.abs(progress) <= 2) {\n              // Задать предел для почти startY\n              animationDirection *= -1;\n              hasReachedTarget = false;\n            }\n            if (Date.now() - startTime >= 5000) {\n              clearInterval(interval);\n              updatedRectangles.push({\n                x: canvas.width / scale / 2 - 15,\n                y: rectY,\n                width: rectWidth,\n                height: height,\n                color: difference > 0 ? 'green' : 'red'\n              });\n              setRectangles(updatedRectangles);\n              setLastY(difference > 0 ? rectY : rectY + height);\n              setPreviousValue(currentValue);\n              setCurrentValueShow(currentValueShow + progress);\n\n              // Начинаем отсчет 30 секунд после появления нового прямоугольника\n              if (predictionType) {\n                setCountdown(30);\n                setLineY(difference > 0 ? rectY : rectY + height);\n              }\n              generateValue();\n            }\n          }, 40);\n          animationTimeoutRef.current = interval;\n          return () => clearInterval(interval);\n        }\n      };\n      drawRectangle();\n    };\n    if (currentValue !== null && previousValue !== null) {\n      startDrawing();\n    }\n    return () => clearInterval(animationTimeoutRef.current);\n  }, [currentValue, previousValue, centerValue, lineY]);\n  const handleBuy = () => {\n    if (!isButtonDisabled) {\n      setPredictionType('buy');\n      setIsButtonDisabled(true);\n      setResult(null);\n    }\n  };\n  const handleSell = () => {\n    if (!isButtonDisabled) {\n      setPredictionType('sell');\n      setIsButtonDisabled(true);\n      setResult(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: lineCanvasRef,\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '10px',\n        left: '10px',\n        fontSize: '14px'\n      },\n      children: [\"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0430\\u044F \\u0446\\u0435\\u043D\\u0430: \", currentValueShow.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '40px',\n        left: '10px',\n        fontSize: '14px'\n      },\n      children: result && `Результат: ${result}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBuy,\n      disabled: isButtonDisabled,\n      style: {\n        position: 'absolute',\n        top: '100px',\n        left: '10px'\n      },\n      children: \"Buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSell,\n      disabled: isButtonDisabled,\n      style: {\n        position: 'absolute',\n        top: '100px',\n        left: '60px'\n      },\n      children: \"Sell\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 9\n  }, this);\n};\n_s(Page4, \"/BPpBTn24hpC/NyjMpfgdFRoLng=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Page4","_s","centerValue","setCenterValue","previousValue","setPreviousValue","currentValue","setCurrentValue","currentValueShow","setCurrentValueShow","rectangles","setRectangles","lastY","setLastY","lineY","setLineY","predictionType","setPredictionType","countdown","setCountdown","result","setResult","isButtonDisabled","setIsButtonDisabled","canvasRef","lineCanvasRef","animationTimeoutRef","fetchBitcoinPrice","response","fetch","data","json","price","parseFloat","bpi","USD","rate","replace","error","console","generateValue","randomRangeSelector","Math","random","newValue","min","max","floor","generateRandomMultiplier","rangeSelector","initialize","timer","setTimeout","clearTimeout","startDrawing","drawRectangle","canvas","current","lineCanvas","ctx","getContext","lineCtx","scale","window","devicePixelRatio","width","height","difference","step","progress","startY","targetY","rectWidth","animationDirection","hasReachedTarget","startTime","Date","now","interval","setInterval","randomMultiplier","clearRect","updatedRectangles","map","rect","x","forEach","fillStyle","color","fillRect","y","abs","rectY","strokeStyle","lineWidth","setLineDash","beginPath","moveTo","lineTo","stroke","font","fillText","toFixed","clearInterval","push","handleBuy","handleSell","children","ref","style","position","top","left","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Page4 = () => {\n    const [centerValue, setCenterValue] = useState(null);\n    const [previousValue, setPreviousValue] = useState(null);\n    const [currentValue, setCurrentValue] = useState(null);\n    const [currentValueShow, setCurrentValueShow] = useState(1);\n    const [rectangles, setRectangles] = useState([]);\n    const [lastY, setLastY] = useState(null);\n    const [lineY, setLineY] = useState(null);\n    const [predictionType, setPredictionType] = useState(null); // 'buy' or 'sell'\n    const [countdown, setCountdown] = useState(0);\n    const [result, setResult] = useState(null);\n    const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n    \n    const canvasRef = useRef(null);\n    const lineCanvasRef = useRef(null);\n    const animationTimeoutRef = useRef(null);\n\n    const fetchBitcoinPrice = async () => {\n        try {\n            const response = await fetch('https://api.coindesk.com/v1/bpi/currentprice/BTC.json');\n            const data = await response.json();\n            const price = parseFloat(data.bpi.USD.rate.replace(',', ''));\n            return price;\n        } catch (error) {\n            console.error('Ошибка при получении цены биткоина:', error);\n            return 56000;\n        }\n    };\n\n    const generateValue = () => {\n        if (centerValue !== null) {\n            const randomRangeSelector = Math.random();\n            let newValue;\n\n            if (randomRangeSelector <= 0.6) {\n                const min = centerValue - 222;\n                const max = centerValue + 222;\n                newValue = Math.floor(Math.random() * (max - min + 1)) + min;\n            } else if (randomRangeSelector <= 0.8) {\n                const min = centerValue - 333;\n                const max = centerValue + 333;\n                newValue = Math.floor(Math.random() * (max - min + 1)) + min;\n            } else {\n                const min = centerValue - 1111;\n                const max = centerValue + 1111;\n                newValue = Math.floor(Math.random() * (max - min + 1)) + min;\n            }\n\n            setCurrentValue(newValue);\n        }\n    };\n\n    const generateRandomMultiplier = () => {\n        const rangeSelector = Math.random();\n\n        if (rangeSelector <= 0.4) {\n            return Math.random() * (0.1 - 0.01) + 0.01;\n        } else if (rangeSelector <= 0.7) {\n            return Math.random() * (0.5 - 0.11) + 0.11;\n        } else if (rangeSelector <= 0.8) {\n            return Math.random() * (0.9 - 0.51) + 0.51;\n        } else {\n            return Math.random() * (1 - 0.91) + 0.91;\n        }\n    };\n\n    useEffect(() => {\n        const initialize = async () => {\n            const price = await fetchBitcoinPrice();\n            setCenterValue(price);\n            setPreviousValue(price);\n            setCurrentValue(price);\n            setCurrentValueShow(price)\n        };\n\n        initialize();\n    }, []);\n\n    useEffect(() => {\n        if (centerValue !== null) {\n            generateValue();\n        }\n    }, [centerValue]);\n\n    useEffect(() => {\n        if (countdown > 0) {\n            const timer = setTimeout(() => setCountdown(countdown - 1), 1000);\n            return () => clearTimeout(timer);\n        } else if (countdown === 0 && predictionType) {\n            setIsButtonDisabled(false);\n\n            if (currentValue > lineY && predictionType === 'buy') {\n                setResult('Выиграл');\n            } else if (currentValue < lineY && predictionType === 'sell') {\n                setResult('Выиграл');\n            } else {\n                setResult('Проиграл');\n            }\n        }\n    }, [countdown, currentValue]);\n\n    useEffect(() => {\n        const startDrawing = () => {\n            const drawRectangle = () => {\n                if (currentValue !== previousValue && previousValue !== null) {\n                    const canvas = canvasRef.current;\n                    const lineCanvas = lineCanvasRef.current;\n                    const ctx = canvas.getContext('2d');\n                    const lineCtx = lineCanvas.getContext('2d');\n\n                    const scale = window.devicePixelRatio || 1;\n                    canvas.width = 500 * scale;\n                    canvas.height = 300 * scale;\n                    lineCanvas.width = 500 * scale;\n                    lineCanvas.height = 300 * scale;\n                    ctx.scale(scale, scale);\n                    lineCtx.scale(scale, scale);\n\n                    const difference = currentValue - previousValue;\n                    let step = difference > 0 ? 1 : -1;\n                    let progress = 0;\n\n                    const startY = lastY !== null ? lastY : 150 - ((previousValue - centerValue) / 1111) * 120;\n                    const targetY = 150 - ((currentValue - centerValue) / 1111) * 120;\n                    const rectWidth = 20;\n\n                    let animationDirection = 1;\n                    let hasReachedTarget = false; // Флаг для отслеживания достижения targetY\n                    const startTime = Date.now();\n\n                    const interval = setInterval(() => {\n                        const randomMultiplier = generateRandomMultiplier();\n                        progress += step * animationDirection * randomMultiplier;\n\n                        ctx.clearRect(0, 0, canvas.width / scale, canvas.height / scale);\n                        lineCtx.clearRect(0, 0, lineCanvas.width / scale, lineCanvas.height / scale);\n\n                        const updatedRectangles = rectangles.map((rect) => ({\n                            ...rect,\n                            x: rect.x - rectWidth,\n                        }));\n\n                        updatedRectangles.forEach((rect) => {\n                            ctx.fillStyle = rect.color;\n                            ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n                        });\n\n                        const height = Math.abs(progress);\n                        let rectY;\n\n                        if (difference > 0) {\n                            rectY = startY - height;\n                        } else {\n                            rectY = startY;\n                        }\n\n                        ctx.fillStyle = difference > 0 ? 'green' : 'red';\n                        ctx.fillRect(canvas.width / scale / 2 - 15, rectY, rectWidth, height);\n\n                        // Настройка перфорированной линии\n                        if (lineY !== null) {\n                            lineCtx.strokeStyle = (currentValue > lineY && predictionType === 'buy') || (currentValue < lineY && predictionType === 'sell') ? 'green' : 'red';\n                            lineCtx.lineWidth = 0.4;\n                            lineCtx.setLineDash([5, 5]);\n                            lineCtx.beginPath();\n                            lineCtx.moveTo(0, lineY);\n                            lineCtx.lineTo(canvas.width / scale, lineY);\n                            lineCtx.stroke();\n\n                            // Текст около линии\n                            lineCtx.font = '10px Arial';\n                            lineCtx.fillStyle = lineCtx.strokeStyle;\n                            lineCtx.fillText(lineY.toFixed(2), canvas.width / scale - 40, lineY - 5);\n                        }\n\n                        // Переключение направления анимации\n                        if (!hasReachedTarget && Math.abs(progress) >= Math.abs(targetY - startY)) {\n                            animationDirection *= -1;\n                            hasReachedTarget = true;\n                        } else if (hasReachedTarget && Math.abs(progress) <= 2) { // Задать предел для почти startY\n                            animationDirection *= -1;\n                            hasReachedTarget = false;\n                        }\n\n                        if (Date.now() - startTime >= 5000) {\n                            clearInterval(interval);\n\n                            updatedRectangles.push({\n                                x: canvas.width / scale / 2 - 15,\n                                y: rectY,\n                                width: rectWidth,\n                                height: height,\n                                color: difference > 0 ? 'green' : 'red',\n                            });\n\n                            setRectangles(updatedRectangles);\n                            setLastY(difference > 0 ? rectY : rectY + height);\n                            setPreviousValue(currentValue);\n                            setCurrentValueShow(currentValueShow + progress);\n\n                            // Начинаем отсчет 30 секунд после появления нового прямоугольника\n                            if (predictionType) {\n                                setCountdown(30);\n                                setLineY(difference > 0 ? rectY : rectY + height);\n                            }\n\n                            generateValue();\n                        }\n                    }, 40);\n\n                    animationTimeoutRef.current = interval;\n\n                    return () => clearInterval(interval);\n                }\n            };\n\n            drawRectangle();\n        };\n\n        if (currentValue !== null && previousValue !== null) {\n            startDrawing();\n        }\n\n        return () => clearInterval(animationTimeoutRef.current);\n    }, [currentValue, previousValue, centerValue, lineY]);\n\n    const handleBuy = () => {\n        if (!isButtonDisabled) {\n            setPredictionType('buy');\n            setIsButtonDisabled(true);\n            setResult(null);\n        }\n    };\n\n    const handleSell = () => {\n        if (!isButtonDisabled) {\n            setPredictionType('sell');\n            setIsButtonDisabled(true);\n            setResult(null);\n        }\n    };\n\n    return (\n        <div>\n            <canvas ref={canvasRef} style={{ position: 'absolute', top: 0, left: 0 }} />\n            <canvas ref={lineCanvasRef} style={{ position: 'absolute', top: 0, left: 0 }} />\n            <div style={{ position: 'absolute', top: '10px', left: '10px', fontSize: '14px' }}>\n                Текущая цена: {currentValueShow.toFixed(2)}\n            </div>\n            <div style={{ position: 'absolute', top: '40px', left: '10px', fontSize: '14px' }}>\n                {result && `Результат: ${result}`}\n            </div>\n            <button onClick={handleBuy} disabled={isButtonDisabled} style={{ position: 'absolute', top: '100px', left: '10px' }}>\n                Buy\n            </button>\n            <button onClick={handleSell} disabled={isButtonDisabled} style={{ position: 'absolute', top: '100px', left: '60px' }}>\n                Sell\n            </button>\n        </div>\n    );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}