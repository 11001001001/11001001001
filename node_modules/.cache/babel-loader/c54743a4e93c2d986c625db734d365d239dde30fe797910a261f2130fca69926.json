{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/LevelPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LevelPage = () => {\n  _s();\n  const [headerExpand, setHeaderExpand] = useState(false);\n  const [elementsVisible, setElementsVisible] = useState(false); // Состояние для видимости элементов\n  const [level, setLevel] = useState(1);\n  const [progress, setProgress] = useState(0); // Прогресс в процентах\n\n  useEffect(() => {\n    // Сначала запускаем анимацию опускания header\n    setTimeout(() => {\n      setHeaderExpand(true);\n    }, 100);\n\n    // После завершения анимации высоты (через 0.75s) показываем остальные элементы\n    setTimeout(() => {\n      setElementsVisible(true);\n    }, 850); // Длительность transition на высоту + небольшая задержка\n  }, []);\n\n  // Обработчик нажатия на кнопку для увеличения прогресса\n  const handleIncreaseProgress = () => {\n    if (progress >= 100) {\n      alert('Level Up!');\n      setLevel(prev => prev + 1);\n      setProgress(0);\n    } else {\n      setProgress(prev => prev + 20);\n    }\n  };\n\n  // Функция для смены цвета прогресса в зависимости от уровня\n  const getProgressColor = () => {\n    const colors = ['#4caf50', '#2196f3', '#ff9800', '#9c27b0', '#e91e63']; // Зеленый, Синий, Оранжевый, Фиолетовый, Розовый\n    return colors[(level - 1) % colors.length];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      height: '100vh',\n      textAlign: 'center',\n      color: 'inherit',\n      paddingBottom: '80px',\n      fontFamily: \"'Chakra Petch', sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: headerExpand ? 'calc(65vh + 120px)' : '120px',\n        boxShadow: '0 1px 50px rgba(93, 95, 98, 0.6)',\n        backgroundColor: 'rgba(168, 8%, 91%, 0.76)',\n        borderBottomLeftRadius: '50% 20%',\n        borderBottomRightRadius: '50% 20%',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        overflow: 'hidden',\n        transition: 'height 0.75s ease-in-out',\n        flexDirection: 'column' // Размещаем элементы вертикально\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          width: '200%',\n          height: '200%',\n          background: \"url('https://www.transparenttextures.com/patterns/stardust.png') repeat\",\n          animation: 'level-moveBackground 20s linear infinite'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontFamily: \"'Audiowide', sans-serif\",\n          color: '#fff',\n          fontSize: '24px',\n          zIndex: '2',\n          opacity: elementsVisible ? 1 : 0,\n          // Плавное появление\n          transition: 'opacity 0.75s ease-in-out'\n        },\n        children: [level, \" LEVEL\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative',\n          width: '56%',\n          height: '15px',\n          margin: '20px auto',\n          backgroundColor: 'rgba(221, 221, 221, 0.1)',\n          borderRadius: '10px',\n          overflow: 'hidden',\n          zIndex: '2',\n          opacity: elementsVisible ? 1 : 0,\n          // Плавное появление\n          transition: 'opacity 0.75s ease-in-out'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '100%',\n            width: `${progress}%`,\n            backgroundColor: getProgressColor(),\n            transition: 'width 0.5s ease'\n          },\n          children: [...Array(5)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              height: '100%',\n              width: '2px',\n              backgroundColor: 'rgba(221, 221, 221, 0.)',\n              left: `${(i + 1) * 20}%`,\n              top: 0\n            }\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleIncreaseProgress,\n        style: {\n          marginTop: '10px',\n          backgroundColor: getProgressColor(),\n          color: '#fff',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer',\n          fontSize: '14px',\n          zIndex: '2',\n          padding: '10px 20px',\n          opacity: elementsVisible ? 1 : 0,\n          // Плавное появление\n          transition: 'opacity 0.75s ease-in-out'\n        },\n        children: \"Increase Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), ['Left Text 1', 'Left Text 2', 'Left Text 3'].map((leftText, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\",\n          backgroundColor: 'gray',\n          borderRadius: '20px',\n          height: '50px',\n          width: '80%',\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          // Выравнивание по вертикали по центру\n          padding: '0 20px',\n          // Уменьшили padding, чтобы сохранить высоту\n          opacity: elementsVisible ? 1 : 0,\n          // Плавное появление\n          transition: `opacity 0.75s ease-in-out ${0.1 * i}s` // Задержка появления для каждого блока\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: leftText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: `Right Text ${i + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        @keyframes level-moveBackground {\n          0% { background-position: 0 0; }\n          100% { background-position: -1000px -1000px; }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(LevelPage, \"6DWOoirZW8s/BSH9w41F+6WdJh0=\");\n_c = LevelPage;\nexport default LevelPage;\nvar _c;\n$RefreshReg$(_c, \"LevelPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","LevelPage","_s","headerExpand","setHeaderExpand","elementsVisible","setElementsVisible","level","setLevel","progress","setProgress","setTimeout","handleIncreaseProgress","alert","prev","getProgressColor","colors","length","style","display","flexDirection","justifyContent","height","textAlign","color","paddingBottom","fontFamily","children","width","boxShadow","backgroundColor","borderBottomLeftRadius","borderBottomRightRadius","position","top","left","alignItems","overflow","transition","background","animation","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","zIndex","opacity","margin","borderRadius","Array","map","_","i","onClick","marginTop","border","cursor","padding","leftText","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/LevelPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst LevelPage = () => {\n  const [headerExpand, setHeaderExpand] = useState(false);\n  const [elementsVisible, setElementsVisible] = useState(false); // Состояние для видимости элементов\n  const [level, setLevel] = useState(1);\n  const [progress, setProgress] = useState(0); // Прогресс в процентах\n\n  useEffect(() => {\n    // Сначала запускаем анимацию опускания header\n    setTimeout(() => {\n      setHeaderExpand(true);\n    }, 100);\n\n    // После завершения анимации высоты (через 0.75s) показываем остальные элементы\n    setTimeout(() => {\n      setElementsVisible(true);\n    }, 850); // Длительность transition на высоту + небольшая задержка\n  }, []);\n\n  // Обработчик нажатия на кнопку для увеличения прогресса\n  const handleIncreaseProgress = () => {\n    if (progress >= 100) {\n      alert('Level Up!');\n      setLevel(prev => prev + 1);\n      setProgress(0);\n    } else {\n      setProgress(prev => prev + 20);\n    }\n  };\n\n  // Функция для смены цвета прогресса в зависимости от уровня\n  const getProgressColor = () => {\n    const colors = ['#4caf50', '#2196f3', '#ff9800', '#9c27b0', '#e91e63']; // Зеленый, Синий, Оранжевый, Фиолетовый, Розовый\n    return colors[(level - 1) % colors.length];\n  };\n\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      height: '100vh',\n      textAlign: 'center',\n      color: 'inherit',\n      paddingBottom: '80px',\n      fontFamily: \"'Chakra Petch', sans-serif\"\n    }}>\n      {/* Верхняя часть */}\n      <div style={{\n        width: '100%',\n        height: headerExpand ? 'calc(65vh + 120px)' : '120px',\n        boxShadow: '0 1px 50px rgba(93, 95, 98, 0.6)',\n        backgroundColor: 'rgba(168, 8%, 91%, 0.76)',\n        borderBottomLeftRadius: '50% 20%',\n        borderBottomRightRadius: '50% 20%',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        overflow: 'hidden',\n        transition: 'height 0.75s ease-in-out',\n        flexDirection: 'column' // Размещаем элементы вертикально\n      }}>\n        <div style={{\n          position: 'absolute',\n          width: '200%',\n          height: '200%',\n          background: \"url('https://www.transparenttextures.com/patterns/stardust.png') repeat\",\n          animation: 'level-moveBackground 20s linear infinite'\n        }}></div>\n\n        {/* Текущий уровень */}\n        <h1 style={{\n          fontFamily: \"'Audiowide', sans-serif\",\n          color: '#fff',\n          fontSize: '24px',\n          zIndex: '2',\n          opacity: elementsVisible ? 1 : 0, // Плавное появление\n          transition: 'opacity 0.75s ease-in-out'\n        }}>\n          {level} LEVEL\n        </h1>\n\n        {/* Полоска прогресса */}\n        <div style={{\n          position: 'relative',\n          width: '56%',\n          height: '15px',\n          margin: '20px auto',\n          backgroundColor: 'rgba(221, 221, 221, 0.1)',\n          borderRadius: '10px',\n          overflow: 'hidden',\n          zIndex: '2',\n          opacity: elementsVisible ? 1 : 0, // Плавное появление\n          transition: 'opacity 0.75s ease-in-out'\n        }}>\n          <div style={{\n            height: '100%',\n            width: `${progress}%`,\n            backgroundColor: getProgressColor(),\n            transition: 'width 0.5s ease',\n          }}>\n            {[...Array(5)].map((_, i) => (\n              <div key={i} style={{\n                position: 'absolute',\n                height: '100%',\n                width: '2px',\n                backgroundColor: 'rgba(221, 221, 221, 0.)',\n                left: `${(i + 1) * 20}%`,\n                top: 0\n              }} />\n            ))}\n          </div>\n        </div>\n\n        {/* Кнопка для увеличения прогресса */}\n        <button onClick={handleIncreaseProgress} style={{\n          marginTop: '10px',\n          backgroundColor: getProgressColor(),\n          color: '#fff',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer',\n          fontSize: '14px',\n          zIndex: '2',\n          padding: '10px 20px',\n          opacity: elementsVisible ? 1 : 0, // Плавное появление\n          transition: 'opacity 0.75s ease-in-out'\n        }}>\n          Increase Progress\n        </button>\n\n        {/* Блоки с текстами */}\n        {['Left Text 1', 'Left Text 2', 'Left Text 3'].map((leftText, i) => (\n          <div key={i} style={{\n            marginTop: \"20px\",\n            backgroundColor: 'gray',\n            borderRadius: '20px',\n            height: '50px',\n            width: '80%',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center', // Выравнивание по вертикали по центру\n            padding: '0 20px', // Уменьшили padding, чтобы сохранить высоту\n            opacity: elementsVisible ? 1 : 0, // Плавное появление\n            transition: `opacity 0.75s ease-in-out ${0.1 * i}s` // Задержка появления для каждого блока\n          }}>\n            <span>{leftText}</span>\n            <span>{`Right Text ${i + 1}`}</span>\n          </div>\n        ))}\n      </div>\n\n      {/* Добавление анимации через тег style */}\n      <style>{`\n        @keyframes level-moveBackground {\n          0% { background-position: 0 0; }\n          100% { background-position: -1000px -1000px; }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default LevelPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}