{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Page3.css';\nimport ConfettiCanvas from './ConfettiCanvas';\nimport LoadingScreen from './LoadingScreen';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Page3() {\n  _s();\n  const [value, setValue] = useState(0.00);\n  const [balance, setBalance] = useState(() => {\n    const savedBalance = localStorage.getItem('balance');\n    return savedBalance ? parseFloat(savedBalance) : 0.00;\n  });\n  const [bet, setBet] = useState('');\n  const [tickets, setTickets] = useState(9);\n  const [message, setMessage] = useState('Введите ставку');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [result, setResult] = useState(null);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [animateInput, setAnimateInput] = useState(false);\n  const [animateValue, setAnimateValue] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [timeLeft, setTimeLeft] = useState('');\n  const intervalRef = useRef(null);\n  const timeoutRef = useRef(null);\n  const navigate = useNavigate(); // Хук для навигации\n\n  const triggerHapticFeedback = () => {\n    if (window.Telegram.WebApp) {\n      window.Telegram.WebApp.HapticFeedback.selectionChanged();\n    } else if (navigator.vibrate) {\n      navigator.vibrate(50); // Для Android устройств\n    }\n  };\n  const triggerHapticFeedbackError = () => {\n    if (window.Telegram.WebApp) {\n      window.Telegram.WebApp.HapticFeedback.notificationOccurred(\"error\");\n    } else if (navigator.vibrate) {\n      navigator.vibrate(50); // Для Android устройств\n    }\n  };\n  const triggerHapticFeedbackSuccess = () => {\n    if (window.Telegram.WebApp) {\n      window.Telegram.WebApp.HapticFeedback.notificationOccurred(\"success\");\n    } else if (navigator.vibrate) {\n      navigator.vibrate(50); // Для Android устройств\n    }\n  };\n  useEffect(() => {\n    const {\n      Telegram\n    } = window;\n    if (Telegram.WebApp) {\n      Telegram.WebApp.BackButton.show();\n      Telegram.WebApp.BackButton.onClick(() => {\n        navigate('/page1'); // Переход на Page1 при нажатии на кнопку назад\n      });\n    }\n    return () => {\n      if (Telegram.WebApp) {\n        Telegram.WebApp.BackButton.offClick();\n        Telegram.WebApp.BackButton.hide();\n      }\n    };\n  }, [navigate]);\n  useEffect(() => {\n    const betAmount = parseFloat(bet);\n    if (bet === '') {\n      setMessage('Select your bet');\n    } else if (isNaN(betAmount) || betAmount <= 0 || betAmount > balance) {\n      setMessage('Not enough tokens');\n    } else if (!tickets) {\n      setMessage('Need more tickets');\n    } else {\n      setMessage('Hold on');\n    }\n  }, [bet, balance, tickets]);\n  useEffect(() => {\n    setAnimateInput(true);\n    setAnimateValue(true);\n  }, []);\n  useEffect(() => {\n    const checkTicketsReset = () => {\n      const now = new Date();\n      const lastReset = localStorage.getItem('lastReset');\n      const lastResetDate = lastReset ? new Date(lastReset) : null;\n      if (!lastResetDate || now.getDate() !== lastResetDate.getDate()) {\n        setTickets(9);\n        window.Telegram.WebApp.CloudStorage.setItem('tickets', '9', (error, success) => {\n          if (error) {\n            console.error('Failed to set tickets in cloud storage:', error);\n          } else {\n            console.log('Tickets set successfully in cloud storage:', success);\n          }\n        });\n        localStorage.setItem('lastReset', now.toString());\n      }\n    };\n    const getTicketsFromCloud = () => {\n      window.Telegram.WebApp.CloudStorage.getItem('tickets', (error, value) => {\n        if (error) {\n          console.error('Failed to get tickets from cloud storage:', error);\n        } else {\n          const savedTickets = value ? parseInt(value, 10) : 9;\n          setTickets(savedTickets);\n        }\n      });\n    };\n    getTicketsFromCloud();\n    checkTicketsReset();\n    const interval = setInterval(checkTicketsReset, 60000); // Проверка каждую минуту\n\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    const getInitialData = () => {\n      window.Telegram.WebApp.CloudStorage.getItems(['balance'], (error, result) => {\n        if (error) {\n          console.error('Failed to get initial data from cloud storage:', error);\n        } else {\n          const initialBalance = result.balance ? parseInt(result.balance, 10) : 0;\n          const savedEndTime = result.endTime ? new Date(result.endTime) : null;\n          const initialTimer = savedEndTime ? Math.max((savedEndTime - new Date()) / 1000, 0) : 0;\n          const initialConnected = result.connected === 'true';\n          setBalance(initialBalance);\n          setTimer(initialTimer);\n          setConnected(initialConnected);\n        }\n      });\n    };\n    getInitialData();\n  }, []);\n  useEffect(() => {\n    const loadingTimeout = setTimeout(() => setLoading(false), 4000); // Hide loading screen after 4 seconds\n    return () => clearTimeout(loadingTimeout);\n  }, []);\n  useEffect(() => {\n    if (tickets === 0) {\n      const calculateTimeLeft = () => {\n        const now = new Date();\n        const nextReset = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\n        const difference = nextReset - now;\n        let hours = Math.floor(difference / (1000 * 60 * 60));\n        let minutes = Math.floor(difference % (1000 * 60 * 60) / (1000 * 60));\n        let seconds = Math.floor(difference % (1000 * 60) / 1000);\n        setTimeLeft(`${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`);\n      };\n      calculateTimeLeft();\n      const timeInterval = setInterval(calculateTimeLeft, 1000);\n      return () => clearInterval(timeInterval);\n    }\n  }, [tickets]);\n  const handle10 = cef => {\n    const betValue = Math.floor(balance * cef);\n    setBet(betValue);\n  };\n  const handleButtonPress = () => {\n    const betAmount = parseFloat(bet);\n    if (!isNaN(betAmount) && betAmount <= balance && betAmount > 0 && tickets > 0 && !isPlaying) {\n      setIsPlaying(true);\n      setValue(1.00);\n      setGameOver(false);\n      setResult(null);\n      setShowConfetti(false);\n      setTickets(prevTickets => {\n        const newTickets = prevTickets - 1;\n        window.Telegram.WebApp.CloudStorage.setItem('tickets', newTickets.toString(), (error, success) => {\n          if (error) {\n            console.error('Failed to update tickets in cloud storage:', error);\n          } else {\n            console.log('Tickets updated successfully in cloud storage:', success);\n          }\n        });\n        return newTickets;\n      });\n      setBalance(prevBalance => {\n        const newBalance = parseFloat((prevBalance - betAmount).toFixed(2));\n        return isNaN(newBalance) || newBalance < 0 ? 0 : newBalance;\n      });\n      intervalRef.current = setInterval(() => {\n        setValue(prevValue => parseFloat((prevValue + 0.01).toFixed(2)));\n        triggerHapticFeedback();\n      }, 100); // Увеличиваем коэффициент каждые 100 мс\n\n      const randomFactor = Math.random();\n      let randomTime;\n      if (randomFactor < 0.1) {\n        // 10% случаев - от 0 до 1000\n        randomTime = Math.floor(Math.random() * 1001);\n      } else if (randomFactor < 0.2) {\n        // Следующие 10% - от 1100 до 2000\n        randomTime = Math.floor(Math.random() * 901) + 1100;\n      } else if (randomFactor < 0.3) {\n        // Следующие 10% - от 2100 до 3000\n        randomTime = Math.floor(Math.random() * 901) + 2100;\n      } else if (randomFactor < 0.4) {\n        // Следующие 10% - от 3100 до 4000\n        randomTime = Math.floor(Math.random() * 901) + 30100;\n      } else if (randomFactor < 0.5) {\n        // Следующие 10% - от 4100 до 5000\n        randomTime = Math.floor(Math.random() * 901) + 4100;\n      } else if (randomFactor < 0.6) {\n        // Следующие 10% - от 5100 до 6000\n        randomTime = Math.floor(Math.random() * 901) + 55100;\n      } else if (randomFactor < 0.7) {\n        // Следующие 10% - от 6100 до 7000\n        randomTime = Math.floor(Math.random() * 901) + 66100;\n      } else if (randomFactor < 0.8) {\n        // Следующие 10% - от 7100 до 8000\n        randomTime = Math.floor(Math.random() * 901) + 7100;\n      } else if (randomFactor < 0.9) {\n        // Следующие 10% - от 8100 до 9000\n        randomTime = Math.floor(Math.random() * 901) + 28100;\n      } else {\n        // Последние 10% - от 9100 до 10000\n        randomTime = Math.floor(Math.random() * 901) + 99100;\n      }\n      timeoutRef.current = setTimeout(() => {\n        clearInterval(intervalRef.current);\n        setGameOver(true);\n        setResult(`-${betAmount.toFixed(2)} coin`);\n        setIsPlaying(false);\n        setBet(''); // Сбрасываем ставку\n        triggerHapticFeedbackError();\n        setTimeout(() => {\n          setGameOver(false);\n          setResult(null);\n        }, 1000); // 1 секунда задержки\n      }, randomTime);\n    }\n  };\n  const handleButtonRelease = () => {\n    if (!gameOver && isPlaying) {\n      clearInterval(intervalRef.current);\n      clearTimeout(timeoutRef.current);\n      const betAmount = parseFloat(bet);\n      const winnings = parseFloat((betAmount * value).toFixed(2));\n      const newBalance = parseFloat((balance + winnings).toFixed(2));\n      setBalance(isNaN(newBalance) || newBalance < 0 ? 0 : newBalance);\n      localStorage.setItem('balance', (isNaN(newBalance) ? 0 : newBalance).toString());\n      setResult(`+${winnings.toFixed(2)} coin`);\n      setBet('');\n      setValue(0.00);\n      setIsPlaying(false);\n      setShowConfetti(true);\n      triggerHapticFeedbackSuccess();\n      setTimeout(() => {\n        setGameOver(false);\n        setResult(null);\n      }, 1000);\n    }\n  };\n  useEffect(() => {\n    if (gameOver) {\n      localStorage.setItem('balance', (isNaN(balance) ? 0 : balance).toString());\n    }\n  }, [gameOver, balance]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {\n      onEnd: () => setLoading(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ticket-display\",\n      children: [tickets ? tickets : timeLeft, \" \\uD83C\\uDFAB\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `balance-display ${balance ? 'slide-in-right' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://kairosrainbow.it/wp-content/uploads/2016/11/coins.png\",\n        alt: \"Balance Icon\",\n        className: \"balance-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), Math.floor(balance)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `value-display ${animateValue ? 'slide-in-value' : ''}`,\n      children: gameOver ? /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'red'\n        },\n        children: \"You lose\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 21\n      }, this) : `x ${value.toFixed(2)}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"fingerprint-button\",\n      onMouseDown: handleButtonPress,\n      onMouseUp: handleButtonRelease,\n      onTouchStart: handleButtonPress,\n      onTouchEnd: handleButtonRelease,\n      disabled: parseFloat(bet) > balance || isNaN(parseFloat(bet)) || parseFloat(bet) <= 0 || isPlaying || tickets <= 0,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://pngimg.com/uploads/fingerprint/fingerprint_PNG96.png\",\n        alt: \"Fingerprint\",\n        className: \"fingerprint-image\",\n        style: {\n          opacity: parseFloat(bet) > balance || isNaN(parseFloat(bet)) || parseFloat(bet) <= 0 || isPlaying || tickets <= 0 ? \"0.1\" : \"1\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `input-container ${animateInput ? 'slide-in' : ''} ${isPlaying ? 'slide-out' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bet-input\",\n        style: {\n          color: message === 'Вы не можете играть' ? 'red' : 'white'\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bet-value\",\n        style: {\n          fontSize: bet ? \"40px\" : \"20px\",\n          fontWeight: bet ? \"bold\" : \"\",\n          marginBottom: \"10px\",\n          height: \"50px\"\n        },\n        children: bet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bet-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handle10(0.1),\n        children: \"10%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handle10(0.2),\n        children: \"20%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handle10(0.5),\n        children: \"50%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handle10(1),\n        children: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: `nav ${isPlaying ? 'slide-out' : 'slide-in'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `result ${result.startsWith('+') ? 'win' : 'lose'}`,\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 18\n    }, this), showConfetti && /*#__PURE__*/_jsxDEV(ConfettiCanvas, {\n      trigger: showConfetti\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n}\n_s(Page3, \"+xAkB4744MBrwkGX5GAfW3SfVVk=\", false, function () {\n  return [useNavigate];\n});\n_c = Page3;\nexport default Page3;\nvar _c;\n$RefreshReg$(_c, \"Page3\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ConfettiCanvas","LoadingScreen","useNavigate","jsxDEV","_jsxDEV","Page3","_s","value","setValue","balance","setBalance","savedBalance","localStorage","getItem","parseFloat","bet","setBet","tickets","setTickets","message","setMessage","isPlaying","setIsPlaying","gameOver","setGameOver","result","setResult","showConfetti","setShowConfetti","animateInput","setAnimateInput","animateValue","setAnimateValue","loading","setLoading","timeLeft","setTimeLeft","intervalRef","timeoutRef","navigate","triggerHapticFeedback","window","Telegram","WebApp","HapticFeedback","selectionChanged","navigator","vibrate","triggerHapticFeedbackError","notificationOccurred","triggerHapticFeedbackSuccess","BackButton","show","onClick","offClick","hide","betAmount","isNaN","checkTicketsReset","now","Date","lastReset","lastResetDate","getDate","CloudStorage","setItem","error","success","console","log","toString","getTicketsFromCloud","savedTickets","parseInt","interval","setInterval","clearInterval","getInitialData","getItems","initialBalance","savedEndTime","endTime","initialTimer","Math","max","initialConnected","connected","setTimer","setConnected","loadingTimeout","setTimeout","clearTimeout","calculateTimeLeft","nextReset","getFullYear","getMonth","difference","hours","floor","minutes","seconds","padStart","timeInterval","handle10","cef","betValue","handleButtonPress","prevTickets","newTickets","prevBalance","newBalance","toFixed","current","prevValue","randomFactor","random","randomTime","handleButtonRelease","winnings","onEnd","fileName","_jsxFileName","lineNumber","columnNumber","className","children","src","alt","style","color","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","disabled","opacity","htmlFor","fontSize","fontWeight","marginBottom","height","startsWith","trigger","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page3.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './Page3.css';\nimport ConfettiCanvas from './ConfettiCanvas';\nimport LoadingScreen from './LoadingScreen';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Page3() {\n  const [value, setValue] = useState(0.00);\n  const [balance, setBalance] = useState(() => {\n    const savedBalance = localStorage.getItem('balance');\n    return savedBalance ? parseFloat(savedBalance) : 0.00;\n  });\n  const [bet, setBet] = useState('');\n  const [tickets, setTickets] = useState(9);\n  const [message, setMessage] = useState('Введите ставку');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [result, setResult] = useState(null);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [animateInput, setAnimateInput] = useState(false);\n  const [animateValue, setAnimateValue] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [timeLeft, setTimeLeft] = useState('');\n\n  const intervalRef = useRef(null);\n  const timeoutRef = useRef(null);\n  const navigate = useNavigate(); // Хук для навигации\n\n  const triggerHapticFeedback = () => {\n    if (window.Telegram.WebApp) {\n      window.Telegram.WebApp.HapticFeedback.selectionChanged();\n    } else if (navigator.vibrate) {\n      navigator.vibrate(50); // Для Android устройств\n    }\n  };\n\n\n  const triggerHapticFeedbackError = () => {\n    if (window.Telegram.WebApp) {\n      window.Telegram.WebApp.HapticFeedback.notificationOccurred(\"error\");\n    } else if (navigator.vibrate) {\n      navigator.vibrate(50); // Для Android устройств\n    }\n  };\n\n  const triggerHapticFeedbackSuccess = () => {\n    if (window.Telegram.WebApp) {\n      window.Telegram.WebApp.HapticFeedback.notificationOccurred(\"success\");\n    } else if (navigator.vibrate) {\n      navigator.vibrate(50); // Для Android устройств\n    }\n  };\n\n  useEffect(() => {\n    const { Telegram } = window;\n    if (Telegram.WebApp) {\n      Telegram.WebApp.BackButton.show();\n      Telegram.WebApp.BackButton.onClick(() => {\n        navigate('/page1'); // Переход на Page1 при нажатии на кнопку назад\n      });\n    }\n\n    return () => {\n      if (Telegram.WebApp) {\n        Telegram.WebApp.BackButton.offClick();\n        Telegram.WebApp.BackButton.hide();\n      }\n    };\n  }, [navigate]);\n\n  useEffect(() => {\n    const betAmount = parseFloat(bet);\n    if (bet === '') {\n      setMessage('Select your bet');\n    } else if (isNaN(betAmount) || betAmount <= 0 || betAmount > balance) {\n      setMessage('Not enough tokens');\n    } else if (!tickets) {\n      setMessage('Need more tickets');\n    } else {\n      setMessage('Hold on')\n    }\n  }, [bet, balance, tickets]);\n\n  useEffect(() => {\n    setAnimateInput(true);\n    setAnimateValue(true);\n  }, []);\n\n  useEffect(() => {\n    const checkTicketsReset = () => {\n      const now = new Date();\n      const lastReset = localStorage.getItem('lastReset');\n      const lastResetDate = lastReset ? new Date(lastReset) : null;\n\n      if (!lastResetDate || now.getDate() !== lastResetDate.getDate()) {\n        setTickets(9);\n        window.Telegram.WebApp.CloudStorage.setItem('tickets', '9', (error, success) => {\n          if (error) {\n            console.error('Failed to set tickets in cloud storage:', error);\n          } else {\n            console.log('Tickets set successfully in cloud storage:', success);\n          }\n        });\n        localStorage.setItem('lastReset', now.toString());\n      }\n    };\n\n    const getTicketsFromCloud = () => {\n      window.Telegram.WebApp.CloudStorage.getItem('tickets', (error, value) => {\n        if (error) {\n          console.error('Failed to get tickets from cloud storage:', error);\n        } else {\n          const savedTickets = value ? parseInt(value, 10) : 9;\n          setTickets(savedTickets);\n        }\n      });\n    };\n\n    getTicketsFromCloud();\n\n    checkTicketsReset();\n\n    const interval = setInterval(checkTicketsReset, 60000); // Проверка каждую минуту\n\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    const getInitialData = () => {\n      window.Telegram.WebApp.CloudStorage.getItems(['balance'], (error, result) => {\n        if (error) {\n          console.error('Failed to get initial data from cloud storage:', error);\n        } else {\n          const initialBalance = result.balance ? parseInt(result.balance, 10) : 0;\n          const savedEndTime = result.endTime ? new Date(result.endTime) : null;\n          const initialTimer = savedEndTime ? Math.max((savedEndTime - new Date()) / 1000, 0) : 0;\n          const initialConnected = result.connected === 'true';\n\n          setBalance(initialBalance);\n          setTimer(initialTimer);\n          setConnected(initialConnected);\n        }\n      });\n    };\n\n    getInitialData();\n  }, []);\n\n  useEffect(() => {\n    const loadingTimeout = setTimeout(() => setLoading(false), 4000); // Hide loading screen after 4 seconds\n    return () => clearTimeout(loadingTimeout);\n  }, []);\n\n  useEffect(() => {\n    if (tickets === 0) {\n      const calculateTimeLeft = () => {\n        const now = new Date();\n        const nextReset = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\n        const difference = nextReset - now;\n\n        let hours = Math.floor(difference / (1000 * 60 * 60));\n        let minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n        let seconds = Math.floor((difference % (1000 * 60)) / 1000);\n\n        setTimeLeft(`${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`);\n      };\n\n      calculateTimeLeft();\n      const timeInterval = setInterval(calculateTimeLeft, 1000);\n\n      return () => clearInterval(timeInterval);\n    }\n  }, [tickets]);\n\n  const handle10 = (cef) => {\n    const betValue = Math.floor(balance * cef);\n    setBet(betValue);\n  }\n\n  const handleButtonPress = () => {\n    const betAmount = parseFloat(bet);\n    if (!isNaN(betAmount) && betAmount <= balance && betAmount > 0 && tickets > 0 && !isPlaying) {\n      setIsPlaying(true);\n      setValue(1.00);\n      setGameOver(false);\n      setResult(null);\n      setShowConfetti(false);\n      setTickets((prevTickets) => {\n        const newTickets = prevTickets - 1;\n        window.Telegram.WebApp.CloudStorage.setItem('tickets', newTickets.toString(), (error, success) => {\n          if (error) {\n            console.error('Failed to update tickets in cloud storage:', error);\n          } else {\n            console.log('Tickets updated successfully in cloud storage:', success);\n          }\n        });\n        return newTickets;\n      });\n      setBalance((prevBalance) => {\n        const newBalance = parseFloat((prevBalance - betAmount).toFixed(2));\n        return isNaN(newBalance) || newBalance < 0 ? 0 : newBalance;\n      });\n\n      intervalRef.current = setInterval(() => {\n        setValue((prevValue) => parseFloat((prevValue + 0.01).toFixed(2)));\n        triggerHapticFeedback();\n      }, 100); // Увеличиваем коэффициент каждые 100 мс\n\n      const randomFactor = Math.random();\n      let randomTime;\n\n      if (randomFactor < 0.1) {\n        // 10% случаев - от 0 до 1000\n        randomTime = Math.floor(Math.random() * 1001);\n      } else if (randomFactor < 0.2) {\n        // Следующие 10% - от 1100 до 2000\n        randomTime = Math.floor(Math.random() * 901) + 1100;\n      } else if (randomFactor < 0.3) {\n        // Следующие 10% - от 2100 до 3000\n        randomTime = Math.floor(Math.random() * 901) + 2100;\n      } else if (randomFactor < 0.4) {\n        // Следующие 10% - от 3100 до 4000\n        randomTime = Math.floor(Math.random() * 901) + 30100;\n      } else if (randomFactor < 0.5) {\n        // Следующие 10% - от 4100 до 5000\n        randomTime = Math.floor(Math.random() * 901) + 4100;\n      } else if (randomFactor < 0.6) {\n        // Следующие 10% - от 5100 до 6000\n        randomTime = Math.floor(Math.random() * 901) + 55100;\n      } else if (randomFactor < 0.7) {\n        // Следующие 10% - от 6100 до 7000\n        randomTime = Math.floor(Math.random() * 901) + 66100;\n      } else if (randomFactor < 0.8) {\n        // Следующие 10% - от 7100 до 8000\n        randomTime = Math.floor(Math.random() * 901) + 7100;\n      } else if (randomFactor < 0.9) {\n        // Следующие 10% - от 8100 до 9000\n        randomTime = Math.floor(Math.random() * 901) + 28100;\n      } else {\n        // Последние 10% - от 9100 до 10000\n        randomTime = Math.floor(Math.random() * 901) + 99100;\n      }\n\n\n\n\n      timeoutRef.current = setTimeout(() => {\n        clearInterval(intervalRef.current);\n        setGameOver(true);\n        setResult(`-${betAmount.toFixed(2)} coin`);\n        setIsPlaying(false);\n        setBet(''); // Сбрасываем ставку\n        triggerHapticFeedbackError();\n        setTimeout(() => {\n          setGameOver(false);\n          setResult(null);\n          \n        }, 1000); // 1 секунда задержки\n      }, randomTime);\n    }\n  };\n\n  const handleButtonRelease = () => {\n    if (!gameOver && isPlaying) {\n      clearInterval(intervalRef.current);\n      clearTimeout(timeoutRef.current);\n      const betAmount = parseFloat(bet);\n      const winnings = parseFloat((betAmount * value).toFixed(2));\n      const newBalance = parseFloat((balance + winnings).toFixed(2));\n      setBalance(isNaN(newBalance) || newBalance < 0 ? 0 : newBalance);\n      localStorage.setItem('balance', (isNaN(newBalance) ? 0 : newBalance).toString());\n      setResult(`+${winnings.toFixed(2)} coin`);\n      setBet('');\n      setValue(0.00);\n      setIsPlaying(false);\n      setShowConfetti(true);\n      triggerHapticFeedbackSuccess();\n\n      setTimeout(() => {\n        setGameOver(false);\n        setResult(null);\n      }, 1000);\n    }\n  };\n\n  useEffect(() => {\n    if (gameOver) {\n      localStorage.setItem('balance', (isNaN(balance) ? 0 : balance).toString());\n    }\n  }, [gameOver, balance]);\n\n  if (loading) {\n    return <LoadingScreen onEnd={() => setLoading(false)} />;\n  }\n\n  return (\n    <div className=\"page3\">\n      <div className=\"ticket-display\">\n        {tickets ? tickets : timeLeft} 🎫\n\n      </div>\n      <div className={`balance-display ${balance ? 'slide-in-right' : ''}`}>\n        <img src=\"https://kairosrainbow.it/wp-content/uploads/2016/11/coins.png\" alt=\"Balance Icon\" className=\"balance-icon\" />\n        {Math.floor(balance)}\n      </div>\n      <div className={`value-display ${animateValue ? 'slide-in-value' : ''}`}>\n        {gameOver ? <span style={{ color: 'red' }}>You lose</span> : `x ${value.toFixed(2)}`}\n      </div>\n      <button\n        className=\"fingerprint-button\"\n        onMouseDown={handleButtonPress}\n        onMouseUp={handleButtonRelease}\n        onTouchStart={handleButtonPress}\n        onTouchEnd={handleButtonRelease}\n        disabled={parseFloat(bet) > balance || isNaN(parseFloat(bet)) || parseFloat(bet) <= 0 || isPlaying || tickets <= 0}\n        \n      >\n        <img\n          src=\"https://pngimg.com/uploads/fingerprint/fingerprint_PNG96.png\"\n          alt=\"Fingerprint\"\n          className=\"fingerprint-image\"\n          style={{opacity: parseFloat(bet) > balance || isNaN(parseFloat(bet)) || parseFloat(bet) <= 0 || isPlaying || tickets <= 0 ? \"0.1\" : \"1\"}}\n        />\n      </button>\n      <div className={`input-container ${animateInput ? 'slide-in' : ''} ${isPlaying ? 'slide-out' : ''}`} >\n        <label htmlFor=\"bet-input\" style={{ color: message === 'Вы не можете играть' ? 'red' : 'white' }}>\n          {message}\n        </label>\n        <div className='bet-value' style={{ fontSize: bet ? \"40px\" : \"20px\", fontWeight: bet ? \"bold\" : \"\", marginBottom: \"10px\", height: \"50px\" }}>{bet}</div>\n      </div>\n      <div className=\"bet-buttons\">\n        <button onClick={() => handle10(0.1)}>10%</button>\n        <button onClick={() => handle10(0.2)}>20%</button>\n        <button onClick={() => handle10(0.5)}>50%</button>\n        <button onClick={() => handle10(1)}>100%</button>\n      </div>\n      <nav className={`nav ${isPlaying ? 'slide-out' : 'slide-in'}`}>\n        {/* Вставьте сюда ваш HTML для меню */}\n      </nav>\n      {result && <div className={`result ${result.startsWith('+') ? 'win' : 'lose'}`}>{result}</div>}\n      {showConfetti && <ConfettiCanvas trigger={showConfetti} />}\n    </div>\n  );\n}\n\nexport default Page3;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}