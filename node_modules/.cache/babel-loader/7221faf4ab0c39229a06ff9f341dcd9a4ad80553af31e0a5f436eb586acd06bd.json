{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const [previousValue, setPreviousValue] = useState(null);\n  const [currentValue, setCurrentValue] = useState(null);\n  const [rectangles, setRectangles] = useState([]);\n  const [centerValue, setCenterValue] = useState(null);\n  const canvasRef = useRef(null);\n  const fetchBitcoinPrice = async () => {\n    try {\n      const response = await fetch('https://api.coindesk.com/v1/bpi/currentprice/BTC.json');\n      const data = await response.json();\n      const bitcoinPrice = Math.floor(data.bpi.USD.rate_float);\n      return bitcoinPrice;\n    } catch (error) {\n      console.error('Error fetching Bitcoin price:', error);\n      return 60600; // fallback value in case of error\n    }\n  };\n  const generateNewValue = async centerValue => {\n    const randomDiff = Math.floor(Math.random() * 691) - 345; // random number between -345 and 345\n    const newValue = centerValue + randomDiff;\n    setCurrentValue(newValue);\n  };\n  const drawDashedLine = (ctx, y) => {\n    ctx.beginPath();\n    ctx.setLineDash([5, 5]);\n    ctx.moveTo(0, y);\n    ctx.lineTo(ctx.canvas.width, y);\n    ctx.strokeStyle = 'gray';\n    ctx.stroke();\n    ctx.setLineDash([]); // reset dash\n  };\n  useEffect(() => {\n    const drawRectangle = () => {\n      if (currentValue !== previousValue) {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const scale = window.devicePixelRatio || 1;\n        canvas.width = 500 * scale;\n        canvas.height = 300 * scale;\n        ctx.scale(scale, scale);\n        const difference = currentValue - previousValue;\n        const step = difference > 0 ? 1 : -1;\n        let progress = 0;\n        const maxDiff = 345;\n        const range = 500;\n        const rectWidth = 29; // 30px - 1px gap\n        const startY = 150 - (previousValue - centerValue) / maxDiff * range / 2;\n        const targetY = 150 - (currentValue - centerValue) / maxDiff * range / 2;\n        const interval = setInterval(() => {\n          progress += step;\n          ctx.clearRect(0, 0, canvas.width / scale, canvas.height / scale);\n          const updatedRectangles = rectangles.map(rect => ({\n            ...rect,\n            x: rect.x - rectWidth - 1\n          }));\n          updatedRectangles.forEach(rect => {\n            ctx.fillStyle = rect.color;\n            ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n          });\n          const height = Math.abs(progress);\n          const rectY = difference > 0 ? startY - height : startY;\n          ctx.fillStyle = difference > 0 ? 'green' : 'red';\n          ctx.fillRect(canvas.width / scale / 2 - 15, rectY, rectWidth, height);\n          drawDashedLine(ctx, 150 - (currentValue - centerValue) / maxDiff * range / 2);\n          if (Math.abs(progress) >= Math.abs(targetY - startY)) {\n            clearInterval(interval);\n            updatedRectangles.push({\n              x: canvas.width / scale / 2 - 15,\n              y: rectY,\n              width: rectWidth,\n              height: height,\n              color: difference > 0 ? 'green' : 'red'\n            });\n            setRectangles(updatedRectangles);\n            if (Math.abs(currentValue - centerValue) > range / 2) {\n              setCenterValue(currentValue);\n            }\n            setPreviousValue(currentValue);\n            generateNewValue(currentValue);\n          }\n        }, 20);\n        return () => clearInterval(interval);\n      }\n    };\n    if (currentValue !== null && previousValue !== null) {\n      drawRectangle();\n    }\n  }, [currentValue, previousValue, rectangles, centerValue]);\n  useEffect(() => {\n    const initializeGraph = async () => {\n      const bitcoinPrice = await fetchBitcoinPrice();\n      setCenterValue(bitcoinPrice);\n      setPreviousValue(bitcoinPrice);\n      setCurrentValue(bitcoinPrice);\n      generateNewValue(bitcoinPrice);\n    };\n    initializeGraph();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        width: 500,\n        height: 300,\n        border: '1px solid black',\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(Page4, \"+PDIP2lWvKhMzDn0naEUY/CE49k=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Page4","_s","previousValue","setPreviousValue","currentValue","setCurrentValue","rectangles","setRectangles","centerValue","setCenterValue","canvasRef","fetchBitcoinPrice","response","fetch","data","json","bitcoinPrice","Math","floor","bpi","USD","rate_float","error","console","generateNewValue","randomDiff","random","newValue","drawDashedLine","ctx","y","beginPath","setLineDash","moveTo","lineTo","canvas","width","strokeStyle","stroke","drawRectangle","current","getContext","scale","window","devicePixelRatio","height","difference","step","progress","maxDiff","range","rectWidth","startY","targetY","interval","setInterval","clearRect","updatedRectangles","map","rect","x","forEach","fillStyle","color","fillRect","abs","rectY","clearInterval","push","initializeGraph","style","display","flexDirection","alignItems","children","ref","border","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Page4 = () => {\n  const [previousValue, setPreviousValue] = useState(null);\n  const [currentValue, setCurrentValue] = useState(null);\n  const [rectangles, setRectangles] = useState([]);\n  const [centerValue, setCenterValue] = useState(null);\n  const canvasRef = useRef(null);\n\n  const fetchBitcoinPrice = async () => {\n    try {\n      const response = await fetch('https://api.coindesk.com/v1/bpi/currentprice/BTC.json');\n      const data = await response.json();\n      const bitcoinPrice = Math.floor(data.bpi.USD.rate_float);\n      return bitcoinPrice;\n    } catch (error) {\n      console.error('Error fetching Bitcoin price:', error);\n      return 60600; // fallback value in case of error\n    }\n  };\n\n  const generateNewValue = async (centerValue) => {\n    const randomDiff = Math.floor(Math.random() * 691) - 345; // random number between -345 and 345\n    const newValue = centerValue + randomDiff;\n    setCurrentValue(newValue);\n  };\n\n  const drawDashedLine = (ctx, y) => {\n    ctx.beginPath();\n    ctx.setLineDash([5, 5]);\n    ctx.moveTo(0, y);\n    ctx.lineTo(ctx.canvas.width, y);\n    ctx.strokeStyle = 'gray';\n    ctx.stroke();\n    ctx.setLineDash([]); // reset dash\n  };\n\n  useEffect(() => {\n    const drawRectangle = () => {\n      if (currentValue !== previousValue) {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n\n        const scale = window.devicePixelRatio || 1;\n        canvas.width = 500 * scale;\n        canvas.height = 300 * scale;\n        ctx.scale(scale, scale);\n\n        const difference = currentValue - previousValue;\n        const step = difference > 0 ? 1 : -1;\n        let progress = 0;\n\n        const maxDiff = 345;\n        const range = 500;\n        const rectWidth = 29; // 30px - 1px gap\n        const startY = 150 - ((previousValue - centerValue) / maxDiff) * range / 2;\n        const targetY = 150 - ((currentValue - centerValue) / maxDiff) * range / 2;\n\n        const interval = setInterval(() => {\n          progress += step;\n\n          ctx.clearRect(0, 0, canvas.width / scale, canvas.height / scale);\n\n          const updatedRectangles = rectangles.map((rect) => ({\n            ...rect,\n            x: rect.x - rectWidth - 1,\n          }));\n\n          updatedRectangles.forEach((rect) => {\n            ctx.fillStyle = rect.color;\n            ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n          });\n\n          const height = Math.abs(progress);\n          const rectY = difference > 0 ? startY - height : startY;\n          ctx.fillStyle = difference > 0 ? 'green' : 'red';\n          ctx.fillRect(canvas.width / scale / 2 - 15, rectY, rectWidth, height);\n\n          drawDashedLine(ctx, 150 - ((currentValue - centerValue) / maxDiff) * range / 2);\n\n          if (Math.abs(progress) >= Math.abs(targetY - startY)) {\n            clearInterval(interval);\n\n            updatedRectangles.push({\n              x: canvas.width / scale / 2 - 15,\n              y: rectY,\n              width: rectWidth,\n              height: height,\n              color: difference > 0 ? 'green' : 'red',\n            });\n\n            setRectangles(updatedRectangles);\n\n            if (Math.abs(currentValue - centerValue) > range / 2) {\n              setCenterValue(currentValue);\n            }\n\n            setPreviousValue(currentValue);\n            generateNewValue(currentValue);\n          }\n        }, 20);\n\n        return () => clearInterval(interval);\n      }\n    };\n\n    if (currentValue !== null && previousValue !== null) {\n      drawRectangle();\n    }\n  }, [currentValue, previousValue, rectangles, centerValue]);\n\n  useEffect(() => {\n    const initializeGraph = async () => {\n      const bitcoinPrice = await fetchBitcoinPrice();\n      setCenterValue(bitcoinPrice);\n      setPreviousValue(bitcoinPrice);\n      setCurrentValue(bitcoinPrice);\n      generateNewValue(bitcoinPrice);\n    };\n\n    initializeGraph();\n  }, []);\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <canvas\n        ref={canvasRef}\n        style={{ width: 500, height: 300, border: '1px solid black', marginBottom: '20px' }}\n      ></canvas>\n    </div>\n  );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}