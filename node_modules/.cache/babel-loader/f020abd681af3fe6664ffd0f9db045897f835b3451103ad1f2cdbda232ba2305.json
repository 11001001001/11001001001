{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [currentValue, setCurrentValue] = useState(64000); // Центр\n  const [targetValue, setTargetValue] = useState(64000);\n  const [direction, setDirection] = useState(1); // 1 для вверх, -1 для вниз\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  // Параметры графика\n  const canvasHeight = 500;\n  const canvasWidth = 800;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n    ctx.translate(canvasWidth / 2, canvasHeight / 2); // Центрирование по X и Y\n\n    if (isDrawing) {\n      let currentX = 0; // Начальная позиция по оси X\n      let currentY = 0; // Начальная позиция по оси Y\n\n      const intervalId = setInterval(() => {\n        const step = direction; // Шаг движения свечи (1 или -1)\n\n        // Рисуем один пиксель свечи\n        ctx.fillStyle = direction === 1 ? 'green' : 'red';\n        ctx.fillRect(currentX, currentY, 1, step);\n\n        // Обновляем текущие позиции\n        currentY -= step;\n\n        // Если свеча достигла целевого значения, останавливаем анимацию\n        if (direction === 1 && currentY <= -Math.abs(targetValue - currentValue) || direction === -1 && currentY >= Math.abs(targetValue - currentValue)) {\n          clearInterval(intervalId);\n          setIsDrawing(false);\n        }\n\n        // Смещение свечей влево\n        currentX -= 1;\n\n        // Если мы вышли за пределы графика, сбрасываем\n        if (currentX < -canvasWidth / 2) {\n          ctx.clearRect(-canvasWidth / 2, -canvasHeight / 2, canvasWidth, canvasHeight);\n          currentX = 0;\n        }\n      }, 20);\n      return () => clearInterval(intervalId);\n    }\n  }, [isDrawing, direction, currentValue, targetValue]);\n  const handleGenerateNewValue = () => {\n    const newValue = currentValue + (Math.random() < 0.5 ? -1 : 1) * Math.floor(Math.random() * 1000);\n    setTargetValue(newValue);\n    setDirection(newValue > currentValue ? 1 : -1); // Определяем направление\n    setIsDrawing(true);\n    setCurrentValue(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasWidth,\n      height: canvasHeight,\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateNewValue,\n      children: \"Generate New Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Current Value: \", currentValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Page4, \"Y/THmsR0dcAdBW20U9wd1c3KIB8=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Page4","_s","canvasRef","currentValue","setCurrentValue","targetValue","setTargetValue","direction","setDirection","isDrawing","setIsDrawing","canvasHeight","canvasWidth","canvas","current","ctx","getContext","clearRect","translate","currentX","currentY","intervalId","setInterval","step","fillStyle","fillRect","Math","abs","clearInterval","handleGenerateNewValue","newValue","random","floor","children","ref","width","height","style","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Page4 = () => {\n  const canvasRef = useRef(null);\n  const [currentValue, setCurrentValue] = useState(64000); // Центр\n  const [targetValue, setTargetValue] = useState(64000);\n  const [direction, setDirection] = useState(1); // 1 для вверх, -1 для вниз\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  // Параметры графика\n  const canvasHeight = 500;\n  const canvasWidth = 800;\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n    ctx.translate(canvasWidth / 2, canvasHeight / 2); // Центрирование по X и Y\n\n    if (isDrawing) {\n      let currentX = 0; // Начальная позиция по оси X\n      let currentY = 0; // Начальная позиция по оси Y\n\n      const intervalId = setInterval(() => {\n        const step = direction; // Шаг движения свечи (1 или -1)\n        \n        // Рисуем один пиксель свечи\n        ctx.fillStyle = direction === 1 ? 'green' : 'red';\n        ctx.fillRect(currentX, currentY, 1, step);\n        \n        // Обновляем текущие позиции\n        currentY -= step;\n\n        // Если свеча достигла целевого значения, останавливаем анимацию\n        if ((direction === 1 && currentY <= -Math.abs(targetValue - currentValue)) || \n            (direction === -1 && currentY >= Math.abs(targetValue - currentValue))) {\n          clearInterval(intervalId);\n          setIsDrawing(false);\n        }\n\n        // Смещение свечей влево\n        currentX -= 1;\n\n        // Если мы вышли за пределы графика, сбрасываем\n        if (currentX < -canvasWidth / 2) {\n          ctx.clearRect(-canvasWidth / 2, -canvasHeight / 2, canvasWidth, canvasHeight);\n          currentX = 0;\n        }\n\n      }, 20);\n\n      return () => clearInterval(intervalId);\n    }\n  }, [isDrawing, direction, currentValue, targetValue]);\n\n  const handleGenerateNewValue = () => {\n    const newValue = currentValue + (Math.random() < 0.5 ? -1 : 1) * Math.floor(Math.random() * 1000);\n    setTargetValue(newValue);\n    setDirection(newValue > currentValue ? 1 : -1); // Определяем направление\n    setIsDrawing(true);\n    setCurrentValue(newValue);\n  };\n\n  return (\n    <div>\n      <canvas ref={canvasRef} width={canvasWidth} height={canvasHeight} style={{ border: '1px solid black' }} />\n      <button onClick={handleGenerateNewValue}>Generate New Value</button>\n      <div>Current Value: {currentValue}</div>\n    </div>\n  );\n};\n\nexport default Page4;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}