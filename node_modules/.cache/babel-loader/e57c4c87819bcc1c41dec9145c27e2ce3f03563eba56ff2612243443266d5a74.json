{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/33/duck/src/Page4.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page4 = () => {\n  _s();\n  const [previousValue, setPreviousValue] = useState(56000);\n  const [currentValue, setCurrentValue] = useState(56000);\n  const [rectangles, setRectangles] = useState([]); // массив для хранения прямоугольников\n  const canvasRef = useRef(null);\n  const generateValue = () => {\n    const newValue = Math.floor(Math.random() * (56345 - 55600 + 1)) + 55600;\n    setCurrentValue(newValue);\n  };\n  useEffect(() => {\n    if (currentValue !== previousValue) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const scale = window.devicePixelRatio || 1;\n      canvas.width = 500 * scale;\n      canvas.height = 300 * mult * scale;\n      ctx.scale(scale, scale);\n      const difference = currentValue - previousValue;\n      const step = difference > 0 ? 1 : -1;\n      let progress = 0;\n      const startY = 150 - (previousValue - 56000) / 345 * 120;\n      const targetY = 150 - (currentValue - 56000) / 345 * 120;\n      const rectWidth = 30;\n      const interval = setInterval(() => {\n        progress += step;\n        ctx.clearRect(0, 0, canvas.width / scale, canvas.height / scale);\n\n        // смещение всех прямоугольников влево\n        const updatedRectangles = rectangles.map(rect => ({\n          ...rect,\n          x: rect.x - rectWidth\n        }));\n\n        // рисование всех прямоугольников\n        updatedRectangles.forEach(rect => {\n          ctx.fillStyle = rect.color;\n          ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n        });\n\n        // рисование текущего прямоугольника\n        const height = Math.abs(progress);\n        const rectY = difference > 0 ? startY - height : startY;\n        ctx.fillStyle = difference > 0 ? 'green' : 'red';\n        ctx.fillRect(canvas.width / scale / 2 - 15, rectY, rectWidth, height);\n        if (Math.abs(progress) >= Math.abs(targetY - startY)) {\n          clearInterval(interval);\n\n          // добавляем новый прямоугольник в массив\n          updatedRectangles.push({\n            x: canvas.width / scale / 2 - 15,\n            y: rectY,\n            width: rectWidth,\n            height: height,\n            color: difference > 0 ? 'green' : 'red'\n          });\n          setRectangles(updatedRectangles);\n          setPreviousValue(currentValue);\n        }\n      }, 20);\n      return () => clearInterval(interval);\n    }\n  }, [currentValue, previousValue, rectangles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        width: 500,\n        height: 300,\n        border: '1px solid black',\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateValue,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px',\n        cursor: 'pointer',\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px'\n      },\n      children: \"Generate Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Page4, \"JM6rmb4pxKBfH5qzcSGMJxGcfbY=\");\n_c = Page4;\nexport default Page4;\nvar _c;\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Page4","_s","previousValue","setPreviousValue","currentValue","setCurrentValue","rectangles","setRectangles","canvasRef","generateValue","newValue","Math","floor","random","canvas","current","ctx","getContext","scale","window","devicePixelRatio","width","height","mult","difference","step","progress","startY","targetY","rectWidth","interval","setInterval","clearRect","updatedRectangles","map","rect","x","forEach","fillStyle","color","fillRect","y","abs","rectY","clearInterval","push","style","display","flexDirection","alignItems","children","ref","border","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","fontSize","cursor","backgroundColor","borderRadius","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/33/duck/src/Page4.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Page4 = () => {\n  const [previousValue, setPreviousValue] = useState(56000);\n  const [currentValue, setCurrentValue] = useState(56000);\n  const [rectangles, setRectangles] = useState([]); // массив для хранения прямоугольников\n  const canvasRef = useRef(null);\n\n  const generateValue = () => {\n    const newValue = Math.floor(Math.random() * (56345 - 55600 + 1)) + 55600;\n    setCurrentValue(newValue);\n  };\n\n  useEffect(() => {\n    if (currentValue !== previousValue) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      const scale = window.devicePixelRatio || 1;\n      canvas.width = 500 * scale;\n      canvas.height = 300 * mult * scale;\n      ctx.scale(scale, scale);\n\n      const difference = currentValue - previousValue;\n      const step = difference > 0 ? 1 : -1;\n      let progress = 0;\n\n      const startY = 150 - ((previousValue - 56000) / 345) * 120;\n      const targetY = 150 - ((currentValue - 56000) / 345) * 120;\n      const rectWidth = 30;\n      const interval = setInterval(() => {\n        progress += step;\n\n        ctx.clearRect(0, 0, canvas.width / scale, canvas.height / scale);\n\n        // смещение всех прямоугольников влево\n        const updatedRectangles = rectangles.map((rect) => ({\n          ...rect,\n          x: rect.x - rectWidth,\n        }));\n\n        // рисование всех прямоугольников\n        updatedRectangles.forEach((rect) => {\n          ctx.fillStyle = rect.color;\n          ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n        });\n\n        // рисование текущего прямоугольника\n        const height = Math.abs(progress);\n        const rectY = difference > 0 ? startY - height : startY;\n        ctx.fillStyle = difference > 0 ? 'green' : 'red';\n        ctx.fillRect(canvas.width / scale / 2 - 15, rectY, rectWidth, height);\n\n        if (Math.abs(progress) >= Math.abs(targetY - startY)) {\n          clearInterval(interval);\n\n          // добавляем новый прямоугольник в массив\n          updatedRectangles.push({\n            x: canvas.width / scale / 2 - 15,\n            y: rectY,\n            width: rectWidth,\n            height: height,\n            color: difference > 0 ? 'green' : 'red',\n          });\n\n          setRectangles(updatedRectangles);\n          setPreviousValue(currentValue);\n        }\n      }, 20);\n\n      return () => clearInterval(interval);\n    }\n  }, [currentValue, previousValue, rectangles]);\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <canvas\n        ref={canvasRef}\n        style={{ width: 500, height: 300, border: '1px solid black', marginBottom: '20px' }}\n      ></canvas>\n      <button\n        onClick={generateValue}\n        style={{\n          padding: '10px 20px',\n          fontSize: '16px',\n          cursor: 'pointer',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px'\n        }}>\n        Generate Value\n      </button>\n    </div>\n  );\n};\n\nexport default Page4;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}