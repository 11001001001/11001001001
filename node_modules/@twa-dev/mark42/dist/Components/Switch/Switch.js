import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["className", "style", "theme", "onChange"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

import { memo } from "react";
import cx from "classnames";
import { useTheme } from "../../hooks/useTheme";
import WebApp from "@twa-dev/sdk";
import styles from "./Switch.styles";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
export var Switch = /*#__PURE__*/memo(function (_ref) {
  var className = _ref.className,
      style = _ref.style,
      theme = _ref.theme,
      onChange = _ref.onChange,
      restProps = _objectWithoutProperties(_ref, _excluded);

  theme = useTheme(theme);

  var onChangeCallback = function onChangeCallback(e) {
    WebApp.HapticFeedback.selectionChanged();
    onChange && onChange(e);
  };

  return /*#__PURE__*/_jsx("div", {
    className: cx(className, styles.root, styles[theme]),
    style: style,
    children: /*#__PURE__*/_jsxs("label", {
      children: [/*#__PURE__*/_jsx("input", _objectSpread({
        type: "checkbox",
        onChange: onChangeCallback
      }, restProps)), /*#__PURE__*/_jsx("div", {
        className: styles.mark
      })]
    })
  });
});
Switch.displayName = "Switch";